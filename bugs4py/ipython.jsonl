{"issue_number": 13845, "title": "BUG: 8.7.0 removes `code-block:: ipython` pygment lexer support", "body": "Installed via pip / PyPI -- previously this RST worked:\r\n```\r\n.. code-block:: ipython\r\n\r\n    In [1]: %matplotlib qt\r\n```\r\nbut now we get:\r\n```\r\n/home/circleci/project/doc/install/advanced.rst:33: WARNING: Pygments lexer name 'ipython' is not known\r\n```\r\nAt least this is what I think is happening in our CircleCI build today (which fails because we treat warnings as errors), we haven't changed the RST lines in question at all recently:\r\n\r\nhttps://app.circleci.com/pipelines/github/mne-tools/mne-python/17137/workflows/27c6f253-b7a7-4b67-9c2e-db9aa4e925fc/jobs/50745?invite=true#step-112-532\r\n\r\nAnd 8.7.0 is being installed properly in the env:\r\n\r\nhttps://app.circleci.com/pipelines/github/mne-tools/mne-python/17137/workflows/27c6f253-b7a7-4b67-9c2e-db9aa4e925fc/jobs/50745?invite=true#step-112-532\r\n\r\nChanging this to `.. code-block:: ipythonconsole` does not seem to help.\r\n\r\nIs this an intentional change? Or is this lexer meant to be installed a different way? I didn't see anything in these pages at least:\r\n\r\n- https://ipython.readthedocs.io/en/stable/whatsnew/version8.html#ipython-8-7-0\r\n- https://ipython.readthedocs.io/en/stable/development/lexer.html", "commits": [{"node_id": "C_kwDOBxSVwdoAKDNlYWM2N2FhODM1MDU3NThiNTI1OTliMzcyOTMyZTE3NWQzZTQ5NDk", "commit_message": "fix: Disallow ipython v8.7.0 to avoid Pygments lexer warning (#2068)\n\n* Disallow ipython v8.7.0 to avoid Pygments warning\r\n\r\n> WARNING: Pygments lexer name 'ipython3' is not known\r\n\r\nwhich arises during the docs build. This is a stopgap measure and this\r\nline should be removed as soon as there is a resolution and new ipython\r\nrelease.\r\n   - c.f. https://github.com/ipython/ipython/issues/13845", "commit_timestamp": "2022-11-29T03:21:57Z", "files": ["setup.py"]}, {"node_id": "C_kwDOG1Ze8doAKDc3YmJhZGZmMjg2ZDk3OTMwMGM3MzdmNGUyYWRkYzcwMTRiNTZkYzg", "commit_message": "Update docs dependencies (#15)\n\n* Update docs dependencies\r\n\r\n* Avoid bug in ipython 8.7.0\r\n\r\nSee https://github.com/ipython/ipython/issues/13845", "commit_timestamp": "2022-11-30T12:47:11Z", "files": ["docs/conf.py"]}, {"node_id": "C_kwDOAG1UpNoAKDgyZTA1NzEwYjhhMWM3Y2YzOWZkMzcwZTZmMDgwOTVlYWZjZDEzNTA", "commit_message": "Merge remote-tracking branch 'upstream/main' into gh-13845-fix-pygments-entry-points", "commit_timestamp": "2022-12-01T13:21:32Z", "files": ["IPython/core/release.py", "IPython/lib/tests/test_pygments.py"]}, {"node_id": "C_kwDOAG1UpNoAKDI2N2I1ODEwYTkzNmVhYTExOGJmZTI4MGNlMjhmMmZiYTljNWE2ODY", "commit_message": "Merge remote-tracking branch 'upstream/main' into gh-13845-fix-pygments-entry-points", "commit_timestamp": "2022-12-01T13:26:30Z", "files": ["IPython/core/release.py", "IPython/lib/tests/test_pygments.py", "setup.py"]}, {"node_id": "C_kwDOAG1UpNoAKGI4NjFkODU2NzIwY2FkZjExNDgyYjcyYjRmMTI1ZTYyNmJiYjU5ZjE", "commit_message": "Merge remote-tracking branch 'upstream/main' into gh-13845-fix-pygments-entry-points", "commit_timestamp": "2022-12-01T13:31:14Z", "files": ["IPython/core/release.py", "IPython/lib/tests/test_pygments.py", "setup.py"]}, {"node_id": "C_kwDOAG1UpNoAKGRkYjlhY2QwMGE5NWU4YTU0ZGFhYWRiYWFiY2RmOWNhNTNmMWMwZDY", "commit_message": "Merge remote-tracking branch 'upstream/main' into gh-13845-fix-pygments-entry-points", "commit_timestamp": "2022-12-01T13:32:37Z", "files": ["IPython/core/release.py", "IPython/lib/tests/test_pygments.py", "setup.py"]}, {"node_id": "C_kwDOAG1UpNoAKGQ5OTQyNzQxODU5YjNjOGJiODc5NWUzZjViY2FhNzkwMjY3YzIyZjQ", "commit_message": "Merge remote-tracking branch 'upstream/main' into gh-13845-fix-pygments-entry-points", "commit_timestamp": "2022-12-01T14:07:39Z", "files": ["IPython/core/release.py", "IPython/lib/tests/test_pygments.py", "setup.py"]}, {"node_id": "C_kwDOAG1UpNoAKDIxMDY5Y2U1MjRiYzMwNzZmYzNlMTk3YTg5MjlkNDc3NGI2ZjMwOTM", "commit_message": "Merge remote-tracking branch 'upstream/main' into gh-13845-fix-pygments-entry-points", "commit_timestamp": "2022-12-01T14:11:58Z", "files": ["IPython/core/release.py", "IPython/lib/tests/test_pygments.py", "setup.py"]}, {"node_id": "C_kwDOAG1UpNoAKDAxN2I2NzdlY2VmZDMwZmNmY2M5YmYyM2ExODI0YzdmODI0ZTgyOGI", "commit_message": "Merge remote-tracking branch 'upstream/main' into gh-13845-fix-pygments-entry-points", "commit_timestamp": "2022-12-01T14:20:25Z", "files": ["IPython/core/release.py", "IPython/lib/tests/test_pygments.py", "setup.py"]}, {"node_id": "C_kwDOAAoMVtoAKGQzODM5N2IwNzhiNzQ0ODM5Yjg1MTBmN2FjOWFiNGZhNDA0NTBhNGY", "commit_message": "Merge pull request #13848 from bollwyvl/gh-13845-fix-pygments-entry-points\n\nfix pygments.lexers entry_points", "commit_timestamp": "2022-12-21T11:19:53Z", "files": ["IPython/lib/tests/test_pygments.py", "setup.py"]}, {"node_id": "C_kwDOAAoMVtoAKGQzODM5N2IwNzhiNzQ0ODM5Yjg1MTBmN2FjOWFiNGZhNDA0NTBhNGY", "commit_message": "Merge pull request #13848 from bollwyvl/gh-13845-fix-pygments-entry-points\n\nfix pygments.lexers entry_points", "commit_timestamp": "2022-12-21T11:19:53Z", "files": ["IPython/lib/tests/test_pygments.py", "setup.py"]}], "labels": [], "created_at": "2022-11-28T14:33:44Z", "closed_at": "2022-12-21T11:19:56Z", "linked_pr_number": [13845], "method": ["regex"]}
{"issue_number": 13718, "title": "Incorrect call to `open` function not handled correctly.", "body": "<!-- This is the repository for IPython command line, if you can try to make sure this question/bug/feature belong here and not on one of the Jupyter repositories. \r\n\r\nIf it's a generic Python/Jupyter question, try other forums or discourse.jupyter.org.\r\n\r\nIf you are unsure, it's ok to post here, though, there are few maintainer so you might not get a fast response. \r\n\r\n-->\r\n\r\nIf you run this code:\r\n\r\n```\r\ndef crash(file_name=\"test.txt\"): \r\n     open(file_name)                                                                                                                                                                                                             \r\n\r\ncrash(True)  \r\n```\r\n\r\nipython will crash with the following error:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"/home/yunoac/anaconda3/bin/ipython\", line 11, in <module>\r\n    sys.exit(start_ipython())\r\n  File \"/home/yunoac/anaconda3/lib/python3.7/site-packages/IPython/__init__.py\", line 125, in start_ipython\r\n    return launch_new_instance(argv=argv, **kwargs)\r\n  File \"/home/yunoac/anaconda3/lib/python3.7/site-packages/traitlets/config/application.py\", line 664, in launch_instance\r\n    app.start()\r\n  File \"/home/yunoac/anaconda3/lib/python3.7/site-packages/IPython/terminal/ipapp.py\", line 356, in start\r\n    self.shell.mainloop()\r\n  File \"/home/yunoac/anaconda3/lib/python3.7/site-packages/IPython/terminal/interactiveshell.py\", line 498, in mainloop\r\n    self.interact()\r\n  File \"/home/yunoac/anaconda3/lib/python3.7/site-packages/IPython/terminal/interactiveshell.py\", line 478, in interact\r\n    print(self.separate_in, end='')\r\nOSError: [Errno 9] Bad file descriptor\r\n\r\nIf you suspect this is an IPython bug, please report it at:\r\n    https://github.com/ipython/ipython/issues\r\nor send an email to the mailing list at ipython-dev@python.org\r\n\r\nYou can print a more detailed traceback right now with \"%tb\", or use \"%debug\"\r\nto interactively debug it.\r\n\r\nExtra-detailed tracebacks for bug-reporting purposes can be enabled via:\r\n    %config Application.verbose_crash=True\r\n\r\nException ignored in: <_io.TextIOWrapper name='<stdout>' mode='w' encoding='UTF-8'>\r\nOSError: [Errno 9] Bad file descriptor\r\n```", "commits": [{"node_id": "C_kwDOIBKah9oAKDUwNjA5YWFiZDRiN2U3M2Q4NzY2Yjc3ODg0MzE3NWZlNmRiZWYyZWE", "commit_message": "raise an error when user tries to open a standard stream\n\nFixes #13718", "commit_timestamp": "2022-10-01T08:47:51Z", "files": ["IPython/core/interactiveshell.py", "IPython/core/tests/test_interactiveshell.py"]}, {"node_id": "C_kwDOIBKah9oAKDJiNjgyYmU5YTM1MTM4ZWQ4MmVjZTNhMTc0ZGI4YTBlNTE3Y2FiMDg", "commit_message": "raise an error when user tries to open a standard stream\n\nFixes #13718", "commit_timestamp": "2022-10-01T09:48:16Z", "files": ["IPython/core/interactiveshell.py", "IPython/core/tests/test_interactiveshell.py"]}, {"node_id": "C_kwDOIBKah9oAKDZhOTBiM2FmYTY3NDE2YTc5ZDAzNmExMTg4MGRhNGQzM2FhZDhlMzA", "commit_message": "raise an error when user tries to open a standard stream\n\nFixes #13718", "commit_timestamp": "2022-10-29T11:18:09Z", "files": ["IPython/core/interactiveshell.py", "IPython/core/tests/test_interactiveshell.py"]}, {"node_id": "C_kwDOIIVURdoAKDQ5MTUyMGY5YzlkNWQ4YjM4ZmNiMjhhZjU0YTA1ZjFlNWRlOWNhZTk", "commit_message": "raise an error when user tries to open a standard stream\n\nFixes #13718", "commit_timestamp": "2022-11-15T22:58:45Z", "files": ["IPython/core/interactiveshell.py", "IPython/core/tests/test_interactiveshell.py"]}, {"node_id": "C_kwDOAAoMVtoAKDkzOTkyYTdlY2QwODZiYjI0ODQwYmEwM2NkNjk5NjBkYWY0MTU3NWQ", "commit_message": "Merge pull request #13768 from osherdp/feature/raise-when-opening-standard-streams\n\nraise an error when user tries to open a standard stream", "commit_timestamp": "2022-10-29T12:54:06Z", "files": ["IPython/core/interactiveshell.py", "IPython/core/tests/test_interactiveshell.py"]}], "labels": ["help wanted"], "created_at": "2022-08-03T08:14:34Z", "closed_at": "2022-10-29T12:54:08Z", "linked_pr_number": [13718], "method": ["regex"]}
{"issue_number": 13700, "title": "Given inexistent file X, \"%run X\" reports that it's unable to open \"X.py\"", "body": "... which confuses users. See #13542.", "commits": [{"node_id": "C_kwDOHqqh-toAKDA0YWE5MTJkNjU2ODMyZWM5YmJlNzNkMWIzZWJmZGIyNGU1MWUxOWE", "commit_message": "Fix #13700, consistently use the original name in error message", "commit_timestamp": "2022-07-16T06:54:00Z", "files": ["IPython/utils/path.py"]}, {"node_id": "C_kwDOHqqh-toAKDg5ZGM1NTI3ODdlNmUzZDY2YzM5YWQzYTI2MjI3NWE1MWVhYzRlMGY", "commit_message": "Fix #13700, consistently use the original name in error message", "commit_timestamp": "2022-08-30T09:40:45Z", "files": ["IPython/utils/path.py"]}, {"node_id": "C_kwDOAAoMVtoAKDg5ZGM1NTI3ODdlNmUzZDY2YzM5YWQzYTI2MjI3NWE1MWVhYzRlMGY", "commit_message": "Fix #13700, consistently use the original name in error message", "commit_timestamp": "2022-08-30T09:40:45Z", "files": ["IPython/utils/path.py"]}, {"node_id": "C_kwDOAAoMVtoAKGI3Njc2MWU4YzgzODNlMzc2MzVkOWFmZDM0Mjk4OGUxN2FlZjE1MGE", "commit_message": "Merge pull request #13707 from suzaku/fix-confusing-msg\n\nFix #13700, consistently use the original name in error message", "commit_timestamp": "2022-08-30T12:26:17Z", "files": ["IPython/utils/path.py"]}], "labels": ["bug", "magics"], "created_at": "2022-06-16T19:07:47Z", "closed_at": "2022-08-30T12:26:19Z", "method": ["label"]}
{"issue_number": 13666, "title": "Error using HistoryAccessor.get_last_session_id", "body": "<!-- This is the repository for IPython command line, if you can try to make sure this question/bug/feature belong here and not on one of the Jupyter repositories. \r\n\r\nIf it's a generic Python/Jupyter question, try other forums or discourse.jupyter.org.\r\n\r\nIf you are unsure, it's ok to post here, though, there are few maintainer so you might not get a fast response. \r\n\r\n-->\r\n\r\nOn the newest version of ipython:\r\n\r\n```\r\n$ pip list | rg -i ipython\r\nipython                       8.3.0\r\n```\r\n\r\nTrying to get the last session id from the history accessor for any ipython history db crashes for me:\r\n\r\n```\r\n>>> from IPython.core.history import HistoryAccessor\r\n>>> hist = HistoryAccessor(hist_file=\"\")  # use current database\r\n>>> hist.get_last_session_id()\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/usr/lib/python3.10/site-packages/decorator.py\", line 232, in fun\r\n    return caller(func, *(extras + args), **kw)\r\n  File \"/home/sean/.local/lib/python3.10/site-packages/IPython/core/history.py\", line 77, in catch_corrupt_db\r\n    return f(self, *a, **kw)\r\n  File \"/home/sean/.local/lib/python3.10/site-packages/IPython/core/history.py\", line 340, in get_last_session_id\r\n    for record in self.get_tail(n=1, include_latest=True):\r\n  File \"/usr/lib/python3.10/site-packages/decorator.py\", line 232, in fun\r\n    return caller(func, *(extras + args), **kw)\r\n  File \"/home/sean/.local/lib/python3.10/site-packages/IPython/core/history.py\", line 77, in catch_corrupt_db\r\n    return f(self, *a, **kw)\r\n  File \"/home/sean/.local/lib/python3.10/site-packages/IPython/core/history.py\", line 374, in get_tail\r\n    (self.session_number, n),\r\nAttributeError: 'HistoryAccessor' object has no attribute 'session_number'. Did you mean: 'section_names'?\r\n```\r\n\r\nIf I downgrade to anything before 8.3.0, it works as expected:\r\n\r\n```\r\n>>> from IPython.core.history import HistoryAccessor\r\n>>> hist = HistoryAccessor()\r\n>>> hist.get_last_session_id()\r\n2750\r\n```\r\n\r\nAlso fails on [this CI](https://github.com/seanbreckenridge/HPI/runs/6251660329?check_suite_focus=true) which has some useful pytest context (running [this test](https://github.com/seanbreckenridge/HPI/blob/e17d101fe52d6acdaaeab9a6495a190ea61b5775/tests/test_ipython.py#L21-L28)), using a [custom ipython history database](https://github.com/seanbreckenridge/HPI/blob/master/tests/testdata/ipython.sqlite) instead of leaving `hist_file` empty", "commits": [{"node_id": "C_kwDOHtI_NNoAKGViZWE3NjZjZWI1N2VjMDA4MDMwMGIyNDZiZTA2OTlmNDE5NTdlMjY", "commit_message": "Fix HistoryAccessor.get_tail bug (#13666)\n\nCurrent implementation of get_tail in HistoryAccessor assumes context\npresent only in subclass , so it's moved there and the old\nimplementation is restored.", "commit_timestamp": "2022-08-06T20:21:35Z", "files": ["IPython/core/history.py", "IPython/core/tests/test_history.py"]}, {"node_id": "C_kwDOHtI_NNoAKDgzYTY0ZThlZGZmMTBhZTBlMDZjYjMzYjNjNjQyOGMyZDJmYTRlYTE", "commit_message": "Merge branch 'main' into gh-13666", "commit_timestamp": "2022-08-30T08:32:14Z", "files": ["IPython/__init__.py", "IPython/core/completer.py", "IPython/extensions/autoreload.py", "IPython/lib/tests/test_pretty.py", "IPython/terminal/shortcuts.py", "IPython/tests/test_shortcuts.py", "setup.py", "tools/github_stats.py", "tools/retar.py"]}, {"node_id": "C_kwDOAAoMVtoAKDNkZjQ3M2M1ODc0MWVhZGY0NjhjZmI3NjFhYzliN2Q5ZGI1NzZiZTQ", "commit_message": "Merge pull request #13719 from balval/gh-13666\n\nFix HistoryAccessor.get_tail bug (#13666)", "commit_timestamp": "2022-08-30T09:44:39Z", "files": ["IPython/core/history.py", "IPython/core/tests/test_history.py"]}], "labels": ["bug"], "created_at": "2022-05-02T03:08:10Z", "closed_at": "2022-09-22T23:55:21Z", "method": ["label", "regex"]}
{"issue_number": 13654, "title": "`auto_match` slow and hogs CPU in some cases", "body": "To reproduce in IPython 8.2, paste `function_with_long_nameeee('arg`, and add the closing quotes at the end.\r\nThe slowness increases when the prefix is longer (in this case dominated by the function name `function_with_long_nameeee`), so if you don't notice it, try increasing it).\r\n\r\n## Steps to reproduce with docker\r\n\r\n1. Build the image and start a container:\r\n\r\n```sh\r\nbuild_oci_img() {\r\n  docker build \"$@\" - <<EOF\r\n  FROM python:3.8-slim\r\n  RUN pip install ipython==8.2\r\nEOF\r\n}\r\n\r\nbuild_oci_img\r\ndocker run --rm --interactive --tty \"$(build_oci_img -q)\" ipython -i -c 'get_ipython().auto_match = True'\r\n\r\n```\r\n\r\n2. Paste `function_with_long_nameeee('arg` and then type another `'` (single quote)", "commits": [{"node_id": "C_kwDOHqqh-toAKDQ4ZTg1YTYzOGI5YTI4OTdlNjYwYjA2OTM3OTRkNTA3ZTJkYjNkNGI", "commit_message": "Fix #13654, improve performance of auto match for quotes\n\nAs pointed out in #13654, auto matching of quotes may take a long time\nif the prefix is long.\nTo be more precise, the longer the text before the first quote, the\nslower it is.\nThis is all caused by the regex pattern used: `r'^([^\"]+|\"[^\"]*\")*$'`,\nwhich I suspect is O(2^N) slow.\n\n```python\nIn [1]: text = \"function_with_long_nameeee('arg\"\n\nIn [2]: import re\n\nIn [3]: pattern = re.compile(r\"^([^']+|'[^']*')*$\")\n\nIn [4]: %timeit pattern.match(text)\n10.3 s \u00b1 67.2 ms per loop (mean \u00b1 std. dev. of 7 runs, 1 loop each)\n\nIn [5]: %timeit pattern.match(\"1'\")\n312 ns \u00b1 0.775 ns per loop (mean \u00b1 std. dev. of 7 runs, 1,000,000 loops\n    each)\n\nIn [6]: %timeit pattern.match(\"12'\")\n462 ns \u00b1 1.95 ns per loop (mean \u00b1 std. dev. of 7 runs, 1,000,000 loops\n    each)\n\nIn [7]: %timeit pattern.match(\"123'\")\n766 ns \u00b1 6.32 ns per loop (mean \u00b1 std. dev. of 7 runs, 1,000,000 loops\n    each)\n\nIn [8]: %timeit pattern.match(\"1234'\")\n1.59 \u00b5s \u00b1 20.9 ns per loop (mean \u00b1 std. dev. of 7 runs, 1,000,000 loops\n  each)\n```\n\nBut the pattern we want here can actually be detected with a Python\nimplemention in O(N) time.", "commit_timestamp": "2022-07-16T08:06:14Z", "files": ["IPython/terminal/shortcuts.py"]}, {"node_id": "C_kwDOHqqh-toAKDUyYjM3ZjgzOTA2MGY3NjJiMGE0ZjdmYjJmYzhkNjg1YTNlMTg5M2U", "commit_message": "Fix #13654, improve performance of auto match for quotes\n\nAs pointed out in #13654, auto matching of quotes may take a long time\nif the prefix is long.\nTo be more precise, the longer the text before the first quote, the\nslower it is.\nThis is all caused by the regex pattern used: `r'^([^\"]+|\"[^\"]*\")*$'`,\nwhich I suspect is O(2^N) slow.\n\n```python\nIn [1]: text = \"function_with_long_nameeee('arg\"\n\nIn [2]: import re\n\nIn [3]: pattern = re.compile(r\"^([^']+|'[^']*')*$\")\n\nIn [4]: %timeit pattern.match(text)\n10.3 s \u00b1 67.2 ms per loop (mean \u00b1 std. dev. of 7 runs, 1 loop each)\n\nIn [5]: %timeit pattern.match(\"1'\")\n312 ns \u00b1 0.775 ns per loop (mean \u00b1 std. dev. of 7 runs, 1,000,000 loops\n    each)\n\nIn [6]: %timeit pattern.match(\"12'\")\n462 ns \u00b1 1.95 ns per loop (mean \u00b1 std. dev. of 7 runs, 1,000,000 loops\n    each)\n\nIn [7]: %timeit pattern.match(\"123'\")\n766 ns \u00b1 6.32 ns per loop (mean \u00b1 std. dev. of 7 runs, 1,000,000 loops\n    each)\n\nIn [8]: %timeit pattern.match(\"1234'\")\n1.59 \u00b5s \u00b1 20.9 ns per loop (mean \u00b1 std. dev. of 7 runs, 1,000,000 loops\n  each)\n```\n\nBut the pattern we want here can actually be detected with a Python\nimplemention in O(N) time.", "commit_timestamp": "2022-08-30T09:38:24Z", "files": ["IPython/terminal/shortcuts.py"]}, {"node_id": "C_kwDOHqqh-toAKGMxNzljMmE1OTZlNTdkNjQ5NDBhYTU4MTYwODMyYTA0NzYwMGU0NzQ", "commit_message": "Fix #13654, improve performance of auto match for quotes\n\nAs pointed out in #13654, auto matching of quotes may take a long time\nif the prefix is long.\nTo be more precise, the longer the text before the first quote, the\nslower it is.\nThis is all caused by the regex pattern used: `r'^([^\"]+|\"[^\"]*\")*$'`,\nwhich I suspect is O(2^N) slow.\n\n```python\nIn [1]: text = \"function_with_long_nameeee('arg\"\n\nIn [2]: import re\n\nIn [3]: pattern = re.compile(r\"^([^']+|'[^']*')*$\")\n\nIn [4]: %timeit pattern.match(text)\n10.3 s \u00b1 67.2 ms per loop (mean \u00b1 std. dev. of 7 runs, 1 loop each)\n\nIn [5]: %timeit pattern.match(\"1'\")\n312 ns \u00b1 0.775 ns per loop (mean \u00b1 std. dev. of 7 runs, 1,000,000 loops\n    each)\n\nIn [6]: %timeit pattern.match(\"12'\")\n462 ns \u00b1 1.95 ns per loop (mean \u00b1 std. dev. of 7 runs, 1,000,000 loops\n    each)\n\nIn [7]: %timeit pattern.match(\"123'\")\n766 ns \u00b1 6.32 ns per loop (mean \u00b1 std. dev. of 7 runs, 1,000,000 loops\n    each)\n\nIn [8]: %timeit pattern.match(\"1234'\")\n1.59 \u00b5s \u00b1 20.9 ns per loop (mean \u00b1 std. dev. of 7 runs, 1,000,000 loops\n  each)\n```\n\nBut the pattern we want here can actually be detected with a Python\nimplemention in O(N) time.", "commit_timestamp": "2022-08-30T22:56:16Z", "files": ["IPython/terminal/shortcuts.py"]}, {"node_id": "C_kwDOAAoMVtoAKDdkYmIyNmE2MzFmNmQ1OTg3NWI5ZTIzNTM0NWI4NWZjN2JlYjQwMzc", "commit_message": "Merge pull request #13708 from suzaku/improve-automatch-perf\n\nFix #13654, improve performance of auto match for quotes", "commit_timestamp": "2022-09-08T13:33:00Z", "files": ["IPython/terminal/shortcuts.py"]}, {"node_id": "C_kwDOAAoMVtoAKDE2MmU2ZjNjMWYxOTEyNGJiNTVlNGQ3YzgzNWFkMWVmODc4MjEyYTk", "commit_message": "Merge pull request #13713 from lucymcphail/improve-auto-match\n\nImprove auto_match for triple quotes and escaped quotes", "commit_timestamp": "2022-08-30T09:50:22Z", "files": ["IPython/terminal/shortcuts.py"]}], "labels": ["bug"], "created_at": "2022-04-26T15:26:13Z", "closed_at": "2022-08-30T09:50:24Z", "linked_pr_number": [13654], "method": ["label", "regex"]}
{"issue_number": 13631, "title": "ipython 8.2.0 mixing history from multiple ipython sessions", "body": "Hi, \r\n\r\nAfter updating to ipython 8.2.0 I observe a very annoying behaviour, when pressing 'UP_ARROW' in long running ipython session brings not the previous command from history, but a command from some other ipython session running concurrently. \r\n\r\nHow to reproduce.\r\n* Start ipython session 1\r\n* Start ipython session 2\r\n* Type x=1 in session 1\r\n* Type y=1 in session 2\r\n* Type x=2 in session 1\r\n* Type y=2 in session 2\r\n* Now in session 1 press 'UP_ARROW', and it will bring y=1 instead of x=2 \r\n\r\nThis is very inconvenient behaviour that completely breaks the workflow in long running ipython sessions. I assume it must be a regression.\r\n\r\nThank you.\r\n\r\n(I'm using python 3.8 with the latest prompt-toolkit 3.0.29 on linux (ubuntu 18.04) \r\n\r\n\r\n", "commits": [{"node_id": "C_kwDOACPEidoAKDE1ZTVkOTYyN2IyMjc3YjA0N2MxNTc3OWI5NWY4ZDFjOGI2NGVkMTE", "commit_message": "This fixed the mixing of multiple history seen in #13631\n\nIt forces get_tail to put the current session last in the returned\nresults.", "commit_timestamp": "2022-04-29T09:11:31Z", "files": ["IPython/core/history.py"]}, {"node_id": "C_kwDOACPEidoAKGRjNWJjYzFjNTA4OTJhNTEyOGZjZjEyOGFmMjg4ODcyMjYxNDQ5Mjc", "commit_message": "This fixed the mixing of multiple history seen in #13631\n\nIt forces get_tail to put the current session last in the returned\nresults.", "commit_timestamp": "2022-04-29T11:22:10Z", "files": ["IPython/core/history.py"]}, {"node_id": "C_kwDOAAoMVtoAKDRkOTdhYjE5MWE3Y2ZlMDE0YzI5NWE0NzVkOTBhZjNiMWNkNmU5ODQ", "commit_message": "Merge pull request #13657 from Carreau/fix-mix-history\n\nThis fixed the mixing of multiple history seen in #13631", "commit_timestamp": "2022-04-29T11:41:08Z", "files": ["IPython/core/history.py"]}], "labels": [], "created_at": "2022-04-10T00:53:39Z", "closed_at": "2022-04-29T12:12:12Z", "linked_pr_number": [13631], "method": ["regex"]}
{"issue_number": 13622, "title": "IPython 8.2.0 ERROR with %cpaste -q", "body": "I recently updated my workflow to use pyenv, which brought along an update to all my pip installed tools.\r\n\r\nIPython was updated from 8.1.1 to 8.2.0.\r\n\r\nSince then running a block with `%cpaste -q` which I use a lot causes an ERROR:\r\n\r\n```\r\nERROR! Session/line number was not unique in database. History logging moved to new session 3\r\n```\r\n\r\nI compared with my old install and with a downgraded version, both work as expected: \r\n\r\n1. Old install using brew and pip\r\n```\r\nPython 3.10.2 (main, Feb  2 2022, 06:19:27) [Clang 13.0.0 (clang-1300.0.29.3)]\r\nType 'copyright', 'credits' or 'license' for more information\r\nIPython 8.1.1 -- An enhanced Interactive Python. Type '?' for help.\r\n\r\nIn [1]: %cpaste -q\r\ni = 1\r\nprint(i)\r\n--\r\n1\r\n\r\nIn [2]:\r\n```\r\n\r\n2. New install in pyenv and pip\r\n```\r\nPython 3.9.11 (main, Apr  4 2022, 12:07:49)\r\nType 'copyright', 'credits' or 'license' for more information\r\nIPython 8.2.0 -- An enhanced Interactive Python. Type '?' for help.\r\n\r\nIn [1]: %cpaste -q\r\nj = 2\r\nprint(j)\r\n--\r\n2\r\n\r\nERROR! Session/line number was not unique in database. History logging moved to new session 3\r\nIn [3]:\r\n```\r\n\r\n3. Downgraded to 8.1.1\r\n```\r\nPython 3.9.11 (main, Apr  4 2022, 12:07:49)\r\nType 'copyright', 'credits' or 'license' for more information\r\nIPython 8.1.1 -- An enhanced Interactive Python. Type '?' for help.\r\n\r\nIn [1]: %cpaste -q\r\ni = 1\r\nprint(i)\r\n--\r\n1\r\n\r\nIn [2]:\r\n```\r\n \r\nThere was a difference in the history.sqlite database, both 8.1.1 version has a single row for the `%cpaste -q`, the 8.2.0 was also showing the `j = 2` and `print(j)` on a second row, but I'm unable to find this output at this time. The overincrementing can be seen in the jump from prompt 1 straight to 3.", "commits": [{"node_id": "C_kwDOAAoMVtoAKDFhZWVlNjZjZDJjODIxYzhmYWVlMDhmYTYxMTEyYTI4NzBmYmYzYTk", "commit_message": "Merge pull request #13763 from CosmosAtlas/main\n\nfixed cpaste session error in #13622", "commit_timestamp": "2022-10-29T10:18:06Z", "files": ["IPython/terminal/magics.py"]}], "labels": ["bug", "magics"], "created_at": "2022-04-04T15:24:41Z", "closed_at": "2022-11-11T22:03:04Z", "method": ["label"]}
{"issue_number": 13602, "title": "Transformer for `pinfo` line magic incorrectly sets next input when the line contains parentheses", "body": "In JupyterLab we experience an annoyance with pinfo magic which results in some expressions creating a new cell instead of providing help (https://github.com/jupyterlab/jupyterlab/issues/12269). The following example creates extra cells:\r\n\r\n```python\r\nsum([1]).denominator?\r\n```\r\n\r\nor:\r\n\r\n```\r\ny = lambda x: int?\r\n```\r\n\r\nWhile the direct call to `pinfo` line magic, or to underlying `_inspect` method does not have such an effect:\r\n\r\n```python\r\n?sum([1]).denominator\r\n```\r\n\r\n```python\r\n%pinfo sum([1]).denominator\r\n```\r\n\r\n```python\r\nipython._inspect('pinfo', 'sum([1]).denominator?')\r\n```\r\n\r\n```python\r\nget_ipython().run_line_magic('pinfo', 'sum([1]).denominator?')\r\n```\r\n\r\n\r\n![extra-cells](https://user-images.githubusercontent.com/5832902/159914796-e8b05f77-c368-4df4-b665-226dbd8ebaaa.gif)\r\n\r\nThis was narrowed down to a special construct in the input transformer which for some reason wants to set next input in case if the `?` is placed mid-command:\r\n\r\nhttps://github.com/ipython/ipython/blob/0c5563497fe94a8a24ec88912433959908f2506e/IPython/core/inputtransformer.py#L196-L210\r\n\r\nidentically in transformer2:\r\n\r\nhttps://github.com/ipython/ipython/blob/0c5563497fe94a8a24ec88912433959908f2506e/IPython/core/inputtransformer2.py#L328-L342\r\n\r\nThis code existed like that since 2012 when it was introduced during magics and splitter refactoring in https://github.com/ipython/ipython/commit/3f192dc6a1873b0d2e5345fc475ffab0fa403466. Interestingly the commit is titled `Remove next_input nonsense in magic calls (but keep functionality).`.\r\n\r\nNow, the `set_next_input` will only get introduced if `next_input` is given which gets decided in `help_end` utility:\r\n\r\nhttps://github.com/ipython/ipython/blob/0c5563497fe94a8a24ec88912433959908f2506e/IPython/core/inputtransformer.py#L342-L355\r\n\r\nwhich also happens in transformer2:\r\n\r\nhttps://github.com/ipython/ipython/blob/0c5563497fe94a8a24ec88912433959908f2506e/IPython/core/inputtransformer2.py#L468-L487\r\n\r\nWhat follows:\r\n- I do not see any use-case for the `next_input` to be ever returned. Can we remove it, or am I missing something?\r\n- regardless, the regular expression `_help_end_re` disallows parentheses, only allows strings like `\\w+(\\.\\w+)*` thus it thinks (possibly incorrectly) that it should set the next input to `sum([1]).denominator`; in more detail, the `_help_end_re.search` does not capture the `sum([])` part, and only captures `denominator?` which is different from `line.strip()` therefore `line.rstrip('?')` is assigned as `next_input`. Can we modify the regular expression to allow for parens, brackets and others?\r\n- in `inputtransformer2` a syntax error will be raised when we try to use `DataFrame()?` or `data['key']?, however I would very much like to be able to get help for those as well; this might also require a slight change in the `_ofind` method to allow evaluation of code for pinfo magics (around here https://github.com/ipython/ipython/blob/47ccec77b41b010091ec18a20ff7d2bedcc674da/IPython/core/interactiveshell.py#L1525-L1527 where exception for other magics is already present)", "commits": [{"node_id": "C_kwDOACPEidoAKDVjNzJjNWEwZWRhODhmMDBjMjg1ZGUwZTUyZjRjMGYxMWYyNTM5MzQ", "commit_message": "Remove set-next input when triggering help.\n\nThis was a long standing feature from when the main way to edit code was\nreadline. Now that we have proper history and editing frontend,\nincluding prompt toolkit this is not necessary, especially since it\ncreates issue like in JupyterLab.\n\nShould close #13602", "commit_timestamp": "2022-04-05T12:15:10Z", "files": ["IPython/core/inputtransformer.py", "IPython/core/inputtransformer2.py", "IPython/core/tests/test_inputtransformer.py"]}, {"node_id": "C_kwDOACPEidoAKGU5ZGU0Y2MyYTFlNzc4MTQ0NjliMzdmM2QxMTk5NmQzNGVjNzU0Y2I", "commit_message": "Remove set-next input when triggering help.\n\nThis was a long standing feature from when the main way to edit code was\nreadline. Now that we have proper history and editing frontend,\nincluding prompt toolkit this is not necessary, especially since it\ncreates issue like in JupyterLab.\n\nShould close #13602", "commit_timestamp": "2022-04-05T12:30:59Z", "files": ["IPython/core/inputtransformer.py", "IPython/core/inputtransformer2.py", "IPython/core/tests/test_inputtransformer.py"]}, {"node_id": "C_kwDOACPEidoAKDZiMDY5MDg3YjE5OTFiNzA2Mzk4ZWJmMjQ0YTFkZDkxMDE2YjVkNmQ", "commit_message": "Remove set-next input when triggering help.\n\nThis was a long standing feature from when the main way to edit code was\nreadline. Now that we have proper history and editing frontend,\nincluding prompt toolkit this is not necessary, especially since it\ncreates issue like in JupyterLab.\n\nShould close #13602", "commit_timestamp": "2022-04-05T12:41:12Z", "files": ["IPython/core/inputtransformer.py", "IPython/core/inputtransformer2.py", "IPython/core/tests/test_inputtransformer.py", "IPython/core/tests/test_inputtransformer2.py"]}, {"node_id": "C_kwDOACPEidoAKDMyYzM5M2I2YmFiZWI4MmRhYjk3YWE0ZjJhYzczZWRjMzU4YjRlYmY", "commit_message": "Remove set-next input when triggering help.\n\nThis was a long standing feature from when the main way to edit code was\nreadline. Now that we have proper history and editing frontend,\nincluding prompt toolkit this is not necessary, especially since it\ncreates issue like in JupyterLab.\n\nShould close #13602", "commit_timestamp": "2022-04-05T12:44:04Z", "files": ["IPython/core/inputtransformer.py", "IPython/core/inputtransformer2.py", "IPython/core/tests/test_inputtransformer.py", "IPython/core/tests/test_inputtransformer2.py"]}], "labels": ["bug", "magics"], "created_at": "2022-03-24T12:47:27Z", "closed_at": "2022-04-05T13:05:01Z", "method": ["label"]}
{"issue_number": 13554, "title": "IPython 8.1.0 claims to be compatible with Python 3.8, but isn't", "body": "<!-- This is the repository for IPython command line, if you can try to make sure this question/bug/feature belong here and not on one of the Jupyter repositories. \r\n\r\nIf it's a generic Python/Jupyter question, try other forums or discourse.jupyter.org.\r\n\r\nIf you are unsure, it's ok to post here, though, there are few maintainer so you might not get a fast response. \r\n\r\n-->\r\nSteps to reproduce:\r\n```\r\n$ python --version\r\nPython 3.8.10\r\n$ pip install ipython\r\n$ ipython\r\nTraceback (most recent call last):\r\n  File \"/path/to/venv/bin/ipython\", line 8, in <module>\r\n    sys.exit(start_ipython())\r\n  File \"/path/to/venv/lib/python3.8/site-packages/IPython/__init__.py\", line 123, in start_ipython\r\n    return launch_new_instance(argv=argv, **kwargs)\r\n  File \"/path/to/venv/lib/python3.8/site-packages/traitlets/config/application.py\", line 845, in launch_instance\r\n    app.initialize(argv)\r\n  File \"/path/to/venv/lib/python3.8/site-packages/traitlets/config/application.py\", line 88, in inner\r\n    return method(app, *args, **kwargs)\r\n  File \"/path/to/venv/lib/python3.8/site-packages/IPython/terminal/ipapp.py\", line 279, in initialize\r\n    self.init_shell()\r\n  File \"/path/to/venv/lib/python3.8/site-packages/IPython/terminal/ipapp.py\", line 293, in init_shell\r\n    self.shell = self.interactive_shell_class.instance(parent=self,\r\n  File \"/path/to/venv/lib/python3.8/site-packages/traitlets/config/configurable.py\", line 540, in instance\r\n    inst = cls(*args, **kwargs)\r\n  File \"/path/to/venv/lib/python3.8/site-packages/IPython/terminal/interactiveshell.py\", line 619, in __init__\r\n    super(TerminalInteractiveShell, self).__init__(*args, **kwargs)\r\n  File \"/path/to/venv/lib/python3.8/site-packages/IPython/core/interactiveshell.py\", line 529, in __init__\r\n    self.init_virtualenv()\r\n  File \"/path/to/venv/lib/python3.8/site-packages/IPython/core/interactiveshell.py\", line 788, in init_virtualenv\r\n    new_path = p.readlink()\r\nAttributeError: 'PosixPath' object has no attribute 'readlink'\r\n\r\nIf you suspect this is an IPython 8.1.0 bug, please report it at:\r\n    https://github.com/ipython/ipython/issues\r\nor send an email to the mailing list at ipython-dev@python.org\r\n\r\nYou can print a more detailed traceback right now with \"%tb\", or use \"%debug\"\r\nto interactively debug it.\r\n\r\nExtra-detailed tracebacks for bug-reporting purposes can be enabled via:\r\n    c.Application.verbose_crash=True\r\n```\r\n\r\n`PosixPath.readlink()` [was introduced in Python 3.9](https://docs.python.org/3/library/pathlib.html#pathlib.Path.readlink).\r\n\r\nThank you for looking into this.", "commits": [{"node_id": "C_kwDOB5UTC9oAKDIwODczZjE3YjkwZDkyNzI5YmUyNWE4MjQ2ZWRjNjRmNjFkOGE1ZWQ", "commit_message": "Fixing structure_optimizer.py final results sorting old bug\n\n- structure_optimizer.py is fixed\n- requirements.txt file is updated to include the upgraded version of ipython which caused a crash in JetBrains IDE: https://youtrack.jetbrains.com/issue/PY-53261, https://github.com/ipython/ipython/issues/13554\n- new test for structure_optimizer.py is added but commented out, because it's a very slow test which is already included into test_cli.py, but still can be useful for future debugging\n- docker file updated", "commit_timestamp": "2022-03-03T23:37:31Z", "files": ["src/simod/structure_optimizer.py", "tests/test_cli.py", "tests/test_structure_optimizer.py"]}], "labels": ["bug", "core"], "created_at": "2022-02-25T16:29:30Z", "closed_at": "2022-03-03T10:41:22Z", "method": ["label", "regex"]}
{"issue_number": 13538, "title": "RemoteException causes IPython 8 to crash", "body": "Exceptions in subprocesses in `multiprocessing.pool.Pool` and `concurrent.futures.ProcessPoolExecutor` (and possibly more) cause IPython 8 to crash.\r\n\r\nAt first I thought this might be a duplicate of #12467 but while the symptoms are similar, the cause seems to be different\r\n\r\nIn `IPython.core.ultratb.VerboseTB.structured_traceback` exists a while loop which loops over the chain of exceptions. If it stems from a subprocess though, the type of the traceback might be `RemoteTraceback` (or `_RemoteTraceback` for `ProcessPoolExecutor`) instead of a regular traceback object which has neither a `__cause__` nor a `__context__`. This in turn leads to `etb` being `None` in `structured_traceback` and an exception being triggered by the newly introduced `assert etb is not None` in `format_exception_as_a_whole` which leads to the crash.\r\n\r\n## Steps to reproduce:\r\n\r\n```python\r\nfrom multiprocessing.pool import Pool\r\n\r\ndef foo(x):\r\n    raise Exception()\r\n\r\nPool(1).map(foo, [1])\r\n```\r\n\r\nTested in latest Python 3.10 docker container with IPython 8.0.1:\r\n\r\n<details>\r\n\r\n```python\r\nroot@0d7056b87b09:/# ipython\r\nPython 3.10.2 (main, Feb  8 2022, 04:44:29) [GCC 10.2.1 20210110]\r\nType 'copyright', 'credits' or 'license' for more information\r\nIPython 8.0.1 -- An enhanced Interactive Python. Type '?' for help.\r\n\r\nIn [1]: from multiprocessing.pool import Pool\r\n\r\nIn [2]: def foo(x):\r\n   ...:     raise Exception()\r\n\r\nIn [3]: Pool(1).map(foo, [1])\r\nmultiprocessing.pool.RemoteTraceback: \r\n\"\"\"\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python3.10/multiprocessing/pool.py\", line 125, in worker\r\n    result = (True, func(*args, **kwds))\r\n  File \"/usr/local/lib/python3.10/multiprocessing/pool.py\", line 48, in mapstar\r\n    return list(map(*args))\r\n  File \"<ipython-input-2-f1f53f013b9a>\", line 2, in foo\r\n    raise Exception()\r\nException\r\n\"\"\"\r\n\r\nThe above exception was the direct cause of the following exception:\r\n\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python3.10/site-packages/IPython/core/interactiveshell.py\", line 3251, in run_code\r\n    exec(code_obj, self.user_global_ns, self.user_ns)\r\n  File \"<ipython-input-3-6128068d2903>\", line 1, in <module>\r\n    Pool(1).map(foo, [1])\r\n  File \"/usr/local/lib/python3.10/multiprocessing/pool.py\", line 364, in map\r\n    return self._map_async(func, iterable, mapstar, chunksize).get()\r\n  File \"/usr/local/lib/python3.10/multiprocessing/pool.py\", line 771, in get\r\n    raise self._value\r\nException\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python3.10/site-packages/IPython/core/interactiveshell.py\", line 1934, in showtraceback\r\n    stb = value._render_traceback_()\r\nAttributeError: 'Exception' object has no attribute '_render_traceback_'\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python3.10/site-packages/IPython/core/interactiveshell.py\", line 3191, in run_ast_nodes\r\n    if await self.run_code(code, result, async_=asy):\r\n  File \"/usr/local/lib/python3.10/site-packages/IPython/core/interactiveshell.py\", line 3268, in run_code\r\n    self.showtraceback(running_compiled_code=True)\r\n  File \"/usr/local/lib/python3.10/site-packages/IPython/core/interactiveshell.py\", line 1936, in showtraceback\r\n    stb = self.InteractiveTB.structured_traceback(etype,\r\n  File \"/usr/local/lib/python3.10/site-packages/IPython/core/ultratb.py\", line 1105, in structured_traceback\r\n    return FormattedTB.structured_traceback(\r\n  File \"/usr/local/lib/python3.10/site-packages/IPython/core/ultratb.py\", line 999, in structured_traceback\r\n    return VerboseTB.structured_traceback(\r\n  File \"/usr/local/lib/python3.10/site-packages/IPython/core/ultratb.py\", line 871, in structured_traceback\r\n    formatted_exceptions += self.format_exception_as_a_whole(etype, evalue, etb, lines_of_context,\r\n  File \"/usr/local/lib/python3.10/site-packages/IPython/core/ultratb.py\", line 775, in format_exception_as_a_whole\r\n    assert etb is not None\r\nAssertionError\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python3.10/site-packages/IPython/core/interactiveshell.py\", line 1934, in showtraceback\r\n    stb = value._render_traceback_()\r\nAttributeError: 'AssertionError' object has no attribute '_render_traceback_'\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python3.10/site-packages/IPython/core/interactiveshell.py\", line 2814, in _run_cell\r\n    return runner(coro)\r\n  File \"/usr/local/lib/python3.10/site-packages/IPython/core/async_helpers.py\", line 129, in _pseudo_sync_runner\r\n    coro.send(None)\r\n  File \"/usr/local/lib/python3.10/site-packages/IPython/core/interactiveshell.py\", line 3012, in run_cell_async\r\n    has_raised = await self.run_ast_nodes(code_ast.body, cell_name,\r\n  File \"/usr/local/lib/python3.10/site-packages/IPython/core/interactiveshell.py\", line 3210, in run_ast_nodes\r\n    self.showtraceback()\r\n  File \"/usr/local/lib/python3.10/site-packages/IPython/core/interactiveshell.py\", line 1936, in showtraceback\r\n    stb = self.InteractiveTB.structured_traceback(etype,\r\n  File \"/usr/local/lib/python3.10/site-packages/IPython/core/ultratb.py\", line 1105, in structured_traceback\r\n    return FormattedTB.structured_traceback(\r\n  File \"/usr/local/lib/python3.10/site-packages/IPython/core/ultratb.py\", line 999, in structured_traceback\r\n    return VerboseTB.structured_traceback(\r\n  File \"/usr/local/lib/python3.10/site-packages/IPython/core/ultratb.py\", line 871, in structured_traceback\r\n    formatted_exceptions += self.format_exception_as_a_whole(etype, evalue, etb, lines_of_context,\r\n  File \"/usr/local/lib/python3.10/site-packages/IPython/core/ultratb.py\", line 775, in format_exception_as_a_whole\r\n    assert etb is not None\r\nAssertionError\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python3.10/site-packages/IPython/core/interactiveshell.py\", line 1934, in showtraceback\r\n    stb = value._render_traceback_()\r\nAttributeError: 'AssertionError' object has no attribute '_render_traceback_'\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/usr/local/bin/ipython\", line 8, in <module>\r\n    sys.exit(start_ipython())\r\n  File \"/usr/local/lib/python3.10/site-packages/IPython/__init__.py\", line 123, in start_ipython\r\n    return launch_new_instance(argv=argv, **kwargs)\r\n  File \"/usr/local/lib/python3.10/site-packages/traitlets/config/application.py\", line 846, in launch_instance\r\n    app.start()\r\n  File \"/usr/local/lib/python3.10/site-packages/IPython/terminal/ipapp.py\", line 316, in start\r\n    self.shell.mainloop()\r\n  File \"/usr/local/lib/python3.10/site-packages/IPython/terminal/interactiveshell.py\", line 611, in mainloop\r\n    self.interact()\r\n  File \"/usr/local/lib/python3.10/site-packages/IPython/terminal/interactiveshell.py\", line 604, in interact\r\n    self.run_cell(code, store_history=True)\r\n  File \"/usr/local/lib/python3.10/site-packages/IPython/core/interactiveshell.py\", line 2768, in run_cell\r\n    result = self._run_cell(\r\n  File \"/usr/local/lib/python3.10/site-packages/IPython/core/interactiveshell.py\", line 2819, in _run_cell\r\n    self.showtraceback(running_compiled_code=True)\r\n  File \"/usr/local/lib/python3.10/site-packages/IPython/core/interactiveshell.py\", line 1936, in showtraceback\r\n    stb = self.InteractiveTB.structured_traceback(etype,\r\n  File \"/usr/local/lib/python3.10/site-packages/IPython/core/ultratb.py\", line 1105, in structured_traceback\r\n    return FormattedTB.structured_traceback(\r\n  File \"/usr/local/lib/python3.10/site-packages/IPython/core/ultratb.py\", line 999, in structured_traceback\r\n    return VerboseTB.structured_traceback(\r\n  File \"/usr/local/lib/python3.10/site-packages/IPython/core/ultratb.py\", line 871, in structured_traceback\r\n    formatted_exceptions += self.format_exception_as_a_whole(etype, evalue, etb, lines_of_context,\r\n  File \"/usr/local/lib/python3.10/site-packages/IPython/core/ultratb.py\", line 775, in format_exception_as_a_whole\r\n    assert etb is not None\r\nAssertionError\r\n\r\nIf you suspect this is an IPython 8.0.1 bug, please report it at:\r\n    https://github.com/ipython/ipython/issues\r\nor send an email to the mailing list at ipython-dev@python.org\r\n\r\nYou can print a more detailed traceback right now with \"%tb\", or use \"%debug\"\r\nto interactively debug it.\r\n\r\nExtra-detailed tracebacks for bug-reporting purposes can be enabled via:\r\n    %config Application.verbose_crash=True\r\n\r\nroot@0d7056b87b09:/# \r\n```\r\n\r\n</details>\r\n\r\nAlso with `ProcessPoolExecutor`:\r\n\r\n```python\r\nfrom concurrent.futures import ProcessPoolExecutor\r\n\r\ndef foo():\r\n  raise Exception(\"foo\")\r\n\r\npool = ProcessPoolExecutor(max_workers=1)\r\nfuture = pool.submit(foo)\r\nfuture.result()\r\n```\r\n\r\n\r\n<details>\r\n\r\n```python\r\nroot@8a840b5a619f:/# ipython\r\nPython 3.10.2 (main, Feb  8 2022, 04:44:29) [GCC 10.2.1 20210110]\r\nType 'copyright', 'credits' or 'license' for more information\r\nIPython 8.0.1 -- An enhanced Interactive Python. Type '?' for help.\r\n\r\nIn [1]: from concurrent.futures import ProcessPoolExecutor\r\n   ...: \r\n   ...: \r\n   ...: def foo():\r\n   ...:     raise Exception(\"foo\")\r\n   ...: \r\n   ...: \r\n   ...: pool = ProcessPoolExecutor(max_workers=1)\r\n   ...: future = pool.submit(foo)\r\n   ...: future.result()\r\nconcurrent.futures.process._RemoteTraceback: \r\n\"\"\"\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python3.10/concurrent/futures/process.py\", line 243, in _process_worker\r\n    r = call_item.fn(*call_item.args, **call_item.kwargs)\r\n  File \"<ipython-input-1-86d971dad3a2>\", line 5, in foo\r\n    raise Exception(\"foo\")\r\nException: foo\r\n\"\"\"\r\n\r\nThe above exception was the direct cause of the following exception:\r\n\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python3.10/site-packages/IPython/core/interactiveshell.py\", line 3251, in run_code\r\n    exec(code_obj, self.user_global_ns, self.user_ns)\r\n  File \"<ipython-input-1-86d971dad3a2>\", line 10, in <module>\r\n    future.result()\r\n  File \"/usr/local/lib/python3.10/concurrent/futures/_base.py\", line 446, in result\r\n    return self.__get_result()\r\n  File \"/usr/local/lib/python3.10/concurrent/futures/_base.py\", line 391, in __get_result\r\n    raise self._exception\r\nException: foo\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python3.10/site-packages/IPython/core/interactiveshell.py\", line 1934, in showtraceback\r\n    stb = value._render_traceback_()\r\nAttributeError: 'Exception' object has no attribute '_render_traceback_'\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python3.10/site-packages/IPython/core/interactiveshell.py\", line 3191, in run_ast_nodes\r\n    if await self.run_code(code, result, async_=asy):\r\n  File \"/usr/local/lib/python3.10/site-packages/IPython/core/interactiveshell.py\", line 3268, in run_code\r\n    self.showtraceback(running_compiled_code=True)\r\n  File \"/usr/local/lib/python3.10/site-packages/IPython/core/interactiveshell.py\", line 1936, in showtraceback\r\n    stb = self.InteractiveTB.structured_traceback(etype,\r\n  File \"/usr/local/lib/python3.10/site-packages/IPython/core/ultratb.py\", line 1105, in structured_traceback\r\n    return FormattedTB.structured_traceback(\r\n  File \"/usr/local/lib/python3.10/site-packages/IPython/core/ultratb.py\", line 999, in structured_traceback\r\n    return VerboseTB.structured_traceback(\r\n  File \"/usr/local/lib/python3.10/site-packages/IPython/core/ultratb.py\", line 871, in structured_traceback\r\n    formatted_exceptions += self.format_exception_as_a_whole(etype, evalue, etb, lines_of_context,\r\n  File \"/usr/local/lib/python3.10/site-packages/IPython/core/ultratb.py\", line 775, in format_exception_as_a_whole\r\n    assert etb is not None\r\nAssertionError\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python3.10/site-packages/IPython/core/interactiveshell.py\", line 1934, in showtraceback\r\n    stb = value._render_traceback_()\r\nAttributeError: 'AssertionError' object has no attribute '_render_traceback_'\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python3.10/site-packages/IPython/core/interactiveshell.py\", line 2814, in _run_cell\r\n    return runner(coro)\r\n  File \"/usr/local/lib/python3.10/site-packages/IPython/core/async_helpers.py\", line 129, in _pseudo_sync_runner\r\n    coro.send(None)\r\n  File \"/usr/local/lib/python3.10/site-packages/IPython/core/interactiveshell.py\", line 3012, in run_cell_async\r\n    has_raised = await self.run_ast_nodes(code_ast.body, cell_name,\r\n  File \"/usr/local/lib/python3.10/site-packages/IPython/core/interactiveshell.py\", line 3210, in run_ast_nodes\r\n    self.showtraceback()\r\n  File \"/usr/local/lib/python3.10/site-packages/IPython/core/interactiveshell.py\", line 1936, in showtraceback\r\n    stb = self.InteractiveTB.structured_traceback(etype,\r\n  File \"/usr/local/lib/python3.10/site-packages/IPython/core/ultratb.py\", line 1105, in structured_traceback\r\n    return FormattedTB.structured_traceback(\r\n  File \"/usr/local/lib/python3.10/site-packages/IPython/core/ultratb.py\", line 999, in structured_traceback\r\n    return VerboseTB.structured_traceback(\r\n  File \"/usr/local/lib/python3.10/site-packages/IPython/core/ultratb.py\", line 871, in structured_traceback\r\n    formatted_exceptions += self.format_exception_as_a_whole(etype, evalue, etb, lines_of_context,\r\n  File \"/usr/local/lib/python3.10/site-packages/IPython/core/ultratb.py\", line 775, in format_exception_as_a_whole\r\n    assert etb is not None\r\nAssertionError\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python3.10/site-packages/IPython/core/interactiveshell.py\", line 1934, in showtraceback\r\n    stb = value._render_traceback_()\r\nAttributeError: 'AssertionError' object has no attribute '_render_traceback_'\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/usr/local/bin/ipython\", line 8, in <module>\r\n    sys.exit(start_ipython())\r\n  File \"/usr/local/lib/python3.10/site-packages/IPython/__init__.py\", line 123, in start_ipython\r\n    return launch_new_instance(argv=argv, **kwargs)\r\n  File \"/usr/local/lib/python3.10/site-packages/traitlets/config/application.py\", line 846, in launch_instance\r\n    app.start()\r\n  File \"/usr/local/lib/python3.10/site-packages/IPython/terminal/ipapp.py\", line 316, in start\r\n    self.shell.mainloop()\r\n  File \"/usr/local/lib/python3.10/site-packages/IPython/terminal/interactiveshell.py\", line 611, in mainloop\r\n    self.interact()\r\n  File \"/usr/local/lib/python3.10/site-packages/IPython/terminal/interactiveshell.py\", line 604, in interact\r\n    self.run_cell(code, store_history=True)\r\n  File \"/usr/local/lib/python3.10/site-packages/IPython/core/interactiveshell.py\", line 2768, in run_cell\r\n    result = self._run_cell(\r\n  File \"/usr/local/lib/python3.10/site-packages/IPython/core/interactiveshell.py\", line 2819, in _run_cell\r\n    self.showtraceback(running_compiled_code=True)\r\n  File \"/usr/local/lib/python3.10/site-packages/IPython/core/interactiveshell.py\", line 1936, in showtraceback\r\n    stb = self.InteractiveTB.structured_traceback(etype,\r\n  File \"/usr/local/lib/python3.10/site-packages/IPython/core/ultratb.py\", line 1105, in structured_traceback\r\n    return FormattedTB.structured_traceback(\r\n  File \"/usr/local/lib/python3.10/site-packages/IPython/core/ultratb.py\", line 999, in structured_traceback\r\n    return VerboseTB.structured_traceback(\r\n  File \"/usr/local/lib/python3.10/site-packages/IPython/core/ultratb.py\", line 871, in structured_traceback\r\n    formatted_exceptions += self.format_exception_as_a_whole(etype, evalue, etb, lines_of_context,\r\n  File \"/usr/local/lib/python3.10/site-packages/IPython/core/ultratb.py\", line 775, in format_exception_as_a_whole\r\n    assert etb is not None\r\nAssertionError\r\n\r\nIf you suspect this is an IPython 8.0.1 bug, please report it at:\r\n    https://github.com/ipython/ipython/issues\r\nor send an email to the mailing list at ipython-dev@python.org\r\n\r\nYou can print a more detailed traceback right now with \"%tb\", or use \"%debug\"\r\nto interactively debug it.\r\n\r\nExtra-detailed tracebacks for bug-reporting purposes can be enabled via:\r\n    %config Application.verbose_crash=True\r\n\r\nroot@8a840b5a619f:/# \r\n```\r\n\r\n</details>\r\n\r\n", "commits": [{"node_id": "C_kwDOACPEidoAKDQ2YzYzYTViYTgyZmJjMDMwNTA2YjIzMjM3NDUwZDAyMWVmNWNhYTg", "commit_message": "Restore support for etb=None\n\nCloses #13584, #13538\nShould close #13586 and #12467", "commit_timestamp": "2022-03-12T10:11:35Z", "files": ["IPython/core/ultratb.py"]}, {"node_id": "C_kwDOG6ucUNoAKDEwZWU4NTk4ZjIwZGU2YzI4MGRhNzM0NmU0M2YxMDY5ZWU2ZWUzODM", "commit_message": "Restore support for etb=None\n\nCloses #13584, #13538\nShould close #13586 and #12467", "commit_timestamp": "2022-03-27T18:23:44Z", "files": ["IPython/core/ultratb.py"]}], "labels": ["core"], "created_at": "2022-02-21T11:32:42Z", "closed_at": "2022-03-22T08:40:25Z", "method": ["regex"]}
{"issue_number": 13472, "title": "IPython 8 changes terminal cursor", "body": "<!-- This is the repository for IPython command line, if you can try to make sure this question/bug/feature belong here and not on one of the Jupyter repositories. \r\n\r\nIf it's a generic Python/Jupyter question, try other forums or discourse.jupyter.org.\r\n\r\nIf you are unsure, it's ok to post here, though, there are few maintainer so you might not get a fast response. \r\n\r\n-->\r\nAfter starting IPython 8.0 and then returning to terminal, the cursor changes from block to I-Beam.\r\n\r\nBefore:\r\n![ipy-cursor-before](https://user-images.githubusercontent.com/87697/149665338-139ee774-5d90-4ddc-88a8-3a7fcfee6f62.jpg)\r\n\r\nAfter:\r\n![ipy-cursor-after](https://user-images.githubusercontent.com/87697/149665346-78bc9858-96b5-4a79-b820-d4a6fb5d7e9f.jpg)\r\n\r\nI need to call `reset` to get the cursor back to block.\r\n\r\nSetup: XFCE terminal + zsh + starship", "commits": [{"node_id": "C_kwDOGwwHK9oAKDc3MjU1YzkxMDNkM2UyNDQxMjM5ZmE1MTAxN2E1ODM3YzAxY2FjMTI", "commit_message": "Fixes #13472 by restoring user's terminal cursor", "commit_timestamp": "2022-01-30T19:09:36Z", "files": ["IPython/core/interactiveshell.py", "IPython/terminal/shortcuts.py"]}, {"node_id": "C_kwDOGwwHK9oAKDk0MzhiNDM3NjQwZjZmY2MxOWNlNmRkNTdmMDBlYzVlMzhkZTAzZjE", "commit_message": "Fixes #13472 by restoring user's terminal cursor", "commit_timestamp": "2022-02-01T12:32:51Z", "files": ["IPython/core/interactiveshell.py", "IPython/terminal/shortcuts.py"]}, {"node_id": "C_kwDOGwwHK9oAKDE2NDUxMjY2ZmM3NTg1NWE2MTdmNjFhNGU3YmY2ZDI5MzMwOTY1YjE", "commit_message": "Fixes #13472 by restoring user's terminal cursor", "commit_timestamp": "2022-02-08T11:36:52Z", "files": ["IPython/core/interactiveshell.py", "IPython/terminal/shortcuts.py"]}, {"node_id": "C_kwDOAAoMVtoAKDE2NDUxMjY2ZmM3NTg1NWE2MTdmNjFhNGU3YmY2ZDI5MzMwOTY1YjE", "commit_message": "Fixes #13472 by restoring user's terminal cursor", "commit_timestamp": "2022-02-08T11:36:52Z", "files": ["IPython/core/interactiveshell.py", "IPython/terminal/shortcuts.py"]}, {"node_id": "C_kwDOAAoMVtoAKDM0ZTkyMjVkYjBkNjFkYmNmMzA2YWQyZWIyOTAxODI0ZjAyNTkxMDk", "commit_message": "Merge pull request #13501 from ltrujello/fix_vi_cursor\n\nFixes #13472 by restoring user's terminal cursor after exiting IPython", "commit_timestamp": "2022-02-25T10:36:37Z", "files": ["IPython/core/interactiveshell.py", "IPython/terminal/shortcuts.py"]}], "labels": [], "created_at": "2022-01-16T14:59:24Z", "closed_at": "2022-02-25T10:36:39Z", "method": ["regex"]}
{"issue_number": 13441, "title": "ipython 8.0.0 requires relatively recent pygments", "body": "After reading [the update post](https://blog.jupyter.org/release-of-ipython-8-0-6e034ff122ef), I updated my ipython to 8.0.0 using `python -m pip install ipython ipykernel --upgrade` and then tried to follow the code in the post.\r\n\r\n```python\r\n%xmode verbose\r\ndef foo(i):\r\n    x = [[[0]]]\r\n    return x[0][i][0]\r\ndef bar():\r\n    return foo(0) + foo(1) + foo(2)\r\nbar()\r\n```\r\n\r\nThis crashed my ipython. I've put the full traceback at the bottom of this issue. But the real source of the problem seems to be that I had pygments 2.3.1. Upgrading to pygments 2.11.2 solved the problem (and made the ipython example work beautifully).\r\n\r\nI wonder if it would be a good idea to add a lower bound on the version of pygments in `extras_require`?\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"/home/davidlowryduda/.local/lib/python3.9/site-packages/IPython/core/interactiveshell.py\", line 3251, in run_code\r\n    exec(code_obj, self.user_global_ns, self.user_ns)\r\n  File \"<ipython-input-3-226d01f48125>\", line 1, in <module>\r\n    bar()\r\n  File \"<ipython-input-2-83feff91fbf6>\", line 2, in bar\r\n    return foo(0) + foo(1) + foo(2)\r\n  File \"<ipython-input-1-9c0c42d045a3>\", line 3, in foo\r\n    return x[0][i][0]\r\nIndexError: list index out of range\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/home/davidlowryduda/.local/lib/python3.9/site-packages/IPython/core/interactiveshell.py\", line 1934, in showtraceback\r\n    stb = value._render_traceback_()\r\nAttributeError: 'IndexError' object has no attribute '_render_traceback_'\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/home/davidlowryduda/.local/lib/python3.9/site-packages/IPython/core/interactiveshell.py\", line 3191, in run_ast_nodes\r\n    if await self.run_code(code, result, async_=asy):\r\n  File \"/home/davidlowryduda/.local/lib/python3.9/site-packages/IPython/core/interactiveshell.py\", line 3268, in run_code\r\n    self.showtraceback(running_compiled_code=True)\r\n  File \"/home/davidlowryduda/.local/lib/python3.9/site-packages/IPython/core/interactiveshell.py\", line 1936, in showtraceback\r\n    stb = self.InteractiveTB.structured_traceback(etype,\r\n  File \"/home/davidlowryduda/.local/lib/python3.9/site-packages/IPython/core/ultratb.py\", line 1105, in structured_traceback\r\n    return FormattedTB.structured_traceback(\r\n  File \"/home/davidlowryduda/.local/lib/python3.9/site-packages/IPython/core/ultratb.py\", line 999, in structured_traceback\r\n    return VerboseTB.structured_traceback(\r\n  File \"/home/davidlowryduda/.local/lib/python3.9/site-packages/IPython/core/ultratb.py\", line 852, in structured_traceback\r\n    formatted_exception = self.format_exception_as_a_whole(etype, evalue, etb, number_of_lines_of_context,\r\n  File \"/home/davidlowryduda/.local/lib/python3.9/site-packages/IPython/core/ultratb.py\", line 786, in format_exception_as_a_whole\r\n    records = self.get_records(etb, number_of_lines_of_context, tb_offset)\r\n  File \"/home/davidlowryduda/.local/lib/python3.9/site-packages/IPython/core/ultratb.py\", line 830, in get_records\r\n    style = stack_data.style_with_executing_node(style, \"bg:ansiyellow\")\r\n  File \"/home/davidlowryduda/.local/lib/python3.9/site-packages/stack_data/core.py\", line 403, in style_with_executing_node\r\n    class NewStyle(style):\r\n  File \"/usr/lib/python3/dist-packages/pygments/style.py\", line 91, in __new__\r\n    ndef[4] = colorformat(styledef[3:])\r\n  File \"/usr/lib/python3/dist-packages/pygments/style.py\", line 58, in colorformat\r\n    assert False, \"wrong color format %r\" % text\r\nAssertionError: wrong color format 'ansiyellow'\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/home/davidlowryduda/.local/lib/python3.9/site-packages/IPython/core/interactiveshell.py\", line 1934, in showtraceback\r\n    stb = value._render_traceback_()\r\nAttributeError: 'AssertionError' object has no attribute '_render_traceback_'\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/home/davidlowryduda/.local/lib/python3.9/site-packages/IPython/core/interactiveshell.py\", line 2814, in _run_cell\r\n    return runner(coro)\r\n  File \"/home/davidlowryduda/.local/lib/python3.9/site-packages/IPython/core/async_helpers.py\", line 129, in _pseudo_sync_runner\r\n    coro.send(None)\r\n  File \"/home/davidlowryduda/.local/lib/python3.9/site-packages/IPython/core/interactiveshell.py\", line 3012, in run_cell_async\r\n    has_raised = await self.run_ast_nodes(code_ast.body, cell_name,\r\n  File \"/home/davidlowryduda/.local/lib/python3.9/site-packages/IPython/core/interactiveshell.py\", line 3210, in run_ast_nodes\r\n    self.showtraceback()\r\n  File \"/home/davidlowryduda/.local/lib/python3.9/site-packages/IPython/core/interactiveshell.py\", line 1936, in showtraceback\r\n    stb = self.InteractiveTB.structured_traceback(etype,\r\n  File \"/home/davidlowryduda/.local/lib/python3.9/site-packages/IPython/core/ultratb.py\", line 1105, in structured_traceback\r\n    return FormattedTB.structured_traceback(\r\n  File \"/home/davidlowryduda/.local/lib/python3.9/site-packages/IPython/core/ultratb.py\", line 999, in structured_traceback\r\n    return VerboseTB.structured_traceback(\r\n  File \"/home/davidlowryduda/.local/lib/python3.9/site-packages/IPython/core/ultratb.py\", line 852, in structured_traceback\r\n    formatted_exception = self.format_exception_as_a_whole(etype, evalue, etb, number_of_lines_of_context,\r\n  File \"/home/davidlowryduda/.local/lib/python3.9/site-packages/IPython/core/ultratb.py\", line 786, in format_exception_as_a_whole\r\n    records = self.get_records(etb, number_of_lines_of_context, tb_offset)\r\n  File \"/home/davidlowryduda/.local/lib/python3.9/site-packages/IPython/core/ultratb.py\", line 830, in get_records\r\n    style = stack_data.style_with_executing_node(style, \"bg:ansiyellow\")\r\n  File \"/home/davidlowryduda/.local/lib/python3.9/site-packages/stack_data/core.py\", line 403, in style_with_executing_node\r\n    class NewStyle(style):\r\n  File \"/usr/lib/python3/dist-packages/pygments/style.py\", line 91, in __new__\r\n    ndef[4] = colorformat(styledef[3:])\r\n  File \"/usr/lib/python3/dist-packages/pygments/style.py\", line 58, in colorformat\r\n    assert False, \"wrong color format %r\" % text\r\nAssertionError: wrong color format 'ansiyellow'\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/home/davidlowryduda/.local/lib/python3.9/site-packages/IPython/core/interactiveshell.py\", line 1934, in showtraceback\r\n    stb = value._render_traceback_()\r\nAttributeError: 'AssertionError' object has no attribute '_render_traceback_'\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/usr/lib/python3.9/runpy.py\", line 197, in _run_module_as_main\r\n    return _run_code(code, main_globals, None,\r\n  File \"/usr/lib/python3.9/runpy.py\", line 87, in _run_code\r\n    exec(code, run_globals)\r\n  File \"/home/davidlowryduda/.local/lib/python3.9/site-packages/IPython/__main__.py\", line 14, in <module>\r\n    start_ipython()\r\n  File \"/home/davidlowryduda/.local/lib/python3.9/site-packages/IPython/__init__.py\", line 119, in start_ipython\r\n    return launch_new_instance(argv=argv, **kwargs)\r\n  File \"/home/davidlowryduda/.local/lib/python3.9/site-packages/traitlets/config/application.py\", line 846, in launch_instance\r\n    app.start()\r\n  File \"/home/davidlowryduda/.local/lib/python3.9/site-packages/IPython/terminal/ipapp.py\", line 316, in start\r\n    self.shell.mainloop()\r\n  File \"/home/davidlowryduda/.local/lib/python3.9/site-packages/IPython/terminal/interactiveshell.py\", line 611, in mainloop\r\n    self.interact()\r\n  File \"/home/davidlowryduda/.local/lib/python3.9/site-packages/IPython/terminal/interactiveshell.py\", line 604, in interact\r\n    self.run_cell(code, store_history=True)\r\n  File \"/home/davidlowryduda/.local/lib/python3.9/site-packages/IPython/core/interactiveshell.py\", line 2768, in run_cell\r\n    result = self._run_cell(\r\n  File \"/home/davidlowryduda/.local/lib/python3.9/site-packages/IPython/core/interactiveshell.py\", line 2819, in _run_cell\r\n    self.showtraceback(running_compiled_code=True)\r\n  File \"/home/davidlowryduda/.local/lib/python3.9/site-packages/IPython/core/interactiveshell.py\", line 1936, in showtraceback\r\n    stb = self.InteractiveTB.structured_traceback(etype,\r\n  File \"/home/davidlowryduda/.local/lib/python3.9/site-packages/IPython/core/ultratb.py\", line 1105, in structured_traceback\r\n    return FormattedTB.structured_traceback(\r\n  File \"/home/davidlowryduda/.local/lib/python3.9/site-packages/IPython/core/ultratb.py\", line 999, in structured_traceback\r\n    return VerboseTB.structured_traceback(\r\n  File \"/home/davidlowryduda/.local/lib/python3.9/site-packages/IPython/core/ultratb.py\", line 852, in structured_traceback\r\n    formatted_exception = self.format_exception_as_a_whole(etype, evalue, etb, number_of_lines_of_context,\r\n  File \"/home/davidlowryduda/.local/lib/python3.9/site-packages/IPython/core/ultratb.py\", line 786, in format_exception_as_a_whole\r\n    records = self.get_records(etb, number_of_lines_of_context, tb_offset)\r\n  File \"/home/davidlowryduda/.local/lib/python3.9/site-packages/IPython/core/ultratb.py\", line 830, in get_records\r\n    style = stack_data.style_with_executing_node(style, \"bg:ansiyellow\")\r\n  File \"/home/davidlowryduda/.local/lib/python3.9/site-packages/stack_data/core.py\", line 403, in style_with_executing_node\r\n    class NewStyle(style):\r\n  File \"/usr/lib/python3/dist-packages/pygments/style.py\", line 91, in __new__\r\n    ndef[4] = colorformat(styledef[3:])\r\n  File \"/usr/lib/python3/dist-packages/pygments/style.py\", line 58, in colorformat\r\n    assert False, \"wrong color format %r\" % text\r\nAssertionError: wrong color format 'ansiyellow'\r\n\r\nIf you suspect this is an IPython 8.0.0 bug, please report it at:\r\n    https://github.com/ipython/ipython/issues\r\nor send an email to the mailing list at ipython-dev@python.org\r\n\r\nYou can print a more detailed traceback right now with \"%tb\", or use \"%debug\"\r\nto interactively debug it.\r\n\r\nExtra-detailed tracebacks for bug-reporting purposes can be enabled via:\r\n    %config Application.verbose_crash=True\r\n```", "commits": [{"node_id": "C_kwDOGrRLAtoAKDk4Y2RmOTJhOTIxZmUzOWNhNzU5NDZkYTVkNDBhYTM4YjFmZWI0MjI", "commit_message": "Require pygments>=2.4.0\n\nAs noted in #13441, running ipython with an old version of pygments\nleads to problems. Ipython sends ANSI color names to pygments to color\noutput, but these names aren't in old versions of pygments.\n\nBefore: with pygments 2.3.1 and ipython 8.0.0, opening an ipython\ninstance and running\n\n    In [1]: 1 / 0   # Expect ZeroDivisionError\n\nwill crash ipython as `ansiyellow` is used to highlight the error.\n\nThis PR requires pygments>=2.4.0, which is when pygments changed their\nANSI color names.", "commit_timestamp": "2022-01-14T16:04:34Z", "files": ["setup.py"]}, {"node_id": "C_kwDOGrRLAtoAKGU5MDI0NjZiNzk5NjUxYjFmNzRkMWI2ODJkM2JjNThmMjBjMTM3ZTY", "commit_message": "Require pygments>=2.4.0\n\nAs noted in #13441, running ipython with an old version of pygments\nleads to problems. Ipython sends ANSI color names to pygments to color\noutput, but these names aren't in old versions of pygments.\n\nBefore: with pygments 2.3.1 and ipython 8.0.0, opening an ipython\ninstance and running\n\n    In [1]: 1 / 0   # Expect ZeroDivisionError\n\nwill crash ipython as `ansiyellow` is used to highlight the error.\n\nThis PR requires pygments>=2.4.0, which is when pygments changed their\nANSI color names.", "commit_timestamp": "2022-01-17T14:29:53Z", "files": ["setup.py"]}], "labels": [], "created_at": "2022-01-12T16:58:33Z", "closed_at": "2022-01-17T14:52:08Z", "method": ["regex"]}
{"issue_number": 13408, "title": "Wrong argument to `Path` in ipython in version 8.0.0a1 ", "body": "<!-- This is the repository for IPython command line, if you can try to make sure this question/bug/feature belong here and not on one of the Jupyter repositories. \r\n\r\nIf it's a generic Python/Jupyter question, try other forums or discourse.jupyter.org.\r\n\r\nIf you are unsure, it's ok to post here, though, there are few maintainer so you might not get a fast response. \r\n\r\n-->\r\n\r\nI have pre-release tests on my package and I got such error (only on windows  https://github.com/4DNucleome/PartSeg/runs/4559230495?check_suite_focus=true) :\r\n\r\n```\r\n  D:\\tmp\\tox\\py38-PyQt5-all\\lib\\site-packages\\PartSeg\\common_gui\\qt_console.py:9: in <module>\r\n      from ipykernel.inprocess.ipkernel import InProcessInteractiveShell\r\n  D:\\tmp\\tox\\py38-PyQt5-all\\lib\\site-packages\\ipykernel\\inprocess\\ipkernel.py:10: in <module>\r\n      from IPython.core.interactiveshell import InteractiveShellABC\r\n  D:\\tmp\\tox\\py38-PyQt5-all\\lib\\site-packages\\IPython\\__init__.py:51: in <module>\r\n      from .core.application import Application\r\n  D:\\tmp\\tox\\py38-PyQt5-all\\lib\\site-packages\\IPython\\core\\application.py:37: in <module>\r\n      programdata = Path(os.environ.get(\"PROGRAMDATA\", None))\r\n  c:\\hostedtoolcache\\windows\\python\\3.8.10\\x64\\lib\\pathlib.py:1042: in __new__\r\n      self = cls._from_parts(args, init=False)\r\n  c:\\hostedtoolcache\\windows\\python\\3.8.10\\x64\\lib\\pathlib.py:683: in _from_parts\r\n      drv, root, parts = self._parse_args(args)\r\n  c:\\hostedtoolcache\\windows\\python\\3.8.10\\x64\\lib\\pathlib.py:667: in _parse_args\r\n      a = os.fspath(a)\r\n  E   TypeError: expected str, bytes or os.PathLike object, not NoneType\r\n  ERROR: InvocationError for command 'D:\\tmp\\tox\\py38-PyQt5-all\\Scripts\\pytest.EXE' package/tests --no-cov (exited with code 4)\r\n  ```\r\n\r\nIt looks like wrong default value is provided here `os.environ.get(\"PROGRAMDATA\", None)`\r\n", "commits": [{"node_id": "C_kwDOACPEidoAKGM3ZTk0MWM3MGMzMmM1ZTdlOGIxMjQyMGY4ZjE4MWIzMTU0ZDZhMjg", "commit_message": "Fix case where programdata is None on windows.\n\nCloses #13408", "commit_timestamp": "2021-12-20T11:43:17Z", "files": ["IPython/core/application.py"]}, {"node_id": "C_kwDOAAoMVtoAKDAwMzQzNDBiOGRlNTNkYTZlNjEyYTc4Yzk1YmZkZmNhYTk1ZDFiMmI", "commit_message": "Merge pull request #13410 from Carreau/programdata\n\nFix case where programdata is None on windows.", "commit_timestamp": "2021-12-21T16:31:15Z", "files": ["IPython/core/application.py"]}], "labels": [], "created_at": "2021-12-17T11:24:29Z", "closed_at": "2021-12-21T16:31:15Z", "linked_pr_number": [13408], "method": ["regex"]}
{"issue_number": 13177, "title": "Ipython fails to start in bin folder due to Pathlib changes in interactiveshell.py ", "body": "Ipython will enter an endless loop when starting from a bin folder in a virtualenv created from pyenv.\\\r\n\\\r\nThe cause is related to the fact that the pyenv virtual env has a relative link pointing from python to python3.9\\\r\n\r\nFolder structure\\\r\nenv/bin/python -> /home/nathan/.pyenv/versions/3.9.7/bin/python*\\\r\nenv/bin/python3.9 -> python\\\r\n\r\n.pyenv/versions/3.9.7/bin/python -> python3.9\r\n\r\nProblem code https://github.com/ipython/ipython/blob/6c44d22a240fc79eba76995c0a04f79cae868f8c/IPython/core/interactiveshell.py#L776\r\n```\r\nwhile p.is_symlink():\r\n    p = Path(os.readlink(p))\r\n    paths.append(p.resolve())\r\n\r\nResolve value always equals: /home/nathan/.pyenv/versions/3.9.7/bin/python3.9\r\n\r\nFirst iteration p: /home/nathan/env/bin/python\r\nAfter readlink: /home/nathan/.pyenv/versions/3.9.7/bin/python\r\n\r\nIter 2 p: /home/nathan/.pyenv/versions/3.9.7/bin/python\r\nAfter readlink: python3.9   # Here the relative link wasn't handled, this was a reference to the .pyenv dir but now it will reference the current directory causing the loop\r\n\r\nIter 3 p: python3.9 # Will reference current dir\r\nAfter: python\r\n\r\nIter 4 p: python\r\nAfter: /home/nathan/.pyenv/versions/3.9.7/bin/python\r\n\r\nloop steps 2-4 forever\r\n\r\n```\r\n\r\nOutside of the bin folder it works but not correctly\r\n```\r\nIter 1 p: /home/nathan/env/bin/python\r\nAfter: /home/nathan/.pyenv/versions/3.9.7/bin/python\r\nResolve: /home/nathan/.pyenv/versions/3.9.7/bin/python3.9\r\n\r\nBefore: /home/nathan/.pyenv/versions/3.9.7/bin/python\r\nAfter: python3.9  # It will pass the is_symlink check but only because it is not looking at the current directory and the file doesn't exist.\r\nResolve: /home/nathan/python3.9 # appends a bad path but starts up\r\n```\r\n\r\nEdit: Fix link\r\n\r\n\r\n", "commits": [{"node_id": "C_kwDOGORuTdoAKDI0MmQ3YjY3ZmIwNWY0NmU2OTk0OTBkM2JmNTNlOTg5MDA0NGE1NDM", "commit_message": "Resolve symlinks and store as p to avoid infinite loop. Fixes #13177", "commit_timestamp": "2021-10-15T20:18:42Z", "files": ["IPython/core/interactiveshell.py"]}], "labels": [], "created_at": "2021-10-05T21:36:14Z", "closed_at": "2022-03-30T16:45:19Z", "method": ["regex"]}
{"issue_number": 13124, "title": "Improper path comparison of virtualenv directories", "body": "Minor, non-breaking issue found during review of #13094.\r\n\r\nIf path of the active virtualenv is a substring of another virtualenv, IPython started from the second one will not fire up any warning.\r\n\r\nExample:\r\n\r\n```\r\nvirtualenv aaa\r\nvirtualenv aaaa\r\n. aaaa/bin/activate\r\npython -m pip install ipython\r\n. aaa/bin/activate\r\naaaa/bin/ipython\r\n```\r\n\r\nExpected behavior after executing `aaaa/bin/ipython`: the following warning message is printed:\r\n\r\n```\r\n/home/mrmino/r/ipython/AAA/lib/python3.9/site-packages/IPython/core/interactiveshell.py:958: UserWarning: Attempting to work in a virtualenv. If you encounter problems, please install IPython inside the virtualenv\r\n.\r\n```\r\n\r\nIt is not shown on `master` nor `7.x`. The root cause is the following condition in `IPython.core.interactiveshell`:\r\n\r\nhttps://github.com/ipython/ipython/blob/3e2c48a0aaf251b06acbf717b462bc4e7fec8cd6/IPython/core/interactiveshell.py#L936-L938\r\n\r\nPrefix-wise check of strings with `in` is of course not adequate here. It also covers up the logic from `pathlib.Path` related to case sensitivity. Removing `fspath` from this code and using proper parent relationships from `pathlib.Path` to perform these checks would alleviate the need to use `sys.platform` branches in this method.\r\n", "commits": [{"node_id": "MDY6Q29tbWl0MzAzMDA2NjkzOjk0MWRhNDBhYjI5Mzg5ZDcwZjZlZmM1NTU2ZDQ0MGE3ZTg3MTYwMzg=", "commit_message": "Use pathlib parent relationships to compare virtualenv directories\n\nFix #13124", "commit_timestamp": "2021-09-17T17:12:55Z", "files": ["IPython/core/interactiveshell.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjcxZTZlZTJmMDY3NmJkMDhjY2E0MDUwOTk2OGE3OWQwMDUzNjQ2YTE=", "commit_message": "Merge pull request #13140 from MrMino/Mithil467-master\n\nUse pathlib parent relationships to compare virtualenv directories", "commit_timestamp": "2021-09-20T22:25:52Z", "files": ["IPython/core/interactiveshell.py"]}, {"node_id": "C_kwDOCAHLrNoAKGI5Y2EzNTFiOWQ1OTM2MmJjOTBhMGQwOGJhZTUxMTRhMmY0YzQxMmM", "commit_message": "Backport PR #13140: Use pathlib parent relationships to compare virtualenv directories", "commit_timestamp": "2021-09-21T23:26:33Z", "files": ["IPython/core/interactiveshell.py"]}, {"node_id": "C_kwDOAAoMVtoAKGU2MDAzNGJmMzZjZDc3ZjY1OWNkYTQ4YmI4NDA5ZTdlNTNkMzFjOTc", "commit_message": "Merge pull request #13150 from meeseeksmachine/auto-backport-of-pr-13140-on-7.x\n\nBackport PR #13140 on branch 7.x (Use pathlib parent relationships to compare virtualenv directories)", "commit_timestamp": "2021-09-21T23:43:05Z", "files": ["IPython/core/interactiveshell.py"]}], "labels": ["bug", "good first issue", "core"], "created_at": "2021-09-08T00:14:15Z", "closed_at": "2021-09-20T22:25:52Z", "linked_pr_number": [13124], "method": ["label"]}
{"issue_number": 13084, "title": "Windows %pip magic broken for 7.26 release due to shlex.quote pathing issue", "body": "<!-- This is the repository for IPython command line, if you can try to make sure this question/bug/feature belong here and not on one of the Jupyter repositories. \r\n\r\nIf it's a generic Python/Jupyter question, try other forums or discourse.jupyter.org.\r\n\r\nIf you are unsure, it's ok to post here, though, there are few maintainer so you might not get a fast response. \r\n\r\n-->\r\n\r\nHi Team,\r\n\r\nOS: Windows 10 Pro (build 19041.1110)\r\nPython: 3.9\r\nIPython: 7.26\r\n\r\nI found working with PyCharm and demonstrating use of Notebooks on Windows that `%pip install` stopped working this week in new environments and complaining about pathing, the error:\r\n\r\n```\r\nThe filename, directory name, or volume label syntax is incorrect.\r\n```\r\n\r\nThe use of `%conda` seemed to work find for conda environments, it was just pip that was failing.\r\n\r\nWhen a new project is created in PyCharm is pulls the latest version of `ipython` for use with Jupyter. Downgrading to 7.25 the functionality of `%pip install` is restored again.\r\n\r\nLooking at the release and related pull requests I found this pathing issues for Mac.\r\n\r\nhttps://github.com/ipython/ipython/pull/13052\r\n\r\nThe path to my virtual env when testing was: `C:\\projects\\Demos\\pycharmNotebook\\venv\\`\r\n\r\nI believe this is an issue with using single quotes for commands in Windows which causes problems and has differences to that of Unix/Mac/Linux systems.\r\n\r\nFor example, if I have the following notebook running 7.26\r\n```\r\n#%%\r\nimport shlex\r\nimport sys\r\nimport os\r\nwith_quote = shlex.quote(sys.executable)\r\nwithout_quote = sys.executable\r\nfull_call_with_quote = \" \".join([with_quote,\"-m\",\"pip\",\"install servicestack\"])\r\nfull_call_without_quote = ' '.join([without_quote,'-m','pip','install servicestack'])\r\nprint(full_call_without_quote)\r\nprint(full_call_with_quote)\r\nos.system(full_call_without_quote)\r\nos.system(full_call_with_quote)\r\n#%%\r\n```\r\n\r\nThe output of the print statements is:\r\n```\r\nC:\\projects\\Demos\\pycharmNotebook\\venv\\Scripts\\python.exe -m pip install servicestack\r\n'C:\\projects\\Demos\\pycharmNotebook\\venv\\Scripts\\python.exe' -m pip install servicestack\r\n```\r\nAnd the output from the `os.system` calls is successful for the first, but fails with `The filename, directory name, or volume label syntax is incorrect.` for the second which is the same implementation changed in 7.26. \r\n\r\nUnfortunately it seems the fix for Mac paths with spaces has broken all paths on Windows.\r\n\r\nI believe double quotes `\"` works correctly on both but I don't have a Mac to easily accessible to test on. Windows WSL running Ubuntu 20.04 works with double quotes, but again I'm not 100% sure on the implications for out of the ordinary pathing.\r\n\r\nTo anyone experiencing this issue on Windows, downgrade to 7.25 resolves the issue for me.\r\n", "commits": [{"node_id": "MDY6Q29tbWl0Mzg1MDkzMzE3OmE0NDcxOGJkYjE5NDY5YmVlMjY3NGVmOGEwMTM1M2I5NzU1NGIwMjU=", "commit_message": "Fix for https://github.com/ipython/ipython/issues/13084", "commit_timestamp": "2021-08-15T22:14:56Z", "files": ["IPython/core/magics/packaging.py"]}, {"node_id": "MDY6Q29tbWl0Mzg1MDkzMzE3Ojg5YjM3NjZjNjc3ODFlZDFhYjA3ZTk1OWQ5MDVjNzlkM2E0MTI3MjE=", "commit_message": "Revert \"Fix for https://github.com/ipython/ipython/issues/13084\"\n\nThis reverts commit a44718bdb19469bee2674ef8a01353b97554b025.", "commit_timestamp": "2021-08-17T22:37:49Z", "files": ["IPython/core/magics/packaging.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4Ojk2NjE3YzYxZGYzZWRiYTVmNzIzYzdhMTU0ZjVmNThhYmY1MTNjN2Y=", "commit_message": "Merge pull request #13093 from madbird1304/madbird1304/issue#13084-fix\n\nFix #13084", "commit_timestamp": "2021-08-20T21:59:42Z", "files": ["IPython/core/magics/packaging.py"]}, {"node_id": "MDY6Q29tbWl0MTM0MzM1NDA0OjNiZjUyYjlkYjZkZWM4YWNmODM1NDE2MzEzNjc1NGJlMTQxNzVhZDM=", "commit_message": "Backport PR #13093: Fix #13084", "commit_timestamp": "2021-08-20T21:59:52Z", "files": ["IPython/core/magics/packaging.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjFhY2UzNTYyYzcyMzg0OTY5MzUzNjA4MDQ1Njk4ZjhhNjM0MTBmNWU=", "commit_message": "Merge pull request #13102 from meeseeksmachine/auto-backport-of-pr-13093-on-7.x\n\nBackport PR #13093 on branch 7.x (Fix #13084)", "commit_timestamp": "2021-08-24T14:50:26Z", "files": ["IPython/core/magics/packaging.py"]}], "labels": ["bug", "regression", "magics"], "created_at": "2021-08-06T00:38:09Z", "closed_at": "2021-08-20T21:59:43Z", "method": ["label", "regex"]}
{"issue_number": 13079, "title": "Breaking change in Python 3.10rc1", "body": "Hello.\r\n\r\nThere seems to be one more incompatibility in Python 3.10rc1. The problem is in this function: https://github.com/ipython/ipython/blob/770024afeaa5bd66910cf89b9667c4967b65004e/IPython/core/oinspect.py#L287-L319\r\n\r\nThe call of `inspect.getabsfile(obj.__class__)` on line 313 raises an OSError instead of the expected TypeError. The change in the CPython is here: https://github.com/python/cpython/pull/27495/files\r\n\r\nSmall reproducer derived from `test_debugger.test_ipdb_magics` is:\r\n```\r\nPython 3.10.0rc1 (default, Aug  3 2021, 00:00:00) [GCC 11.2.1 20210728 (Red Hat 11.2.1-1)] on linux\r\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n>>> from IPython.core import debugger\r\n>>> class ExampleClass(object):\r\n...     \"\"\"Docstring for ExampleClass.\"\"\"\r\n...     def __init__(self):\r\n...         \"\"\"Docstring for ExampleClass.__init__\"\"\"\r\n...         pass\r\n...     def __str__(self):\r\n...         return \"ExampleClass()\"\r\n... \r\n>>> a = ExampleClass()\r\n>>> debugger.Pdb().set_trace()\r\n--Return--\r\nNone\r\n> <stdin>(1)<module>()\r\n\r\nipdb> pinfo a\r\nTraceback (most recent call last):\r\n  File \"/home/lbalhar/Software/ipython/IPython/core/oinspect.py\", line 307, in find_file\r\n    fname = inspect.getabsfile(obj)\r\n  File \"/usr/lib64/python3.10/inspect.py\", line 844, in getabsfile\r\n    _filename = getsourcefile(object) or getfile(object)\r\n  File \"/usr/lib64/python3.10/inspect.py\", line 817, in getsourcefile\r\n    filename = getfile(object)\r\n  File \"/usr/lib64/python3.10/inspect.py\", line 797, in getfile\r\n    raise TypeError('module, class, method, function, traceback, frame, or '\r\nTypeError: module, class, method, function, traceback, frame, or code object was expected, got ExampleClass\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/usr/lib64/python3.10/bdb.py\", line 94, in trace_dispatch\r\n    return self.dispatch_return(frame, arg)\r\n  File \"/usr/lib64/python3.10/bdb.py\", line 153, in dispatch_return\r\n    self.user_return(frame, arg)\r\n  File \"/usr/lib64/python3.10/pdb.py\", line 294, in user_return\r\n    self.interaction(frame, None)\r\n  File \"/home/lbalhar/Software/ipython/IPython/core/debugger.py\", line 356, in interaction\r\n    OldPdb.interaction(self, frame, traceback)\r\n  File \"/usr/lib64/python3.10/pdb.py\", line 357, in interaction\r\n    self._cmdloop()\r\n  File \"/usr/lib64/python3.10/pdb.py\", line 322, in _cmdloop\r\n    self.cmdloop()\r\n  File \"/usr/lib64/python3.10/cmd.py\", line 138, in cmdloop\r\n    stop = self.onecmd(line)\r\n  File \"/usr/lib64/python3.10/pdb.py\", line 422, in onecmd\r\n    return cmd.Cmd.onecmd(self, line)\r\n  File \"/usr/lib64/python3.10/cmd.py\", line 217, in onecmd\r\n    return func(arg)\r\n  File \"/home/lbalhar/Software/ipython/IPython/core/debugger.py\", line 778, in do_pinfo\r\n    self.shell.find_line_magic(\"pinfo\")(arg, namespaces=namespaces)\r\n  File \"/home/lbalhar/.virtualenvs/ipython/lib/python3.10/site-packages/decorator.py\", line 232, in fun\r\n    return caller(func, *(extras + args), **kw)\r\n  File \"/home/lbalhar/Software/ipython/IPython/core/magic.py\", line 187, in <lambda>\r\n    call = lambda f, *a, **k: f(*a, **k)\r\n  File \"/home/lbalhar/Software/ipython/IPython/core/magics/namespace.py\", line 58, in pinfo\r\n    self.shell._inspect('pinfo', oname, detail_level=detail_level,\r\n  File \"/home/lbalhar/Software/ipython/IPython/core/interactiveshell.py\", line 1779, in _inspect\r\n    pmethod(\r\n  File \"/home/lbalhar/Software/ipython/IPython/core/oinspect.py\", line 680, in pinfo\r\n    info = self._get_info(obj, oname, formatter, info, detail_level)\r\n  File \"/home/lbalhar/Software/ipython/IPython/core/oinspect.py\", line 586, in _get_info\r\n    info = self._info(obj, oname=oname, info=info, detail_level=detail_level)\r\n  File \"/home/lbalhar/Software/ipython/IPython/core/oinspect.py\", line 785, in _info\r\n    fname = find_file(obj)\r\n  File \"/home/lbalhar/Software/ipython/IPython/core/oinspect.py\", line 313, in find_file\r\n    fname = inspect.getabsfile(obj.__class__)\r\n  File \"/usr/lib64/python3.10/inspect.py\", line 844, in getabsfile\r\n    _filename = getsourcefile(object) or getfile(object)\r\n  File \"/usr/lib64/python3.10/inspect.py\", line 817, in getsourcefile\r\n    filename = getfile(object)\r\n  File \"/usr/lib64/python3.10/inspect.py\", line 785, in getfile\r\n    raise OSError('source code not available')\r\nOSError: source code not available\r\n```\r\n\r\nI can confirm that the reproducer does not raise the error with Python 3.10b4. An easy fix might be to expect also OSError from the mentioned function. This workaround seems to work for me so I'm gonna open a PR with it.", "commits": [{"node_id": "MDY6Q29tbWl0ODg5NzEyODU6ZjYwYTBkZWE2ODlmY2NjMjA2YmI0NzZkYzc2Njc0ZDNlYTQ5NTJkOQ==", "commit_message": "Inspect module now returns OSError for objects without source files\n\nFixes https://github.com/ipython/ipython/issues/13079", "commit_timestamp": "2021-08-04T11:38:28Z", "files": ["IPython/core/oinspect.py"]}, {"node_id": "C_kwDOAAoMVtoAKDY0YWYxYTIwZGVhZmMzYjc4NTBjYWY4ZTgxMzE3MDEwYmRjNmRkZWE", "commit_message": "Merge pull request #13282 from Kojoley/python-3.10\n\nPython 3.10 fixes", "commit_timestamp": "2021-11-15T21:21:32Z", "files": ["IPython/core/oinspect.py", "IPython/core/tests/test_completer.py", "IPython/core/tests/test_magic_arguments.py", "IPython/lib/tests/test_pretty.py"]}, {"node_id": "C_kwDOGezPadoAKDY0MTA2MGRiMTA5NWJhNTMzMTI2ZmI1NDgyYWQ0YzhhMGFjOGI4MGI", "commit_message": "backport #13282", "commit_timestamp": "2021-12-20T18:31:28Z", "files": ["IPython/core/oinspect.py", "IPython/core/tests/test_completer.py", "IPython/core/tests/test_magic_arguments.py", "IPython/lib/tests/test_pretty.py"]}], "labels": ["bug", "core", "magics"], "created_at": "2021-08-04T11:37:55Z", "closed_at": "2021-11-15T21:21:32Z", "linked_pr_number": [13079], "method": ["label", "regex"]}
{"issue_number": 13020, "title": "accessing f_locals in debugger resets namespace", "body": "This is the pendant of https://github.com/deshaw/pyflyby/pull/144, see there for a longer explanation.\r\n\r\nWe do access `current_frame.f_locals` in a couple of place which reset the namespace changes.", "commits": [{"node_id": "MDY6Q29tbWl0MjM0NDA3MzoyNjc1NzRmYjFlY2MyMTNiZjI5MmFiNmJiNzk2MzgwNmU2MDMwNTMz", "commit_message": "Don't access current_frame f_locals\n\nThis should fix #13020\n\nThough it's a suttle enough bug that tests needs to be written.\nAnd we can't rely on doctests as they are not ran.", "commit_timestamp": "2021-06-15T14:11:26Z", "files": ["IPython/core/debugger.py"]}, {"node_id": "MDY6Q29tbWl0MjM0NDA3Mzo4YmQ4M2NlNDczNzJkMmY5MzcxNzY1NGFlYWQ0ODUwMWUxMjRkOTlk", "commit_message": "Don't access current_frame f_locals\n\nThis should fix #13020\n\nThough it's a suttle enough bug that tests needs to be written.\nAnd we can't rely on doctests as they are not ran.", "commit_timestamp": "2021-06-15T14:16:36Z", "files": ["IPython/core/debugger.py"]}], "labels": ["bug", "debugger"], "created_at": "2021-06-15T14:11:12Z", "closed_at": "2021-06-23T14:54:55Z", "method": ["label", "regex"]}
{"issue_number": 12977, "title": "%autocall doesn't handle integer parsing errors", "body": "# Steps to reproduce\r\n\r\nrun `%autocall random`\r\n\r\n# Expected result\r\n\r\n`ERROR:root:Valid modes: (0->Off, 1->Smart, 2->Full`\r\n\r\n# Observed result\r\n\r\n`ValueError` was raised due to parsing the argument `\"random\"` as an integer.\r\n\r\n# System info\r\n\r\nManjaro Linux, Python 3.9.1, IPython 7.22.0.", "commits": [{"node_id": "MDY6Q29tbWl0Mjk4OTgxNDI3OjAzNTNlY2VkMDBjNzhlMDNlMDg2MmQ3M2NhM2NmZjgzN2RlNGFmZTc=", "commit_message": "Fix for ipython/issues/12977\n\n    - Implemented a dictionary for modes and their description,\n      this helps in reducing hardcoding.\n    - Missing closing braces in the error message added.\n\n    TESTING\n    -------\n    Checked the output of `%autocall` with 0, 1, 2, foobar\n```\n\nIn [2]: %autocall 223\nERROR:root:Valid modes: (0->Off, 1->Smart, 2->Full)\n\nIn [3]: %autocall 2\nAutomatic calling is: Full\n\nIn [4]: %autocall foobar\nERROR:root:Valid modes: (0->Off, 1->Smart, 2->Full)\n\nIn [5]: %autocall [1234]\nERROR:root:Valid modes: (0->Off, 1->Smart, 2->Full)\n\nIn [6]: %autocall object\nERROR:root:Valid modes: (0->Off, 1->Smart, 2->Full)\n```", "commit_timestamp": "2021-06-05T07:51:11Z", "files": ["IPython/core/magics/auto.py"]}, {"node_id": "MDY6Q29tbWl0Mjk4OTgxNDI3OmJkNGI5MWVjOTA4OWE1MzIyYjc5ODg0ZDBmNzJiYTljNTY2ZDI4YWQ=", "commit_message": "Fix for ipython/issues/12977\n\n- Implemented a dictionary for modes and their description,\n  this helps in reducing hardcoding.\n- Missing closing braces in the error message added.\n\nTESTING\n-------\nChecked the output of `%autocall` with 0, 1, 2, foobar\n\n```\nIn [2]: %autocall 223\nERROR:root:Valid modes: (0->Off, 1->Smart, 2->Full)\n\nIn [3]: %autocall 2\nAutomatic calling is: Full\n\nIn [4]: %autocall foobar\nERROR:root:Valid modes: (0->Off, 1->Smart, 2->Full)\n\nIn [5]: %autocall [1234]\nERROR:root:Valid modes: (0->Off, 1->Smart, 2->Full)\n\nIn [6]: %autocall object\nERROR:root:Valid modes: (0->Off, 1->Smart, 2->Full)\n```", "commit_timestamp": "2021-06-05T08:12:09Z", "files": ["IPython/core/magics/auto.py"]}], "labels": ["good first issue", "magics"], "created_at": "2021-05-13T12:02:07Z", "closed_at": "2021-06-19T17:17:45Z", "method": ["regex"]}
{"issue_number": 12975, "title": "`async with` doesn't allow newlines", "body": "When writing a `with` statement, pressing enter goes onto a new line, rather than immediately running the code:\r\n```py\r\nIn [26]: with example:\r\n    ...:     do_1()[enter]\r\n    ...:     [<-pointer goes here]\r\n```\r\nHowever, when using `async with`, this does not apply to any lines except for the first after the colon:\r\n```py\r\nIn [26]: async with example:\r\n    ...:     do_1()[enter]\r\n[code is run]\r\n```\r\n\r\n(Tested in latest PyPI: `IPython.__version__ == \"7.23.1\"`)", "commits": [{"node_id": "MDY6Q29tbWl0Mzg1MDkzMzE3OjgzMDA0MWUzZjYwNjJiY2YzYWQ3MjRmZjU1MDEyZTg4Y2YxZjgzZTg=", "commit_message": "Fix [Issue#12975](https://github.com/ipython/ipython/issues/12975)\n\nProblem:\n  - `check_complete()` was returning `'invalid'` state for async code\nFix:\n  - wrap async code with `async def` in case of `SyntaxError`", "commit_timestamp": "2021-08-15T13:29:01Z", "files": ["IPython/core/inputtransformer2.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjY0NjMxYzU4MGFhNzhmY2IxNTMyNWVjZDI5ZGY5NDYxNDc3MmY4ZGQ=", "commit_message": "Merge pull request #13090 from madbird1304/madbird1304/issue#12975\n\nFix: `async with` doesn't allow newlines (ipython/ipython/issues/12975)", "commit_timestamp": "2021-09-06T17:14:54Z", "files": ["IPython/core/inputtransformer2.py"]}, {"node_id": "MDY6Q29tbWl0MTM0MzM1NDA0OmQzYWE4NDBiOTYzNzFiODI0MjFiODc0YWY4Y2Y2NzY0MzdhYTJjMmY=", "commit_message": "Backport PR #13090: Fix: `async with` doesn't allow newlines (ipython/ipython/issues/12975)", "commit_timestamp": "2021-09-06T17:15:07Z", "files": ["IPython/core/inputtransformer2.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjA2ZTIxZTgzYzc2YjM5YzhiOWVhNzEyOWZlMjBhNmMxZDlmODY0YTU=", "commit_message": "Merge pull request #13120 from meeseeksmachine/auto-backport-of-pr-13090-on-7.x\n\nBackport PR #13090 on branch 7.x (Fix: `async with` doesn't allow newlines (ipython/ipython/issues/12975))", "commit_timestamp": "2021-09-06T20:45:29Z", "files": ["IPython/core/inputtransformer2.py"]}, {"node_id": "C_kwDOACPEidoAKGE5MzY4MmMyNGJiOTIwMjhmMDY5NmE3OGRhYWQ3YTM4MzlkNjJlYmI", "commit_message": "Fix and test for \"async with does not allow new lines\".\n\nUse the opportunity to add a test, and parametrise a few other, plus set\nthe correct stacklevel.\n\nCloses #12975", "commit_timestamp": "2022-01-10T08:28:10Z", "files": ["IPython/core/inputtransformer2.py", "IPython/core/tests/test_inputtransformer2.py"]}, {"node_id": "C_kwDOACPEidoAKDYwMjk3YjI3ZTNhYjNjZDFmM2VhNmYyZDE3ZGE5YTZkMjA1ZDFlYzk", "commit_message": "Fix and test for \"async with does not allow new lines\".\n\nUse the opportunity to add a test, and parametrise a few other, plus set\nthe correct stacklevel.\n\nCloses #12975", "commit_timestamp": "2022-01-10T08:29:33Z", "files": ["IPython/core/inputtransformer2.py", "IPython/core/tests/test_inputtransformer2.py"]}, {"node_id": "C_kwDOACPEidoAKGNiNjU2M2RjZDg1NzgzZWEwYTY4N2ZiZTIyN2M0NzgyYThhN2NhZGY", "commit_message": "Fix and test for \"async with does not allow new lines\".\n\nUse the opportunity to add a test, and parametrise a few other, plus set\nthe correct stacklevel.\n\nCloses #12975", "commit_timestamp": "2022-01-10T20:37:35Z", "files": ["IPython/core/inputtransformer2.py", "IPython/core/tests/test_inputtransformer2.py"]}, {"node_id": "C_kwDOAAoMVtoAKDZlZGMwNWE2ZTUyZTNjOTBiODEyMjVkMWRkMzMwNWU4NTE1MzNhMmQ", "commit_message": "Merge pull request #13436 from Carreau/fix-async-with\n\nFix and test for \"async with does not allow new lines\".", "commit_timestamp": "2022-01-17T17:01:42Z", "files": ["IPython/core/inputtransformer2.py", "IPython/core/tests/test_inputtransformer2.py"]}], "labels": ["bug", "help wanted"], "created_at": "2021-05-12T16:37:54Z", "closed_at": "2022-01-17T17:01:42Z", "linked_pr_number": [12975], "method": ["label"]}
{"issue_number": 12913, "title": "Make ipdb interact run an embedded IPython shell instead of code.interact()", "body": "The `interact` in (i)pdb runs `code.interact()`:\r\nhttps://docs.python.org/3/library/pdb.html#pdbcommand-interact\r\n\r\nIt would be great if it would instead run an IPython shell with current frame's namespace instead.\r\n\r\n```\r\nPython 3.6.13 (default, Feb 16 2021, 00:00:00) \r\nType 'copyright', 'credits' or 'license' for more information\r\nIPython 7.16.1 -- An enhanced Interactive Python. Type '?' for help.\r\n\r\nIn [1]: %debug on                                                                                                                                                       \r\nNOTE: Enter 'c' at the ipdb>  prompt to continue execution.\r\n> <string>(1)<module>()\r\n\r\nipdb> interact                                                                                                                                                          \r\n*interactive*\r\nIn : \r\n```\r\n\r\nAFAIK something like this should do, but I'm not sure this handles all cases:\r\n```\r\nfrom IPython.terminal.embed import InteractiveShellEmbed\r\n\r\nclass _CustomTerminalPdb(TerminalPdb):\r\n    def do_interact(self, arg):\r\n        ipshell = InteractiveShellEmbed(banner1=\"*interactive*\", exit_msg=\"now exiting InteractiveConsole...\")\r\n        global_ns = self.curframe.f_globals\r\n        ipshell(module=sys.modules.get(global_ns['__name__'], None), local_ns=self.curframe_locals)\r\n```\r\n", "commits": [{"node_id": "MDY6Q29tbWl0MzU4NjU0NTI0OmNiZDQ3OTE0YzdmNDU3ZWViYTViMTJiZTkzMzJlYzUxNTQ1OGE5NjQ=", "commit_message": "Start embedded IPython shell for ipdb interact, #12913", "commit_timestamp": "2021-04-16T17:02:10Z", "files": ["IPython/terminal/debugger.py"]}, {"node_id": "MDY6Q29tbWl0MzU4NjU0NTI0OjExYzhmNGRkZWZjNTdlZTdhYjliZTVkZjE1ZDUyNDJjMzRjNTA4ZWE=", "commit_message": "Start embedded IPython shell for ipdb interact, #12913", "commit_timestamp": "2021-04-16T19:14:07Z", "files": ["IPython/terminal/debugger.py"]}, {"node_id": "MDY6Q29tbWl0MzU4NjU0NTI0OjFiYzFhYzUxOTMxMDIwZjE3ZjQ1NDJlNGY1Yjk2YzgzZjliMGQyYTM=", "commit_message": "Start embedded IPython shell for ipdb interact, #12913", "commit_timestamp": "2021-04-16T19:18:04Z", "files": ["IPython/terminal/debugger.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmY4MTEwNjc5MmVkYTJjYTg1MTIyMjJkNjExOGZjYTU2OTc5YzMxYmU=", "commit_message": "Merge pull request #12915 from iwanb/ipdb_interact\n\nStart embedded IPython shell for ipdb interact, #12913", "commit_timestamp": "2021-04-17T00:26:05Z", "files": ["IPython/terminal/debugger.py"]}], "labels": ["debugger"], "created_at": "2021-04-15T14:30:48Z", "closed_at": "2021-06-21T12:05:44Z", "method": ["label", "regex"]}
{"issue_number": 12781, "title": "7.x: Racy use of ultratb.getargs should be removed in Python 3", "body": "The 7.x branch of IPython has its own version of `inspect.getargs`, used during traceback extraction, called in the flow of `VerboseTB.structured_traceback`. Using the decorator `with_patch_inspect` we temporarily replace `inspect.findsource` and `inspect.getargs`, restoring them afterwards.\r\n\r\nReplacement is not safe in the multithreaded case. Multiple threads concurrently running `IPython.core.ultratb.AutoFormattedTB(mode=\"Verbose\").structured_traceback()` may race to the point `inspect.getargs` is incorrectly \"restored\" to `IPython.core.ultratb.getargs`.\r\n\r\nI assume with Python 2 it was not much of an issue (because IPython's `getargs` was merely augmented with the unmeged patch from http://bugs.python.org/issue14611).\r\nIn Python 3, it is an issue: `getargs` might access `co_code` (now a byte array) as a string, yielding an exception like:\r\n```\r\n...\r\n  File \"/usr/local/lib/python3.9/dist-packages/IPython/core/ultratb.py\", line 260, in getargs\r\n    op = ord(co.co_code[step])\r\nTypeError: ord() expected string of length 1, but int found\r\n```\r\n\r\nfor e.g such a code object:\r\n```\r\nIn [20]: x = (_ for _ in ())                                                                                                                                                                               \r\n\r\nIn [21]: inspect.getargs(x.gi_code) \r\n```\r\n\r\nAnd anyway - as far as I understand it, the addition in `getargs` is irrelevant in Python 3, because [tuple parameter unpacking has been removed](https://www.python.org/dev/peps/pep-3113/).\r\n\r\nWe have an application running `AutoFormattedTB(mode=\"Verbose\").structured_traceback()` from multiple threads, and this bug was observed a couple of times already. I have fixed it by replacing updating `IPython.core.ultratb.getargs = inspect.getargs` on startup.\r\n\r\nHere's a small & contrived reproducer. After running this snippet on a clean Docker `python:3.9` with IPython 7.19, it takes 2~ seconds to trigger.\r\n```\r\nimport threading\r\nimport IPython.core.ultratb\r\nimport time\r\nimport random\r\nimport inspect\r\n\r\ndef g(n):\r\n  # generate some stack depth\r\n  if n > 0:\r\n    g(n - 1)\r\n  raise Exception()\r\n\r\ndef f():\r\n  while True:\r\n    time.sleep(random.random() / 10)\r\n    try:\r\n      g(20)\r\n    except:\r\n      print(''.join(IPython.core.ultratb.AutoFormattedTB(mode=\"Verbose\").structured_traceback()))\r\n\r\n    if inspect.getargs is IPython.core.ultratb.getargs:\r\n      print(\"done!\")\r\n      break\r\n\r\n\r\nfor _ in range(100):\r\n  threading.Thread(target=f).start()\r\n\r\n# wait a bit...\r\n\r\n# replaced forever\r\nIn [3]: inspect.getargs\r\nOut[3]: <function IPython.core.ultratb.getargs(co)>\r\n\r\nIn [4]: inspect.getargs\r\nOut[4]: <function IPython.core.ultratb.getargs(co)>\r\n```\r\n\r\nThis is not relevant in master, as the problematic code has been removed by https://github.com/ipython/ipython/commit/221eb78a8e09cea6c1634ae71fdc8621a2fe05df. I'm not sure how near is the IPython 8.0 release (which will contain that fix) so I think we should solve this one in the 7.x branch.\r\n\r\nI can post a PR removing the old `getargs` (and possibly investigate if the remaining `findsource` also has a real function; if not, we can remove `with_patch_inspect` altogether).", "commits": [{"node_id": "MDY6Q29tbWl0MzM0MTU0NTI4OjU5NWI3NzU3MWMzOGY0OTdlOGU0NjkyNjA5NTI4YWJjYWU5YmVkNjI=", "commit_message": "Remove old ultratb.getargs\n\nSee #12781.", "commit_timestamp": "2021-01-29T13:21:40Z", "files": ["IPython/core/ultratb.py"]}], "labels": [], "created_at": "2021-01-22T16:42:21Z", "closed_at": "2021-02-01T19:13:02Z", "method": ["regex"]}
{"issue_number": 12705, "title": "Jedi completion crashed", "body": "Hi there,\r\n\r\nThe auto completion can't do the job for some of my modules.\r\nAfter setting following in my notebook, I got jedi crashed issue.\r\n\r\nwhat I did in my notebook:\r\n```\r\n%config Completer.use_jedi = True\r\n%config Completer.debug = True\r\n\r\n```\r\nThen i got this:\r\n```\r\nOops Jedi has crashed, please report a bug with the following:\r\n\"\"\"\r\nType __wrapped__ is neither a data type nor a request type\r\ns\"\"\"\r\n```\r\nSorry I can't get any more logs there.\r\n\r\n\r\npackages:\r\nipython                  7.16.1\r\njupyterlab               2.1.5\r\nnotebook                 6.0.3\r\njedi                     0.17.2\r\n\r\nPlease let me know if any more information is required.", "commits": [{"node_id": "MDY6Q29tbWl0MzI4NDk1OTM4OjE5NzM0N2Y0ZTViYmY1ZWMyNjhiMTRlMTAwYTFiYzAyYTIzM2VmNTc=", "commit_message": "downgrade jedi to prevent crashes and fix #12705", "commit_timestamp": "2021-01-24T19:23:20Z", "files": ["setup.py"]}], "labels": ["tab-completion"], "created_at": "2020-11-12T06:45:40Z", "closed_at": "2022-03-27T17:51:18Z", "method": ["regex"]}
{"issue_number": 12107, "title": "Magics.parse_options parse problem", "body": "\r\n\r\nHi,\r\nI think there is a bug with the `parse_options` method in the sense that it modifies the input statement which causes a bug in my application.\r\n\r\n## Repro\r\nIn jupyter notebook, when iterating over my dataframe, I tried to time the operation with the `timeit` magic:\r\n```\r\n> df = pd.DataFrame({'document': ['First doc.', 'Second doc.']})\r\n> %timeit _ = [s.count('. ') for s in df['document'].tolist()]\r\nKeyError: ' document'\r\n```\r\nNote the key that was transformed from `'document'` in my code to `' document'` at execution time.\r\n\r\nThis happens in the `parse_options` method https://github.com/ipython/ipython/blob/a6082c6ff799e4ec30ad24afbfc5f1550185934d/IPython/core/magics/execution.py#L1077 \r\n```\r\n        opts, stmt = self.parse_options(line,'n:r:tcp:qo',\r\n                                        posix=False, strict=False)\r\n```\r\nWhen dropping into pdb, I get the following:\r\n```\r\n> print(line)\r\n_ = [s.count('. ') for s in df['document'].tolist()]\r\n> print(stmt)\r\n_ = [s.count('. ') for s in df[' document'].tolist()]\r\n```\r\n\r\nand within `parse_options()`, I guess it happens when [splitting the line with `arg_split`](https://github.com/ipython/ipython/blob/a6082c6ff799e4ec30ad24afbfc5f1550185934d/IPython/core/magic.py#L627) and then [joining back with spaces](https://github.com/ipython/ipython/blob/a6082c6ff799e4ec30ad24afbfc5f1550185934d/IPython/core/magic.py#L652)\r\n```\r\n> argv = arg_split(arg_str, posix, strict)\r\n> print(arg_str)\r\n_ = [s.count('. ') for s in df['document'].tolist()]\r\n> print(argv)\r\n['_', '=', \"[s.count('.\", \"') for s in df['\", \"document'].tolist()]\"]\r\n```\r\nAnd then`args = ' '.join(args)` will join with an extra space.\r\n\r\nAlso changing my command from `_ = [s.count('. ') for s in df['document'].tolist()]` to `_ = [s for s in df['document'].tolist()]` removes the problem so there might be a problem with the `.count('. ')`.\r\n\r\n\r\n\r\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU4NTE4OmUwODUxOWIwNGRiZTJkOTZhNDQ4NDg0NjY0YTRlMzA2NWJjOTg4ZDQ=", "commit_message": "Merge pull request #12708 from adityausathe/12107_parse_opts\n\nIssue #12107 fix: additional spaces while parsing timeit-magic options", "commit_timestamp": "2021-04-17T00:47:54Z", "files": ["IPython/core/magic.py", "IPython/core/magics/execution.py", "IPython/core/tests/test_magic.py"]}], "labels": ["bug", "help wanted"], "created_at": "2020-01-31T10:52:26Z", "closed_at": "2021-06-24T22:12:06Z", "method": ["label", "regex"]}
{"issue_number": 11976, "title": "7.10 breaking tests with exception  in publish", "body": "The new 7.10 release is breaking Bokeh unit tests with an exception coming from within ipython:\r\n```\r\n\r\nself = <IPython.core.displaypub.DisplayPublisher object at 0x11883d7f0>\r\ndata = {'text/html': '\\n    <div class=\"bk-root\">\\n        <a href=\"https://bokeh.org\" target=\"_blank\" class=\"bk-logo bk-logo...version \\'1.0\\' from Bokeh development version \\'1.0-1-abc\\'. This configuration is unsupported and may not work!</p>'}\r\nmetadata = None, source = None, transient = None, update = False, kwargs = {}\r\nhandlers = {}\r\n\r\n<< omitted >>\r\n\r\n        handlers = {}\r\n        if self.shell is not None:\r\n>           handlers = self.shell.mime_renderers\r\nE           AttributeError: 'InteractiveShell' object has no attribute 'mime_renderers'\r\n\r\n../miniconda/envs/testenv/lib/python3.6/site-packages/IPython/core/displaypub.py:108: AttributeError\r\n```\r\n\r\nIs this an intentional change (documented anwhere?) or a regression/bug?\r\n\r\ncc @Carreau ", "commits": [{"node_id": "MDY6Q29tbWl0MjM0NDA3Mzo4NTg0ZDU5MWZmMjU4NmI1NzA5YjM4ODczZjM3YjFkNGRkZDY4YmMy", "commit_message": "Handle case where the shell does not have arbitrary mimerenderer handler.\n\nThat can be the case in test-suites; for example bokeh\n\nCloses #11976", "commit_timestamp": "2019-11-30T16:49:16Z", "files": ["IPython/core/displaypub.py"]}, {"node_id": "MDY6Q29tbWl0MjM0NDA3Mzo4NzY4MjEyZTJmMTBlYmZmZDAxMThkNzllZWJmY2M2ZjhkZWJiNmIy", "commit_message": "Handle case where the shell does not have arbitrary mimerenderer handler.\n\nThat can be the case in test-suites; for example bokeh\n\nCloses #11976", "commit_timestamp": "2019-11-30T16:50:46Z", "files": ["IPython/core/displaypub.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjViYWVhNjIxOTc1NDk5ZjEwZjQ1M2MxYmQ1YTgyMzY4YmMyMjk2NTg=", "commit_message": "Merge pull request #11978 from Carreau/fix-mime-bokeh\n\nHandle case where the shell does not have arbitrary mimerenderer handler", "commit_timestamp": "2019-12-01T17:12:51Z", "files": ["IPython/core/displaypub.py"]}], "labels": [], "created_at": "2019-11-29T19:10:23Z", "closed_at": "2019-12-01T17:12:52Z", "linked_pr_number": [11976], "method": ["regex"]}
{"issue_number": 11975, "title": "Incompatibility with prompt_toolkit v3.0.0", "body": "I noticed the following error today:\r\n\r\n```\r\n    def pt_init(self):\r\n        def get_prompt_tokens():\r\n            return [(Token.Prompt, self.prompt)]\r\n\r\n        if self._ptcomp is None:\r\n            compl = IPCompleter(shell=self.shell,\r\n                                        namespace={},\r\n                                        global_namespace={},\r\n                                        parent=self.shell,\r\n                                       )\r\n            self._ptcomp = IPythonPTCompleter(compl)\r\n\r\n        kb = KeyBindings()\r\n        supports_suspend = Condition(lambda: hasattr(signal, 'SIGTSTP'))\r\n        kb.add('c-z', filter=supports_suspend)(suspend_to_bg)\r\n\r\n        if self.shell.display_completions == 'readlinelike':\r\n            kb.add('tab', filter=(has_focus(DEFAULT_BUFFER)\r\n                                  & ~has_selection\r\n                                  & vi_insert_mode | emacs_insert_mode\r\n                                  & ~cursor_in_leading_ws\r\n                              ))(display_completions_like_readline)\r\n\r\n        self.pt_app = PromptSession(\r\n                            message=(lambda: PygmentsTokens(get_prompt_tokens())),\r\n                            editing_mode=getattr(EditingMode, self.shell.editing_mode.upper()),\r\n                            key_bindings=kb,\r\n                            history=self.shell.debugger_history,\r\n                            completer=self._ptcomp,\r\n                            enable_history_search=True,\r\n                            mouse_support=self.shell.mouse_support,\r\n                            complete_style=self.shell.pt_complete_style,\r\n                            style=self.shell.style,\r\n                            inputhook=self.shell.inputhook,\r\n>                           color_depth=self.shell.color_depth,\r\n        )\r\nE       TypeError: __init__() got an unexpected keyword argument 'inputhook'\r\n```\r\n`PromptSession` in `prompt_toolkit` v3 does not have an `inputhook` parameter - https://github.com/prompt-toolkit/python-prompt-toolkit/blob/4cbbf8b9db1cb11caa1d72f4200c5cbc48bfd384/prompt_toolkit/shortcuts/prompt.py#L340-L383", "commits": [{"node_id": "MDY6Q29tbWl0MjM0NDA3MzpmNTJjYTAxY2FkODQxODdhODdlZTAxNTk3Nzg4ODZiMzc2NGRiYjE4", "commit_message": "Add prompt toolkit 3 compatibility to ipdb\n\ncloses #11962\ncloses #11975", "commit_timestamp": "2019-11-30T17:02:27Z", "files": ["IPython/terminal/debugger.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmRhYTA2MGZhNTc2NDhkMTY3NGFiMmUwODk2NGY0YmZkZDgwZTM0OTY=", "commit_message": "Merge pull request #11979 from Carreau/ipdb-ptk\n\nAdd prompt toolkit 3 compatibility to ipdb", "commit_timestamp": "2019-12-01T17:12:18Z", "files": ["IPython/terminal/debugger.py"]}], "labels": [], "created_at": "2019-11-28T10:49:58Z", "closed_at": "2019-12-01T17:12:19Z", "linked_pr_number": [11975], "method": ["regex"]}
{"issue_number": 11962, "title": "TypeError: __init__() got an unexpected keyword argument 'inputhook'", "body": "I updated all my Python packages this morning and IPython doesn't work anymore since then. Error:\r\n```python\r\nTraceback (most recent call last):\r\n  File \"/home/nschloe/.local/bin/ipython\", line 8, in <module>\r\n    sys.exit(start_ipython())\r\n  File \"/home/nschloe/.local/lib/python3.7/site-packages/IPython/__init__.py\", line 125, in start_ipython\r\n    return launch_new_instance(argv=argv, **kwargs)\r\n  File \"/usr/lib/python3/dist-packages/traitlets/config/application.py\", line 663, in launch_instance\r\n    app.initialize(argv)\r\n  File \"</home/nschloe/.local/lib/python3.7/site-packages/decorator.py:decorator-gen-113>\", line 2, in initialize\r\n  File \"/usr/lib/python3/dist-packages/traitlets/config/application.py\", line 87, in catch_config_error\r\n    return method(app, *args, **kwargs)\r\n  File \"/home/nschloe/.local/lib/python3.7/site-packages/IPython/terminal/ipapp.py\", line 317, in initialize\r\n    self.init_shell()\r\n  File \"/home/nschloe/.local/lib/python3.7/site-packages/IPython/terminal/ipapp.py\", line 333, in init_shell\r\n    ipython_dir=self.ipython_dir, user_ns=self.user_ns)\r\n  File \"/usr/lib/python3/dist-packages/traitlets/config/configurable.py\", line 412, in instance\r\n    inst = cls(*args, **kwargs)\r\n  File \"/home/nschloe/.local/lib/python3.7/site-packages/IPython/terminal/interactiveshell.py\", line 464, in __init__\r\n    self.init_prompt_toolkit_cli()\r\n  File \"/home/nschloe/.local/lib/python3.7/site-packages/IPython/terminal/interactiveshell.py\", line 296, in init_prompt_toolkit_cli\r\n    **self._extra_prompt_options())\r\nTypeError: __init__() got an unexpected keyword argument 'inputhook'\r\n\r\nIf you suspect this is an IPython bug, please report it at:\r\n    https://github.com/ipython/ipython/issues\r\nor send an email to the mailing list at ipython-dev@python.org\r\n\r\nYou can print a more detailed traceback right now with \"%tb\", or use \"%debug\"\r\nto interactively debug it.\r\n\r\nExtra-detailed tracebacks for bug-reporting purposes can be enabled via:\r\n    c.Application.verbose_crash=True\r\n```", "commits": [{"node_id": "MDY6Q29tbWl0MjM0NDA3MzpmNTJjYTAxY2FkODQxODdhODdlZTAxNTk3Nzg4ODZiMzc2NGRiYjE4", "commit_message": "Add prompt toolkit 3 compatibility to ipdb\n\ncloses #11962\ncloses #11975", "commit_timestamp": "2019-11-30T17:02:27Z", "files": ["IPython/terminal/debugger.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmRhYTA2MGZhNTc2NDhkMTY3NGFiMmUwODk2NGY0YmZkZDgwZTM0OTY=", "commit_message": "Merge pull request #11979 from Carreau/ipdb-ptk\n\nAdd prompt toolkit 3 compatibility to ipdb", "commit_timestamp": "2019-12-01T17:12:18Z", "files": ["IPython/terminal/debugger.py"]}], "labels": [], "created_at": "2019-11-25T08:37:53Z", "closed_at": "2019-12-01T17:12:19Z", "linked_pr_number": [11962], "method": ["regex"]}
{"issue_number": 11931, "title": "magic with spaces in quotes fails", "body": "The magic argument parser doesn't seem to handle spaces in quotes very well. Trying to execute `%debug print(' ')`:\r\n\r\n```\r\nPython 3.7.4 (default, Sep  7 2019, 18:27:02) \r\nType 'copyright', 'credits' or 'license' for more information\r\nIPython 7.8.0 -- An enhanced Interactive Python. Type '?' for help.\r\n\r\nIn [1]: %debug print(' ')                                                                                                                                 \r\n---------------------------------------------------------------------------\r\nValueError                                Traceback (most recent call last)\r\n<ipython-input-1-e73341fe4191> in <module>\r\n----> 1 get_ipython().run_line_magic('debug', \"print(' ')\")\r\n\r\n/usr/local/lib/python3.7/site-packages/IPython/core/interactiveshell.py in run_line_magic(self, magic_name, line, _stack_depth)\r\n   2312                 kwargs['local_ns'] = sys._getframe(stack_depth).f_locals\r\n   2313             with self.builtin_trap:\r\n-> 2314                 result = fn(*args, **kwargs)\r\n   2315             return result\r\n   2316 \r\n\r\n</usr/local/lib/python3.7/site-packages/decorator.py:decorator-gen-57> in debug(self, line, cell)\r\n\r\n/usr/local/lib/python3.7/site-packages/IPython/core/magic.py in <lambda>(f, *a, **k)\r\n    185     # but it's overkill for just that one bit of state.\r\n    186     def magic_deco(arg):\r\n--> 187         call = lambda f, *a, **k: f(*a, **k)\r\n    188 \r\n    189         if callable(arg):\r\n\r\n/usr/local/lib/python3.7/site-packages/IPython/core/magics/execution.py in debug(self, line, cell)\r\n    464 \r\n    465         \"\"\"\r\n--> 466         args = magic_arguments.parse_argstring(self.debug, line)\r\n    467 \r\n    468         if not (args.breakpoint or args.statement or cell):\r\n\r\n/usr/local/lib/python3.7/site-packages/IPython/core/magic_arguments.py in parse_argstring(magic_func, argstring)\r\n    162     \"\"\" Parse the string of arguments for the given magic function.\r\n    163     \"\"\"\r\n--> 164     return magic_func.parser.parse_argstring(argstring)\r\n    165 \r\n    166 \r\n\r\n/usr/local/lib/python3.7/site-packages/IPython/core/magic_arguments.py in parse_argstring(self, argstring)\r\n    133         \"\"\" Split a string into an argument list and parse that argument list.\r\n    134         \"\"\"\r\n--> 135         argv = arg_split(argstring)\r\n    136         return self.parse_args(argv)\r\n    137 \r\n\r\n/usr/local/lib/python3.7/site-packages/IPython/utils/_process_common.py in arg_split(s, posix, strict)\r\n    200     while True:\r\n    201         try:\r\n--> 202             tokens.append(next(lex))\r\n    203         except StopIteration:\r\n    204             break\r\n\r\n/usr/local/Cellar/python/3.7.4_1/Frameworks/Python.framework/Versions/3.7/lib/python3.7/shlex.py in __next__(self)\r\n    293 \r\n    294     def __next__(self):\r\n--> 295         token = self.get_token()\r\n    296         if token == self.eof:\r\n    297             raise StopIteration\r\n\r\n/usr/local/Cellar/python/3.7.4_1/Frameworks/Python.framework/Versions/3.7/lib/python3.7/shlex.py in get_token(self)\r\n    103             return tok\r\n    104         # No pushback.  Get a token.\r\n--> 105         raw = self.read_token()\r\n    106         # Handle inclusions\r\n    107         if self.source is not None:\r\n\r\n/usr/local/Cellar/python/3.7.4_1/Frameworks/Python.framework/Versions/3.7/lib/python3.7/shlex.py in read_token(self)\r\n    185                         print(\"shlex: I see EOF in quotes state\")\r\n    186                     # XXX what error should be raised here?\r\n--> 187                     raise ValueError(\"No closing quotation\")\r\n    188                 if nextchar == self.state:\r\n    189                     if not self.posix:\r\n\r\nValueError: No closing quotation\r\n\r\nIn [2]:    \r\n```", "commits": [{"node_id": "MDY6Q29tbWl0MjI1MjA1MzQ0OjE1YjU3MWVkOTg4MmFlZTc1NjY2YWQzN2I0MDZjYzNlZDZkOWFhMzQ=", "commit_message": "Fix 11931 partially\n\nThis fixes #11931 if no arguments are given", "commit_timestamp": "2020-07-17T11:48:36Z", "files": ["IPython/core/magics/execution.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjM1NTQ3MDZiODNlMjBjZTM3NzFiMDdhNjQwMmVmODE4ZWRjODY1YmI=", "commit_message": "Merge pull request #12453 from impact27/patch-5", "commit_timestamp": "2020-07-18T20:34:58Z", "files": ["IPython/core/magics/execution.py", "IPython/core/tests/test_magic.py"]}, {"node_id": "MDY6Q29tbWl0MTM0MzM1NDA0OjQ4OWIyMDcxZjYxMmQ5MGI2N2FmZDBiNTk2MWQxNGFkOWZmMDdiMmI=", "commit_message": "Backport PR #12453: Allow spaces when using debug magic", "commit_timestamp": "2020-07-18T20:35:12Z", "files": ["IPython/core/magics/execution.py", "IPython/core/tests/test_magic.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjZjMmE4N2M4MDk4OGFjZGYzMWRiYTY5ZmRhMTRiY2U4NDY5Y2YzM2Q=", "commit_message": "Merge pull request #12454 from meeseeksmachine/auto-backport-of-pr-12453-on-7.x\n\nBackport PR #12453 on branch 7.x (Allow spaces when using debug magic)", "commit_timestamp": "2020-07-20T22:28:48Z", "files": ["IPython/core/magics/execution.py", "IPython/core/tests/test_magic.py"]}], "labels": [], "created_at": "2019-10-29T07:49:36Z", "closed_at": "2020-07-18T20:34:59Z", "linked_pr_number": [11931], "method": ["regex"]}
{"issue_number": 11835, "title": "Use of cfg variable in notebook collides with \"Exec cfg\" in core/magics/config.py ", "body": "I stumbled into this issue in a Notebook where I used the variable `cfg` for some other things and then couldn't activate Holoviews `bokeh extension` because it collided with `cfg` variable used [here](https://github.com/ipython/ipython/blob/master/IPython/core/magics/config.py#L152) in IPython. The error message was really misleading and it was quite challenging to identify my mistake.\r\n\r\nIt relates to the following [line](https://github.com/ipython/ipython/blob/master/IPython/core/magics/config.py#L152):\r\n\r\n```python\r\nexec(\"cfg.\"+line, locals(), self.shell.user_ns)\r\n```\r\n\r\nI am wondering if there's a better way to do this, or at least warn the user to not use `cfg` variable in their Notebooks. Or perhaps provide a better exception message?\r\n\r\nSteps to reproduce:  \r\n- Miniconda3 (Windows x64)\r\n- conda package manager 4.7.10\r\n- hvplot 0.4.0\r\n- ipython 7.6.1\r\n- holoviews 1.12.3\r\n\r\nCreate environment.yml:  \r\n```yml\r\nname: ipython_trap_env\r\nchannels:\r\n  - pyviz\r\n  - conda-forge\r\n  - defaults\r\ndependencies:\r\n  - python\r\n  - jupyterlab\r\n  - holoviews\r\n  - hvplot\r\n```\r\n\r\nCreate environment from yml:  \r\n```bash\r\nconda env create -f environment.yml\r\n```\r\n\r\nOpen Jupyter Lab, create a cell with the following:  \r\n```python\r\ncfg = \"TheIPythonTrap\"\r\n```\r\n\r\nNext cell:  \r\n```python\r\nimport holoviews as hv\r\nhv.extension('bokeh')\r\n```\r\n\r\nResults in:  \r\n```output\r\n\r\n---------------------------------------------------------------------------\r\nAttributeError                            Traceback (most recent call last)\r\n<ipython-input-35-9d42ad81c45a> in <module>\r\n      3 import holoviews as hv\r\n      4 from holoviews import dim, opts\r\n----> 5 hv.extension('bokeh')\r\n      6 #hv.notebook_extension('bokeh')\r\n\r\nC:\\tools\\miniconda3\\envs\\jupyter_env_test\\lib\\site-packages\\param\\parameterized.py in __new__(class_, *args, **params)\r\n   2809         inst = class_.instance()\r\n   2810         inst.param._set_name(class_.__name__)\r\n-> 2811         return inst.__call__(*args,**params)\r\n   2812 \r\n   2813     def __call__(self,*args,**kw):\r\n\r\nC:\\tools\\miniconda3\\envs\\jupyter_env_test\\lib\\site-packages\\holoviews\\ipython\\__init__.py in __call__(self, *args, **params)\r\n    145             completer.completions_sorting_key = self.completions_sorting_key\r\n    146         if not p.allow_jedi_completion:\r\n--> 147             ip.run_line_magic('config', 'IPCompleter.use_jedi = False')\r\n    148 \r\n    149         resources = self._get_resources(args, params)\r\n\r\nC:\\tools\\miniconda3\\envs\\jupyter_env_test\\lib\\site-packages\\IPython\\core\\interactiveshell.py in run_line_magic(self, magic_name, line, _stack_depth)\r\n   2311                 kwargs['local_ns'] = sys._getframe(stack_depth).f_locals\r\n   2312             with self.builtin_trap:\r\n-> 2313                 result = fn(*args, **kwargs)\r\n   2314             return result\r\n   2315 \r\n\r\n<C:\\tools\\miniconda3\\envs\\jupyter_env_test\\lib\\site-packages\\decorator.py:decorator-gen-49> in config(self, s)\r\n\r\nC:\\tools\\miniconda3\\envs\\jupyter_env_test\\lib\\site-packages\\IPython\\core\\magic.py in <lambda>(f, *a, **k)\r\n    185     # but it's overkill for just that one bit of state.\r\n    186     def magic_deco(arg):\r\n--> 187         call = lambda f, *a, **k: f(*a, **k)\r\n    188 \r\n    189         if callable(arg):\r\n\r\nC:\\tools\\miniconda3\\envs\\jupyter_env_test\\lib\\site-packages\\IPython\\core\\magics\\config.py in config(self, s)\r\n    150         # unquoted args to eval in user_ns\r\n    151         cfg = Config()\r\n--> 152         exec(\"cfg.\"+line, locals(), self.shell.user_ns)\r\n    153 \r\n    154         for configurable in configurables:\r\n\r\n<string> in <module>\r\n\r\nAttributeError: 'str' object has no attribute 'IPCompleter'\r\n```\r\n\r\n", "commits": [{"node_id": "MDY6Q29tbWl0MjQzNDYzNTg0OjAyM2U1YjVkM2JhM2QyZjA0ZmJiZGQxZjkxMWZmMmI3ZjExY2VmYmI=", "commit_message": "Fix locals collisions with shell variables\n\nFixes issues with namespace collisions, e.g. :\r\n```python\r\ncfg = 'trap'\r\n%config IPCompleter.use_jedi = False\r\n```\r\nCauses: `AttributeError: 'str' object has no attribute 'IPCompleter'`\r\n\r\nfixes https://github.com/ipython/ipython/issues/11835", "commit_timestamp": "2020-02-27T08:05:45Z", "files": ["IPython/core/magics/config.py"]}], "labels": [], "created_at": "2019-07-25T07:01:36Z", "closed_at": "2020-02-27T17:54:51Z", "method": ["regex"]}
{"issue_number": 11754, "title": "Arm failures in test_embed.test_nest_embed", "body": "I constantly get this error on arm (armv7hl and aarch64):\r\n\r\n```\r\n..E............\r\n======================================================================\r\nERROR: test that `IPython.embed()` is nestable\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/usr/lib/python3.7/site-packages/pexpect/expect.py\", line 111, in expect_loop\r\n    incoming = spawn.read_nonblocking(spawn.maxread, timeout)\r\n  File \"/usr/lib/python3.7/site-packages/pexpect/pty_spawn.py\", line 509, in read_nonblocking\r\n    raise TIMEOUT('Timeout exceeded.')\r\npexpect.exceptions.TIMEOUT: Timeout exceeded.\r\nDuring handling of the above exception, another exception occurred:\r\nTraceback (most recent call last):\r\n  File \"/usr/lib/python3.7/site-packages/nose/case.py\", line 197, in runTest\r\n    self.test(*self.arg)\r\n  File \"/builddir/build/BUILDROOT/ipython-7.5.0-1.fc31.noarch/usr/lib/python3.7/site-packages/IPython/testing/decorators.py\", line 212, in skipper_func\r\n    return f(*args, **kwargs)\r\n  File \"/builddir/build/BUILDROOT/ipython-7.5.0-1.fc31.noarch/usr/lib/python3.7/site-packages/IPython/terminal/tests/test_embed.py\", line 76, in test_nest_embed\r\n    child.expect(ipy_prompt)\r\n  File \"/usr/lib/python3.7/site-packages/pexpect/spawnbase.py\", line 341, in expect\r\n    timeout, searchwindowsize, async_)\r\n  File \"/usr/lib/python3.7/site-packages/pexpect/spawnbase.py\", line 369, in expect_list\r\n    return exp.expect_loop(timeout)\r\n  File \"/usr/lib/python3.7/site-packages/pexpect/expect.py\", line 119, in expect_loop\r\n    return self.timeout(e)\r\n  File \"/usr/lib/python3.7/site-packages/pexpect/expect.py\", line 82, in timeout\r\n    raise TIMEOUT(msg)\r\npexpect.exceptions.TIMEOUT: Timeout exceeded.\r\n<pexpect.pty_spawn.spawn object at 0xffffb067db70>\r\ncommand: /usr/bin/python3\r\nargs: ['/usr/bin/python3', '-m', 'IPython', '--colors=nocolor']\r\nbuffer (last 100 chars): b''\r\nafter: <class 'pexpect.exceptions.TIMEOUT'>\r\nmatch: None\r\nmatch_index: None\r\nexitstatus: None\r\nflag_eof: False\r\npid: 11509\r\nchild_fd: 10\r\nclosed: False\r\ntimeout: 5\r\ndelimiter: <class 'pexpect.exceptions.EOF'>\r\nlogfile: None\r\nlogfile_read: None\r\nlogfile_send: None\r\nmaxread: 2000\r\nignorecase: False\r\nsearchwindowsize: None\r\ndelaybeforesend: 0.05\r\ndelayafterclose: 0.1\r\ndelayafterterminate: 0.1\r\nsearcher: searcher_re:\r\n    0: re.compile(b']:')\r\n----------------------------------------------------------------------\r\nRan 15 tests in 65.198s\r\nFAILED (errors=1)\r\n```\r\n\r\nDoes it simply mean the timeout is too low for a slow arm builder and should be increased, or does it actually mean something is broken?\r\n\r\n(I'll investigate.)", "commits": [{"node_id": "MDY6Q29tbWl0MTA1NDY0NzkzOmU5ZTY2MzhlMDMxOTFiMmNhZDJiODE4YTA4NTk4Y2Q1MGM1ZWVhOTg=", "commit_message": "Allow setting a custom timeout in test_nest_embed\n\nAdd environment variable EMBED_TIMEOUT that can be used to override\nthe default timeout of 5 seconds.\nUseful on slow machines, such as Fedora armv7hl/aarch64 builders.\n\nFixes https://github.com/ipython/ipython/issues/11754", "commit_timestamp": "2019-05-28T16:58:04Z", "files": ["IPython/terminal/tests/test_embed.py"]}, {"node_id": "MDY6Q29tbWl0MTA1NDY0NzkzOmU4ZDhhNjBjMjFlY2M4OWUxYjQzMzFmNzUwNzY3MjRkNjhmZjBhZjc=", "commit_message": "Tests: Allow setting a custom timeout scale\n\nAdd environment variable IPYTHON_TESTING_TIMEOUT_SCALE that can\nbe used to scale all the timeouts in tests.\n\nUseful on slow machines, such as Fedora armv7hl/aarch64 builders.\n\nFixes https://github.com/ipython/ipython/issues/11754", "commit_timestamp": "2019-05-30T09:30:29Z", "files": ["IPython/terminal/tests/test_debug_magic.py", "IPython/terminal/tests/test_embed.py", "IPython/testing/__init__.py"]}, {"node_id": "MDY6Q29tbWl0MTUyOTAwOTEzOmVmZmJkOWZkNGIxYjNmNDA1OGRjMjE0NjQzMTM0ZTMyNzFmZDcxYWU=", "commit_message": "Tests: Allow setting a custom timeout scale\n\nAdd environment variable IPYTHON_TESTING_TIMEOUT_SCALE that can\nbe used to scale all the timeouts in tests.\n\nUseful on slow machines, such as Fedora armv7hl/aarch64 builders.\n\nFixes https://github.com/ipython/ipython/issues/11754", "commit_timestamp": "2019-06-01T21:34:55Z", "files": ["IPython/terminal/tests/test_debug_magic.py", "IPython/terminal/tests/test_embed.py", "IPython/testing/__init__.py"]}], "labels": [], "created_at": "2019-05-28T11:07:22Z", "closed_at": "2019-05-31T00:58:27Z", "method": ["regex"]}
{"issue_number": 11706, "title": "IPython crashes with UnicodeEncodeError on ascii terminal", "body": "Displaying a unicode character on an ascii terminal gives a UnicodeEncodeError, while it would be handy if it just shows a question mark or something.\r\n\r\nEntering a unicode character which would be displayed directly makes it crash.\r\n\r\nCase 1: displaying a unicode character: (\u00e9 = \\u00E9)\r\n```\r\nIn [3]: a = '\u00e9'  # looks like a = '??' on an ascii terminal\r\nIn [4]: a\r\nOut[4]: ---------------------------------------------------------------------------\r\nUnicodeEncodeError                        Traceback (most recent call last)\r\n<ipython-input-4-3f786850e387> in <module>\r\n----> 1 a\r\n\r\n~/.conda/envs/wrf/lib/python3.6/site-packages/IPython/core/displayhook.py in __call__(self, result)\r\n    259             self.fill_exec_result(result)\r\n    260             if format_dict:\r\n--> 261                 self.write_format_data(format_dict, md_dict)\r\n    262                 self.log_output(format_dict)\r\n    263             self.finish_displayhook()\r\n\r\n~/.conda/envs/wrf/lib/python3.6/site-packages/IPython/core/displayhook.py in write_format_data(self, format_dict, md_dict)\r\n    188                 result_repr = '\\n' + result_repr\r\n    189 \r\n--> 190         print(result_repr)\r\n    191 \r\n    192     def update_user_ns(self, result):\r\n\r\nUnicodeEncodeError: 'ascii' codec can't encode characters in position 1-2: ordinal not in range(128)\r\n```\r\nCase 2: direct display of unicode character:\r\n```\r\nIn [5]: '\u00e9'  # looks like '??' on ascii terminal\r\nOut[5]: Traceback (most recent call last):\r\n  File \"/home/danie010/.conda/envs/wrf/lib/python3.6/site-packages/IPython/core/interactiveshell.py\", line 3296, in run_code\r\n    exec(code_obj, self.user_global_ns, self.user_ns)\r\n  File \"<ipython-input-5-9b7611f0c6d4>\", line 1, in <module>\r\n    '\\xc3\\xa9'\r\n  File \"/home/danie010/.conda/envs/wrf/lib/python3.6/site-packages/IPython/core/displayhook.py\", line 261, in __call__\r\n    self.write_format_data(format_dict, md_dict)\r\n  File \"/home/danie010/.conda/envs/wrf/lib/python3.6/site-packages/IPython/core/displayhook.py\", line 190, in write_format_data\r\n    print(result_repr)\r\nUnicodeEncodeError: 'ascii' codec can't encode characters in position 1-2: ordinal not in range(128)\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/home/danie010/.conda/envs/wrf/lib/python3.6/site-packages/IPython/core/interactiveshell.py\", line 3220, in run_ast_nodes\r\n    if (yield from self.run_code(code, result)):\r\n  File \"/home/danie010/.conda/envs/wrf/lib/python3.6/site-packages/IPython/core/interactiveshell.py\", line 3313, in run_code\r\n    self.showtraceback(running_compiled_code=True)\r\n  File \"/home/danie010/.conda/envs/wrf/lib/python3.6/site-packages/IPython/core/interactiveshell.py\", line 2038, in showtraceback\r\n    self._showtraceback(etype, value, stb)\r\n  File \"/home/danie010/.conda/envs/wrf/lib/python3.6/site-packages/IPython/core/interactiveshell.py\", line 2056, in _showtraceback\r\n    print(self.InteractiveTB.stb2text(stb))\r\nUnicodeEncodeError: 'ascii' codec can't encode characters in position 276-277: ordinal not in range(128)\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/home/danie010/.conda/envs/wrf/lib/python3.6/site-packages/IPython/core/interactiveshell.py\", line 2874, in _run_cell\r\n    return runner(coro)\r\n  File \"/home/danie010/.conda/envs/wrf/lib/python3.6/site-packages/IPython/core/async_helpers.py\", line 67, in _pseudo_sync_runner\r\n    coro.send(None)\r\n  File \"/home/danie010/.conda/envs/wrf/lib/python3.6/site-packages/IPython/core/interactiveshell.py\", line 3049, in run_cell_async\r\n    interactivity=interactivity, compiler=compiler, result=result)\r\n  File \"/home/danie010/.conda/envs/wrf/lib/python3.6/site-packages/IPython/core/interactiveshell.py\", line 3239, in run_ast_nodes\r\n    self.showtraceback()\r\n  File \"/home/danie010/.conda/envs/wrf/lib/python3.6/site-packages/IPython/core/interactiveshell.py\", line 2038, in showtraceback\r\n    self._showtraceback(etype, value, stb)\r\n  File \"/home/danie010/.conda/envs/wrf/lib/python3.6/site-packages/IPython/core/interactiveshell.py\", line 2056, in _showtraceback\r\n    print(self.InteractiveTB.stb2text(stb))\r\nUnicodeEncodeError: 'ascii' codec can't encode characters in position 842-843: ordinal not in range(128)\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/home/danie010/.conda/envs/wrf/bin/ipython\", line 11, in <module>\r\n    sys.exit(start_ipython())\r\n  File \"/home/danie010/.conda/envs/wrf/lib/python3.6/site-packages/IPython/__init__.py\", line 125, in start_ipython\r\n    return launch_new_instance(argv=argv, **kwargs)\r\n  File \"/home/danie010/.conda/envs/wrf/lib/python3.6/site-packages/traitlets/config/application.py\", line 658, in launch_instance\r\n    app.start()\r\n  File \"/home/danie010/.conda/envs/wrf/lib/python3.6/site-packages/IPython/terminal/ipapp.py\", line 356, in start\r\n    self.shell.mainloop()\r\n  File \"/home/danie010/.conda/envs/wrf/lib/python3.6/site-packages/IPython/terminal/interactiveshell.py\", line 498, in mainloop\r\n    self.interact()\r\n  File \"/home/danie010/.conda/envs/wrf/lib/python3.6/site-packages/IPython/terminal/interactiveshell.py\", line 489, in interact\r\n    self.run_cell(code, store_history=True)\r\n  File \"/home/danie010/.conda/envs/wrf/lib/python3.6/site-packages/IPython/core/interactiveshell.py\", line 2848, in run_cell\r\n    raw_cell, store_history, silent, shell_futures)\r\n  File \"/home/danie010/.conda/envs/wrf/lib/python3.6/site-packages/IPython/core/interactiveshell.py\", line 2879, in _run_cell\r\n    self.showtraceback(running_compiled_code=True)\r\n  File \"/home/danie010/.conda/envs/wrf/lib/python3.6/site-packages/IPython/core/interactiveshell.py\", line 2038, in showtraceback\r\n    self._showtraceback(etype, value, stb)\r\n  File \"/home/danie010/.conda/envs/wrf/lib/python3.6/site-packages/IPython/core/interactiveshell.py\", line 2056, in _showtraceback\r\n    print(self.InteractiveTB.stb2text(stb))\r\nUnicodeEncodeError: 'ascii' codec can't encode characters in position 842-843: ordinal not in range(128)\r\n\r\nIf you suspect this is an IPython bug, please report it at:\r\n    https://github.com/ipython/ipython/issues\r\nor send an email to the mailing list at ipython-dev@python.org\r\n\r\nYou can print a more detailed traceback right now with \"%tb\", or use \"%debug\"\r\nto interactively debug it.\r\n\r\nExtra-detailed tracebacks for bug-reporting purposes can be enabled via:\r\n    %config Application.verbose_crash=True\r\n```\r\n\r\nThe character encoding of the terminal:\r\n```\r\npython -c \"import sys; print(sys.stdout.encoding)\"          \r\nANSI_X3.4-1968\r\n```\r\n\r\nsys_info:\r\n```\r\npython -c \"import IPython; print(IPython.sys_info())\"\r\n{'commit_hash': 'd774f565b',\r\n 'commit_source': 'installation',\r\n 'default_encoding': 'ANSI_X3.4-1968',\r\n 'ipython_path': '/nfs/home3/danie010/.conda/envs/wrf/lib/python3.6/site-packages/IPython',\r\n 'ipython_version': '7.4.0',\r\n 'os_name': 'posix',\r\n 'platform': 'Linux-3.10.0-957.10.1.el7.x86_64-x86_64-with-redhat-7.6-Maipo',\r\n 'sys_executable': '/home/danie010/.conda/envs/wrf/bin/python',\r\n 'sys_platform': 'linux',\r\n 'sys_version': '3.6.7 | packaged by conda-forge | (default, Feb 20 2019, '\r\n                '02:51:38) \\n'\r\n                '[GCC 7.3.0]'}\r\n```", "commits": [{"node_id": "MDY6Q29tbWl0NjU4NTE4OmRkNThjNTU1MDJkYmQzZjdiZjNkNmE3NTg4NzQ4MTc4Mjg1NmMyZGE=", "commit_message": "Merge pull request #11711 from pierstitus/unicodeerror\n\nFix UnicodeEncodeError and crash. Fixes #11706", "commit_timestamp": "2019-05-31T01:07:37Z", "files": ["IPython/core/displayhook.py"]}, {"node_id": "MDY6Q29tbWl0MTUyOTAwOTEzOmU0OGY5N2EwZGFkNjY1NWY4NmQ5ZjM5M2ExZDU1ZjU5M2RmYmE1YzE=", "commit_message": "Fix UnicodeEncodeError and crash. Fixes #11706", "commit_timestamp": "2019-06-01T21:34:54Z", "files": ["IPython/core/displayhook.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmRkNThjNTU1MDJkYmQzZjdiZjNkNmE3NTg4NzQ4MTc4Mjg1NmMyZGE=", "commit_message": "Merge pull request #11711 from pierstitus/unicodeerror\n\nFix UnicodeEncodeError and crash. Fixes #11706", "commit_timestamp": "2019-05-31T01:07:37Z", "files": ["IPython/core/displayhook.py"]}], "labels": [], "created_at": "2019-05-03T09:34:27Z", "closed_at": "2019-05-31T01:07:38Z", "linked_pr_number": [11706], "method": ["regex"]}
{"issue_number": 11603, "title": "BackgroundJobManager wrong job.num's are assigned after flush call", "body": "Hello, there is a problem with how `job.num` is calculated.\r\n\r\n### What I do:\r\nI try to run the following code\r\n```python\r\nfrom IPython.lib import backgroundjobs as bg\r\n\r\ndef forever():\r\n    while True:\r\n        pass\r\n    return 'Done'\r\n\r\ndef once():\r\n    return 'Done'\r\n\r\njm = bg.BackgroundJobManager()\r\njm.new(forever)\r\njm.new(once)\r\njm.new(once)\r\njm.new(forever)\r\njm.flush()\r\njm.new(forever)\r\njm.new(once)\r\njm.new(once)\r\njm.new(once)\r\njm.flush()\r\n```\r\n### What is wrong\r\nI got an exception when calling `jm.flush()` second time\r\n```\r\n---------------------------------------------------------------------------\r\nKeyError                                  Traceback (most recent call last)\r\n<ipython-input-35-a03db7172b42> in <module>\r\n     19 jm.new(once)\r\n     20 jm.new(once)\r\n---> 21 jm.flush()\r\n\r\n~/.virtualenvs/ipython3/lib/python3.7/site-packages/IPython/lib/backgroundjobs.py in flush(self)\r\n    320         alljobs = self.all\r\n    321         for job in self.completed+self.dead:\r\n--> 322             del(alljobs[job.num])\r\n    323 \r\n    324         # Now flush these lists completely\r\n\r\nKeyError: 4\r\n```\r\n\r\n### My guess\r\nIt is connected to the way job.num is calculated here: https://github.com/ipython/ipython/blob/master/IPython/lib/backgroundjobs.py#L190\r\n```python\r\n# when we call flush first time in the example above len(self.all) becomes 2 \r\njob.num = len(self.all)+1 if self.all else 0 \r\nself.running.append(job)\r\n # and now we count from 2 despite that we have running job with id=4 already\r\nself.all[job.num] = job \r\n```\r\n\r\nAlso, there is second bug in the calculation:\r\nwe could never create a job with `id=1` as it will be 0 if `self.all` is empty or 1 + 1 if there is one job in `self.all`\r\n\r\n### How to fix\r\nMy suggestion is to create new instance field `self._current_job_id = 0`, and increment it on every new job creation.\r\nWith that, we'll get a counter that will be tied to BackgroundJobManager instance only and not to the current jobs count\r\n\r\nIf this issue will be confirmed I probably will create a fix myself.", "commits": [{"node_id": "MDY6Q29tbWl0NjU4NTE4OjBlMDY4ZmY3ZDE5YjM3ZmM1NmYyM2NlZTI3NzQ1OTM2MzRkMzVmMDg=", "commit_message": "Fixes #11603\n\njob.num is now calculated independently of current job count and\nincrements throughout all jobs", "commit_timestamp": "2019-05-27T13:14:57Z", "files": ["IPython/lib/backgroundjobs.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4Ojc4ODg2YTkyNWNmOTYzYzY4YzE1YTM2ZjcwYTEwNGZiYzZiYWMwZmY=", "commit_message": "Merge pull request #11752 from gooverdian/fix_background_job_indexing\n\nFixes #11603", "commit_timestamp": "2019-05-28T01:45:02Z", "files": ["IPython/lib/backgroundjobs.py"]}, {"node_id": "MDY6Q29tbWl0MTUyOTAwOTEzOjMzM2RjZGFlMDAyMjA4MjE1Y2UzMzhlMWFjM2JkY2EwOWYyNTE1Mjk=", "commit_message": "Fixes #11603\n\njob.num is now calculated independently of current job count and\nincrements throughout all jobs", "commit_timestamp": "2019-06-01T21:34:55Z", "files": ["IPython/lib/backgroundjobs.py"]}], "labels": [], "created_at": "2019-02-12T18:50:03Z", "closed_at": "2019-05-28T01:45:15Z", "method": ["regex"]}
{"issue_number": 11590, "title": "IPython broken on 3.8-dev, due to changes to ast.Module", "body": "In [bpo-35766](https://bugs.python.org/issue35766), Guido merged the \"typed_ast\" code that mypy used to maintain back into main CPython parser. This means that starting in 3.8, the regular ast module will contain information on type comments and `type: ignore` comments.\r\n\r\nThe `type: ignore` comments are stored in a list on the `ast.Module` object. This list is now *mandatory*. That means that this code is broken:\r\n\r\nhttps://github.com/ipython/ipython/blob/512d47340c09d184e20811ca46aaa2f862bcbafe/IPython/core/interactiveshell.py#L3191-L3192\r\n\r\nSo is this:\r\n\r\nhttps://github.com/ipython/ipython/blob/512d47340c09d184e20811ca46aaa2f862bcbafe/IPython/core/interactiveshell.py#L3199-L3200\r\n\r\n[BTW, why does one of those say `'cell_name'` and the other says `cell_name`? Seems like one of those must be wrong... CC: @Carreau]\r\n\r\nWhen you create a `Module` like this and try to `compile` it, then you get:\r\n\r\n```\r\n  TypeError: required field \"type_ignores\" missing from Module\r\n```\r\n\r\nOn 3.8+, to create a `Module` object you have to instead write `ast.Module(nodelist, [])`.\r\n\r\nI filed a bug on python ([bpo-35894](https://bugs.python.org/issue35894)), and Guido responded that the details of the AST like this aren't considered stable API, so he considers this a bug for IPython to fix, not a regression on CPython. So, now I'm filing a bug here instead :-).\r\n\r\nThe full changes [are here](https://github.com/python/cpython/pull/11645/files), and [AFAICT this line](https://github.com/python/cpython/pull/11645/files#diff-4d06871e531085389da207d32d01a005R6) is the one that's breaking IPython.", "commits": [{"node_id": "MDY6Q29tbWl0MTI3ODA3MzkyOmM0MTMyN2NhOTk4OGI5MDRmNjlmM2IyZGRiNDgxZmQyYTRmNjcwM2M=", "commit_message": "Mark failing IPython multierror tests as xfail on 3.8\n\nUntil https://github.com/ipython/ipython/issues/11590 is fixed.", "commit_timestamp": "2019-02-05T05:41:30Z", "files": ["trio/_core/tests/test_multierror.py"]}, {"node_id": "MDY6Q29tbWl0MTI3ODA3MzkyOmE5YzkwYWFiN2Y2YWVkNzZmN2JhYWNhNDU2NzM3YmUyZjhlYmY0ODE=", "commit_message": "Mark failing IPython multierror tests as xfail on 3.8\n\nUntil https://github.com/ipython/ipython/issues/11590 is fixed.", "commit_timestamp": "2019-02-05T05:42:47Z", "files": ["trio/_core/tests/test_multierror.py"]}, {"node_id": "MDY6Q29tbWl0MTUzNTM3NzI0OmQwMjEwOGQxZmE3OWQxNGM4MzY1MjhmMDQzMThkNjNiNjMwNDgwZjE=", "commit_message": "adding fix for python 3.8\n\n    # https://bugs.python.org/issue35766\n    # https://bugs.python.org/issue35894\n    # https://github.com/ipython/ipython/issues/11590\n    # PY_38 requires type_ignores to be a list, other versions are not accepting a second argument", "commit_timestamp": "2019-12-16T14:00:34Z", "files": ["wolframclient/utils/externalevaluate.py", "wolframclient/utils/six.py"]}, {"node_id": "MDY6Q29tbWl0MTUzNTM3NzI0OjA4YjYyMzUzYzg3MzgyMjAzNDgzY2ZkMWVjMDYxZDQxN2NlNTAwZWQ=", "commit_message": "adding fix for python 3.8\n\n    # https://bugs.python.org/issue35766\n    # https://bugs.python.org/issue35894\n    # https://github.com/ipython/ipython/issues/11590\n    # PY_38 requires type_ignores to be a list, other versions are not accepting a second argument", "commit_timestamp": "2019-12-16T21:09:43Z", "files": ["wolframclient/utils/externalevaluate.py", "wolframclient/utils/six.py"]}], "labels": [], "created_at": "2019-02-04T07:05:21Z", "closed_at": "2019-02-18T21:38:56Z", "method": ["regex"]}
{"issue_number": 11558, "title": "autoreload fails with tensors", "body": "Reproducing the bug\r\n===============\r\n\r\nhola.py\r\n```\r\nimport torch\r\n\r\nclass Bhai:\r\n    three_ones = torch.ones(3)\r\n\r\n    pass\r\n```\r\n\r\ntest.ipynb\r\n```\r\nIn[1]:\r\n%load_ext autoreload\r\n%autoreload 2\r\n\r\nIn[2]:\r\nfrom hola import *\r\n\r\nIn[3]:\r\n# before executing this cell modify something minor (like adding a space) in `hola.py`\r\nprint(\"hello\")\r\n```\r\n\r\nBefore executing the third cell modify something minor (like adding a space) in `hola.py`. I get this error\r\n\r\n```\r\n[autoreload of hola failed: Traceback (most recent call last):\r\n  File \"/home/sanyam/miniconda3/lib/python3.6/site-packages/IPython/extensions/autoreload.py\", line 244, in check\r\n    superreload(m, reload, self.old_objects)\r\n  File \"/home/sanyam/miniconda3/lib/python3.6/site-packages/IPython/extensions/autoreload.py\", line 393, in superreload\r\n    update_generic(old_obj, new_obj)\r\n  File \"/home/sanyam/miniconda3/lib/python3.6/site-packages/IPython/extensions/autoreload.py\", line 330, in update_generic\r\n    update(a, b)\r\n  File \"/home/sanyam/miniconda3/lib/python3.6/site-packages/IPython/extensions/autoreload.py\", line 278, in update_class\r\n    if old_obj == new_obj:\r\nRuntimeError: bool value of Tensor with more than one value is ambiguous\r\n]\r\n\r\n```", "commits": [{"node_id": "MDY6Q29tbWl0MTY2NTExNDA4OmViNWI5ZGM3NDQ5MTM3YjA5NjlkZmZkODRjNDJlY2Y5MTI0NTdhNWM=", "commit_message": "In auto-reload check for truth value when updating class\n\nFixes #11558. \r\n\r\n\r\nThis prevents the extension from breaking down in cases where `==` does not return a boolean. For e.g. when dealing with tensors in numpy and pytorch.", "commit_timestamp": "2019-01-19T05:59:33Z", "files": ["IPython/extensions/autoreload.py"]}, {"node_id": "MDY6Q29tbWl0MTY2NTExNDA4OmNmY2Y1MTQ2ODYxZTUyMjgxOTFlYWM5NGY5OGI4MmVlNWYwNTI1ODA=", "commit_message": "autoreload: explicitly check for True when updating attributes. Fixes #11558", "commit_timestamp": "2019-01-19T19:16:06Z", "files": ["IPython/extensions/autoreload.py"]}, {"node_id": "MDY6Q29tbWl0MTUyOTAwOTEzOmU1NDIzYjQ4Mzk0YzhmNDRmYjY5NWRjOWUyOWEyZjhjYjE2NDY2MWM=", "commit_message": "autoreload: explicitly check for True when updating attributes. Fixes #11558", "commit_timestamp": "2019-04-28T16:40:54Z", "files": ["IPython/extensions/autoreload.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjIwYmJlMGM2MmQxZjc2ZGE5MDk4Y2IyYjA3YjU3NWM3YjZhNDA5NGY=", "commit_message": "Merge pull request #11568 from sanyam5/master\n\nautoreload: explicitly check for True when updating attributes", "commit_timestamp": "2019-01-24T00:06:22Z", "files": ["IPython/extensions/autoreload.py"]}], "labels": [], "created_at": "2019-01-16T05:33:47Z", "closed_at": "2019-01-24T00:06:23Z", "linked_pr_number": [11558], "method": ["regex"]}
{"issue_number": 11541, "title": "all_completions returns nothing (simple fix suggested)", "body": "The `Completer.all_completions` method, which emacs python.el and elpy mode use, is returning nothing defined in the current scope. For example:\r\n\r\n```\r\nIn [87]: xxx = 2\r\n\r\nIn [91]: get_ipython().Completer.all_completions('x')\r\nOut[91]: ['%xdel', '%xmode']\r\n\r\nIn [92]: get_ipython().Completer.all_completions('xx')\r\nOut[92]: []\r\n```\r\nInternally it's using jedi but discarding jedi completions. Now, `all_completions` calls the deprecated `complete` instead of `completions`. A simple change fixes both the usage of a deprecated method and a bug:\r\n\r\n```\r\nIn [127]: list(map(lambda c: c.text, get_ipython().Completer.completions('x', len('x'))))\r\nOut[127]: ['xxx', '%xdel', '%xmode']\r\n```\r\n\r\nWhy not redefining `all_completions` like that? At least the following is working for me inside an emacs inferior python session:\r\n\r\n```\r\nget_ipython().Completer.all_completions = lambda t: map(lambda c: c.text, get_ipython().Completer.completions(t, len(t)))\r\n```", "commits": [{"node_id": "MDY6Q29tbWl0MTUyOTAwOTEzOmEzZGY2NDViZTZiMTI0MjRhZjI1OGE4Yjk3MDE4NDU3NzRlOTdlMzY=", "commit_message": "Make all_completions use new completion code\n\nThis fixes a bug affecting emacs users introduced by 7.2.\n\nFixes https://github.com/ipython/ipython/issues/11541", "commit_timestamp": "2019-04-28T14:25:00Z", "files": ["IPython/core/completer.py"]}], "labels": [], "created_at": "2019-01-02T18:48:51Z", "closed_at": "2019-02-18T20:11:37Z", "method": ["regex"]}
{"issue_number": 11527, "title": "%clear doesn't work after %reset", "body": "**Problem:** Normally, when I use `%clear` on IPython it works perfectly, clears the screen, but when I use `%reset` to reset my IPython shell, and then I try to use `%clear` it says:\r\n\r\n> UsageError: Line magic function `%clear` not found.\r\n\r\nAlso, before using the `%reset` command, when I type `%` and press tab for auto completion, I can see `%clear` is one of the suggestions, but after the `%reset` command, `%clear` is not in the suggestions anymore..\r\n\r\n**System info:**\r\n\r\n```\r\n{'commit_hash': '<not found>',\r\n 'commit_source': '(none found)',\r\n 'default_encoding': 'UTF-8',\r\n 'ipython_path': '/usr/lib/python3.7/site-packages/IPython',\r\n 'ipython_version': '7.1.1',\r\n 'os_name': 'posix',\r\n 'platform': 'Linux-4.19.8-arch1-1-ARCH-x86_64-with-arch-Arch-Linux',\r\n 'sys_executable': '/bin/python',\r\n 'sys_platform': 'linux',\r\n 'sys_version': '3.7.1 (default, Oct 22 2018, 10:41:28) \\n[GCC 8.2.1 20180831]'}\r\n```\r\n\r\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU4NTE4OmU5ZjNiZTJmYmY0MjU5MjBlNzQ3ZWNmM2EzNGQ2ZGJiZDUxMWIzZDU=", "commit_message": "Merge pull request #11528 from jwidner/master\n\nFix #11527 initialize posix aliases after a %reset", "commit_timestamp": "2019-01-06T20:33:00Z", "files": ["IPython/core/interactiveshell.py", "IPython/core/tests/test_interactiveshell.py", "IPython/terminal/interactiveshell.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmU5ZjNiZTJmYmY0MjU5MjBlNzQ3ZWNmM2EzNGQ2ZGJiZDUxMWIzZDU=", "commit_message": "Merge pull request #11528 from jwidner/master\n\nFix #11527 initialize posix aliases after a %reset", "commit_timestamp": "2019-01-06T20:33:00Z", "files": ["IPython/core/interactiveshell.py", "IPython/core/tests/test_interactiveshell.py", "IPython/terminal/interactiveshell.py"]}], "labels": [], "created_at": "2018-12-11T06:07:46Z", "closed_at": "2019-01-06T20:33:01Z", "linked_pr_number": [11527], "method": ["regex"]}
{"issue_number": 11415, "title": "Capturing shell command output after indentation causes SyntaxError in IPython console.", "body": "To reproduce, type this in console:\r\n\r\n```python\r\ndef test():\r\n  for i in range(1):\r\n    print(i)\r\n  res =! ls\r\n```\r\n\r\nBut if something is put above the line, everything will seem to be fine.\r\n```python\r\ndef test():\r\n  for i in range(1):\r\n    print(i)\r\n  'just a separate line'\r\n  res =! ls\r\n```\r\nFind this in IPython 7.1.0.dev", "commits": [{"node_id": "MDY6Q29tbWl0MjM0NDA3MzowMGYyMGRlZTk4NjBmZTU0ZGIzZTRiMTJlMTk3MGM0N2VlM2QyMDg1", "commit_message": "Fix miss-capturing of assign statement after a dedent.\n\ncloses #11415\n\nThis fixes a bug where assign statement were miscaptured when occuring\nafter a dedent. This was due to the fact that :\n\n>>> '' in '({['\nTrue\n\nThat is to say the empty string is in any strings.\nAdd a couple of integration tests and unit tests as well, and also add a\nwarning to public function when not used properly, in particular, check\nthat lines passed to make_tokens_by_line do end with an endline marker\n(at least for the first line), otherwise the function does not behave\nproperly.", "commit_timestamp": "2018-10-20T17:48:24Z", "files": ["IPython/core/inputtransformer2.py", "IPython/core/tests/test_inputtransformer2.py"]}, {"node_id": "MDY6Q29tbWl0MjM0NDA3MzpkZDE1ZjI4ZjQ5NDcyZWZkMjBhMTA4MDVjZjA0ZDE3ZjJkNjE1NGY5", "commit_message": "Fix miss-capturing of assign statement after a dedent.\n\ncloses #11415\n\nThis fixes a bug where assign statement were miscaptured when occuring\nafter a dedent. This was due to the fact that :\n\n>>> '' in '({['\nTrue\n\nThat is to say the empty string is in any strings.\nAdd a couple of integration tests and unit tests as well, and also add a\nwarning to public function when not used properly, in particular, check\nthat lines passed to make_tokens_by_line do end with an endline marker\n(at least for the first line), otherwise the function does not behave\nproperly.", "commit_timestamp": "2018-10-20T17:52:15Z", "files": ["IPython/core/inputtransformer2.py", "IPython/core/tests/test_inputtransformer2.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjVjNTA2ZGMwY2RhNjAzMTYxYjI2YzJjNDZkMTNiNzE3ZDdmNjMzYzQ=", "commit_message": "Merge pull request #11418 from Carreau/fix-assign-detection\n\nFix miss-capturing of assign statement after a dedent.", "commit_timestamp": "2018-10-21T15:39:47Z", "files": ["IPython/core/inputtransformer2.py", "IPython/core/tests/test_inputtransformer2.py"]}], "labels": ["help wanted"], "created_at": "2018-10-19T12:53:42Z", "closed_at": "2018-10-21T15:39:48Z", "linked_pr_number": [11415], "method": ["regex"]}
{"issue_number": 11405, "title": "Keyboard shortcuts not working", "body": "Hi,\r\n\r\nBefore I upgraded `IPython` to the latest version, I had used `jj` to exit `vi` insert mode.\r\n\r\nIt has been broken since the update.\r\n\r\nI had used `~/.ipython/profile_default/startup/keybindings.py` Python script with the following code to bind `jj`:\r\n\r\n``` py\r\nfrom IPython import get_ipython\r\nfrom prompt_toolkit.enums import DEFAULT_BUFFER\r\nfrom prompt_toolkit.filters import HasFocus, ViInsertMode\r\nfrom prompt_toolkit.key_binding.vi_state import InputMode\r\n\r\n\r\nip = get_ipython()\r\n\r\ndef switch_to_navigation_mode(event):\r\n    vi_state = event.cli.vi_state\r\n    vi_state.reset(InputMode.NAVIGATION)\r\n\r\nif getattr(ip, 'pt_cli'):\r\n    registry = ip.pt_cli.application.key_bindings_registry\r\n    registry.add_binding(u'j',u'k',\r\n                         filter=(HasFocus(DEFAULT_BUFFER)\r\n                                 & ViInsertMode()))(switch_to_navigation_mode)\r\n```\r\n\r\nI removed `keybindings.py` file from `startup` directory today and created `~/.ipython/profile_default/startup/keyboard_shortcuts.py` with the code from the example on [`IPython` Read the Docs website](https://ipython.readthedocs.io/en/stable/config/details.html#keyboard-shortcuts):\r\n\r\n``` py\r\nfrom IPython import get_ipython\r\nfrom prompt_toolkit.enums import DEFAULT_BUFFER\r\nfrom prompt_toolkit.keys import Keys\r\nfrom prompt_toolkit.filters import HasFocus, HasSelection, ViInsertMode, EmacsInsertMode\r\n\r\nip = get_ipython()\r\ninsert_mode = ViInsertMode() | EmacsInsertMode()\r\n\r\ndef insert_unexpected(event):\r\n    buf = event.current_buffer\r\n    buf.insert_text('The Spanish Inquisition')\r\n\r\n# Register the shortcut if IPython is using prompt_toolkit\r\nif getattr(ip, 'pt_cli'):\r\n    registry = ip.pt_cli.application.key_bindings_registry\r\n    registry.add_binding(Keys.ControlN,\r\n                     filter=(HasFocus(DEFAULT_BUFFER)\r\n                             & ~HasSelection()\r\n                             & insert_mode))(insert_unexpected)\r\n```\r\n\r\nIt fails and the error message is the same:\r\n\r\n```\r\n[TerminalIPythonApp] WARNING | Unknown error in handling startup files:\r\n---------------------------------------------------------------------------\r\nAttributeError                            Traceback (most recent call last)\r\n~/Library/Python/3.7/lib/python/site-packages/IPython/core/shellapp.py in _exec_file(self, fname, shell_futures)\r\n    321                                                  self.shell.user_ns,\r\n    322                                                  shell_futures=shell_futures,\r\n--> 323                                                  raise_exceptions=True)\r\n    324         finally:\r\n    325             sys.argv = save_argv\r\n\r\n~/Library/Python/3.7/lib/python/site-packages/IPython/core/interactiveshell.py in safe_execfile(self, fname, exit_ignore, raise_exceptions, shell_futures, *where)\r\n   2679                 py3compat.execfile(\r\n   2680                     fname, glob, loc,\r\n-> 2681                     self.compile if shell_futures else None)\r\n   2682             except SystemExit as status:\r\n   2683                 # If the call was made with 0 or None exit status (sys.exit(0)\r\n\r\n~/Library/Python/3.7/lib/python/site-packages/IPython/utils/py3compat.py in execfile(fname, glob, loc, compiler)\r\n    186     with open(fname, 'rb') as f:\r\n    187         compiler = compiler or compile\r\n--> 188         exec(compiler(f.read(), fname, 'exec'), glob, loc)\r\n    189\r\n    190 # Refactor print statements in doctests.\r\n\r\n~/.ipython/profile_default/startup/keyboard_shortcuts.py in <module>\r\n     12\r\n     13 # Register the shortcut if IPython is using prompt_toolkit\r\n---> 14 if getattr(ip, 'pt_cli'):\r\n     15     registry = ip.pt_cli.application.key_bindings_registry\r\n     16     registry.add_binding(Keys.ControlN,\r\n\r\nAttributeError: 'TerminalInteractiveShell' object has no attribute 'pt_cli'\r\n```\r\n\r\nHow can I customise keyboard shortcuts?\r\n", "commits": [{"node_id": "MDY6Q29tbWl0MjM0NDA3MzplMDhkYzFiNGRkMzBlOGQyYjYwNzEzNDY5M2YyMjZlOGEyMjEwMGVj", "commit_message": "Fix custom keyboard shortcut examples.\n\nUpgrading to prompt_toolkit 2 changed some internal API, update examples.\n\nAlso have sphinx directive raise/warn if code blocks have issues (no\nleading prompt) which end-up stripping all code.\n\nCloses #11405", "commit_timestamp": "2018-10-21T17:21:55Z", "files": ["IPython/sphinxext/ipython_directive.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjM2NTUwZjE3NzU5YzE2MjRkNGRjNzY3OTdjNzIxMjIxOWQ3NWY1ZDg=", "commit_message": "Merge pull request #11426 from Carreau/fix-shortcut-docs\n\nFix custom keyboard shortcut examples.", "commit_timestamp": "2018-10-23T02:29:40Z", "files": ["IPython/sphinxext/ipython_directive.py"]}], "labels": [], "created_at": "2018-10-17T05:26:57Z", "closed_at": "2018-10-23T02:29:40Z", "linked_pr_number": [11405], "method": ["regex"]}
{"issue_number": 11391, "title": "Cannot enter docstring in IPython", "body": "Type the following snippet and then hit `C-m` or `C-j` or `C-o` then IPython produces \"Exception list index out of range\" from `IPython/core/inputtransformer2.py`\r\n\r\n```\r\nIn [1]: def f():\r\n   ...:     \"\"\"\r\n```\r\n\r\nTraceback:\r\n\r\n```pytb\r\nUnhandled exception in event loop:\r\n  File \"/home/takafumi/.virtualenvs/ipy7/lib/python3.7/site-packages/prompt_toolkit/eventloop/posix.py\", line 154, in _run_task\r\n    t()\r\n  File \"/home/takafumi/.virtualenvs/ipy7/lib/python3.7/site-packages/prompt_toolkit/eventloop/context.py\", line 115, in new_func\r\n    return func(*a, **kw)\r\n  File \"/home/takafumi/.virtualenvs/ipy7/lib/python3.7/site-packages/prompt_toolkit/application/application.py\", line 548, in read_from_input\r\n    self.key_processor.process_keys()\r\n  File \"/home/takafumi/.virtualenvs/ipy7/lib/python3.7/site-packages/prompt_toolkit/key_binding/key_processor.py\", line 272, in process_keys\r\n    self._process_coroutine.send(key_press)\r\n  File \"/home/takafumi/.virtualenvs/ipy7/lib/python3.7/site-packages/prompt_toolkit/key_binding/key_processor.py\", line 179, in _process\r\n    self._call_handler(matches[-1], key_sequence=buffer[:])\r\n  File \"/home/takafumi/.virtualenvs/ipy7/lib/python3.7/site-packages/prompt_toolkit/key_binding/key_processor.py\", line 321, in _call_handler\r\n    handler.call(event)\r\n  File \"/home/takafumi/.virtualenvs/ipy7/lib/python3.7/site-packages/prompt_toolkit/key_binding/key_bindings.py\", line 78, in call\r\n    return self.handler(event)\r\n  File \"/home/takafumi/repos/watch/ipython/IPython/terminal/shortcuts.py\", line 109, in newline_or_execute\r\n    status, indent = shell.check_complete(check_text)\r\n  File \"/home/takafumi/repos/watch/ipython/IPython/core/interactiveshell.py\", line 3307, in check_complete\r\n    status, nspaces = self.input_transformer_manager.check_complete(code)\r\n  File \"/home/takafumi/repos/watch/ipython/IPython/core/inputtransformer2.py\", line 627, in check_complete\r\n    lines = self.do_token_transforms(lines)\r\n  File \"/home/takafumi/repos/watch/ipython/IPython/core/inputtransformer2.py\", line 551, in do_token_transforms\r\n    changed, lines = self.do_one_token_transform(lines)\r\n  File \"/home/takafumi/repos/watch/ipython/IPython/core/inputtransformer2.py\", line 534, in do_one_token_transform\r\n    transformer = transformer_cls.find(tokens_by_line)\r\n  File \"/home/takafumi/repos/watch/ipython/IPython/core/inputtransformer2.py\", line 359, in find\r\n    while line[ix].type in {tokenize.INDENT, tokenize.DEDENT}:\r\n\r\nException list index out of range\r\nPress ENTER to continue...\r\n```\r\n\r\nChecked with current master eb8dac350abdabc350883ee72c12a151c6a0d138\r\n", "commits": [{"node_id": "MDY6Q29tbWl0MjM0NDA3MzpiYTg1MzhlNWFmYjNjNDZlNzQyZjNhMzFlNjA0NmY5MzY3NzdkMWE2", "commit_message": "Fix to allow entering docstring into IPython.\n\nThe EscapeTransformer find method was assuming incorrectly that every\nline would end with either a NEWLINE or EOF, while this is not the case\nwhen encountering multiple line string.\n\nThis fixes that by making sure we don't index outside of bounds.\n\nWith this IPython will correctly add a newline at the CLI.\n\nCloses #11391", "commit_timestamp": "2018-10-15T01:27:08Z", "files": ["IPython/core/inputtransformer2.py", "IPython/core/tests/test_inputtransformer2.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjBmMWRlNjY5N2ZlOGVmOWI4ODY5MmQxZjljNmZjOTYyYTA5MjRhMWI=", "commit_message": "Merge pull request #11398 from Carreau/fix-input-docstring\n\nFix to allow entering docstring into IPython.", "commit_timestamp": "2018-10-15T01:51:03Z", "files": ["IPython/core/inputtransformer2.py", "IPython/core/tests/test_inputtransformer2.py"]}], "labels": ["bug"], "created_at": "2018-10-13T05:26:39Z", "closed_at": "2018-10-15T01:51:03Z", "linked_pr_number": [11391], "method": ["label"]}
{"issue_number": 11320, "title": "ipython directive seems to be broken", "body": "Found this while trying to build the Matplotlib docs.  Can try to chase it down better tomorrow, but posting now in case I do not get back to it.\r\n\r\n```\r\nException occurred:\r\n  File \"/home/tcaswell/.virtualenvs/bleeding/lib/python3.8/site-packages/IPython/sphinxext/ipython_directive.py\", line 333, in process_input_line\r\n    if self.IP.check_complete()[0] != 'incomplete':\r\nTypeError: check_complete() missing 1 required positional argument: 'code'\r\nThe full traceback has been saved in /tmp/sphinx-err-ruydljl4.log, if you want to report the issue to the developers.\r\n\r\n```\r\n\r\n23:56 $ ipython --version\r\n7.0.0.dev\r\n\r\n\r\n<details>\r\n\r\n```\r\n23:51 $ cat /tmp/sphinx-err-ruydljl4.log\r\n# Sphinx version: 1.8.0\r\n# Python version: 3.8.0a0 (CPython)\r\n# Docutils version: 0.14 \r\n# Jinja2 version: 2.10\r\n# Last messages:\r\n#   reading sources... [ 97%] tutorials/advanced/path_tutorial\r\n#   \r\n#   reading sources... [ 97%] tutorials/advanced/patheffects_guide\r\n#   \r\n#   reading sources... [ 97%] tutorials/advanced/transforms_tutorial\r\n#   \r\n#   reading sources... [ 97%] tutorials/colors/colorbar_only\r\n#   \r\n#   reading sources... [ 97%] tutorials/colors/colormapnorms\r\n#   \r\n# Loaded extensions:\r\n#   sphinx.ext.mathjax (1.8.0) from /home/tcaswell/.virtualenvs/bleeding/lib/python3.8/site-packages/sphinx/ext/mathjax.py\r\n#   alabaster (0.7.11) from /home/tcaswell/.virtualenvs/bleeding/lib/python3.8/site-packages/alabaster/__init__.py\r\n#   sphinx.ext.autodoc (1.8.0) from /home/tcaswell/.virtualenvs/bleeding/lib/python3.8/site-packages/sphinx/ext/autodoc/__init__.py\r\n#   sphinx.ext.autosummary (1.8.0) from /home/tcaswell/.virtualenvs/bleeding/lib/python3.8/site-packages/sphinx/ext/autosummary/__init__.py\r\n#   sphinx.ext.doctest (1.8.0) from /home/tcaswell/.virtualenvs/bleeding/lib/python3.8/site-packages/sphinx/ext/doctest.py\r\n#   sphinx.ext.graphviz (1.8.0) from /home/tcaswell/.virtualenvs/bleeding/lib/python3.8/site-packages/sphinx/ext/graphviz.py\r\n#   sphinx.ext.inheritance_diagram (1.8.0) from /home/tcaswell/.virtualenvs/bleeding/lib/python3.8/site-packages/sphinx/ext/inheritance_diagram.py\r\n#   sphinx.ext.intersphinx (1.8.0) from /home/tcaswell/.virtualenvs/bleeding/lib/python3.8/site-packages/sphinx/ext/intersphinx.py\r\n#   sphinx.ext.viewcode (1.8.0) from /home/tcaswell/.virtualenvs/bleeding/lib/python3.8/site-packages/sphinx/ext/viewcode.py\r\n#   IPython.sphinxext.ipython_console_highlighting (unknown version) from /home/tcaswell/.virtualenvs/bleeding/lib/python3.8/site-packages/IPython/sphinxext/ipython_console_highlighting.py\r\n#   IPython.sphinxext.ipython_directive (unknown version) from /home/tcaswell/.virtualenvs/bleeding/lib/python3.8/site-packages/IPython/sphinxext/ipython_directive.py\r\n#   numpydoc (0.8.0) from /home/tcaswell/.virtualenvs/bleeding/lib/python3.8/site-packages/numpydoc/__init__.py\r\n#   sphinx_gallery.gen_gallery (0.2.0) from /home/tcaswell/.virtualenvs/bleeding/lib/python3.8/site-packages/sphinx_gallery/gen_gallery.py\r\n#   matplotlib.sphinxext.mathmpl (unknown version) from /home/tcaswell/source/p/matplotlib/lib/matplotlib/sphinxext/mathmpl.py\r\n#   matplotlib.sphinxext.plot_directive (unknown version) from /home/tcaswell/source/p/matplotlib/lib/matplotlib/sphinxext/plot_directive.py\r\n#   sphinxext.custom_roles (unknown version) from /home/tcaswell/source/p/matplotlib/doc/sphinxext/custom_roles.py\r\n#   sphinxext.github (unknown version) from /home/tcaswell/source/p/matplotlib/doc/sphinxext/github.py\r\n#   sphinxext.math_symbol_table (unknown version) from /home/tcaswell/source/p/matplotlib/doc/sphinxext/math_symbol_table.py\r\n#   sphinxext.mock_gui_toolkits (unknown version) from /home/tcaswell/source/p/matplotlib/doc/sphinxext/mock_gui_toolkits.py\r\n#   sphinxext.skip_deprecated (unknown version) from /home/tcaswell/source/p/matplotlib/doc/sphinxext/skip_deprecated.py\r\nTraceback (most recent call last):\r\n  File \"/home/tcaswell/.virtualenvs/bleeding/lib/python3.8/site-packages/sphinx/cmd/build.py\", line 304, in build_main\r\n    app.build(args.force_all, filenames)\r\n  File \"/home/tcaswell/.virtualenvs/bleeding/lib/python3.8/site-packages/sphinx/application.py\", line 341, in build\r\n    self.builder.build_update()\r\n  File \"/home/tcaswell/.virtualenvs/bleeding/lib/python3.8/site-packages/sphinx/builders/__init__.py\", line 347, in build_update\r\n    len(to_build))\r\n  File \"/home/tcaswell/.virtualenvs/bleeding/lib/python3.8/site-packages/sphinx/builders/__init__.py\", line 360, in build\r\n    updated_docnames = set(self.read())\r\n  File \"/home/tcaswell/.virtualenvs/bleeding/lib/python3.8/site-packages/sphinx/builders/__init__.py\", line 468, in read\r\n    self._read_serial(docnames)\r\n  File \"/home/tcaswell/.virtualenvs/bleeding/lib/python3.8/site-packages/sphinx/builders/__init__.py\", line 490, in _read_serial\r\n    self.read_doc(docname)\r\n  File \"/home/tcaswell/.virtualenvs/bleeding/lib/python3.8/site-packages/sphinx/builders/__init__.py\", line 534, in read_doc\r\n    doctree = read_doc(self.app, self.env, self.env.doc2path(docname))\r\n  File \"/home/tcaswell/.virtualenvs/bleeding/lib/python3.8/site-packages/sphinx/io.py\", line 318, in read_doc\r\n    pub.publish()\r\n  File \"/home/tcaswell/.virtualenvs/bleeding/lib/python3.8/site-packages/docutils/core.py\", line 217, in publish\r\n    self.settings)\r\n  File \"/home/tcaswell/.virtualenvs/bleeding/lib/python3.8/site-packages/docutils/readers/__init__.py\", line 72, in read\r\n    self.parse()\r\n  File \"/home/tcaswell/.virtualenvs/bleeding/lib/python3.8/site-packages/docutils/readers/__init__.py\", line 78, in parse\r\n    self.parser.parse(self.input, document)\r\n  File \"/home/tcaswell/.virtualenvs/bleeding/lib/python3.8/site-packages/sphinx/parsers.py\", line 88, in parse\r\n    self.statemachine.run(inputstring, document, inliner=self.inliner)\r\n  File \"/home/tcaswell/.virtualenvs/bleeding/lib/python3.8/site-packages/docutils/parsers/rst/states.py\", line 171, in run\r\n    input_source=document['source'])\r\n  File \"/home/tcaswell/.virtualenvs/bleeding/lib/python3.8/site-packages/docutils/statemachine.py\", line 239, in run\r\n    context, state, transitions)\r\n  File \"/home/tcaswell/.virtualenvs/bleeding/lib/python3.8/site-packages/docutils/statemachine.py\", line 460, in check_line\r\n    return method(match, context, next_state)\r\n  File \"/home/tcaswell/.virtualenvs/bleeding/lib/python3.8/site-packages/docutils/parsers/rst/states.py\", line 2753, in underline\r\n    self.section(title, source, style, lineno - 1, messages)\r\n  File \"/home/tcaswell/.virtualenvs/bleeding/lib/python3.8/site-packages/docutils/parsers/rst/states.py\", line 327, in section\r\n    self.new_subsection(title, lineno, messages)\r\n  File \"/home/tcaswell/.virtualenvs/bleeding/lib/python3.8/site-packages/docutils/parsers/rst/states.py\", line 395, in new_subsection\r\n    node=section_node, match_titles=True)\r\n  File \"/home/tcaswell/.virtualenvs/bleeding/lib/python3.8/site-packages/docutils/parsers/rst/states.py\", line 282, in nested_parse\r\n    node=node, match_titles=match_titles)\r\n  File \"/home/tcaswell/.virtualenvs/bleeding/lib/python3.8/site-packages/docutils/parsers/rst/states.py\", line 196, in run\r\n    results = StateMachineWS.run(self, input_lines, input_offset)\r\n  File \"/home/tcaswell/.virtualenvs/bleeding/lib/python3.8/site-packages/docutils/statemachine.py\", line 239, in run\r\n    context, state, transitions)\r\n  File \"/home/tcaswell/.virtualenvs/bleeding/lib/python3.8/site-packages/docutils/statemachine.py\", line 460, in check_line\r\n    return method(match, context, next_state)\r\n  File \"/home/tcaswell/.virtualenvs/bleeding/lib/python3.8/site-packages/docutils/parsers/rst/states.py\", line 2326, in explicit_markup\r\n    nodelist, blank_finish = self.explicit_construct(match)\r\n  File \"/home/tcaswell/.virtualenvs/bleeding/lib/python3.8/site-packages/docutils/parsers/rst/states.py\", line 2338, in explicit_construct\r\n    return method(self, expmatch)\r\n  File \"/home/tcaswell/.virtualenvs/bleeding/lib/python3.8/site-packages/docutils/parsers/rst/states.py\", line 2081, in directive\r\n    directive_class, match, type_name, option_presets)\r\n  File \"/home/tcaswell/.virtualenvs/bleeding/lib/python3.8/site-packages/docutils/parsers/rst/states.py\", line 2130, in run_directive\r\n    result = directive_instance.run()\r\n  File \"/home/tcaswell/.virtualenvs/bleeding/lib/python3.8/site-packages/IPython/sphinxext/ipython_directive.py\", line 915, in run\r\n    rgxin, rgxout, promptin, promptout = self.setup()\r\n  File \"/home/tcaswell/.virtualenvs/bleeding/lib/python3.8/site-packages/IPython/sphinxext/ipython_directive.py\", line 875, in setup\r\n    self.shell = EmbeddedSphinxShell(exec_lines)\r\n  File \"/home/tcaswell/.virtualenvs/bleeding/lib/python3.8/site-packages/IPython/sphinxext/ipython_directive.py\", line 317, in __init__\r\n    self.process_input_line(line, store_history=False)\r\n  File \"/home/tcaswell/.virtualenvs/bleeding/lib/python3.8/site-packages/IPython/sphinxext/ipython_directive.py\", line 333, in process_input_line\r\n    if self.IP.check_complete()[0] != 'incomplete':\r\nTypeError: check_complete() missing 1 required positional argument: 'code'\r\n\r\n```\r\n\r\n\r\n</details>\r\n\r\n", "commits": [{"node_id": "MDY6Q29tbWl0MjM0NDA3Mzo1YWE2NDk1YzZkYjhmZDk0NzEyNDEyZTc5MTcyNzIwMWE2ZDQ2MzQx", "commit_message": "Fix the sphinx_ipython directive.\n\nAlso use it in our docs so that there is some kind of tests.\nImperfect so far.\n\nFixes gh-11320", "commit_timestamp": "2018-09-18T07:28:32Z", "files": ["IPython/core/interactiveshell.py", "IPython/sphinxext/ipython_directive.py"]}, {"node_id": "MDY6Q29tbWl0MjM0NDA3Mzo4YjcwOGRhMDg5YTEyOWQzM2I3MmJiYTQwYmEzYTgyNTFiMzliNzAy", "commit_message": "Fix the sphinx_ipython directive.\n\nAlso use it in our docs so that there is some kind of tests.\nDocument ok-except better (and test). Work w/o matplotlib installed.\nImperfect so far.\n\nFixes gh-11320", "commit_timestamp": "2018-09-18T08:05:22Z", "files": ["IPython/core/interactiveshell.py", "IPython/sphinxext/ipython_directive.py"]}, {"node_id": "MDY6Q29tbWl0MjM0NDA3MzpkMTk4YjRiZDQ2MmM3ODhlNmFhOWNhMGU3YTAwMjc5YjAxMDJlMDBk", "commit_message": "Fix the sphinx_ipython directive.\n\nAlso use it in our docs so that there is some kind of tests.\nDocument ok-except better (and test). Work w/o matplotlib installed.\nImperfect so far.\n\nFixes gh-11320", "commit_timestamp": "2018-09-18T08:10:13Z", "files": ["IPython/core/interactiveshell.py", "IPython/sphinxext/ipython_directive.py"]}], "labels": [], "created_at": "2018-09-18T03:57:56Z", "closed_at": "2018-09-19T11:51:46Z", "method": ["regex"]}
{"issue_number": 11309, "title": "%%writefile can't handle white space in file path/filename", "body": "It is as the title suggests. In ipython, I have tried\r\n\r\n`%%writefile  \"test out.txt\"`\r\n`%%writefile  'test out.txt'`\r\n`%%writefile  test out.txt`\r\n`%%writefile  test\\ out.txt`\r\n\r\nand none gives me the expected behavior. The first one leads to creating a file literally named \"test out.txt\"  (yes, with quotes). The third one just leads to \r\n\r\n>  unrecognized arguments: out.txt\r\n\r\nIs this a bug or am I just missing something obvious? Using IPython 6.5.0 with Python 3.6.5.", "commits": [{"node_id": "MDY6Q29tbWl0MTUwMjc4MDQ5OjNmODZhNDk3MjIwMDhmZDFkODVmOWM1YzVmMGQxMDhlZDFkNzBjMWU=", "commit_message": "Fix #11309\n\nhandles spaces or quotes in filename param", "commit_timestamp": "2018-09-25T14:27:07Z", "files": ["IPython/core/magics/osm.py"]}, {"node_id": "MDY6Q29tbWl0MTUxNTU5MjE1OmMwM2UwOWNhZWQ1ZGQ1OGFiN2ExNWIxNmMyZGIwYWE0YjIyNjc4MWM=", "commit_message": "Fix #11309 handle whitespace in pathfile/filename for writefile command", "commit_timestamp": "2018-10-04T13:00:46Z", "files": ["IPython/core/magics/osm.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjJmMjVmN2RkNDVjNmZiMTMwMDEyMGM2ZDY2NTAxNzY1ZjQyY2ExODc=", "commit_message": "Merge pull request #11330 from hongshaoyang/patch-1\n\nFix #11309 (handle quotes in magics arguments)", "commit_timestamp": "2018-10-13T22:27:40Z", "files": ["IPython/core/magics/osm.py", "IPython/core/tests/test_magic.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjJmMjVmN2RkNDVjNmZiMTMwMDEyMGM2ZDY2NTAxNzY1ZjQyY2ExODc=", "commit_message": "Merge pull request #11330 from hongshaoyang/patch-1\n\nFix #11309 (handle quotes in magics arguments)", "commit_timestamp": "2018-10-13T22:27:40Z", "files": ["IPython/core/magics/osm.py", "IPython/core/tests/test_magic.py"]}], "labels": ["good first issue", "help wanted", "Hacktoberfest"], "created_at": "2018-09-12T19:23:39Z", "closed_at": "2018-10-13T22:27:41Z", "linked_pr_number": [11309], "method": ["regex"]}
{"issue_number": 11272, "title": "set_custom_completer seems to be a no-op", "body": "In [interactive_shell.py](https://github.com/ipython/ipython/blob/a2685d78f2403f84e6cb915ae11a4f6033ccc5f6/IPython/core/interactiveshell.py#L2034), `set_custom_completer` does\r\n\r\n    self.Completer.matchers.insert(pos,newcomp)\r\n\r\nLooking at the source code of IPCompleter, though, [matchers](https://github.com/ipython/ipython/blob/eed56ba34aa3856b5726d60eedfe60a17e1c26c5/IPython/core/completer.py#L1114) seems to be a property returning an ephemeral list, so the insert is a no-op.\r\n\r\nTo reproduce:\r\n\r\n    import IPython\r\n\r\n    def foo(*args, **kwargs):\r\n        pass\r\n\r\n    print(len(IPython.get_ipython().Completer.matchers))\r\n    IPython.get_ipython().set_custom_completer(foo, 0)\r\n    print(len(IPython.get_ipython().Completer.matchers))\r\n\r\nThis should print the same number twice (in my version, 5, 5)\r\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU4NTE4OmI1ODI2YjM1ODU4MmVmMWM3YjAyYWNiNWRlNDUzYjQxZWVhYjQ1MTU=", "commit_message": "Ensure set_custom_completer is working. Fixes #11272", "commit_timestamp": "2020-02-14T22:29:14Z", "files": ["IPython/core/completer.py", "IPython/core/interactiveshell.py", "IPython/core/tests/test_interactiveshell.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjVkNWMwZDhhZDZkNWI1NTdmNDlkZTZlZWZmNDZlZjU5NWI3ZTZjMmQ=", "commit_message": "Merge pull request #12130 from ngoldbaum/fix-11272\n\nEnsure set_custom_completer is working. Fixes #11272", "commit_timestamp": "2020-02-27T16:17:18Z", "files": ["IPython/core/completer.py", "IPython/core/interactiveshell.py", "IPython/core/tests/test_interactiveshell.py"]}, {"node_id": "MDY6Q29tbWl0MTM0MzM1NDA0OjdmOTdlN2JiYzIxOGRkNmE5MzE0NjFlZmEwOWZjMzU2MzYwNzRlNjM=", "commit_message": "Backport PR #12130: Ensure set_custom_completer is working. Fixes #11272", "commit_timestamp": "2020-02-27T16:17:31Z", "files": ["IPython/core/completer.py", "IPython/core/interactiveshell.py", "IPython/core/tests/test_interactiveshell.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjhhMWNlMGZhZWQxZThlMTVkMmJiNmEyNjZjOWY1ZmE3MWVkNWUyZDc=", "commit_message": "Merge pull request #12144 from meeseeksmachine/auto-backport-of-pr-12130-on-7.x\n\nBackport PR #12130 on branch 7.x (Ensure set_custom_completer is working. Fixes #11272)", "commit_timestamp": "2020-02-27T17:53:21Z", "files": ["IPython/core/completer.py", "IPython/core/interactiveshell.py", "IPython/core/tests/test_interactiveshell.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjhhMWNlMGZhZWQxZThlMTVkMmJiNmEyNjZjOWY1ZmE3MWVkNWUyZDc=", "commit_message": "Merge pull request #12144 from meeseeksmachine/auto-backport-of-pr-12130-on-7.x\n\nBackport PR #12130 on branch 7.x (Ensure set_custom_completer is working. Fixes #11272)", "commit_timestamp": "2020-02-27T17:53:21Z", "files": ["IPython/core/completer.py", "IPython/core/interactiveshell.py", "IPython/core/tests/test_interactiveshell.py"]}], "labels": [], "created_at": "2018-08-28T21:30:20Z", "closed_at": "2020-02-27T16:17:27Z", "linked_pr_number": [11272], "method": ["regex"]}
{"issue_number": 11086, "title": "Error in IPython 5.6: MPLBACKEND=PS and importing matplotlib.pyplot", "body": "There's seems to be a problem if `MPLBACKEND=PS` and if an IPython script imports `matplotlib.pyplot` (`import matplotlib` is still fine). This arises starting with IPython 5.6 (5.5 is fine), so my best guess is that it was caused by #10868 -- at least, I don't see any other likely suspects. \r\n\r\nTo reproduce:\r\n\r\n```bash\r\nMPLBACKEND=PS ipython -c \"import matplotlib.pyplot\"\r\n```\r\n\r\n```pytb\r\n---------------------------------------------------------------------------\r\nUnknownBackend                            Traceback (most recent call last)\r\n<ipython-input-1-864e826dab68> in <module>()\r\n----> 1 import matplotlib.pyplot\r\n\r\n/home/dwhs/miniconda2/lib/python2.7/site-packages/matplotlib/pyplot.py in <module>()\r\n   2607 # are no-ops and the registered function respect `mpl.is_interactive()`\r\n   2608 # to determine if they should trigger a draw.\r\n-> 2609 install_repl_displayhook()\r\n   2610\r\n   2611 ################# REMAINING CONTENT GENERATED BY boilerplate.py ##############\r\n\r\n/home/dwhs/miniconda2/lib/python2.7/site-packages/matplotlib/pyplot.py in install_repl_displayhook()\r\n    164             ipython_gui_name = backend2gui.get(get_backend())\r\n    165             if ipython_gui_name:\r\n--> 166                 ip.enable_gui(ipython_gui_name)\r\n    167         else:\r\n    168             _INSTALL_FIG_OBSERVER = True\r\n\r\n/home/dwhs/miniconda2/lib/python2.7/site-packages/IPython/terminal/interactiveshell.pyc in enable_gui(self, gui)\r\n    514         if gui:\r\n    515             self.active_eventloop, self._inputhook =\\\r\n--> 516                 get_inputhook_name_and_func(gui)\r\n    517         else:\r\n    518             self.active_eventloop = self._inputhook = None\r\n\r\n/home/dwhs/miniconda2/lib/python2.7/site-packages/IPython/terminal/pt_inputhooks/__init__.pyc in get_inputhook_name_and_func(gui)\r\n     36\r\n     37     if gui not in backends:\r\n---> 38         raise UnknownBackend(gui)\r\n     39\r\n     40     if gui in aliases:\r\n\r\nUnknownBackend: No event loop integration for 'ps'. Supported event loops are: qt, qt4, qt5, gtk, gtk2, gtk3, tk, wx, pyglet, glut, osx\r\nError in callback <function post_execute at 0x7f9a1f366578> (for post_execute):\r\n---------------------------------------------------------------------------\r\nAttributeError                            Traceback (most recent call last)\r\n/home/dwhs/miniconda2/lib/python2.7/site-packages/matplotlib/pyplot.py in post_execute()\r\n    146\r\n    147             def post_execute():\r\n--> 148                 if matplotlib.is_interactive():\r\n    149                     draw_all()\r\n    150\r\n\r\nAttributeError: 'NoneType' object has no attribute 'is_interactive'\r\n```\r\n\r\nIn practice, this is causing us trouble because we're using it within a CI script that includes both straight Python (where we want `MPLBACKEND=PS`) and a notebook runner (https://github.com/jhprinz/ipynb-test), where some notebooks don't use matplotlib. When we import a package that in turn imports matplotlib, we get errors, e.g., https://gitlab.e-cam2020.eu:10443/dwhswenson/ops_additional_examples/-/jobs/3991. For now, our fix is to set `MPLBACKEND=PS` only when running the pure Python scripts that need it.", "commits": [{"node_id": "MDY6Q29tbWl0MTcyNTU5NTA6MDU3N2VmNmRkZWVjYWM4ZmEyZTZkNTRjMThhYWUyZTAwYzIxYTY5NQ==", "commit_message": "FIX: Remove the non-interactive backends from pylabtools.backend2gui\n\nThis prevents trying to find a non-existent backend.\n\nCloses #11086", "commit_timestamp": "2018-04-10T19:32:00Z", "files": ["IPython/core/pylabtools.py", "IPython/core/tests/test_pylabtools.py"]}, {"node_id": "MDY6Q29tbWl0MTcyNTU5NTA6ZjBiYjYwMGRkOGQ1YzBmMDFmOWY4ZTljNjk0MWY2ZWY1MDQ5ZTBlYg==", "commit_message": "FIX: Remove the non-interactive backends from pylabtools.backend2gui\n\nThis prevents trying to find a non-existent GUI framework.\n\nCloses #11086", "commit_timestamp": "2018-04-10T19:50:41Z", "files": ["IPython/core/pylabtools.py", "IPython/core/tests/test_pylabtools.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjAxYmQ1OWVjN2MxODQxNzFkZjBjYjBkOTMzYzU2NzJlOGMyMGI2N2U=", "commit_message": "Merge pull request #11087 from tacaswell/fix_noninteractive_backends\n\nFIX: Remove the non-interactive backends from pylabtools.backend2gui", "commit_timestamp": "2018-04-11T10:34:01Z", "files": ["IPython/core/pylabtools.py", "IPython/core/tests/test_pylabtools.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjI0Y2VjNDdhYTcyYWIyNDNmN2RmM2Q3MWYwZjYzMDZjMTNkNzNkMDI=", "commit_message": "Backport PR #11087: FIX: Remove the non-interactive backends from pylabtools.backend2gui", "commit_timestamp": "2018-04-11T10:34:13Z", "files": ["IPython/core/pylabtools.py", "IPython/core/tests/test_pylabtools.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmY4Nzg3MGY5YmFkYjAxZTgwYzc5YWQ1N2NmYTMzMWEyMzc5ZjhkNWU=", "commit_message": "Merge pull request #11089 from ipython/auto-backport-of-pr-11087\n\nBackport PR #11087 on branch 5.x", "commit_timestamp": "2018-04-11T10:53:36Z", "files": ["IPython/core/pylabtools.py", "IPython/core/tests/test_pylabtools.py"]}], "labels": [], "created_at": "2018-04-10T13:36:28Z", "closed_at": "2018-04-11T10:34:02Z", "linked_pr_number": [11086], "method": ["regex"]}
{"issue_number": 11082, "title": "pastebin magic does not work: github requires authentication to create gists", "body": "Github now [requires authentication](https://developer.github.com/v3/gists/#authentication) to create gists:\r\n\r\n> You can read public gists anonymously, but you must be signed into GitHub to create gists.\r\n\r\n`%pastebin` does not work anymore and returns 401:\r\n\r\n    HTTPError: HTTP Error 401: Unauthorized\r\n", "commits": [{"node_id": "MDY6Q29tbWl0MTM2NzY0NDY1OmIzN2I2OGI2NmUyY2EzZmRmMWY5NDFmYjZiZjliNDIzYWZlMjNmMzc=", "commit_message": "fix #11082 - use dpaste.com, also remove py2 compatibility imports", "commit_timestamp": "2018-06-09T23:18:49Z", "files": ["IPython/core/magics/code.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmIzN2I2OGI2NmUyY2EzZmRmMWY5NDFmYjZiZjliNDIzYWZlMjNmMzc=", "commit_message": "fix #11082 - use dpaste.com, also remove py2 compatibility imports", "commit_timestamp": "2018-06-09T23:18:49Z", "files": ["IPython/core/magics/code.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmE3ZGU4NTExYTUxNmZhZDc0NWJhYjQyNDQwYjhiODVjNDM3MDI2MDY=", "commit_message": "Merge pull request #11182 from spookyvision/master\n\nfix #11082 - use dpaste.com, also remove py2 compatibility imports", "commit_timestamp": "2018-06-10T15:11:30Z", "files": ["IPython/core/magics/code.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmM3NGZlZGNlNzJjZjNmMGE3OGIzOWI0NDYyYjI5YTI1Y2Y1MTIxNTQ=", "commit_message": "Backport PR #11182: fix #11082 - use dpaste.com, also remove py2 compatibility imports", "commit_timestamp": "2018-06-10T15:11:44Z", "files": ["IPython/core/magics/code.py"]}], "labels": ["help wanted"], "created_at": "2018-04-09T09:42:46Z", "closed_at": "2018-06-10T15:11:43Z", "method": ["regex"]}
{"issue_number": 10903, "title": "Key completion on class", "body": "The dictionary key completion feature and the possibility to define custom completion methods via `_ipython_key_completions_` are great, but I have a use case where it doesn't work: I have a class that keeps track of its instances, that all have (string) names, via a dictionary attribute. By defining `__getitem__` on the class's metaclass, I can access instances via their name like so:\r\n\r\n```python\r\nmy_instance = NamedInstanceClass['name of my instance']\r\n```\r\n\r\n[See here for the definition](https://github.com/flav-io/flavio/blob/master/flavio/classes.py#L18-L68). Now, the reason why key completion doesn't work in this case are [these two lines](https://github.com/ipython/ipython/blob/master/IPython/utils/dir2.py#L63-L64) in `dir2` that exclude completion for classes. Indeed if I monkey-patch that method like\r\n\r\n```python\r\ndef my_getattr(obj, method):\r\n    return getattr(obj, method, None)\r\nIPython.core.completer.get_real_method = my_getattr\r\n```\r\n\r\nthen key completion works perfectly by defining a class method\r\n\r\n```python\r\n@classmethod\r\ndef _ipython_key_completions_(cls):\r\n  return cls.instances.keys()\r\n```\r\n\r\non the `NamedInstanceClass`.\r\n\r\nIf you agree that this is something that should/can be fixed, I would be happy to submit a PR.\r\n\r\nSystem info:\r\n```python\r\n{'commit_hash': 'ca5443062',\r\n 'commit_source': 'installation',\r\n 'default_encoding': 'UTF-8',\r\n 'ipython_path': '/usr/local/lib/python3.6/dist-packages/IPython',\r\n 'ipython_version': '6.2.1',\r\n 'os_name': 'posix',\r\n 'platform': 'Linux-4.13.0-17-generic-x86_64-with-Ubuntu-17.10-artful',\r\n 'sys_executable': '/usr/bin/python3',\r\n 'sys_platform': 'linux',\r\n 'sys_version': '3.6.3 (default, Oct  3 2017, 21:45:48) \\n[GCC 7.2.0]'}\r\n```", "commits": [{"node_id": "MDY6Q29tbWl0MTEwOTkzMDYzOmVlMDFjMTNiN2YxYzAwZjdjYWI0NWNmZTRhZDc5ZTIxMjEzNTcxODk=", "commit_message": "Allow key completion for classes (#10903)", "commit_timestamp": "2017-11-16T16:38:38Z", "files": ["IPython/core/tests/test_completer.py", "IPython/utils/dir2.py"]}, {"node_id": "MDY6Q29tbWl0MTEwOTkzMDYzOmQ0MGZkOGNlZTRmMGQ4ZTNiMjc0OGMzMDVjZDBlYTQ1YWQ3NWQ4NmU=", "commit_message": "Allow key completion for classes (#10903)", "commit_timestamp": "2017-11-21T10:03:33Z", "files": ["IPython/core/tests/test_completer.py", "IPython/utils/dir2.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4Ojc2NDgxNTMxZmRlMDU0NTQzOWNmYzNlODZmZWJkZWZkNDdhYTVhNDM=", "commit_message": "Merge pull request #10905 from DavidMStraub/master\n\nAllow key completion for classes (#10903)", "commit_timestamp": "2017-12-14T13:27:52Z", "files": ["IPython/core/tests/test_completer.py", "IPython/utils/dir2.py"]}], "labels": [], "created_at": "2017-11-16T09:15:51Z", "closed_at": "2018-03-11T10:29:49Z", "method": ["regex"]}
{"issue_number": 10814, "title": "IPython completer crashes when invoked at the start of a line", "body": "Most frontends don't invoke the completer at the start of a new line, so this doesn't come up much, but I came across it when tracking down a different bug.\r\n\r\nIf the completer is invoked at the start of a new line, it crashes. It seems that this is due to it identifying the previous line as the one for which it needs completions, rather than the current (empty) line. The trouble looks like it is in `IPython.utils.tokenutil.line_at_cursor`.\r\n\r\nThe bug may be reproduced by running:\r\n```python\r\nimport IPython\r\nc = IPython.get_ipython().Completer\r\ntxt = 'One\\nTwo\\n'\r\n\r\nc.complete(text=None, line_buffer=txt, cursor_pos=4)\r\n```\r\n\r\nEdit: as the example shows, it doesn't need to be an empty line, just the start of a line.", "commits": [{"node_id": "MDY6Q29tbWl0MTIzNjAwMzozYWZmMWUzNjVhYjVkMGIzOGNlZTFmNTBhNTI4MWQ3NmM3ZjMzMDJk", "commit_message": "Identify position after a newline as the start of the next line\n\nCloses gh-10814", "commit_timestamp": "2017-09-27T15:06:33Z", "files": ["IPython/utils/tests/test_tokenutil.py", "IPython/utils/tokenutil.py"]}], "labels": [], "created_at": "2017-09-18T18:48:13Z", "closed_at": "2017-10-02T16:01:14Z", "method": ["regex"]}
{"issue_number": 10785, "title": "IPython %debug deprecation warning", "body": "The following code results in an exception on IPython 5.3\r\n\r\n```IPython 5.3.0 -- An enhanced Interactive Python.\r\n?         -> Introduction and overview of IPython's features.\r\n%quickref -> Quick reference.\r\nhelp      -> Python's own help system.\r\nobject?   -> Details about 'object', use 'object??' for extra details.\r\n\r\nIn [1]: import warnings; warnings.simplefilter('error')\r\n\r\nIn [2]: assert False\r\n---------------------------------------------------------------------------\r\nAssertionError                            Traceback (most recent call last)\r\n<ipython-input-2-6e6df518a476> in <module>()\r\n----> 1 assert False\r\n\r\nAssertionError: \r\n\r\nIn [3]: %debug\r\n---------------------------------------------------------------------------\r\nDeprecationWarning                        Traceback (most recent call last)\r\n```\r\n\r\nFull stack trace:\r\n```\r\nIn [3]: %debug\r\n---------------------------------------------------------------------------\r\nDeprecationWarning                        Traceback (most recent call last)\r\n<ipython-input-3-fe3bb68c9ebd> in <module>()\r\n----> 1 get_ipython().magic(u'debug')\r\n\r\n/Users/pdm/anaconda/envs/prod_env0911B/lib/python2.7/site-packages/IPython/core/interactiveshell.pyc in magic(self, arg_s)\r\n   2156         magic_name, _, magic_arg_s = arg_s.partition(' ')\r\n   2157         magic_name = magic_name.lstrip(prefilter.ESC_MAGIC)\r\n-> 2158         return self.run_line_magic(magic_name, magic_arg_s)\r\n   2159 \r\n   2160     #-------------------------------------------------------------------------\r\n\r\n/Users/pdm/anaconda/envs/prod_env0911B/lib/python2.7/site-packages/IPython/core/interactiveshell.pyc in run_line_magic(self, magic_name, line)\r\n   2077                 kwargs['local_ns'] = sys._getframe(stack_depth).f_locals\r\n   2078             with self.builtin_trap:\r\n-> 2079                 result = fn(*args,**kwargs)\r\n   2080             return result\r\n   2081 \r\n\r\n<decorator-gen-55> in debug(self, line, cell)\r\n\r\n/Users/pdm/anaconda/envs/prod_env0911B/lib/python2.7/site-packages/IPython/core/magic.pyc in <lambda>(f, *a, **k)\r\n    186     # but it's overkill for just that one bit of state.\r\n    187     def magic_deco(arg):\r\n--> 188         call = lambda f, *a, **k: f(*a, **k)\r\n    189 \r\n    190         if callable(arg):\r\n\r\n/Users/pdm/anaconda/envs/prod_env0911B/lib/python2.7/site-packages/IPython/core/magics/execution.pyc in debug(self, line, cell)\r\n    426 \r\n    427         if not (args.breakpoint or args.statement or cell):\r\n--> 428             self._debug_post_mortem()\r\n    429         else:\r\n    430             code = \"\\n\".join(args.statement)\r\n\r\n/Users/pdm/anaconda/envs/prod_env0911B/lib/python2.7/site-packages/IPython/core/magics/execution.pyc in _debug_post_mortem(self)\r\n    434 \r\n    435     def _debug_post_mortem(self):\r\n--> 436         self.shell.debugger(force=True)\r\n    437 \r\n    438     def _debug_exec(self, code, breakpoint):\r\n\r\n/Users/pdm/anaconda/envs/prod_env0911B/lib/python2.7/site-packages/IPython/core/interactiveshell.pyc in debugger(self, force)\r\n    978             return\r\n    979 \r\n--> 980         self.InteractiveTB.debugger(force=True)\r\n    981 \r\n    982     #-------------------------------------------------------------------------\r\n\r\n/Users/pdm/anaconda/envs/prod_env0911B/lib/python2.7/site-packages/IPython/core/ultratb.pyc in debugger(self, force)\r\n   1229             if self.pdb is None:\r\n   1230                 self.pdb = self.debugger_cls(\r\n-> 1231                     self.color_scheme_table.active_scheme_name)\r\n   1232             # the system displayhook may have changed, restore the original\r\n   1233             # for pdb\r\n\r\n/Users/pdm/anaconda/envs/prod_env0911B/lib/python2.7/site-packages/IPython/terminal/debugger.pyc in __init__(self, *args, **kwargs)\r\n     22 class TerminalPdb(Pdb):\r\n     23     def __init__(self, *args, **kwargs):\r\n---> 24         Pdb.__init__(self, *args, **kwargs)\r\n     25         self._ptcomp = None\r\n     26         self.pt_init()\r\n\r\n/Users/pdm/anaconda/envs/prod_env0911B/lib/python2.7/site-packages/IPython/core/debugger.pyc in __init__(self, color_scheme, completekey, stdin, stdout, context)\r\n    241             warnings.warn(\r\n    242                 \"The `color_scheme` argument is deprecated since version 5.1\",\r\n--> 243                 DeprecationWarning)\r\n    244         else:\r\n    245             color_scheme = self.shell.colors\r\n\r\nDeprecationWarning: The `color_scheme` argument is deprecated since version 5.1\r\n\r\n\r\n```", "commits": [{"node_id": "MDY6Q29tbWl0MjM0NDA3MzphOTJkMGFlY2VlNTBjZjY5NDIwZTJhMzczZTIyMzIzNWU4NzZjY2Rl", "commit_message": "Do not pass down deprecated option.\n\nThis lead to exception in `%debug` when Warnings are turned into errors.\nCloses #10785\n\nThis is directly against the 5.x branch, as 6.x is already free of this\nbug.", "commit_timestamp": "2017-09-13T21:11:16Z", "files": ["IPython/core/ultratb.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjFlNTViZWU0MWZmYjE0MzM3OGE4NWE3MDU0OTA0OWMyOGIwNzIxOGQ=", "commit_message": "Merge pull request #10806 from Carreau/fix-deprecated-color-pdb\n\nDo not pass down deprecated option.", "commit_timestamp": "2017-09-14T07:22:14Z", "files": ["IPython/core/ultratb.py"]}], "labels": [], "created_at": "2017-09-11T21:17:30Z", "closed_at": "2017-09-14T07:22:47Z", "linked_pr_number": [10785], "method": ["regex"]}
{"issue_number": 10780, "title": "Test group: utils from iptest fails with encoding errors", "body": "When running iptest in a system with character encoding other than utf-8 the following error appears:\r\n\r\n`ERROR: IPython.utils.tests.test_path.test_ensure_dir_exists`\r\n\r\nThe error can be easily reproduced in a Linux system by running the following commands before executing iptest:\r\n\r\n```\r\nsudo locale-gen es_CO\r\nexport LANG=es_CO\r\n```\r\n\r\nThe errors seems to be caused by the following two lines of IPython/utils/tests/test_path.py:\r\n399 -> d = os.path.join(td, '\u2202ir')\r\n403 ->  f = os.path.join(td, '\u0192ile')\r\n\r\nwhich contain characters \u2202 and \u0192 respectively.", "commits": [{"node_id": "MDY6Q29tbWl0MTIzNjAwMzphZDM2ZWM5ZDcxNGQ4OGM1ZDA2ZGNiNDQwNjhhMTIxODJhZmI1NjE1", "commit_message": "Skip unicode test in C locale\n\nCloses gh-10780", "commit_timestamp": "2017-09-11T09:50:57Z", "files": ["IPython/utils/tests/test_path.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmY3NzJjOTBiODMxNTk4ODc4YWU3MzliYWZhNWVmNGUxZWFlZGE4MmU=", "commit_message": "Backport PR #10782: Skip unicode test in C locale\n\nCloses gh-10780", "commit_timestamp": "2017-09-11T17:50:00Z", "files": ["IPython/utils/tests/test_path.py"]}], "labels": [], "created_at": "2017-09-10T11:00:43Z", "closed_at": "2017-09-11T17:20:11Z", "method": ["regex"]}
{"issue_number": 10774, "title": "`post_execute` and `post_run_cell` hooks not always triggered", "body": "Due to various early returns in the code below, `post_execute` and `post_run_cell` hooks are not triggered in some cases. Since the pre hooks are always called, this is either a bug or the [docs](http://ipython.readthedocs.io/en/stable/config/callbacks.html#post-run-cell) should mention that post hooks are not guaranteed to be triggered.\r\n\r\nhttps://github.com/ipython/ipython/blob/ca86b79bfd5cdd633ea6cb9c18bb2c1c493402a1/IPython/core/interactiveshell.py#L2694-L2739\r\n\r\n/cc @craigcitro", "commits": [{"node_id": "MDY6Q29tbWl0MTAzMzAzMjcyOjVmMDE0MzhmNTJhMWZiMjE0Y2IyMzU5MzQ1YWJlMGVjMWU0YzlhNzI=", "commit_message": "Add support for finally hooks\n\nCloses #10774", "commit_timestamp": "2017-09-12T18:18:19Z", "files": ["IPython/core/interactiveshell.py"]}, {"node_id": "MDY6Q29tbWl0MTAzMzAzMjcyOmQ4ZGZmNDNiMmJkNjk3MTc5ZmM4ODZiNTllYWE3NmViM2U1ZTY0ZGI=", "commit_message": "Add support for finally hooks\n\nCloses #10774", "commit_timestamp": "2017-09-12T18:26:23Z", "files": ["IPython/core/events.py", "IPython/core/interactiveshell.py"]}, {"node_id": "MDY6Q29tbWl0MTAzMzAzMjcyOjNmZTM5MzUwYzRmNjY3NDA5NGRkOGVhY2YxYjhiZTA2NjlhMDFiMWI=", "commit_message": "Add support for \"finally\" hooks\n\nCloses #10774", "commit_timestamp": "2017-09-12T23:44:39Z", "files": ["IPython/core/events.py", "IPython/core/interactiveshell.py", "IPython/core/tests/test_interactiveshell.py"]}, {"node_id": "MDY6Q29tbWl0MTAzMzAzMjcyOjQ4YTFhNWExZThmZjZlN2U0ODNjMTMxOTdkMWYwYjcwYzhjNjE5MWQ=", "commit_message": "Add support for \"finally\" event callbacks.\n\nCloses #10774", "commit_timestamp": "2017-09-13T00:17:39Z", "files": ["IPython/core/events.py", "IPython/core/interactiveshell.py", "IPython/core/tests/test_interactiveshell.py"]}, {"node_id": "MDY6Q29tbWl0MTAzMzAzMjcyOjNkZjEzZGJiOTQ5MzI3NzJjMmZmNDRlNGNmNDkzZGUwOTg0MTIyZmM=", "commit_message": "Add support for \"finally\" event callbacks.\n\nCloses #10774", "commit_timestamp": "2017-09-13T00:33:25Z", "files": ["IPython/core/events.py", "IPython/core/interactiveshell.py", "IPython/core/tests/test_interactiveshell.py"]}, {"node_id": "MDY6Q29tbWl0MTAzMzAzMjcyOjFjZTU3ZmVkNTExM2ExOTVkYWIwNWEzMDIyZjhiODg3YzQzZWQ1MTI=", "commit_message": "Add support for \"finally\" event callbacks.\n\nCloses #10774", "commit_timestamp": "2017-09-13T05:53:55Z", "files": ["IPython/core/events.py", "IPython/core/interactiveshell.py", "IPython/core/tests/test_interactiveshell.py"]}, {"node_id": "MDY6Q29tbWl0MTAzMzAzMjcyOjM2ZjA1YTMzYTg2YjRmMGQ3NTZjYTVlZjdlZWRiZjkzOTU4MjQyOTY=", "commit_message": "Ensure post event callbacks are always called.\n\nAlso, provide the execution result object as an argument for both *pre* and *post* event callbacks in a backward compatible manner.\n\nCloses #10774.", "commit_timestamp": "2017-10-05T08:09:33Z", "files": ["IPython/core/events.py", "IPython/core/interactiveshell.py", "IPython/core/tests/test_events.py", "IPython/core/tests/test_interactiveshell.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjFjZTU3ZmVkNTExM2ExOTVkYWIwNWEzMDIyZjhiODg3YzQzZWQ1MTI=", "commit_message": "Add support for \"finally\" event callbacks.\n\nCloses #10774", "commit_timestamp": "2017-09-13T05:53:55Z", "files": ["IPython/core/events.py", "IPython/core/interactiveshell.py", "IPython/core/tests/test_interactiveshell.py"]}], "labels": [], "created_at": "2017-09-02T02:04:10Z", "closed_at": "2017-10-18T13:10:47Z", "method": ["regex"]}
{"issue_number": 10666, "title": "No module named sphinx.util.compat error using `IPython.sphinxext` with Sphinx pre1.7 master branch", "body": "Trying out `IPython.sphinxext` 6.1.0 with ``Sphinx==1.7.dev20170617`` I get the following error on a Sphinx project:\r\n\r\n```\r\nExtension error:\r\nCould not import extension IPython.sphinxext.ipython_directive (exception: No module named 'sphinx.util.compat')\r\n```\r\n\r\nIndeed, the `sphinx.util.compat` is deprecated at 1.6 and will be [removed at  Sphinx 1.7](https://github.com/sphinx-doc/sphinx/blob/3d5e0c5d7/CHANGES#L45).\r\n\r\nTo reproduce, in a virtual env with IPython 6.1.0 run\r\n\r\n    pip install git+https://github.com/sphinx-doc/sphinx\r\n\r\nand then \r\n\r\n```\r\nmkdir /tmp/IPython-test\r\ncd /tmp/IPython-test\r\nyes \"n\" | sphinx-quickstart --dot _ --project IPython-test --author \"Example\" -v 0 --release 0 --language en --suffix .rst --master index --makefile --batchfile .\r\necho '\r\nextensions = [\r\n    \"IPython.sphinxext.ipython_directive\",\r\n]\r\n' >> conf.py\r\nmake html\r\n```\r\n\r\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU4NTE4OjgxNWE0NTVmY2I3NzhmNDRlZThlZWZmZDYzYzY0N2I0MWFlMzU0MGQ=", "commit_message": "Merge pull request #10668 from jfbu/fix_sphinxutilcompat_import\n\nFix #10666: Prepare for removal of sphinx.util.compat module at Sphinx 1.7", "commit_timestamp": "2017-06-21T10:26:01Z", "files": ["IPython/sphinxext/ipython_directive.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjIxZjRkZDYxZjhkYTEwNDMwOGU2YzMyYTkyNjYzNWFhYTM1OTRkNDQ=", "commit_message": "Backport PR #10668: Fix #10666: Prepare for removal of sphinx.util.compat module at Sphinx 1.7\n\nSince Sphinx 1.6, the ``sphinx.util.compat.Directive`` class is deprecated. And the entire ``sphinx.util.compat`` module will be removed at 1.7. This PR follows [Sphinx CHANGES](http://www.sphinx-doc.org/en/master/changes.html) tip about using ``docutils.parsers.rst.Directive`` instead.\n\nRelates  10666", "commit_timestamp": "2017-06-21T10:26:18Z", "files": ["IPython/sphinxext/ipython_directive.py"]}], "labels": [], "created_at": "2017-06-17T10:37:50Z", "closed_at": "2017-06-21T10:26:06Z", "method": ["regex"]}
{"issue_number": 10636, "title": "Need better error message for 'return' keyword in builtin magic functions", "body": "I'm using 'ipython_version': '6.1.0.dev'. Whenever, I use `return` in **inbuilt** `%line_magic` or `%%cell_magic`, I get a clumsy error with stack traceback. We can display a syntax error, instead.\r\nPS: `continue`, `break` work fine with inbuilt magic, though used in absence of loop/conditional statement.\r\n**Code**\r\n```\r\nIn [8]: %%timeit -n1\r\n   ...: pass\r\n   ...: return\r\n   ...: \r\n```\r\n**Output**\r\n```\r\n---------------------------------------------------------------------------\r\nTypeError                                 Traceback (most recent call last)\r\n<ipython-input-8-b0ecc2043232> in <module>()\r\n----> 1 get_ipython().run_cell_magic('timeit', '-n1', 'pass\\nreturn')\r\n\r\n~/github/ipython_bug2/ipython/IPython/core/interactiveshell.py in run_cell_magic(self, magic_name, line, cell)\r\n   2106             magic_arg_s = self.var_expand(line, stack_depth)\r\n   2107             with self.builtin_trap:\r\n-> 2108                 result = fn(magic_arg_s, cell)\r\n   2109             return result\r\n   2110 \r\n\r\n<decorator-gen-61> in timeit(self, line, cell)\r\n\r\n~/github/ipython_bug2/ipython/IPython/core/magic.py in <lambda>(f, *a, **k)\r\n    185     # but it's overkill for just that one bit of state.\r\n    186     def magic_deco(arg):\r\n--> 187         call = lambda f, *a, **k: f(*a, **k)\r\n    188 \r\n    189         if callable(arg):\r\n\r\n~/github/ipython_bug2/ipython/IPython/core/magics/execution.py in timeit(self, line, cell)\r\n   1083 \r\n   1084         all_runs = timer.repeat(repeat, number)\r\n-> 1085         best = min(all_runs) / number\r\n   1086         worst = max(all_runs) / number\r\n   1087         timeit_result = TimeitResult(number, repeat, best, worst, all_runs, tc, precision)\r\n\r\nTypeError: unorderable types: NoneType() < NoneType()\r\n```", "commits": [{"node_id": "MDY6Q29tbWl0MTIzNjAwMzo0NjkyYWJlMGUwYmYyYWJlZmRlNjA2MGQ4MjUyMTIzYTA3YjEyMDc2", "commit_message": "Give SyntaxError for naked return in timeit\n\nWe were missing invalid syntax because we put the code into a function\nbefore compiling it, leading to confusing error messages.\n\nCloses gh-10636", "commit_timestamp": "2017-06-02T12:47:33Z", "files": ["IPython/core/magics/execution.py", "IPython/core/tests/test_magic.py"]}], "labels": [], "created_at": "2017-06-02T11:04:09Z", "closed_at": "2017-06-02T16:49:41Z", "method": ["regex"]}
{"issue_number": 10616, "title": "remove filehash in IPython/utils/path.py", "body": "This bug is deliberately intended for a **first-time contributor**. If you're a witch or wizard who is comfortable conjuring up incantations of the serpent constrictor, this is *not* the bug :bug: for you. Don't despair, there are [plenty of others in need of you and your pointy hat](https://github.com/ipython/ipython/issues), work your :sparkles: magic :sparkles: on them. \ud83d\udcab \r\n\r\n\r\nAlright, it's just us, now - welcome to the beginning of your IPython adventure!\r\n\r\n[Here's a chunk of code](https://github.com/ipython/ipython/blob/master/IPython/utils/path.py#L369,L374) that was deprecated in IPython 4.0. Now that we've released 6.0 (two release cycles), it's fair game to remove it altogether. Be sure to remove the `md5` import itself, as well.\r\n\r\nWhy do this? Well, one reason to do this is to not use hardcoded `md5` in our codebase, because it can be an issue for OpenSSL in FIPS mode, which will not have `md5`  (see #10615). And in general, this is a good \"weeding the garden\" practice, removing stale, unused code. \ud83c\udf31\r\n\r\nWhen making the pull request, be sure to mention this bug :bug: by number in either the commit message or the description, so that it gets cross linked. You can also @ mention me, and I'll help shepherd your contribution into the code base. \r\n\r\nHappy hacking! :bowtie:", "commits": [{"node_id": "MDY6Q29tbWl0NjU4NTE4OmJlNDZiYzdiZGNjYzNlMTQ3Y2NkNTA5ZTZkNTBmMzY4NjlmNWI4NGM=", "commit_message": "Merge pull request #10624 from adityausathe/master\n\nremove filehash in IPython/utils/path.py, closes #10616", "commit_timestamp": "2017-05-31T02:00:43Z", "files": ["IPython/utils/path.py"]}], "labels": ["help wanted"], "created_at": "2017-05-30T18:00:15Z", "closed_at": "2017-05-31T02:00:48Z", "method": ["regex"]}
{"issue_number": 10615, "title": "ipython does not work with python compiled with openssl in fips mode. ", "body": "in fips mode, md5 is disabled. hence, ipython fails with \r\n\r\n```\r\n    hash_digest = hashlib.md5(code.encode(\"utf-8\")).hexdigest()\r\nValueError: error:060800A3:digital envelope routines:EVP_DigestInit_ex:disabled for fips\r\n```\r\nthis error.\r\n\r\nA fix is changing md5 to sha256 in `IPython/core/compilerop.py` [in this line](https://github.com/ipython/ipython/blob/master/IPython/core/compilerop.py#L58). I can raise a pull request if the change looks fine. ", "commits": [{"node_id": "MDY6Q29tbWl0OTY5NjE0NTA6OTNhYTlhZDkyOTdmYWUxMDg5M2JjYjYyY2U5YTI0YTFmNmM5NmQ5OQ==", "commit_message": "Make IPython work with OpenSSL in FIPS mode #10615\n\n`md5` is not supported with OpenSSL in FIPS mode, hence moving `md5` to `sha1`", "commit_timestamp": "2017-07-12T03:33:01Z", "files": ["IPython/core/compilerop.py"]}], "labels": [], "created_at": "2017-05-30T06:30:42Z", "closed_at": "2017-07-13T07:40:42Z", "method": ["regex"]}
{"issue_number": 10478, "title": "pdb completion menu not honouring prompt_toolkit style", "body": "The menu colors look different when inside pdb (after %debug) than when outside it.\r\nIn particular, neither of:\r\n\r\n```\r\nToken.Menu.Completions\r\nToken.Menu.Completions.Completion\r\nToken.Menu.Completions.Completion.Current\r\nToken.Menu.Completions.Meta\r\nToken.Menu.Completions.Meta.Current\r\nToken.Menu.Completions.MultiColumnMeta\r\n```\r\n\r\nis taken into account.", "commits": [{"node_id": "MDY6Q29tbWl0NjU4NTE4OmIyNjc5MGY0NDllOTUyYzg5ZGU2MDExZWE0NDkwZGI5MDIzZTk1NTg=", "commit_message": "Make pdb use pt style. Fixes #10478", "commit_timestamp": "2017-04-23T00:14:17Z", "files": ["IPython/terminal/debugger.py", "IPython/terminal/interactiveshell.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjA3NWMxOTdlMTJkNzExZmI3MDFiZmVhNjI1NGViODUyMDJmODY2OTM=", "commit_message": "Merge pull request #10479 from memeplex/pdbstyle\n\nMake pdb use pt style. Fixes #10478", "commit_timestamp": "2017-04-24T10:29:51Z", "files": ["IPython/terminal/debugger.py", "IPython/terminal/interactiveshell.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjIyMGFkNDhlMTBhMTAwNDkwYjI1NTkyZjA3MmJhMGI4MmY0MTIxNWY=", "commit_message": "Backport PR #10479: Make pdb use pt style. Fixes #10478", "commit_timestamp": "2017-04-24T10:30:08Z", "files": ["IPython/terminal/debugger.py", "IPython/terminal/interactiveshell.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjIzNmRmZWRlNzk3MDczMTNlNTlkZmRiNDFlNjYwOGE3ODIxMThkYmI=", "commit_message": "Merge pull request #10481 from ipython/auto-backport-of-pr-10479\n\nBackport PR #10479 on branch 5.x", "commit_timestamp": "2017-04-24T10:47:50Z", "files": ["IPython/terminal/debugger.py", "IPython/terminal/interactiveshell.py"]}], "labels": [], "created_at": "2017-04-22T23:07:34Z", "closed_at": "2017-04-24T10:29:58Z", "linked_pr_number": [10478], "method": ["regex"]}
{"issue_number": 10425, "title": "IPython 5.3 terminal: enter should execute not insert line break", "body": "This is a regression from 5.2.2 to 5.3 when using the terminal interface: if the cursor is in the middle of a line and I press enter, a line break is inserted into the line. On 5.2.2, pressing enter had the same effect as if the cursor was at the end of the line i.e. it executes the line I've just entered.\r\n\r\nTo reproduce: type `foo(2, 3)` (without pressing enter), move the cursor to be on the 3, then press enter.\r\n\r\nIt's extremely rare that one wants to break lines in an interactive session, but quite common to go back to a line from history, modify the contents, and then immediately want to execute it. Please bring back the old behaviour.", "commits": [{"node_id": "MDY6Q29tbWl0MTIzNjAwMzo5NjcyN2ZlMmJmOWM1ODQwZWVmZjA5ZTczNmM5MjUwZmNiZDcyYTgy", "commit_message": "Prefer execution when there's only a single line entered\n\nCloses gh-10425\n\nThe heuristic here is to treat a single line specially, and always\nevaluate it as if the cursor was at the end. An alternative heuristic\ncould be to do this if the cursor is on the last line of the input.", "commit_timestamp": "2017-04-26T10:33:30Z", "files": ["IPython/terminal/shortcuts.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjEzODMzNzA2ZjU3MTc0Y2NlYjkwZDcyZjc4NWVjMWQxNjAxNjQxNmI=", "commit_message": "Backport PR #10489: Prefer execution when there's only a single line entered\n\nCloses gh-10425\n\nThe heuristic here is to treat a single line specially, and always evaluate it as if the cursor was at the end. An alternative heuristic could be to do this if the cursor is on the last line of the input.\n\nThis could also cause some weird effects if you e.g. type `for a in range(5):`, move the cursor back a few places and press enter - you'll get a newline inserted in the text, but it will indent as if it were after the colon. I'm still trying to think if there's a better way to approach it.", "commit_timestamp": "2017-05-04T17:02:23Z", "files": ["IPython/terminal/shortcuts.py"]}, {"node_id": "MDY6Q29tbWl0OTAxNjgzMTU6YzkzMTM2YjEyYmEyMzBmN2RlOGEyMjU3NjU3MjRjYjJiNDRhZjAwNQ==", "commit_message": "Prefer execution when there's only a single line entered\n\nCloses gh-10425\n\nThe heuristic here is to treat a single line specially, and always\nevaluate it as if the cursor was at the end. An alternative heuristic\ncould be to do this if the cursor is on the last line of the input.", "commit_timestamp": "2017-05-04T19:35:03Z", "files": ["IPython/terminal/shortcuts.py"]}], "labels": [], "created_at": "2017-04-06T07:41:52Z", "closed_at": "2017-05-04T16:38:22Z", "method": ["regex"]}
{"issue_number": 10398, "title": "`help list` in ipdb yields AttributeError", "body": "`help list` results in `AttributeError: 'NoneType' object has no attribute 'rstrip'`, as shown below.  I [raised it with `ipdb`](https://github.com/gotcha/ipdb/issues/127) but I [was directed here](https://github.com/gotcha/ipdb/issues/127#issuecomment-286767440) instead.\r\n\r\n```\r\n$ python3.5 -mipdb empty.py\r\nPython are go!\r\n/dev/shm/gerrit/venv/stable-3.5/lib/python3.5/site-packages/ipdb/__main__.py:73: DeprecationWarning: inspect.getargspec() is deprecated, use inspect.signature() instead\r\n  if 'context' in getargspec(Pdb.__init__)[0]:\r\n> /tmp/empty.py(1)<module>()\r\n\r\nipdb> help list\r\nTraceback (most recent call last):\r\n  File \"/dev/shm/gerrit/venv/stable-3.5/lib/python3.5/site-packages/ipdb/__main__.py\", line 168, in main\r\n    pdb._runscript(mainpyfile)\r\n  File \"/home/users/gholl/lib/python3.5/pdb.py\", line 1542, in _runscript\r\n    self.run(statement)\r\n  File \"/home/users/gholl/lib/python3.5/bdb.py\", line 431, in run\r\n    exec(cmd, globals, locals)\r\n  File \"<string>\", line 1, in <module>\r\n  File \"/tmp/empty.py\", line 1, in <module>\r\n  File \"/tmp/empty.py\", line 1, in <module>\r\n  File \"/home/users/gholl/lib/python3.5/bdb.py\", line 48, in trace_dispatch\r\n    return self.dispatch_line(frame)\r\n  File \"/home/users/gholl/lib/python3.5/bdb.py\", line 66, in dispatch_line\r\n    self.user_line(frame)\r\n  File \"/home/users/gholl/lib/python3.5/pdb.py\", line 259, in user_line\r\n    self.interaction(frame, None)\r\n  File \"/dev/shm/gerrit/venv/stable-3.5/lib/python3.5/site-packages/IPython/core/debugger.py\", line 255, in interaction\r\n    OldPdb.interaction(self, frame, traceback)\r\n  File \"/home/users/gholl/lib/python3.5/pdb.py\", line 346, in interaction\r\n    self._cmdloop()\r\n  File \"/home/users/gholl/lib/python3.5/pdb.py\", line 319, in _cmdloop\r\n    self.cmdloop()\r\n  File \"/dev/shm/gerrit/venv/stable-3.5/lib/python3.5/site-packages/IPython/terminal/debugger.py\", line 69, in cmdloop\r\n    stop = self.onecmd(line)\r\n  File \"/home/users/gholl/lib/python3.5/pdb.py\", line 412, in onecmd\r\n    return cmd.Cmd.onecmd(self, line)\r\n  File \"/home/users/gholl/lib/python3.5/cmd.py\", line 217, in onecmd\r\n    return func(arg)\r\n  File \"/home/users/gholl/lib/python3.5/pdb.py\", line 1473, in do_help\r\n    self.message(command.__doc__.rstrip())\r\nAttributeError: 'NoneType' object has no attribute 'rstrip'\r\nUncaught exception. Entering post mortem debugging\r\nRunning 'cont' or 'step' will restart the program\r\n> /home/users/gholl/lib/python3.5/pdb.py(1473)do_help()\r\n   1471                            'if you need command help' % arg)\r\n   1472                 return\r\n-> 1473             self.message(command.__doc__.rstrip())\r\n   1474 \r\n   1475     do_h = do_help\r\n\r\n```", "commits": [{"node_id": "MDY6Q29tbWl0MTIzNjAwMzoyMWIwMjk3MmFkZmIyMjIwMDc1YjhiNGMwMTkyNGM5OTc2NjU0NTk3", "commit_message": "Add docstrings for debugger commands\n\nCloses gh-10398", "commit_timestamp": "2017-03-15T15:07:48Z", "files": ["IPython/core/debugger.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjU5MTFlMDdiNWY2OTFlZjk5NTdmOTM5OWU1MjA5MzIxZTM2YTNiMTk=", "commit_message": "Backport PR #10399: Add docstrings for debugger commands\n\nCloses gh-10398", "commit_timestamp": "2017-03-15T15:17:27Z", "files": ["IPython/core/debugger.py"]}], "labels": [], "created_at": "2017-03-15T14:58:46Z", "closed_at": "2017-03-15T15:15:01Z", "method": ["regex"]}
{"issue_number": 10383, "title": "Make %matplotlib inline side effect free", "body": "Currently matplotlib inline sets a number of rc parameters. If you naively assume (as I did until recently) that it simply instructs the notebook to show plots inline, this can lead to bugs overwriting earlier defined rc settings. With the stylesheet support that matplotlib now has it might be better to separate the backend choice from loading a style sheet that looks nice in the notebook.\r\n\r\nI raised the issue with Fernando on Twitter who encouraged me to propose PR. I am posting it here to solicit more feedback before moving forward.", "commits": [{"node_id": "C_kwDOFCbR0doAKGE0MzNhODk5MjgwYzljZjgwMWNjYjVlYjk5ZmFhMWUxNWZjOGE0NTk", "commit_message": "Remove matplotlib rc overrides.\n\nAddresses https://github.com/ipython/ipython/issues/10383.", "commit_timestamp": "2022-05-12T21:10:31Z", "files": ["matplotlib_inline/config.py"]}, {"node_id": "C_kwDOFCbR0doAKDE3MGEwNzViYzg3OTA0YmE5YzE4NjI0Yzg5ZmQ3MGFlZmJmYmFjZTc", "commit_message": "Merge pull request #14 from fperez/master\n\nRemove matplotlib rc overrides.\r\n\r\nAddresses:\r\n- https://github.com/ipython/ipython/issues/10383\r\n- https://github.com/matplotlib/matplotlib/issues/23007", "commit_timestamp": "2022-05-20T15:35:08Z", "files": ["matplotlib_inline/config.py"]}], "labels": [], "created_at": "2017-03-07T23:54:57Z", "closed_at": "2022-08-13T19:43:28Z", "method": ["regex"]}
{"issue_number": 10303, "title": "BUG: (Unintended?) Interaction between -n and -i arguments to %run", "body": "The documentation states that `-i` would run the script in the present notebook's namespace while `-n` would prevent the `__name__` in the script from being set to `__main__`, thereby preventing execution of code hidden behind the `if __name__ == '__main__':` check.\r\n\r\nHowever, [the code](https://github.com/ipython/ipython/blob/master/IPython/core/magics/execution.py#L665) only takes the `-n` into account only if `-i` is NOT passed to the `%run` (i.e. in the `else` branch).\r\n\r\nShouldn't it be handled before checking for `-i`?\r\n\r\nOr is it necessary to change the `__name__` of the program set to `__main__` to run it in the namespace of the notebook?", "commits": [{"node_id": "MDY6Q29tbWl0ODI1NzAzNzU6ZWE3YzY0NGY1MDkwNDgwMmQzNTBhMTJmYjE4OWM3YWRiNDdkNjY0Yg==", "commit_message": "BUG: Remove the interaction between '-i' and '-n'\n\nFixes #10303.", "commit_timestamp": "2017-02-20T15:15:29Z", "files": ["IPython/core/magics/execution.py"]}, {"node_id": "MDY6Q29tbWl0ODI1NzAzNzU6MDhmMWE1YTAyZGZiZDJlNmYwNDdjNTc0M2FjYTE3MjJlODM2ODNiMg==", "commit_message": "BUG: Make behavior of -i and -n independent.\n\nFixes #10303.", "commit_timestamp": "2017-02-20T15:21:11Z", "files": ["IPython/core/magics/execution.py"]}, {"node_id": "MDY6Q29tbWl0ODI1NzAzNzU6NDlhNTRkNjQ3MDQzMTJlZDFmZTc5NzlhMGZlOGQ3NmNmNzg1NTcwZA==", "commit_message": "TST: Add tests for bug #10303.", "commit_timestamp": "2017-02-21T14:58:23Z", "files": ["IPython/core/tests/test_run.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmUwZTFkYzY1NjUxZDMxM2U5OGJhODk0ZGNmZjk4YzA3OWMwMDQ4Nzk=", "commit_message": "Merge pull request #10310 from musically-ut/feat-test-10303\n\nTST: Add test for bug #10303.", "commit_timestamp": "2017-02-21T16:10:04Z", "files": ["IPython/core/tests/test_run.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmFjYjYxNTU4MDI4ZDJkYTMwMGUyZGY1YTE5MDc2NjMxYmM5ZmQ3Y2M=", "commit_message": "Merge pull request #10304 from musically-ut/fix-10303\n\nBUG: Make behavior of -i and -n independent.", "commit_timestamp": "2017-02-20T21:06:07Z", "files": ["IPython/core/magics/execution.py"]}, {"node_id": "MDY6Q29tbWl0ODI1NzAzNzU6NDlhNTRkNjQ3MDQzMTJlZDFmZTc5NzlhMGZlOGQ3NmNmNzg1NTcwZA==", "commit_message": "TST: Add tests for bug #10303.", "commit_timestamp": "2017-02-21T14:58:23Z", "files": ["IPython/core/tests/test_run.py"]}], "labels": [], "created_at": "2017-02-20T15:10:47Z", "closed_at": "2017-02-20T21:06:08Z", "linked_pr_number": [10303], "method": ["regex"]}
{"issue_number": 10254, "title": "ctrl-z does not suspend to background in debugger", "body": "I'm using IPython 5.2.2 under Ubuntu and within ipdb, ctrl-z no longer suspends the process.\r\n\r\nIt looks like the problem is that in terminal/debugger.py, the call to create_prompt_application is not passing enable_system_bindings=True, so prompt_toolkit is not enabling the shortcut ctrl-z -> suspend process.\r\n\r\nWould it be possible to have system bindings enabled? From the prompt toolkit source it looks like this simply enabled ctrl-z on systems which support suspending the process. The only other side effects I see are applicable only in emacs and vi modes (where other system shortcuts are enabled).", "commits": [{"node_id": "MDY6Q29tbWl0MTIzNjAwMzphNDZlMTRkNjhjNGUzODNiN2EzYzIzNWYxY2ZhMDFmYjZkZWFhZTky", "commit_message": "Add Ctrl-Z shortcut (suspend) in terminal debugger\n\nCloses gh-10254", "commit_timestamp": "2017-02-08T14:07:58Z", "files": ["IPython/terminal/debugger.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmVmMTg4MmY0OTFmYmQwMzYwMGZlZjNkMjYwZjJiOTdkZDNjYmRiOTg=", "commit_message": "Backport PR #10261: Add Ctrl-Z shortcut (suspend) in terminal debugger\n\nCloses gh-10254", "commit_timestamp": "2017-02-09T19:11:47Z", "files": ["IPython/terminal/debugger.py"]}], "labels": [], "created_at": "2017-02-07T18:27:02Z", "closed_at": "2017-02-09T19:11:09Z", "method": ["regex"]}
{"issue_number": 10243, "title": "Jedi: Protect against crash on property access", "body": "Jedi Completions object can raise on attribute access (eg `completion.type`).\r\n\r\nCompleter.py ~ line 1520 should protect arount that:\r\n\r\n```\r\n       for jm in jedi_matches:\r\n            delta = len(jm.name_with_symbols) - len(jm.complete)\r\n            try:\r\n                yield Completion(start=offset - delta, end=offset, text=jm.name_with_symbols, type=jm.type, _origin='jedi')\r\n            except Exception:\r\n                print('crash with jm:',jm)\r\n\r\n````\r\n\r\n\r\nReproducible with \r\n\r\n```\r\n## foo.py\r\ndef foo():pass\r\n```\r\n\r\n```\r\nIn[1]: from foo import foo\r\nIn[2] foo.__co<tab>\r\n```\r\n\r\nLog an error when debug is on would be a plus.", "commits": [{"node_id": "MDY6Q29tbWl0MjM0NDA3MzpkNjc1NGFhOGE5ZWM1MDNlOWZjMTdlMzdmMTk5Mjg2MzNjYjQyOTU5", "commit_message": "Protect against jedi failing to get the type of a completion\n\nCloses #10243", "commit_timestamp": "2017-02-03T20:40:56Z", "files": ["IPython/core/completer.py"]}, {"node_id": "MDY6Q29tbWl0MjM0NDA3MzpjZDJiOWE4ZjEzMDMzZjk1ZjYzMTY5YWQ5Y2U1Njg4YTBjMDg3OGI5", "commit_message": "Protect against jedi failing to get the type of a completion\n\nCloses #10243", "commit_timestamp": "2017-02-08T22:03:29Z", "files": ["IPython/core/completer.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjAzNjA5MWY5ZGY4YmEzMWZlYmZmMGZhNmMyMzJhZDFhZTEyZWVmMjE=", "commit_message": "Merge pull request #10244 from Carreau/protect-jedi\n\nProtect against jedi failing to get the type of a completion", "commit_timestamp": "2017-02-09T10:34:58Z", "files": ["IPython/core/completer.py"]}], "labels": [], "created_at": "2017-02-03T19:06:20Z", "closed_at": "2017-02-09T10:34:59Z", "linked_pr_number": [10243], "method": ["regex"]}
{"issue_number": 10229, "title": "Crash when doing \"import math; math.sin?\"", "body": "In the IPython session below, I executed\r\n```\r\n%config Application.verbose_crash=True\r\n```\r\nand\r\n```\r\nimport math; math.sin?\r\n```\r\nWhen doing this, IPython crashes.\r\n\r\nBelow, you will see ```In [3]: import math; math.sin?``` but I have no idea where that came from. That was just displayed automatically.\r\n\r\n```\r\nPython 2.7.13 (default, Jan 25 2017, 11:01:10) \r\nType \"copyright\", \"credits\" or \"license\" for more information.\r\n\r\nIPython 5.2.1 -- An enhanced Interactive Python.\r\n?         -> Introduction and overview of IPython's features.\r\n%quickref -> Quick reference.\r\nhelp      -> Python's own help system.\r\nobject?   -> Details about 'object', use 'object??' for extra details.\r\n\r\nIn [1]: %config Application.verbose_crash=True\r\n\r\nIn [2]: import math; math.sin?\r\nObject `math.sin` not found.\r\n\r\nIn [3]: import math; math.sin?\r\n---------------------------------------------------------------------------\r\n---------------------------------------------------------------------------\r\nAssertionError   Python 2.7.13: /usr/local/src/sage-config/local/bin/python\r\n                                                   Wed Feb  1 10:17:47 2017\r\nA problem occurred executing Python code.  Here is the sequence of function\r\ncalls leading up to the error, with the most recent (innermost) call last.\r\n/usr/local/src/sage-config/local/bin/ipython in <module>()\r\n      1 #!/usr/local/src/sage-config/local/bin/python\r\n      2 \r\n      3 # -*- coding: utf-8 -*-\r\n      4 import re\r\n      5 import sys\r\n      6 \r\n      7 from IPython import start_ipython\r\n      8 \r\n      9 if __name__ == '__main__':\r\n     10     sys.argv[0] = re.sub(r'(-script\\.pyw|\\.exe)?$', '', sys.argv[0])\r\n---> 11     sys.exit(start_ipython())\r\n        global sys.exit = <built-in function exit>\r\n        global start_ipython = <function start_ipython at 0x7fcd69088e60>\r\n\r\n/usr/local/src/sage-config/local/lib/python2.7/site-packages/IPython/__init__.pyc in start_ipython(argv=None, **kwargs={})\r\n    104     This is a public API method, and will survive implementation changes.\r\n    105     \r\n    106     Parameters\r\n    107     ----------\r\n    108     \r\n    109     argv : list or None, optional\r\n    110         If unspecified or None, IPython will parse command-line options from sys.argv.\r\n    111         To prevent any command-line parsing, pass an empty list: `argv=[]`.\r\n    112     user_ns : dict, optional\r\n    113         specify this dictionary to initialize the IPython user namespace with particular values.\r\n    114     kwargs : various, optional\r\n    115         Any other kwargs will be passed to the Application constructor,\r\n    116         such as `config`.\r\n    117     \"\"\"\r\n    118     from IPython.terminal.ipapp import launch_new_instance\r\n--> 119     return launch_new_instance(argv=argv, **kwargs)\r\n        launch_new_instance = <bound method MetaHasTraits.launch_instance of <class 'IPython.terminal.ipapp.TerminalIPythonApp'>>\r\n        argv = None\r\n        kwargs = {}\r\n    120 \r\n    121 def start_kernel(argv=None, **kwargs):\r\n    122     \"\"\"Launch a normal IPython kernel instance (as opposed to embedded)\r\n    123     \r\n    124     `IPython.embed_kernel()` puts a shell in a particular calling scope,\r\n    125     such as a function or method for debugging purposes,\r\n    126     which is often not desirable.\r\n    127     \r\n    128     `start_kernel()` does full, regular IPython initialization,\r\n    129     including loading startup files, configuration, etc.\r\n    130     much of which is skipped by `embed()`.\r\n    131     \r\n    132     Parameters\r\n    133     ----------\r\n    134     \r\n\r\n/usr/local/src/sage-config/local/lib/python2.7/site-packages/traitlets/config/application.pyc in launch_instance(cls=<class 'IPython.terminal.ipapp.TerminalIPythonApp'>, argv=None, **kwargs={})\r\n    643             lines.append(cls.class_config_section())\r\n    644         return '\\n'.join(lines)\r\n    645 \r\n    646     def exit(self, exit_status=0):\r\n    647         self.log.debug(\"Exiting application: %s\" % self.name)\r\n    648         sys.exit(exit_status)\r\n    649 \r\n    650     @classmethod\r\n    651     def launch_instance(cls, argv=None, **kwargs):\r\n    652         \"\"\"Launch a global instance of this Application\r\n    653 \r\n    654         If a global instance already exists, this reinitializes and starts it\r\n    655         \"\"\"\r\n    656         app = cls.instance(**kwargs)\r\n    657         app.initialize(argv)\r\n--> 658         app.start()\r\n        app.start = <bound method TerminalIPythonApp.start of <IPython.terminal.ipapp.TerminalIPythonApp object at 0x7fcd702dc750>>\r\n    659 \r\n    660 #-----------------------------------------------------------------------------\r\n    661 # utility functions, for convenience\r\n    662 #-----------------------------------------------------------------------------\r\n    663 \r\n    664 def boolean_flag(name, configurable, set_help='', unset_help=''):\r\n    665     \"\"\"Helper for building basic --trait, --no-trait flags.\r\n    666 \r\n    667     Parameters\r\n    668     ----------\r\n    669 \r\n    670     name : str\r\n    671         The name of the flag.\r\n    672     configurable : str\r\n    673         The 'Class.trait' string of the trait to be set/unset with the flag\r\n\r\n/usr/local/src/sage-config/local/lib/python2.7/site-packages/IPython/terminal/ipapp.pyc in start(self=<IPython.terminal.ipapp.TerminalIPythonApp object>)\r\n    333         if self.log_level <= logging.INFO: print()\r\n    334 \r\n    335     def _pylab_changed(self, name, old, new):\r\n    336         \"\"\"Replace --pylab='inline' with --pylab='auto'\"\"\"\r\n    337         if new == 'inline':\r\n    338             warnings.warn(\"'inline' not available as pylab backend, \"\r\n    339                       \"using 'auto' instead.\")\r\n    340             self.pylab = 'auto'\r\n    341 \r\n    342     def start(self):\r\n    343         if self.subapp is not None:\r\n    344             return self.subapp.start()\r\n    345         # perform any prexec steps:\r\n    346         if self.interact:\r\n    347             self.log.debug(\"Starting IPython's mainloop...\")\r\n--> 348             self.shell.mainloop()\r\n        self.shell.mainloop = <bound method TerminalInteractiveShell.mainloop of <IPython.terminal.interactiveshell.TerminalInteractiveShell object at 0x7fcd6934c510>>\r\n    349         else:\r\n    350             self.log.debug(\"IPython not interactive...\")\r\n    351 \r\n    352 def load_default_config(ipython_dir=None):\r\n    353     \"\"\"Load the default config file from the default ipython_dir.\r\n    354 \r\n    355     This is useful for embedded shells.\r\n    356     \"\"\"\r\n    357     if ipython_dir is None:\r\n    358         ipython_dir = get_ipython_dir()\r\n    359 \r\n    360     profile_dir = os.path.join(ipython_dir, 'profile_default')\r\n    361 \r\n    362     config = Config()\r\n    363     for cf in Application._load_config_files(\"ipython_config\", path=profile_dir):\r\n\r\n/usr/local/src/sage-config/local/lib/python2.7/site-packages/IPython/terminal/interactiveshell.pyc in mainloop(self=<IPython.terminal.interactiveshell.TerminalInteractiveShell object>, display_banner=<object object>)\r\n    440                 if (not self.confirm_exit) \\\r\n    441                         or self.ask_yes_no('Do you really want to exit ([y]/n)?','y','n'):\r\n    442                     self.ask_exit()\r\n    443 \r\n    444             else:\r\n    445                 if code:\r\n    446                     self.run_cell(code, store_history=True)\r\n    447 \r\n    448     def mainloop(self, display_banner=DISPLAY_BANNER_DEPRECATED):\r\n    449         # An extra layer of protection in case someone mashing Ctrl-C breaks\r\n    450         # out of our internal code.\r\n    451         if display_banner is not DISPLAY_BANNER_DEPRECATED:\r\n    452             warn('mainloop `display_banner` argument is deprecated since IPython 5.0. Call `show_banner()` if needed.', DeprecationWarning, stacklevel=2)\r\n    453         while True:\r\n    454             try:\r\n--> 455                 self.interact()\r\n        self.interact = <bound method TerminalInteractiveShell.interact of <IPython.terminal.interactiveshell.TerminalInteractiveShell object at 0x7fcd6934c510>>\r\n    456                 break\r\n    457             except KeyboardInterrupt as e:\r\n    458                 print(\"\\n%s escaped interact()\\n\" % type(e).__name__)\r\n    459             finally:\r\n    460                 # An interrupt during the eventloop will mess up the\r\n    461                 # internal state of the prompt_toolkit library.\r\n    462                 # Stopping the eventloop fixes this, see\r\n    463                 # https://github.com/ipython/ipython/pull/9867\r\n    464                 if hasattr(self, '_eventloop'):\r\n    465                     self._eventloop.stop()\r\n    466 \r\n    467     _inputhook = None\r\n    468     def inputhook(self, context):\r\n    469         if self._inputhook is not None:\r\n    470             self._inputhook(context)\r\n\r\n/usr/local/src/sage-config/local/lib/python2.7/site-packages/IPython/terminal/interactiveshell.pyc in interact(self=<IPython.terminal.interactiveshell.TerminalInteractiveShell object>, display_banner=<object object>)\r\n    423     def pre_prompt(self):\r\n    424         if self.rl_next_input:\r\n    425             self.pt_cli.application.buffer.text = cast_unicode_py2(self.rl_next_input)\r\n    426             self.rl_next_input = None\r\n    427 \r\n    428     def interact(self, display_banner=DISPLAY_BANNER_DEPRECATED):\r\n    429 \r\n    430         if display_banner is not DISPLAY_BANNER_DEPRECATED:\r\n    431             warn('interact `display_banner` argument is deprecated since IPython 5.0. Call `show_banner()` if needed.', DeprecationWarning, stacklevel=2)\r\n    432 \r\n    433         self.keep_running = True\r\n    434         while self.keep_running:\r\n    435             print(self.separate_in, end='')\r\n    436 \r\n    437             try:\r\n--> 438                 code = self.prompt_for_code()\r\n        code = u'import math; math.sin?'\r\n        self.prompt_for_code = <bound method TerminalInteractiveShell.prompt_for_code of <IPython.terminal.interactiveshell.TerminalInteractiveShell object at 0x7fcd6934c510>>\r\n    439             except EOFError:\r\n    440                 if (not self.confirm_exit) \\\r\n    441                         or self.ask_yes_no('Do you really want to exit ([y]/n)?','y','n'):\r\n    442                     self.ask_exit()\r\n    443 \r\n    444             else:\r\n    445                 if code:\r\n    446                     self.run_cell(code, store_history=True)\r\n    447 \r\n    448     def mainloop(self, display_banner=DISPLAY_BANNER_DEPRECATED):\r\n    449         # An extra layer of protection in case someone mashing Ctrl-C breaks\r\n    450         # out of our internal code.\r\n    451         if display_banner is not DISPLAY_BANNER_DEPRECATED:\r\n    452             warn('mainloop `display_banner` argument is deprecated since IPython 5.0. Call `show_banner()` if needed.', DeprecationWarning, stacklevel=2)\r\n    453         while True:\r\n\r\n/usr/local/src/sage-config/local/lib/python2.7/site-packages/IPython/terminal/interactiveshell.pyc in prompt_for_code(self=<IPython.terminal.interactiveshell.TerminalInteractiveShell object>)\r\n    328                         processor=HighlightMatchingBracketProcessor(chars='[](){}'),\r\n    329                         filter=HasFocus(DEFAULT_BUFFER) & ~IsDone() &\r\n    330                             Condition(lambda cli: self.highlight_matching_brackets))],\r\n    331                 }\r\n    332 \r\n    333     def _update_layout(self):\r\n    334         \"\"\"\r\n    335         Ask for a re computation of the application layout, if for example ,\r\n    336         some configuration options have changed.\r\n    337         \"\"\"\r\n    338         if self._pt_app:\r\n    339             self._pt_app.layout = create_prompt_layout(**self._layout_options())\r\n    340 \r\n    341     def prompt_for_code(self):\r\n    342         document = self.pt_cli.run(\r\n--> 343             pre_run=self.pre_prompt, reset_current_buffer=True)\r\n        global pre_run = undefined\r\n        self.pre_prompt = <bound method TerminalInteractiveShell.pre_prompt of <IPython.terminal.interactiveshell.TerminalInteractiveShell object at 0x7fcd6934c510>>\r\n        global reset_current_buffer = undefined\r\n        global True = undefined\r\n    344         return document.text\r\n    345 \r\n    346     def enable_win_unicode_console(self):\r\n    347         if sys.version_info >= (3, 6):\r\n    348             # Since PEP 528, Python uses the unicode APIs for the Windows\r\n    349             # console by default, so WUC shouldn't be needed.\r\n    350             return\r\n    351 \r\n    352         import win_unicode_console\r\n    353 \r\n    354         if PY3:\r\n    355             win_unicode_console.enable()\r\n    356         else:\r\n    357             # https://github.com/ipython/ipython/issues/9768\r\n    358             from win_unicode_console.streams import (TextStreamWrapper,\r\n\r\n/usr/local/src/sage-config/local/lib/python2.7/site-packages/prompt_toolkit/interface.pyc in run(self=<prompt_toolkit.interface.CommandLineInterface object>, reset_current_buffer=True, pre_run=<bound method TerminalInteractiveShell.pre_promp...nteractiveshell.TerminalInteractiveShell object>>)\r\n    393         This runs the eventloop until a return value has been set.\r\n    394 \r\n    395         :param reset_current_buffer: XXX: Not used anymore.\r\n    396         :param pre_run: Callable that is called right after the reset has taken\r\n    397             place. This allows custom initialisation.\r\n    398         \"\"\"\r\n    399         assert pre_run is None or callable(pre_run)\r\n    400 \r\n    401         try:\r\n    402             self._is_running = True\r\n    403 \r\n    404             self.on_start.fire()\r\n    405             self.reset()\r\n    406 \r\n    407             # Call pre_run.\r\n--> 408             self._pre_run(pre_run)\r\n        self._pre_run = <bound method CommandLineInterface._pre_run of <prompt_toolkit.interface.CommandLineInterface object at 0x7fcd6859a910>>\r\n        pre_run = <bound method TerminalInteractiveShell.pre_prompt of <IPython.terminal.interactiveshell.TerminalInteractiveShell object at 0x7fcd6934c510>>\r\n    409 \r\n    410             # Run eventloop in raw mode.\r\n    411             with self.input.raw_mode():\r\n    412                 self.renderer.request_absolute_cursor_position()\r\n    413                 self._redraw()\r\n    414 \r\n    415                 self.eventloop.run(self.input, self.create_eventloop_callbacks())\r\n    416         finally:\r\n    417             # Clean up renderer. (This will leave the alternate screen, if we use\r\n    418             # that.)\r\n    419 \r\n    420             # If exit/abort haven't been called set, but another exception was\r\n    421             # thrown instead for some reason, make sure that we redraw in exit\r\n    422             # mode.\r\n    423             if not self.is_done:\r\n\r\n/usr/local/src/sage-config/local/lib/python2.7/site-packages/prompt_toolkit/interface.pyc in _pre_run(self=<prompt_toolkit.interface.CommandLineInterface object>, pre_run=<bound method TerminalInteractiveShell.pre_promp...nteractiveshell.TerminalInteractiveShell object>>)\r\n    368         \"\"\"\r\n    369         # Erase, request position (when cursor is at the start position)\r\n    370         # and redraw again. -- The order is important.\r\n    371         self.renderer.erase(leave_alternate_screen=False, erase_title=False)\r\n    372         self.renderer.request_absolute_cursor_position()\r\n    373         self._redraw()\r\n    374 \r\n    375     def _load_next_buffer_indexes(self):\r\n    376         for buff, index in self._next_buffer_indexes.items():\r\n    377             if buff in self.buffers:\r\n    378                 self.buffers[buff].working_index = index\r\n    379 \r\n    380     def _pre_run(self, pre_run=None):\r\n    381         \" Called during `run`. \"\r\n    382         if pre_run:\r\n--> 383             pre_run()\r\n        pre_run = <bound method TerminalInteractiveShell.pre_prompt of <IPython.terminal.interactiveshell.TerminalInteractiveShell object at 0x7fcd6934c510>>\r\n    384 \r\n    385         # Process registered \"pre_run_callables\" and clear list.\r\n    386         for c in self.pre_run_callables:\r\n    387             c()\r\n    388         del self.pre_run_callables[:]\r\n    389 \r\n    390     def run(self, reset_current_buffer=False, pre_run=None):\r\n    391         \"\"\"\r\n    392         Read input from the command line.\r\n    393         This runs the eventloop until a return value has been set.\r\n    394 \r\n    395         :param reset_current_buffer: XXX: Not used anymore.\r\n    396         :param pre_run: Callable that is called right after the reset has taken\r\n    397             place. This allows custom initialisation.\r\n    398         \"\"\"\r\n\r\n/usr/local/src/sage-config/local/lib/python2.7/site-packages/IPython/terminal/interactiveshell.pyc in pre_prompt(self=<IPython.terminal.interactiveshell.TerminalInteractiveShell object>)\r\n    410     def __init__(self, *args, **kwargs):\r\n    411         super(TerminalInteractiveShell, self).__init__(*args, **kwargs)\r\n    412         self.init_prompt_toolkit_cli()\r\n    413         self.init_term_title()\r\n    414         self.keep_running = True\r\n    415 \r\n    416         self.debugger_history = InMemoryHistory()\r\n    417 \r\n    418     def ask_exit(self):\r\n    419         self.keep_running = False\r\n    420 \r\n    421     rl_next_input = None\r\n    422 \r\n    423     def pre_prompt(self):\r\n    424         if self.rl_next_input:\r\n--> 425             self.pt_cli.application.buffer.text = cast_unicode_py2(self.rl_next_input)\r\n        self.pt_cli.application.buffer.text = u'import math; math.sin?'\r\n        global cast_unicode_py2 = <function cast_unicode at 0x7fcd6c2f6cf8>\r\n        self.rl_next_input = 'import math; math.sin'\r\n    426             self.rl_next_input = None\r\n    427 \r\n    428     def interact(self, display_banner=DISPLAY_BANNER_DEPRECATED):\r\n    429 \r\n    430         if display_banner is not DISPLAY_BANNER_DEPRECATED:\r\n    431             warn('interact `display_banner` argument is deprecated since IPython 5.0. Call `show_banner()` if needed.', DeprecationWarning, stacklevel=2)\r\n    432 \r\n    433         self.keep_running = True\r\n    434         while self.keep_running:\r\n    435             print(self.separate_in, end='')\r\n    436 \r\n    437             try:\r\n    438                 code = self.prompt_for_code()\r\n    439             except EOFError:\r\n    440                 if (not self.confirm_exit) \\\r\n\r\n/usr/local/src/sage-config/local/lib/python2.7/site-packages/prompt_toolkit/buffer.pyc in text(self=<prompt_toolkit.buffer.Buffer object>, value=u'import math; math.sin')\r\n    356 \r\n    357         return value != original_position\r\n    358 \r\n    359     @property\r\n    360     def text(self):\r\n    361         return self._working_lines[self.working_index]\r\n    362 \r\n    363     @text.setter\r\n    364     def text(self, value):\r\n    365         \"\"\"\r\n    366         Setting text. (When doing this, make sure that the cursor_position is\r\n    367         valid for this text. text/cursor_position should be consistent at any time,\r\n    368         otherwise set a Document instead.)\r\n    369         \"\"\"\r\n    370         assert isinstance(value, six.text_type), 'Got %r' % value\r\n--> 371         assert self.cursor_position <= len(value)\r\n        self.cursor_position = 22\r\n        global len = undefined\r\n        value = u'import math; math.sin'\r\n    372 \r\n    373         # Don't allow editing of read-only buffers.\r\n    374         if self.read_only():\r\n    375             raise EditReadOnlyBuffer()\r\n    376 \r\n    377         changed = self._set_text(value)\r\n    378 \r\n    379         if changed:\r\n    380             self._text_changed()\r\n    381 \r\n    382             # Reset history search text.\r\n    383             self.history_search_text = None\r\n    384 \r\n    385     @property\r\n    386     def cursor_position(self):\r\n\r\nAssertionError: \r\n\r\n**********************************************************************\r\n\r\nOops, ipython crashed. We do our best to make it stable, but...\r\n\r\nA crash report was automatically generated with the following information:\r\n  - A verbatim copy of the crash traceback.\r\n  - A copy of your input history during this session.\r\n  - Data on your current ipython configuration.\r\n\r\nIt was left in the file named:\r\n        '/home/jdemeyer/.sage/ipython-5.0.0/Crash_report_ipython.txt'\r\nIf you can email this file to the developers, the information in it will help\r\nthem in understanding and correcting the problem.\r\n\r\nYou can mail it to: The IPython Development Team at ipython-dev@scipy.org\r\nwith the subject 'ipython Crash Report'.\r\n\r\nIf you want to do it now, the following command will work (under Unix):\r\nmail -s 'ipython Crash Report' ipython-dev@scipy.org < /home/jdemeyer/.sage/ipython-5.0.0/Crash_report_ipython.txt\r\n\r\nTo ensure accurate tracking of this issue, please file a report about it at:\r\nhttps://github.com/ipython/ipython/issues\r\n\r\nHit <Enter> to quit (your terminal may close):\r\n```", "commits": [{"node_id": "MDY6Q29tbWl0MTIzNjAwMzowOTNjYjdlNjA1OWM4ZDUzY2IyYjk5YzMzOGNmYWE5OWFlMzcyYzdk", "commit_message": "Fix set_next_input with prompt_toolkit 1.0.10\n\nCloses gh-10229", "commit_timestamp": "2017-02-01T13:06:48Z", "files": ["IPython/terminal/interactiveshell.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmUyYjZhZTkzNzVkYzNlZTVmNzgwNzY2ZDJlM2Y3ZGU4Yjk1YmIxODg=", "commit_message": "Backport PR #10231: Fix set_next_input with prompt_toolkit 1.0.10\n\nCloses gh-10229\n\nPlease don't merge this just yet.\n\n jonathanslenders I discovered after updating that we can no longer set text in the buffer with a `pre_run` function, because `pre_run_callables` reset the buffer immediately after that. I've worked around this by adding another callable to `pre_run_callables` which sets the text that I want, but I don't know if this is the right way to do it, or whether it works with previous releases of prompt_toolkit.", "commit_timestamp": "2017-02-21T17:04:48Z", "files": ["IPython/terminal/interactiveshell.py"]}], "labels": [], "created_at": "2017-02-01T09:22:23Z", "closed_at": "2017-02-21T10:39:08Z", "method": ["regex"]}
{"issue_number": 10138, "title": "Initial blank line of multiline output", "body": "The following is normal.\r\n```\r\nIn [1]: class Foo(object):\r\n   ...: \r\n   ...:     def __repr__(self):\r\n   ...:         return \"foo\"\r\n   ...: \r\n   ...: \r\n   ...: class Bar(object):\r\n   ...: \r\n   ...:     def __repr__(self):\r\n   ...:         return \"bar\\nbar\"\r\n   ...:     \r\n\r\nIn [2]: Foo()\r\nOut[2]: foo\r\n\r\nIn [3]: Bar()\r\nOut[3]: \r\nbar\r\nbar\r\n```\r\nBut in Sage that uses IPython, the initial blank line for multiline output is just redundant.\r\n```\r\nsage: class Foo(object):\r\n....: \r\n....:     def __repr__(self):\r\n....:         return \"foo\"\r\n....: \r\n....: \r\n....: class Bar(object):\r\n....: \r\n....:     def __repr__(self):\r\n....:         return \"bar\\nbar\"\r\n....:     \r\nsage: \r\nsage: Foo()\r\nfoo\r\nsage: Bar()\r\n\r\nbar\r\nbar\r\n```\r\nI am not sure if this is a bug of IPython or of Sage. I would appreciate comments by anyone who knows better.", "commits": [{"node_id": "MDY6Q29tbWl0MTIzNjAwMzo0YzZlNjNkMDhiMmRmZjBlYWViOGMzNTcxMDg2NDQ5ODlmNWIyOTBj", "commit_message": "Empty prompt effectively ends with newline\n\nCloses gh-10138", "commit_timestamp": "2017-01-09T15:45:21Z", "files": ["IPython/terminal/prompts.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjlhMTRmOThkZmZmNTA4ZmYxMGY2NzI2MDMzODBiOWZjZGE2MjYyYTA=", "commit_message": "Backport PR #10146: Empty prompt effectively ends with newline\n\nCloses gh-10138\n\nSigned-off-by: Thomas Kluyver <thomas@kluyver.me.uk>", "commit_timestamp": "2017-01-12T12:44:42Z", "files": ["IPython/terminal/prompts.py"]}], "labels": [], "created_at": "2017-01-08T05:06:59Z", "closed_at": "2017-01-12T12:39:00Z", "method": ["regex"]}
{"issue_number": 10137, "title": "Importing pyplot causes bouncing dock icon on mac", "body": "This is illustrated by the following gif:\r\n\r\n![image](http://g.recordit.co/ARO7Maic0K.gif)\r\n\r\nImporting pyplot in the normal python repl causes the python rocket icon to appear but not bounce distractingly. Importing it inside IPython causes the icon to bounce annoyingly for almost a minute.\r\n\r\nThis is using a framework build of Python from Homebrew.\r\n", "commits": [{"node_id": "MDY6Q29tbWl0MjM0NDA3MzoyNjBlOTg4NDlkMjdmZmQ5ODA2MjhjY2UzMjJlODA5MzUyYjZlYTg5", "commit_message": "Always run the OS X loop even if no windows.\n\nOtherwise this can trigger infinite Python-Icon-In-Dock bouncing.\nSee #10137. I will guess that this is because application on OS X may\nnot have windows and still need to process events.\n\nIt may be that an alternative is to run the loop only once the first\ntime, but I'm unsure.\n\n    at_least_once = False\n\n    def inputhook(context):\n\t\"\"\"Inputhook for Cocoa (NSApp)\"\"\"\n\tNSApp = _NSApp()\n\twindow_count = msg(\n\t    msg(NSApp, n('windows')),\n\t    n('count')\n\t)\n\tif not window_count and not at_least_once:\n\t    at_least_once = True\n\t    return\n\t_stop_on_read(context.fileno())\n\tmsg(NSApp, n('run'))\n\tif not _triggered.is_set():\n\t    # app closed without firing callback,\n\t    # probably due to last window being closed.\n\t    # Run the loop manually in this case,\n\t    # since there may be events still to process (#9734)\n\t    CoreFoundation.CFRunLoopRun()\n\nCloses #10137", "commit_timestamp": "2017-01-12T21:06:50Z", "files": ["IPython/terminal/pt_inputhooks/osx.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjI2MGU5ODg0OWQyN2ZmZDk4MDYyOGNjZTMyMmU4MDkzNTJiNmVhODk=", "commit_message": "Always run the OS X loop even if no windows.\n\nOtherwise this can trigger infinite Python-Icon-In-Dock bouncing.\nSee #10137. I will guess that this is because application on OS X may\nnot have windows and still need to process events.\n\nIt may be that an alternative is to run the loop only once the first\ntime, but I'm unsure.\n\n    at_least_once = False\n\n    def inputhook(context):\n\t\"\"\"Inputhook for Cocoa (NSApp)\"\"\"\n\tNSApp = _NSApp()\n\twindow_count = msg(\n\t    msg(NSApp, n('windows')),\n\t    n('count')\n\t)\n\tif not window_count and not at_least_once:\n\t    at_least_once = True\n\t    return\n\t_stop_on_read(context.fileno())\n\tmsg(NSApp, n('run'))\n\tif not _triggered.is_set():\n\t    # app closed without firing callback,\n\t    # probably due to last window being closed.\n\t    # Run the loop manually in this case,\n\t    # since there may be events still to process (#9734)\n\t    CoreFoundation.CFRunLoopRun()\n\nCloses #10137", "commit_timestamp": "2017-01-12T21:06:50Z", "files": ["IPython/terminal/pt_inputhooks/osx.py"]}], "labels": ["bug"], "created_at": "2017-01-08T00:46:19Z", "closed_at": "2017-01-13T09:36:32Z", "method": ["label"]}
{"issue_number": 10113, "title": "Print during import screws up input prompt", "body": "Steps to reproduce:\r\n\r\n1. Create a module which prints something during import, e.g. a file `hello_world.py`:\r\n\r\n```python\r\nprint('Hello world!')\r\n```\r\n\r\n2. Try to use tab-completion for sub-modules in an import statement\r\n\r\n```python\r\nIn [1]: import hello_world.<hit tab>\r\n```\r\n\r\nFor this minimal example there wouldn't be any submodules, but it will autocomplete `py` to match the filename. What happens is that the print statement during import interferes with the input prompt.\r\n\r\nExample output:\r\n```\r\n>ipython\r\nPython 3.5.2 |Continuum Analytics, Inc.| (default, Jul  5 2016, 11:41:13) [MSC v.1900 64 bit (AMD64)]\r\nType \"copyright\", \"credits\" or \"license\" for more information.\r\n\r\nIPython 5.1.0 -- An enhanced Interactive Python.\r\n?         -> Introduction and overview of IPython's features.\r\n%quickref -> Quick reference.\r\nhelp      -> Python's own help system.\r\nobject?   -> Details about 'object', use 'object??' for extra details.\r\n\r\nIn [1]: import hello_world.Hello world!\r\npy\r\n```", "commits": [{"node_id": "MDY6Q29tbWl0MTIzNjAwMzpjYTIwODk1NWFhMDljNmM5OGEyOThjNDFkNTA2M2MwYzBhY2U3YTc2", "commit_message": "Use prompt_toolkit's patch_stdout_context when finding completions\n\nCloses gh-10113", "commit_timestamp": "2017-01-13T13:31:53Z", "files": ["IPython/terminal/ptutils.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmEzOGNhZjY2NDFiMzUyZTRiZjQ0MmZiMmZlZjQ4OGQzNzU0NmQ3NjM=", "commit_message": "Backport PR #10153: Use prompt_toolkit's patch_stdout_context when finding completions\n\nCloses gh-10113", "commit_timestamp": "2017-01-27T22:29:25Z", "files": ["IPython/terminal/ptutils.py"]}], "labels": ["tab-completion"], "created_at": "2017-01-02T15:09:16Z", "closed_at": "2017-01-13T14:42:23Z", "method": ["regex"]}
{"issue_number": 10037, "title": "Python variables obscur ipdb commands", "body": "This PR: #https://github.com/ipython/ipython/pull/9449 introduced annoying problem: I couldn't step through the following code (execute line 3):\n\n```\nn = 1\nnext = 1\nprint('end')\n```\n\nBecause n/next commands weren't working:\n\n```\n$ ipdb test.py\n> /tmp/test.py(1)<module>()\n----> 1 n = 1\n      2 next = 1\n      3 print('end')\n\nipdb> next\n> /tmp/test.py(2)<module>()\n      1 n = 1\n----> 2 next = 1\n      3 print('end')\n\nipdb> next\n> /tmp/test.py(3)<module>()\n      1 n = 1\n      2 next = 1\n----> 3 print('end')\n\nipdb> next\n1\nipdb> n\n1\nipdb> !n\n1\nipdb> !next\n1\n```\n\nI discovered that in this case I can use standard pdb or I can get it to work in ipdb by using `!!n` (it still has a bug that @tcztzy tried to solve in https://github.com/ipython/ipython/pull/10035) but what do you think about changing this behavior: all ipdb builtin commands should work as they meant to and if we want to see python variables we use i.e.: `!n` instead of `n`. Variables' names that are not ipdb commands could still be displayed by just writing their name.\n\n[StackOverflow thread](http://stackoverflow.com/questions/40224066/ipdb-commands-obscured-by-variables)\n", "commits": [{"node_id": "MDY6Q29tbWl0MTIzNjAwMzoyNWY3ZDI4NTA4NzEzZDRmMWQzNjFiY2IzMjY2ZjM2ZDFiOTNjOWFm", "commit_message": "Revert debugger 'smart command mode'\n\nThis is a manual revert of PR #9449\n\nCloses gh-10037\n\nI don't think there's currently enough support for smart command mode to\nbe worth adding a config option for it now. We can always add this\nlater.", "commit_timestamp": "2016-11-09T17:27:02Z", "files": ["IPython/core/debugger.py"]}], "labels": [], "created_at": "2016-10-26T09:41:48Z", "closed_at": "2016-11-09T17:42:09Z", "method": ["regex"]}
{"issue_number": 10028, "title": "Running debugger multiple times causes AttributeError: 'NoneType' object has no attribute 'f_globals'", "body": "Running the %run magic more than once causes an AttributeError: 'NoneType' object has no attribute 'f_globals'.  I have not encountered this problem before, and it is present on multiple files.  I created a new file to just print one line and the problem persists.\n\n```\n~/Workspace/puzzles/FiveThirtyEightRiddler $ ipython\nPython 3.4.2 (default, Jun 20 2016, 14:25:19) \nType \"copyright\", \"credits\" or \"license\" for more information.\n\nIPython 5.1.0 -- An enhanced Interactive Python.\n?         -> Introduction and overview of IPython's features.\n%quickref -> Quick reference.\nhelp      -> Python's own help system.\nobject?   -> Details about 'object', use 'object??' for extra details.\n\nIn [1]: %run -d test.py\nBreakpoint 1 at /home/andrew/Workspace/puzzles/FiveThirtyEightRiddler/test.py:1\nNOTE: Enter 'c' at the ipdb>  prompt to continue execution.\n> /home/andrew/Workspace/puzzles/FiveThirtyEightRiddler/test.py(1)<module>()\n1---> 1 print('test')\n\nipdb> c\ntest\n\nIn [2]: %run -d test.py\n---------------------------------------------------------------------------\nAttributeError                            Traceback (most recent call last)\n<ipython-input-2-63fffe36c4af> in <module>()\n----> 1 get_ipython().magic('run -d test.py')\n\n/usr/lib/python3.4/site-packages/IPython/core/interactiveshell.py in magic(self, arg_s)\n   2156         magic_name, _, magic_arg_s = arg_s.partition(' ')\n   2157         magic_name = magic_name.lstrip(prefilter.ESC_MAGIC)\n-> 2158         return self.run_line_magic(magic_name, magic_arg_s)\n   2159 \n   2160     #-------------------------------------------------------------------------\n\n/usr/lib/python3.4/site-packages/IPython/core/interactiveshell.py in run_line_magic(self, magic_name, line)\n   2077                 kwargs['local_ns'] = sys._getframe(stack_depth).f_locals\n   2078             with self.builtin_trap:\n-> 2079                 result = fn(*args,**kwargs)\n   2080             return result\n   2081 \n\n<decorator-gen-57> in run(self, parameter_s, runner, file_finder)\n\n/usr/lib/python3.4/site-packages/IPython/core/magic.py in <lambda>(f, *a, **k)\n    186     # but it's overkill for just that one bit of state.\n    187     def magic_deco(arg):\n--> 188         call = lambda f, *a, **k: f(*a, **k)\n    189 \n    190         if callable(arg):\n\n/usr/lib/python3.4/site-packages/IPython/core/magics/execution.py in run(self, parameter_s, runner, file_finder)\n    713                         opts.get('b', ['1'])[0], filename)\n    714                     self._run_with_debugger(\n--> 715                         code, code_ns, filename, bp_line, bp_file)\n    716                 else:\n    717                     if 'm' in opts:\n\n/usr/lib/python3.4/site-packages/IPython/core/magics/execution.py in _run_with_debugger(self, code, code_ns, filename, bp_line, bp_file)\n    816             maxtries = 10\n    817             bp_file = bp_file or filename\n--> 818             checkline = deb.checkline(bp_file, bp_line)\n    819             if not checkline:\n    820                 for bp in range(bp_line + 1, bp_line + maxtries + 1):\n\n/usr/lib64/python3.4/pdb.py in checkline(self, filename, lineno)\n    743         # this method should be callable before starting debugging, so default\n    744         # to \"no globals\" if there is no current frame\n--> 745         globs = self.curframe.f_globals if hasattr(self, 'curframe') else None\n    746         line = linecache.getline(filename, lineno, globs)\n    747         if not line:\n\nAttributeError: 'NoneType' object has no attribute 'f_globals'\n\nIn [3]: \n\n```\n\ntest.py:\n\n```\nprint('test')\n```\n\n```\n~/Workspace/puzzles/FiveThirtyEightRiddler $ python3 -c \"import IPython; print(IPython.sys_info())\"\n{'commit_hash': '5c9c918',\n 'commit_source': 'installation',\n 'default_encoding': 'UTF-8',\n 'ipython_path': '/usr/lib/python3.4/site-packages/IPython',\n 'ipython_version': '5.1.0',\n 'os_name': 'posix',\n 'platform': 'Linux-4.0.7-300.fc22.x86_64-x86_64-with-fedora-22-Twenty_Two',\n 'sys_executable': '/usr/bin/python3',\n 'sys_platform': 'linux',\n 'sys_version': '3.4.2 (default, Jun 20 2016, 14:25:19) \\n'\n                '[GCC 5.3.1 20160406 (Red Hat 5.3.1-6)]'}\n```\n", "commits": [{"node_id": "MDY6Q29tbWl0MTIzNjAwMzo2YjE5NjBkODExZDI1ZThmNzU0MzI0MjU5YTViNGZkNTlmOGY4MTYy", "commit_message": "Remove debugger curframe attribute before using checkline()\n\nCloses gh-10028", "commit_timestamp": "2016-10-25T12:36:39Z", "files": ["IPython/core/magics/execution.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjUxY2YwY2Q4YmJmOWEwYmQzZGZhYTA2NDNjYmUyY2MzYjUwN2ExMzM=", "commit_message": "Merge pull request #10030 from takluyver/i10028\n\nFix running %run -d twice", "commit_timestamp": "2016-10-25T13:29:20Z", "files": ["IPython/core/magics/execution.py", "IPython/core/tests/test_run.py", "IPython/testing/tools.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjczYmQ4NGU0OTJkMjA5ODljYWU4OTNjMjg4NWEwNTIyNmM3MTJmMDE=", "commit_message": "Backport PR #10030: Fix running %run -d twice\n\nI suspect this is a bug in pdb; I'll try to get it fixed there too, but deleting `deb.curframe` seems to work around the issue.\n\nCloses  10028 .\n\nSigned-off-by: Thomas Kluyver <thomas@kluyver.me.uk>", "commit_timestamp": "2017-01-12T12:34:54Z", "files": ["IPython/core/magics/execution.py", "IPython/core/tests/test_run.py", "IPython/testing/tools.py"]}], "labels": ["bug"], "created_at": "2016-10-24T23:26:35Z", "closed_at": "2016-10-25T13:29:20Z", "linked_pr_number": [10028], "method": ["label", "regex"]}
{"issue_number": 10014, "title": "Console reverse search broken", "body": "When trying to use reverse-search in `ipython console` / `jupyter console`, I am getting the following error:\n\n```\nI-search backward: Traceback (most recent call last):\n  File \"/Users/andriimaksai/anaconda/bin/jupyter-console\", line 5, in <module>\n    app.main()\n  File \"/Users/andriimaksai/anaconda/lib/python2.7/site-packages/jupyter_core/application.py\", line 267, in launch_instance\n    return super(JupyterApp, cls).launch_instance(argv=argv, **kwargs)\n  File \"/Users/andriimaksai/anaconda/lib/python2.7/site-packages/traitlets/config/application.py\", line 596, in launch_instance\n    app.start()\n  File \"/Users/andriimaksai/anaconda/lib/python2.7/site-packages/jupyter_console/app.py\", line 151, in start\n    self.shell.mainloop()\n  File \"/Users/andriimaksai/anaconda/lib/python2.7/site-packages/jupyter_console/ptshell.py\", line 463, in mainloop\n    self.interact()\n  File \"/Users/andriimaksai/anaconda/lib/python2.7/site-packages/jupyter_console/ptshell.py\", line 448, in interact\n    code = self.prompt_for_code()\n  File \"/Users/andriimaksai/anaconda/lib/python2.7/site-packages/jupyter_console/ptshell.py\", line 408, in prompt_for_code\n    reset_current_buffer=True)\n  File \"/Users/andriimaksai/anaconda/lib/python2.7/site-packages/prompt_toolkit/interface.py\", line 399, in run\n    self._redraw()\n  File \"/Users/andriimaksai/anaconda/lib/python2.7/site-packages/prompt_toolkit/interface.py\", line 346, in _redraw\n    self.renderer.render(self, self.layout, is_done=self.is_done)\n  File \"/Users/andriimaksai/anaconda/lib/python2.7/site-packages/prompt_toolkit/renderer.py\", line 429, in render\n    extended_height=size.rows,\n  File \"/Users/andriimaksai/anaconda/lib/python2.7/site-packages/prompt_toolkit/layout/containers.py\", line 142, in write_to_screen\n    sizes = self._divide_heigths(cli, write_position)\n  File \"/Users/andriimaksai/anaconda/lib/python2.7/site-packages/prompt_toolkit/layout/containers.py\", line 177, in _divide_heigths\n    dimensions = [get_dimension_for_child(c, index) for index, c in enumerate(self.children)]\n  File \"/Users/andriimaksai/anaconda/lib/python2.7/site-packages/prompt_toolkit/layout/containers.py\", line 175, in get_dimension_for_child\n    return c.preferred_height(cli, write_position.width, write_position.extended_height)\n  File \"/Users/andriimaksai/anaconda/lib/python2.7/site-packages/prompt_toolkit/layout/containers.py\", line 395, in preferred_height\n    return self.content.preferred_height(cli, width, max_available_height)\n  File \"/Users/andriimaksai/anaconda/lib/python2.7/site-packages/prompt_toolkit/layout/containers.py\", line 128, in preferred_height\n    dimensions = [c.preferred_height(cli, width, max_available_height) for c in self.children]\n  File \"/Users/andriimaksai/anaconda/lib/python2.7/site-packages/prompt_toolkit/layout/containers.py\", line 1000, in preferred_height\n    cli, width - total_margin_width, max_available_height, wrap_lines),\n  File \"/Users/andriimaksai/anaconda/lib/python2.7/site-packages/prompt_toolkit/layout/controls.py\", line 502, in preferred_height\n    content = self.create_content(cli, width, None)\n  File \"/Users/andriimaksai/anaconda/lib/python2.7/site-packages/prompt_toolkit/layout/controls.py\", line 614, in create_content\n    ignore_case=ss.ignore_case))\n  File \"/Users/andriimaksai/anaconda/lib/python2.7/site-packages/prompt_toolkit/buffer.py\", line 1075, in document_for_search\n    search_result = self._search(search_state, include_current_position=True)\n  File \"/Users/andriimaksai/anaconda/lib/python2.7/site-packages/prompt_toolkit/buffer.py\", line 1062, in _search\n    result = search_once(working_index, document)\n  File \"/Users/andriimaksai/anaconda/lib/python2.7/site-packages/prompt_toolkit/buffer.py\", line 1052, in search_once\n    document = Document(self._working_lines[i], len(self._working_lines[i]))\n  File \"/Users/andriimaksai/anaconda/lib/python2.7/site-packages/prompt_toolkit/document.py\", line 83, in __init__\n    assert isinstance(text, six.text_type), 'Got %r' % text\nAssertionError: Got 'ls'\n```\n\nOutput of `python -c \"import IPython; print(IPython.sys_info())\"`\n\n```\n{'commit_hash': u'5c9c918',\n 'commit_source': 'installation',\n 'default_encoding': 'UTF-8',\n 'ipython_path': '/Users/andriimaksai/anaconda/lib/python2.7/site-packages/IPython',\n 'ipython_version': '5.1.0',\n 'os_name': 'posix',\n 'platform': 'Darwin-15.5.0-x86_64-i386-64bit',\n 'sys_executable': '/Users/andriimaksai/anaconda/bin/python',\n 'sys_platform': 'darwin',\n 'sys_version': '2.7.12 |Anaconda custom (x86_64)| (default, Jul  2 2016, 17:43:17) \\n[GCC 4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2336.11.00)]'}\n```\n\nHowever, when I launch IPython from python, everything works normally: `python -c \"import IPython; IPython.start_ipython()`. It also works as `python -m IPython`, but not as `python -m jupyter console`. Any ideas what might be the source of the problem?\n", "commits": [{"node_id": "MDY6Q29tbWl0MTIzNjAwMzpmM2E0NDA5YTE0MDQ4ZjdjYWRlN2NmMjI2ZWQwYjJlMTI2MTIzMjI5", "commit_message": "Attempt at fixing assertion from reverse search\n\nTrying to fix gh-10014, though I can't reproduce the problem to test it.\n\nPR against 5.x because I think this is only needed for Python 2.", "commit_timestamp": "2017-03-02T13:19:34Z", "files": ["IPython/terminal/interactiveshell.py"]}], "labels": [], "created_at": "2016-10-18T16:35:01Z", "closed_at": "2017-08-17T12:50:39Z", "method": ["regex"]}
{"issue_number": 10006, "title": "impossible to exit debugger traces", "body": "I like to set traces, and from what I understand from the docs, The Right Way is to use `TerminalPdb`.\nHowever, I can not find out how to quit the `TerminalPdb` debugger---maybe I'm just daft.\nSay I set a trace in a long loop:\n\n``` python\nfrom IPython.terminal.debugger import TerminalPdb\npdb = TerminalPdb()\n\nwhile True:\n    pdb.set_trace()\n```\n\nThe only way to exit this program that I found is to kill it.\n\nMy questions are:\n- Is TerminalPdb the best way to set traces?\n- Is this expected behavior?\n- How do I quit?\n\nThanks!\n\n(I'm on IPython 5.1.0)\n", "commits": [{"node_id": "MDY6Q29tbWl0MjM0NDA3MzpkMzBjY2YyZmQ3NTBjNGYzNGIwODI2YzExNjlhZDkxMTMzODAyZmJk", "commit_message": "Do not capture BdbQuit.\n\nIf one want to exit Pdb cleanly, it is possible to just use `continue`\n(or `c`) that will keep up until a potential next invocation.\n\nQuit is _meant_ to raise an error.\n\nCloses #10006", "commit_timestamp": "2016-10-15T21:18:09Z", "files": ["IPython/core/debugger.py"]}, {"node_id": "MDY6Q29tbWl0MjM0NDA3Mzo5NzY4NWM1YTFmZTkwYWZkZDZiMjg4Y2YzNDg5ZWNmNTNmNzVmZGYw", "commit_message": "Do not capture BdbQuit.\n\nIf one want to exit Pdb cleanly, it is possible to just use `continue`\n(or `c`) that will keep up until a potential next invocation.\n\nQuit is _meant_ to raise an error.\n\nCloses #10006", "commit_timestamp": "2016-10-15T21:21:47Z", "files": ["IPython/core/debugger.py"]}, {"node_id": "C_kwDOAz-HA9oAKGZjMjM1OTg1NTA4ZDA0MzExOTI0MDViNDZjNmZiZmIyMDkwNjkwNDg", "commit_message": "fix uncaught `BdbQuit` exceptions on ipdb `exit`\n\n- `BdbQuit` is now handled in the top-most scope of `InteractiveShell.run_code`. This ensures that `BdbQuit` is correctly handled but can still do its job of breaking out of all user code/loops/further breakpoint requests. Hopefully will work better than previous attempts, which put the `BdqQuit` handling in `Pdb.set_trace`\n\n- fixes:\n  - jupyterlab/jupyterlab#12501\n\n- refs:\n  - ipython/ipython#876\n  - ipython/ipython#1273\n  - ipython/ipython#4474\n  - ipython/ipython#5306\n  - ipython/ipython#9731\n  - ipython/ipython#9942\n  - ipython/ipython#9950\n  - ipython/ipython#10006\n  - ipython/ipython#12378", "commit_timestamp": "2022-05-03T00:36:53Z", "files": ["IPython/core/debugger.py", "IPython/core/interactiveshell.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjQyOGU4MzRiYjMxNjAyOTFlYzEwZTE3OTc3YTAyYTNlOThiYTM0ZjU=", "commit_message": "Merge pull request #10009 from Carreau/no-ignore-bdbquit\n\nDo not capture BdbQuit.", "commit_timestamp": "2016-10-17T08:24:06Z", "files": ["IPython/core/debugger.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmNjNWE0MDljNDdlMGFkYWM4ZDFhZGNiNzQzN2NmMzViY2RjY2E3ZGM=", "commit_message": "Backport PR #10009: Do not capture BdbQuit.\n\nIf one want to exit Pdb cleanly, it is possible to just use `continue`\n(or `c`) that will keep up until a potential next invocation.\n\nQuit is _meant_ to raise an error.\n\nCloses  10006\n\n---\n\nThanks  amueller for the report. Would that suit you ?\n\nSigned-off-by: Thomas Kluyver <thomas@kluyver.me.uk>", "commit_timestamp": "2017-01-12T12:32:46Z", "files": ["IPython/core/debugger.py"]}], "labels": ["debugger"], "created_at": "2016-10-14T17:14:57Z", "closed_at": "2022-05-28T10:27:44Z", "linked_pr_number": [10006], "method": ["label", "regex"]}
{"issue_number": 9983, "title": "Test failure: deep-reloading numpy", "body": "I guess this is probably related to a recent change in numpy: it failed on numpy 1.11.2, which was released yesterday:\n\n```\n======================================================================\nERROR: Test that NumPy can be deep reloaded.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/var/lib/jenkins/shiningpanda/jobs/65e9266d/virtualenvs/d41d8cd9/lib/python3.4/site-packages/nose/case.py\", line 198, in runTest\n    self.test(*self.arg)\n  File \"/var/lib/jenkins/shiningpanda/jobs/65e9266d/virtualenvs/d41d8cd9/lib/python3.4/site-packages/IPython/testing/decorators.py\", line 212, in skipper_func\n    return f(*args, **kwargs)\n  File \"/var/lib/jenkins/shiningpanda/jobs/65e9266d/virtualenvs/d41d8cd9/lib/python3.4/site-packages/IPython/lib/tests/test_deepreload.py\", line 38, in test_deepreload_numpy\n    dreload(numpy, exclude=exclude)\n  File \"/var/lib/jenkins/shiningpanda/jobs/65e9266d/virtualenvs/d41d8cd9/lib/python3.4/site-packages/IPython/lib/deepreload.py\", line 341, in reload\n    return deep_reload_hook(module)\n  File \"/var/lib/jenkins/shiningpanda/jobs/65e9266d/virtualenvs/d41d8cd9/lib/python3.4/site-packages/IPython/lib/deepreload.py\", line 311, in deep_reload_hook\n    newm = imp.load_module(name, fp, filename, stuff)\n  File \"/var/lib/jenkins/shiningpanda/jobs/65e9266d/virtualenvs/d41d8cd9/lib/python3.4/imp.py\", line 245, in load_module\n    return load_package(name, filename)\n  File \"/var/lib/jenkins/shiningpanda/jobs/65e9266d/virtualenvs/d41d8cd9/lib/python3.4/imp.py\", line 215, in load_package\n    return methods.exec(sys.modules[name])\n  File \"<frozen importlib._bootstrap>\", line 1153, in exec\n  File \"<frozen importlib._bootstrap>\", line 1129, in _exec\n  File \"<frozen importlib._bootstrap>\", line 1471, in exec_module\n  File \"<frozen importlib._bootstrap>\", line 321, in _call_with_frames_removed\n  File \"/var/lib/jenkins/shiningpanda/jobs/65e9266d/virtualenvs/d41d8cd9/lib/python3.4/site-packages/numpy/__init__.py\", line 112, in <module>\n    from ._globals import ModuleDeprecationWarning, VisibleDeprecationWarning\n  File \"/var/lib/jenkins/shiningpanda/jobs/65e9266d/virtualenvs/d41d8cd9/lib/python3.4/site-packages/IPython/lib/deepreload.py\", line 252, in deep_import_hook\n    head, name, buf = load_next(parent, None if level < 0 else parent, name, buf)\n  File \"/var/lib/jenkins/shiningpanda/jobs/65e9266d/virtualenvs/d41d8cd9/lib/python3.4/site-packages/IPython/lib/deepreload.py\", line 156, in load_next\n    result = import_submodule(mod, subname, buf)\n  File \"/var/lib/jenkins/shiningpanda/jobs/65e9266d/virtualenvs/d41d8cd9/lib/python3.4/site-packages/IPython/lib/deepreload.py\", line 201, in import_submodule\n    m = imp.load_module(fullname, fp, filename, stuff)\n  File \"/var/lib/jenkins/shiningpanda/jobs/65e9266d/virtualenvs/d41d8cd9/lib/python3.4/imp.py\", line 235, in load_module\n    return load_source(name, filename, file)\n  File \"/var/lib/jenkins/shiningpanda/jobs/65e9266d/virtualenvs/d41d8cd9/lib/python3.4/imp.py\", line 169, in load_source\n    module = methods.exec(sys.modules[name])\n  File \"<frozen importlib._bootstrap>\", line 1153, in exec\n  File \"<frozen importlib._bootstrap>\", line 1129, in _exec\n  File \"<frozen importlib._bootstrap>\", line 1471, in exec_module\n  File \"<frozen importlib._bootstrap>\", line 321, in _call_with_frames_removed\n  File \"/var/lib/jenkins/shiningpanda/jobs/65e9266d/virtualenvs/d41d8cd9/lib/python3.4/site-packages/numpy/_globals.py\", line 29, in <module>\n    raise RuntimeError('Reloading numpy._globals is not allowed')\nnose.proxy.RuntimeError: Reloading numpy._globals is not allowed\n```\n\n[Build log](https://jenkins.jupyter.org/job/traitlets-master-downstream-stable/38/console)\n", "commits": [{"node_id": "MDY6Q29tbWl0MTIzNjAwMzoxODFmNjkzZTEwM2U0NGIwYzFmOTViNjA5MjQ5MGRlOWM5MmQzNGU1", "commit_message": "Exclude numpy._globals from deepreload\n\nCloses gh-9983, though not in a terribly satisfying way.", "commit_timestamp": "2016-10-07T14:43:55Z", "files": ["IPython/lib/deepreload.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjMyYWE4ZTRhZDcwMjY1ZWU2YTI4ODU5M2Y2M2M4NzFkM2MxNzVhMTg=", "commit_message": "Backport PR #9988: Exclude numpy._globals from deepreload\n\nCloses gh-9983, though not in a terribly satisfying way.\n\nSigned-off-by: Thomas Kluyver <thomas@kluyver.me.uk>", "commit_timestamp": "2017-01-12T12:32:05Z", "files": ["IPython/lib/deepreload.py"]}], "labels": ["bug", "testing"], "created_at": "2016-10-05T11:50:17Z", "closed_at": "2016-10-08T17:05:03Z", "method": ["label"]}
{"issue_number": 9974, "title": "is_event_loop_running_qt4 seems broken in IPython 5", "body": "In IPython 4 I can test if the Qt event loop has already been started by IPython (if this is the case, IPython remains responsive while my Qt application runs at the same time). However, in IPython 5 this doesn't work anymore. The `is_event_loop_running_qt4` function returns False, even when I use the `%gui qt` magic or equivalent command line option.\n\nThe logic I use for detecting this is:\n\n```\nimport sys\nfrom PyQt4 import QtGui\n\ndef in_ipython():\n    \"Returns True if IPython is running, False for the regular Python.\"\n    try:\n        from IPython.core.getipython import get_ipython\n    except ImportError:\n        return False\n    else:\n        return get_ipython() is not None\n\ndef get_qapp(*args, **kwargs):\n    \"Gets the global Qt application object. Creates one if it doesn't exist.\"\n    qApp = QtGui.QApplication.instance()\n    if qApp:\n        print(\"Returning existing QApplication\")\n        return qApp\n    else:\n        print(\"Creating new QApplication\")\n        return QtGui.QApplication(*args, **kwargs)\n\ndef start_qt_event_loop(qApp):\n    \"\"\" Starts the eventloop if it's not yet running.\"\"\"\n    if in_ipython():\n        try:\n            from IPython.lib.guisupport import is_event_loop_running_qt4, start_event_loop_qt4\n            if is_event_loop_running_qt4(qApp):\n                print(\"IPython event loop already running. GUI integration possible.\")\n            else:\n                print(\"Starting (non-interactive) IPython event loop\")\n                start_event_loop_qt4(qApp)\n            return\n        except Exception as ex:\n            print(\"Falling back on non-interactive event loop: {}\".format(ex))\n\n    print(\"Starting (non-interactive) event loop\")\n    return qApp.exec_()\n\nif __name__ == \"__main__\":\n    qApp = get_qapp(sys.argv)\n    start_qt_event_loop(qApp)\n```\n\nI run this program with the `--gui=qt` and `-i` options so that IPython starts the Qt event loop, starts my GUI, and remains interactive afterwards.\n\nWhen running this program in IPython 4.2.1 it prints _\"IPython event loop already running. GUI integration possible.\"_ as expected. In IPython 5.1.0 it prints _\"Starting (non-interactive) IPython event loop\"_ and the IPython prompt becomes unresponsive.\n\nSo, how can I detect if the event loop is already running? And is the `is_event_loop_running_qt4` function obsolete? Or will there be a `is_event_loop_running_qt5` for Qt5?\n\nThanks in advance and please let me know if you need more information.\n", "commits": [{"node_id": "MDY6Q29tbWl0MTIzNjAwMzpkYTVhOThmODkxZGZjMWFlMDNjNWRkYTQ0OWQ4M2Y4Zjg5OTlkYzJh", "commit_message": "Let IPython.lib.guisupport detect terminal-integrated event loops\n\nCloses gh-9974", "commit_timestamp": "2016-10-03T15:51:45Z", "files": ["IPython/core/interactiveshell.py", "IPython/lib/guisupport.py", "IPython/terminal/interactiveshell.py", "IPython/terminal/pt_inputhooks/__init__.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmZiNzBiOTkxZWU2YWM0NTA0N2YxMTBkMTAzNjA5ZmEwYWYwNGM4ZGU=", "commit_message": "Backport PR #9976: Let IPython.lib.guisupport detect terminal-integrated event loops\n\nCloses gh-9974\n\nThis is a bit more invasive than most backported changes, but it fixes a regression in IPython 5. My thinking:\n- The `guisupport` APIs that worked before should continue working until/unless we deprecate them.\n- There should be a common way to check if an event loop is already running in both the terminal and an IPython kernel.\n- It should be possible to check for any event loop, not just Qt and Wx (which `guisupport` has checks for).\n\nMy plan is to make a public attribute `shell.active_eventloop`, which is either None or a string naming the event loop which IPython will run when waiting for input. E.g. `qt` or `gtk3`. (Todo: should we also expose the event loop object in cases where there is one? Not sure if anything useful can be done with it). This PR adds that attribute for terminal IPython; if we agree on it I'll make a separate PR for ipykernel.\n\nThe functions in guisupport then become a convenient shortcut for checking this, and we can decide whether to deprecate them in favour or something more uniform, or add similar convenience functions for other common event loops.\n\nSigned-off-by: Thomas Kluyver <thomas@kluyver.me.uk>", "commit_timestamp": "2017-01-12T12:31:59Z", "files": ["IPython/core/interactiveshell.py", "IPython/lib/guisupport.py", "IPython/terminal/interactiveshell.py", "IPython/terminal/pt_inputhooks/__init__.py"]}], "labels": [], "created_at": "2016-10-02T21:26:21Z", "closed_at": "2016-10-17T08:24:37Z", "method": ["regex"]}
{"issue_number": 9941, "title": "Using the IPython debugger in a unittest fails to continue", "body": "The new tab completion with IPython 5 is great! My congratulations, I really do not want to miss that again. Not even in the debugger --- where I discovered the following behaviour:\n\nTo my understanding IPython 5.1.0 allows debugging with tab completion by inserting the following line `from IPython.terminal.debugger import TerminalPdb ;TerminalPdb().set_trace()` (see also #9940). However, when doing so in the script below and simply hitting `c` for continue, it will exit with an attribute error:\n\n```\nTraceback (most recent call last):\n  File \"../snippets/test_ipython_debugger_in_unittest.py\", line 21, in <module>\n    if __name__ == '__main__':\n  File \"/usr/lib/python3.4/unittest/main.py\", line 92, in __init__\n    self.parseArgs(argv)\n  File \"/usr/lib/python3.4/unittest/main.py\", line 139, in parseArgs\n    self.createTests()\n  File \"/usr/lib/python3.4/unittest/main.py\", line 146, in createTests\n    self.module)\n  File \"/usr/lib/python3.4/unittest/loader.py\", line 146, in loadTestsFromNames\n    suites = [self.loadTestsFromName(name, module) for name in names]\n  File \"/usr/lib/python3.4/unittest/loader.py\", line 146, in <listcomp>\n    suites = [self.loadTestsFromName(name, module) for name in names]\n  File \"/usr/lib/python3.4/unittest/loader.py\", line 114, in loadTestsFromName\n    parent, obj = obj, getattr(obj, part)\nAttributeError: 'module' object has no attribute 'suite'\n```\n\nUsing `import pdb; pdb.set_trace()` (commented line in code below) in contrast continues as expected (without exception).\n\n---\n\n``` python\nimport unittest\n\nclass ATest(unittest.TestCase):\n    def test_true(self):\n        self.assertTrue(True)\n\ndef suite():\n    return unittest.makeSuite(ATest, 'test_')\n\nfrom IPython.terminal.debugger import TerminalPdb; TerminalPdb().set_trace()\n#import pdb; pdb.set_trace()\n\nif __name__ == '__main__':\n    unittest.main(defaultTest='suite')\n```\n", "commits": [{"node_id": "MDY6Q29tbWl0Mjg3MDkwNjE6ODJmZDJiMzQxNTc0NzY2MDEzODY2Y2ZmYWE5NmMxMmI3YzA0ZTA5OQ==", "commit_message": "restore sys.modules[\"__main__\"] in the debugger\n\nneeded to e.g. run standard unittests within the debugger\nsee #9941", "commit_timestamp": "2016-09-22T19:19:14Z", "files": ["IPython/core/debugger.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjQ0ZWRmYmU4MDFiODc3OWE1ODdmZmJkODE0YjVhNGRlMmJmZTUxMDA=", "commit_message": "Backport PR #9965: Allow the debugger to work in code which calls __import__(\"__main__\")\n\nthis basically resolves  9941 as suggested by  takluyver in https://github.com/ipython/ipython/issues/9941 issuecomment-248071079.\n\nIn summary, it is needed to run e.g. standard unittests within the debugger. For more details see  9941.\n\nSigned-off-by: Thomas Kluyver <thomas@kluyver.me.uk>", "commit_timestamp": "2017-01-12T12:31:21Z", "files": ["IPython/core/debugger.py"]}], "labels": [], "created_at": "2016-09-11T18:41:21Z", "closed_at": "2016-09-23T13:27:02Z", "method": ["regex"]}
{"issue_number": 9869, "title": "Installing ipython creates ipython3 executable even if python3 isn't installed", "body": "We are building a docker image for Jupyter (running in python2) that installs kernels on demand in order to keep the base image small.  We are checking for the existence of an ipython3 executable to determine if we need to install python3 and the python3 kernel, so we were dismayed to find that ipython had created /usr/bin/ipython3 even in the absence of python3.  Obviously this is easy to work around by having our Dockerfile remove /usr/bin/ipython3 immediately after installing ipython, but would it be possible for ipython to check what versions of python exist on the system before creating executables?\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU4NTE4OjQ5YTJiOGU3YzFkODQ2ODRiOTU5ZDc1ODk2YjNkNzY4NThhNmJjOTA=", "commit_message": "Don't use universal wheels\n\nCloses gh-9869", "commit_timestamp": "2016-08-13T12:32:37Z", "files": ["tools/toollib.py"]}], "labels": ["bug"], "created_at": "2016-08-13T02:05:04Z", "closed_at": "2016-08-13T12:32:50Z", "method": ["label"]}
{"issue_number": 9860, "title": "tools/github_stats.py still fails on two factor auth with app", "body": "See #9179. I think #9186 fixed it only for SMS codes, not for OTPs generated from a smartphone app.\n", "commits": [{"node_id": "MDY6Q29tbWl0MjM0NDA3MzpmNzY5MjllMWRhMzNkOWUxZTc3ZWFmMzBiYTNlN2E0NDM3YzY1MDE4", "commit_message": "Handle all OTP authentication methods.\n\nCloses #9860", "commit_timestamp": "2016-08-11T20:01:20Z", "files": ["tools/gh_api.py"]}, {"node_id": "MDY6Q29tbWl0MjM0NDA3Mzo4MjE3M2NlNzAyYjFhYjM0NGE4MjgyYjZiM2NjYzI0NzcwMDhkMjhi", "commit_message": "Handle all OTP authentication methods.\n\nCloses #9860", "commit_timestamp": "2016-08-11T21:24:38Z", "files": ["tools/gh_api.py"]}, {"node_id": "MDY6Q29tbWl0MjM0NDA3MzowNTA4Y2RlMWVjMTA3ODYwNGQ2YzU0ZTliNzVjOWQ2NTE4NzViZGMz", "commit_message": "Handle all OTP authentication methods.\n\nCloses #9860", "commit_timestamp": "2016-08-11T22:01:03Z", "files": ["tools/gh_api.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmJlMWRiNjE5MGFhYjVjZWQ2ZmUyOWNmZjE5ZDkwMTA3YThiZWMyMjQ=", "commit_message": "Merge pull request #9861 from Carreau/otp-fic\n\nHandle all OTP authentication methods.", "commit_timestamp": "2016-08-11T22:49:47Z", "files": ["tools/gh_api.py"]}], "labels": [], "created_at": "2016-08-11T16:35:17Z", "closed_at": "2016-08-11T22:49:47Z", "linked_pr_number": [9860], "method": ["regex"]}
{"issue_number": 9836, "title": "Error, don't know the reasons, can anyone help me?", "body": "Please help me out. I just installed ipython. but when I try to run it,  it shows some following info:\n\n```\nC:\\Windows\\system32>ipython\nPython 2.7.11 (v2.7.11:6d1b6a68f775, Dec  5 2015, 20:32:19) [MSC v.1500 32 bit (\nIntel)]\nType \"copyright\", \"credits\" or \"license\" for more information.\n\nIPython 5.0.0 -- An enhanced Interactive Python.\n?         -> Introduction and overview of IPython's features.\n%quickref -> Quick reference.\nhelp      -> Python's own help system.\nobject?   -> Details about 'object', use 'object??' for extra details.\n\nIn [1]:\nTraceback (most recent call last):\n  File \"c:\\python27\\lib\\runpy.py\", line 162, in _run_module_as_main\n    \"__main__\", fname, loader, pkg_name)\n  File \"c:\\python27\\lib\\runpy.py\", line 72, in _run_code\n    exec code in run_globals\n  File \"C:\\Python27\\Scripts\\ipython.exe\\__main__.py\", line 9, in <module>\n    sys.exit(start_ipython())\n  File \"c:\\python27\\lib\\site-packages\\IPython\\__init__.py\", line 119, in start_i\npython\n    return launch_new_instance(argv=argv, **kwargs)\n  File \"c:\\python27\\lib\\site-packages\\traitlets\\config\\application.py\", line 596\n, in launch_instance\n    app.start()\n  File \"c:\\python27\\lib\\site-packages\\IPython\\terminal\\ipapp.py\", line 348, in s\ntart\n    self.shell.mainloop()\n  File \"c:\\python27\\lib\\site-packages\\IPython\\terminal\\interactiveshell.py\", lin\ne 402, in mainloop\n    self.interact()\n  File \"c:\\python27\\lib\\site-packages\\IPython\\terminal\\interactiveshell.py\", lin\ne 385, in interact\n    code = self.prompt_for_code()\n  File \"c:\\python27\\lib\\site-packages\\IPython\\terminal\\interactiveshell.py\", lin\ne 321, in prompt_for_code\n    pre_run=self.pre_prompt, reset_current_buffer=True)\n  File \"c:\\python27\\lib\\site-packages\\prompt_toolkit\\interface.py\", line 389, in\n run\n    self.eventloop.run(self.input, self.create_eventloop_callbacks())\n  File \"c:\\python27\\lib\\site-packages\\prompt_toolkit\\eventloop\\win32.py\", line 6\n6, in run\n    self._inputhook_context.call_inputhook(ready)\n  File \"c:\\python27\\lib\\site-packages\\prompt_toolkit\\eventloop\\inputhook.py\", li\nne 82, in call_inputhook\n    select_fds([self._r], timeout=None)\n  File \"c:\\python27\\lib\\site-packages\\prompt_toolkit\\eventloop\\select.py\", line\n49, in select_fds\n    result = _select(read_fds, timeout)\n  File \"c:\\python27\\lib\\site-packages\\prompt_toolkit\\eventloop\\select.py\", line\n99, in _select\n    return select.select(read_fds, [], [], timeout)[0]\nerror: (10038, '')\n\nIf you suspect this is an IPython bug, please report it at:\n    https://github.com/ipython/ipython/issues\nor send an email to the mailing list at ipython-dev@scipy.org\n\nYou can print a more detailed traceback right now with \"%tb\", or use \"%debug\"\nto interactively debug it.\n\nExtra-detailed tracebacks for bug-reporting purposes can be enabled via:\n    %config Application.verbose_crash=True\n\n\nC:\\Windows\\system32>\n```\n", "commits": [{"node_id": "MDY6Q29tbWl0NTg2MzU1MjM6NmI4MGUwOWNmYmFmMmEzNTYwMDlmNDBhOWUwMDFkNDg5N2U5MmRjYw==", "commit_message": "Don't call select() on Windows in InputHookContext\n\nWindows select() can't be used on fds, so this will always fail.\n\nI've no idea if the gevent problem this was meant to prevent can occur\non Windows.\n\nCloses gh-367\n\nSee also ipython/ipython#9836", "commit_timestamp": "2016-08-04T15:00:58Z", "files": ["prompt_toolkit/eventloop/inputhook.py"]}], "labels": [], "created_at": "2016-08-04T08:26:39Z", "closed_at": "2016-08-04T15:43:07Z", "method": ["regex"]}
{"issue_number": 9822, "title": "ipython crashes when call 'ipython --pylab=tk'", "body": "ipython crashes when call 'ipython --pylab=tk' and goes to prompt. Messages:\n\n```\nFile \"/usr/local/lib/python2.7/dist-packages/IPython/terminal/pt_inputhooks/tk.py\", line 55, in inputhook\n    root = tkinter._default_root\nAttributeError: 'module' object has no attribute '_default_root'\n\nIf you suspect this is an IPython bug, please report it at:\n    https://github.com/ipython/ipython/issues\nor send an email to the mailing list at ipython-dev@scipy.org\n\nYou can print a more detailed traceback right now with \"%tb\", or use \"%debug\"\nto interactively debug it.\n\nExtra-detailed tracebacks for bug-reporting purposes can be enabled via:\n    %config Application.verbose_crash=True\n```\n", "commits": [{"node_id": "MDY6Q29tbWl0MTIzNjAwMzozZTg0ZjVhMmEwNWU1N2M3YjhhMTg2Y2NjMzZmZDhkNDcwOTNkZjJk", "commit_message": "Switch tkinter import based on Python version\n\nRather than try/except, which can cause issues if python-future is\ninstalled.\n\nCloses gh-9822", "commit_timestamp": "2016-07-29T16:10:02Z", "files": ["IPython/terminal/pt_inputhooks/tk.py"]}], "labels": [], "created_at": "2016-07-29T10:31:34Z", "closed_at": "2016-08-01T14:23:02Z", "method": ["regex"]}
{"issue_number": 9810, "title": "IPython 5 shell does not react to SIGQUIT (CTRL + \\)", "body": "In previous IPython versions it was possible to terminate an IPython session quickly by sending an `SIGQUIT`, i.e., by pressing <kbd>CTRL</kbd>+<kbd> \\ </kbd>. This is useful when having an `embed()` in a loop with a large number of iterations. Pressing <kbd>CTRL</kbd>+<kbd>d</kbd> followed by <kbd>y</kbd> is not practical. Since `%kill_embedded` is currently also broken there is no convenient way to terminate the process.\n", "commits": [{"node_id": "MDY6Q29tbWl0MjM0NDA3MzoyNTFkMmNhM2RmYjZjMDgwMGMyOTNhNTYzNmFhY2IyZTNkODY3ZmZh", "commit_message": "Quit IPython on Ctrl-\\ (SIGQUIT)\n\nCloses #9810", "commit_timestamp": "2016-07-28T22:35:16Z", "files": ["IPython/terminal/shortcuts.py"]}, {"node_id": "MDY6Q29tbWl0MjM0NDA3MzozNzg2M2E4YmQ2YzA3Y2VjYmNjYTRiMjQ0ZGQ4MGZmNDEzOTE2OWZi", "commit_message": "Quit IPython on Ctrl-\\ (SIGQUIT)\n\nCloses #9810", "commit_timestamp": "2016-07-28T22:41:06Z", "files": ["IPython/terminal/shortcuts.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjgwNTE1Y2MyNTFjMzVjYmRlNGEyYmYzMzFlNDQ3MGZkMjEzZWQ0ZmM=", "commit_message": "Merge pull request #9820 from Carreau/quit-sigquit\n\nQuit IPython on Ctrl-\\ (SIGQUIT)", "commit_timestamp": "2016-07-29T08:41:11Z", "files": ["IPython/terminal/shortcuts.py"]}], "labels": [], "created_at": "2016-07-26T08:29:40Z", "closed_at": "2016-07-29T08:41:12Z", "linked_pr_number": [9810], "method": ["regex"]}
{"issue_number": 9791, "title": "get_ipython() called from startup script", "body": "Hi, this is maybe more me asking for help than an issue per se.\n\nInside the startup folder of some IPython profile, I have the following script:\n\n``` python\nprint('get_ipython() = ', get_ipython())\nimport weird\n```\n\nThis module `weird` is elsewhere, and it is importable. It is merely:\n\n``` python\nget_ipython()\n```\n\nWhat happens is: the call to `get_ipython` inside the print statement in the body of the file inside the startup script goes smoothly. However, `get_ipython` is not visible inside the module `weird`. So it throws a `NameError` there.\n\nNow, of course, after this phase of startup-file loading, I get a traceback and then an IPython REPL. There, I can `import weird` just fine.\n\nThere is code relying on `get_ipython` to know if it is being runned inside IPython. If I call this code inside my startup script, strange results happen. See here https://github.com/sympy/sympy/issues/11419\n\nIf this behaviour is not considered a bug, maybe we could find some workaround.\n", "commits": [{"node_id": "MDY6Q29tbWl0MTIzNjAwMzphYzY0YjJiMzJhYTZiYWE3NzVmODk1YTYwMjc2ZGNlYmIyYjlkZGFh", "commit_message": "Use builtin_trap in safe_execfile\n\nThis makes get_ipython() available as a builtin when startup files run.\n\nCloses gh-9791", "commit_timestamp": "2016-07-28T11:05:48Z", "files": ["IPython/core/interactiveshell.py"]}], "labels": [], "created_at": "2016-07-21T22:36:57Z", "closed_at": "2016-07-28T13:41:05Z", "method": ["regex"]}
{"issue_number": 9781, "title": "IPython.core.debugger.Tracer tab-complete", "body": "In the iPython 4.2.x series calling \n\nfrom IPython.core.debugger import Tracer; Tracer()()\n\nallows  tab-completion .. This feature seems to have disappeared in iPython 5.x\n\nThanks\n\nCarlos \n", "commits": [{"node_id": "MDY6Q29tbWl0MjM0NDA3MzpjYzViNTdmMDdlYjE4YzMwMjRhZjI2NjA1OTk2NTA5N2MxZDAwMTdk", "commit_message": "Restore completion in debugger.\n\nClose #9759, #9781", "commit_timestamp": "2016-07-20T22:08:25Z", "files": ["IPython/core/magics/execution.py"]}, {"node_id": "MDY6Q29tbWl0MjM0NDA3MzoyMWM4MWYxMGY4ODU2ZTcxODg2MmM3MzQ1NzlhYmM0Zjc5ODQ0NDdl", "commit_message": "Make clearer and simpler how to user prompt-toolkit PDB\n\nCloses #9781", "commit_timestamp": "2016-07-25T22:33:48Z", "files": ["IPython/core/debugger.py", "IPython/terminal/debugger.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmRjODYzOGVkNWNjMGE5NDdmYWE4OWM3NzJmODYxMzJkNjE3ZDQ2NGU=", "commit_message": "Merge pull request #9807 from Carreau/ptkpdb\n\nMake clearer and simpler how to user prompt-toolkit PDB", "commit_timestamp": "2016-07-26T11:38:47Z", "files": ["IPython/core/debugger.py", "IPython/terminal/debugger.py"]}], "labels": [], "created_at": "2016-07-20T02:44:59Z", "closed_at": "2016-07-26T11:38:47Z", "linked_pr_number": [9781], "method": ["regex"]}
{"issue_number": 9768, "title": " invalid continuation byte with ipython5.0", "body": "``` bash\nC:\\Users\\zhiyue>ipython\nPython 2.7.11 |Anaconda 2.3.0 (64-bit)| (default, Feb 16 2016, 09:58:36) [MSC v.1500 64 bit (AMD64)]\nType \"copyright\", \"credits\" or \"license\" for more information.\n\nIPython 5.0.0 -- An enhanced Interactive Python.\n?         -> Introduction and overview of IPython's features.\n%quickref -> Quick reference.\nhelp      -> Python's own help system.\nobject?   -> Details about 'object', use 'object??' for extra details.\n```\n\nWhen IPython upgrade to 5 later, so that the use of theano has been a problem, when I import the `theano` package, it can not display the `cudnn` information.\n\n```\nIn [1]: import theano\nDEBUG: nvcc STDOUT Using gpu device 0: GeForce GT 750M (CNMeM is enabled with initial size: 75.0% of memory, cuDNN None)\n```\n\nAnd then led to the `theano` can not be used under the IPython\nI found that the output debug information may be the cause of this problem, as follows\n\n``` bash\nIn [1]: import theano\nDEBUG: nvcc STDOUT Using gpu device 0: GeForce GT 750M (CNMeM is enabled with initial size: 75.0% of memory, cuDNN None)\n\nIn [2]: theano.sandbox.cuda.dnn.version()\nINFO (theano.gof.compilelock): Refreshing lock C:\\Users\\zhiyue\\AppData\\Local\\Theano\\compiledir_Windows-10-10.0.10586-Intel64_Family_6_Mo\ndel_58_Stepping_9_GenuineIntel-2.7.11-64\\lock_dir\\lock\nDEBUG: nvcc STDOUT ---------------------------------------------------------------------------\nUnicodeDecodeError                        Traceback (most recent call last)\n<ipython-input-2-f186563a86b7> in <module>()\n----> 1 theano.sandbox.cuda.dnn.version()\n\nD:\\develop\\Anaconda\\lib\\site-packages\\theano\\sandbox\\cuda\\__init__.pyc in dnn_version()\n    410         f = theano.function([], DnnVersion()(),\n    411                             theano.Mode(optimizer=None),\n--> 412                             profile=False)\n    413         dnn_version.v = f()\n    414     return dnn_version.v\n\nD:\\develop\\Anaconda\\lib\\site-packages\\theano\\compile\\function.pyc in function(inputs, outputs, mode, updates, givens, no_default_updates\n, accept_inplace, name, rebuild_strict, allow_input_downcast, profile, on_unused_input)\n    318                    on_unused_input=on_unused_input,\n    319                    profile=profile,\n--> 320                    output_keys=output_keys)\n    321     # We need to add the flag check_aliased inputs if we have any mutable or\n    322     # borrowed used defined inputs\n\nD:\\develop\\Anaconda\\lib\\site-packages\\theano\\compile\\pfunc.pyc in pfunc(params, outputs, mode, updates, givens, no_default_updates, acce\npt_inplace, name, rebuild_strict, allow_input_downcast, profile, on_unused_input, output_keys)\n    477                          accept_inplace=accept_inplace, name=name,\n    478                          profile=profile, on_unused_input=on_unused_input,\n--> 479                          output_keys=output_keys)\n    480\n    481\n\nD:\\develop\\Anaconda\\lib\\site-packages\\theano\\compile\\function_module.pyc in orig_function(inputs, outputs, mode, accept_inplace, name, p\nrofile, on_unused_input, output_keys)\n   1775                    on_unused_input=on_unused_input,\n   1776                    output_keys=output_keys).create(\n-> 1777             defaults)\n   1778\n   1779     t2 = time.time()\n\nD:\\develop\\Anaconda\\lib\\site-packages\\theano\\compile\\function_module.pyc in create(self, input_storage, trustme, storage_map)\n   1639             theano.config.traceback.limit = 0\n   1640             _fn, _i, _o = self.linker.make_thunk(\n-> 1641                 input_storage=input_storage_lists, storage_map=storage_map)\n   1642         finally:\n   1643             theano.config.traceback.limit = limit_orig\n\nD:\\develop\\Anaconda\\lib\\site-packages\\theano\\gof\\link.pyc in make_thunk(self, input_storage, output_storage, storage_map)\n    688         return self.make_all(input_storage=input_storage,\n    689                              output_storage=output_storage,\n--> 690                              storage_map=storage_map)[:3]\n    691\n    692     def make_all(self, input_storage, output_storage):\n\nD:\\develop\\Anaconda\\lib\\site-packages\\theano\\gof\\vm.pyc in make_all(self, profiler, input_storage, output_storage, storage_map)\n   1001                                                  storage_map,\n   1002                                                  compute_map,\n-> 1003                                                  no_recycling))\n   1004                 if not hasattr(thunks[-1], 'lazy'):\n   1005                     # We don't want all ops maker to think about lazy Ops.\n\nD:\\develop\\Anaconda\\lib\\site-packages\\theano\\sandbox\\cuda\\__init__.pyc in make_thunk(self, node, storage_map, compute_map, no_recycling)\n\n    254                 enable_cuda=False)\n    255         return super(GpuOp, self).make_thunk(node, storage_map,\n--> 256                                              compute_map, no_recycling)\n    257\n    258 theano.compile.debugmode.default_make_thunk.append(\n\nD:\\develop\\Anaconda\\lib\\site-packages\\theano\\gof\\op.pyc in make_thunk(self, node, storage_map, compute_map, no_recycling)\n    968             try:\n    969                 return self.make_c_thunk(node, storage_map, compute_map,\n--> 970                                          no_recycling)\n    971             except (NotImplementedError, utils.MethodNotDefined):\n    972                 logger.debug('Falling back on perform')\n\nD:\\develop\\Anaconda\\lib\\site-packages\\theano\\gof\\op.pyc in make_c_thunk(self, node, storage_map, compute_map, no_recycling)\n    877         logger.debug('Trying CLinker.make_thunk')\n    878         outputs = cl.make_thunk(input_storage=node_input_storage,\n--> 879                                 output_storage=node_output_storage)\n    880         fill_storage, node_input_filters, node_output_filters = outputs\n    881\n\nD:\\develop\\Anaconda\\lib\\site-packages\\theano\\gof\\cc.pyc in make_thunk(self, input_storage, output_storage, storage_map, keep_lock)\n   1198         cthunk, in_storage, out_storage, error_storage = self.__compile__(\n   1199             input_storage, output_storage, storage_map,\n-> 1200             keep_lock=keep_lock)\n   1201\n   1202         res = _CThunk(cthunk, init_tasks, tasks, error_storage)\n\nD:\\develop\\Anaconda\\lib\\site-packages\\theano\\gof\\cc.pyc in __compile__(self, input_storage, output_storage, storage_map, keep_lock)\n   1141                                     output_storage,\n   1142                                     storage_map,\n-> 1143                                     keep_lock=keep_lock)\n   1144         return (thunk,\n   1145                 [link.Container(input, storage) for input, storage in\n\nD:\\develop\\Anaconda\\lib\\site-packages\\theano\\gof\\cc.pyc in cthunk_factory(self, error_storage, in_storage, out_storage, storage_map, kee\np_lock)\n   1593         else:\n   1594             module = get_module_cache().module_from_key(\n-> 1595                 key=key, lnk=self, keep_lock=keep_lock)\n   1596\n   1597         vars = self.inputs + self.outputs + self.orphans\n\nD:\\develop\\Anaconda\\lib\\site-packages\\theano\\gof\\cmodule.pyc in module_from_key(self, key, lnk, keep_lock)\n   1140             try:\n   1141                 location = dlimport_workdir(self.dirname)\n-> 1142                 module = lnk.compile_cmodule(location)\n   1143                 name = module.__file__\n   1144                 assert name.startswith(location)\n\nD:\\develop\\Anaconda\\lib\\site-packages\\theano\\gof\\cc.pyc in compile_cmodule(self, location)\n   1504                 lib_dirs=self.lib_dirs(),\n   1505                 libs=libs,\n-> 1506                 preargs=preargs)\n   1507         except Exception as e:\n   1508             e.args += (str(self.fgraph),)\n\nD:\\develop\\Anaconda\\lib\\site-packages\\theano\\sandbox\\cuda\\nvcc_compiler.pyc in compile_str(module_name, src_code, location, include_dirs\n, lib_dirs, libs, preargs, rpaths, py_module, hide_symbols)\n    403         if nvcc_stdout:\n    404             # this doesn't happen to my knowledge\n--> 405             print(\"DEBUG: nvcc STDOUT\", nvcc_stdout, file=sys.stderr)\n    406\n    407         if py_module:\n\nD:\\develop\\Anaconda\\lib\\site-packages\\colorama\\ansitowin32.pyc in write(self, text)\n     38\n     39     def write(self, text):\n---> 40         self.__convertor.write(text)\n     41\n     42\n\nD:\\develop\\Anaconda\\lib\\site-packages\\colorama\\ansitowin32.pyc in write(self, text)\n    139     def write(self, text):\n    140         if self.strip or self.convert:\n--> 141             self.write_and_convert(text)\n    142         else:\n    143             self.wrapped.write(text)\n\nD:\\develop\\Anaconda\\lib\\site-packages\\colorama\\ansitowin32.pyc in write_and_convert(self, text)\n    167             self.convert_ansi(*match.groups())\n    168             cursor = end\n--> 169         self.write_plain_text(text, cursor, len(text))\n    170\n    171\n\nD:\\develop\\Anaconda\\lib\\site-packages\\colorama\\ansitowin32.pyc in write_plain_text(self, text, start, end)\n    172     def write_plain_text(self, text, start, end):\n    173         if start < end:\n--> 174             self.wrapped.write(text[start:end])\n    175             self.wrapped.flush()\n    176\n\nD:\\develop\\Anaconda\\lib\\site-packages\\win_unicode_console\\streams.pyc in write(self, s)\n    252         def write(self, s):\n    253                 if isinstance(s, bytes):\n--> 254                         s = s.decode(self.encoding)\n    255\n    256                 self.base.write(s)\n\nD:\\develop\\Anaconda\\lib\\encodings\\utf_8.pyc in decode(input, errors)\n     14\n     15 def decode(input, errors='strict'):\n---> 16     return codecs.utf_8_decode(input, errors, True)\n     17\n     18 class IncrementalEncoder(codecs.IncrementalEncoder):\n\nUnicodeDecodeError: 'utf8' codec can't decode byte 0xd5 in position 11: invalid continuation byte\n```\n\nThen I try to use it directly `python` in the console window:\n\n``` bash\nC:\\Users\\zhiyue>python\nPython 2.7.11 |Anaconda 2.3.0 (64-bit)| (default, Feb 16 2016, 09:58:36) [MSC v.1500 64 bit (AMD64)] on win32\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\nAnaconda is brought to you by Continuum Analytics.\nPlease check out: http://continuum.io/thanks and https://anaconda.org\n>>> import theano\nDEBUG: nvcc STDOUT mod.cu\n   \u6b63\u5728\u521b\u5efa\u5e93 C:/Users/zhiyue/AppData/Local/Theano/compiledir_Windows-10-10.0.10586-Intel64_Family_6_Model_58_Stepping_9_GenuineIntel-2.\n7.11-64/tmpelcztu/265abc51f7c376c224983485238ff1a5.lib \u548c\u5bf9\u8c61 C:/Users/zhiyue/AppData/Local/Theano/compiledir_Windows-10-10.0.10586-Inte\nl64_Family_6_Model_58_Stepping_9_GenuineIntel-2.7.11-64/tmpelcztu/265abc51f7c376c224983485238ff1a5.exp\n\nUsing gpu device 0: GeForce GT 750M (CNMeM is enabled with initial size: 75.0% of memory, cuDNN 5005)\n>>> theano.sandbox.cuda.dnn.version()\n(5005, 5005)\n```\n\nFinally I put the IPython down to 4.2, there is no problem\n\n```\nIPython 4.2.0 -- An enhanced Interactive Python.\nIn[2]: import theano\nDEBUG: nvcc STDOUT mod.cu\n   \u6b63\u5728\u521b\u5efa\u5e93 C:/Users/zhiyue/AppData/Local/Theano/compiledir_Windows-10-10.0.10586-Intel64_Family_6_Model_58_Stepping_9_GenuineIntel-2.7.12-64/tmpv2a_tq/265abc51f7c376c224983485238ff1a5.lib \u548c\u5bf9\u8c61 C:/Users/zhiyue/AppData/Local/Theano/compiledir_Windows-10-10.0.10586-Intel64_Family_6_Model_58_Stepping_9_GenuineIntel-2.7.12-64/tmpv2a_tq/265abc51f7c376c224983485238ff1a5.exp\n\nUsing gpu device 0: GeForce GT 750M (CNMeM is enabled with initial size: 75.0% of memory, cuDNN 5005)\nIn[3]: theano.sandbox.cuda.dnn.version()\nOut[3]: (5005, 5005)\n```\n\n`pip list`:\n\n```\nalabaster (0.7.8)\namqp (1.4.9)\nanaconda-client (1.4.0)\nanyjson (0.3.3)\napptools (4.2.1)\nargcomplete (0.8.9)\nastroid (1.4.6)\nastropy (1.0.3)\nattrs (15.2.0)\nautopep8 (1.2.4)\nBabel (2.3.4)\nbackports-abc (0.4)\nbackports.shutil-get-terminal-size (1.0.0)\nbackports.ssl-match-hostname (3.5.0.1)\nbcolz (0.9.0)\nbeautifulsoup4 (4.4.1)\nbetago (0.2)\nbilliard (3.3.0.23)\nbinstar (0.11.0)\nbitarray (0.8.1)\nblaze (0.8.0)\nblz (0.6.2)\nbokeh (0.9.0)\nboto (2.38.0)\nBottleneck (1.0.0)\nbypy (1.2.17)\ncdecimal (2.3)\ncelery (3.1.23)\ncertifi (2016.2.28)\ncffi (1.6.0)\nchardet (2.3.0)\nclick (6.3)\nclyent (1.2.2)\nCola (0.1.0b0)\ncolorama (0.3.7)\nconda (4.1.8)\nconda-build (1.14.1)\nconda-env (2.5.0a0)\nconfig (0.3.9)\nconfigobj (5.0.6)\nconfigparser (3.5.0)\ncoursera (0.5.2)\ncroniter (0.3.3)\ncryptography (1.4)\ncssselect (0.9.1)\nCython (0.24)\ncytoolz (0.7.3)\ndagobah (0.3.1)\ndatashape (0.4.5)\nDBUtils (1.1)\ndeap (1.0.2)\ndecorator (4.0.10)\ndoc2dash (2.1.0)\ndocopt (0.6.2)\ndocutils (0.12)\nentrypoints (0.2)\nenum34 (1.1.6)\nenvisage (4.4.0)\neventlet (0.19.0)\nFabric (1.11.1)\nfastcache (1.0.2)\nfeedparser (5.2.1)\nFlask (0.10.1)\nFlask-Cors (2.1.2)\nFlask-Limiter (0.9.3)\nFlask-Login (0.2.6)\nflower (0.9.1)\nfuncsigs (0.4)\nfunctools32 (3.2.3.post2)\nfuture (0.15.2)\nfutures (3.0.5)\ngdbn (0.1)\ngensim (0.12.2)\ngevent (1.0.1)\ngevent-websocket (0.9.3)\ngnumpy (0.2)\ngomill (0.7.4)\ngprof2dot (2015.12.1)\ngreenlet (0.4.7)\ngrin (1.2.1)\nh5py (2.6.0)\nhowdoi (1.1.9)\nhtml2text (2016.4.2)\nhtml5lib (1.0b8)\niching (3.4.0)\nidna (2.1)\nimagesize (0.7.1)\nipaddress (1.0.16)\nipykernel (4.3.1)\nipython (5.0.0)\nipython-genutils (0.1.0)\nipywidgets (5.1.5)\nitsdangerous (0.24)\njdcal (1.0)\njedi (0.9.0)\njieba (0.38)\nJinja2 (2.8)\njoblib (0.9.3)\njsonschema (2.5.1)\njupyter (1.0.0)\njupyter-client (4.3.0)\njupyter-console (4.1.1)\njupyter-core (4.1.0)\nkeras (1.0.5)\nkeyring (9.0)\nkombu (3.0.35)\nLasagne (0.2.dev1, d:\\develop\\anaconda\\src\\lasagne)\nlazy-object-proxy (1.2.2)\nlimits (1.1.1)\nlivereload (2.4.1)\nllvmlite (0.5.0)\nlxml (3.4.4)\nMarkdown (2.6.6)\nMarkupSafe (0.23)\nmatplotlib (1.4.3)\nmayavi (4.4.0)\nmechanize (0.2.5)\nmenuinst (1.0.4)\nmistune (0.7.2)\nmkdocs (0.15.3)\nmkdocs-bootstrap (0.1.1)\nmkdocs-bootswatch (0.4.0)\nmock (1.0.1)\nmongoengine (0.10.1)\nmultipledispatch (0.4.7)\nmxnet (0.7.0)\nMySQL-python (1.2.5)\nnbconvert (4.2.0)\nnbformat (4.0.1)\nnetworkx (1.9.1)\nnltk (3.0.3)\nnolearn (0.6a0.dev0)\nnose (1.3.7)\nnotebook (4.2.0)\nnumba (0.19.1)\nnumexpr (2.5.2)\nnumpy (1.11.1)\nodo (0.3.2)\nopenpyxl (1.8.5)\npandas (0.18.1)\nparamiko (2.0.0)\npath.py (0.0.0)\npathlib2 (2.1.0)\npatsy (0.3.0)\npdfminer2 (20151206)\npdfx (1.3.0)\npefile (2016.3.28)\npep8 (1.7.0)\npickleshare (0.7.3)\nPillow (2.8.2)\npip (8.1.2)\npipreqs (0.4.3)\nply (3.6)\npremailer (1.13)\nprompt-toolkit (1.0.3)\npsutil (4.3.0)\npy (1.4.27)\npy2exe (0.6.10a1)\npy2neo (3)\npyasn1 (0.1.9)\npybloom (1.1)\npycallgraph (1.0.1)\npycosat (0.6.1)\npycparser (2.14)\npycrypto (2.6)\npyface (4.4.0)\npyflakes (1.2.3)\nPygments (2.1.3)\npygobject (3.18.2)\npygtp (0.2)\nPyInstaller (3.2)\npylint (1.5.6)\npymongo (3.1.1)\nPyMySQL (0.6.7)\npyOpenSSL (0.15.1)\npyparsing (2.0.3)\npyperclip (1.5.27)\npyquery (1.2.13)\npyreadline (2.1)\npytest (2.7.1)\npython-contrib-nbextensions (alpha)\npython-dateutil (2.5.3)\npytz (2016.4)\npywin32 (219)\npywin32-ctypes (0.0.1)\nPyYAML (3.11)\npyzmq (15.3.0)\nqiniu (7.0.7)\nQtAwesome (0.3.3)\nqtconsole (4.2.1)\nQtPy (1.1.1)\nqueuelib (1.2.2)\nredis (2.10.5)\nrequests (2.10.0)\nrequests-cache (0.4.12)\nrodeo (0.4.4)\nrope (0.10.3)\nrsa (3.2.3)\nruamel-yaml (-VERSION)\nrunipy (0.1.3)\nscikit-image (0.11.3)\nscikit-learn (0.17.1)\nscipy (0.17.1)\nScrapy (1.0.3)\nseaborn (0.7.0)\nselenium (2.53.6)\nsemantic-version (2.3.0)\nsetuptools (24.0.3)\nsgf (0.5)\nsimplegeneric (0.8.1)\nsimplejson (3.8.2)\nsingledispatch (3.4.0.3)\nsix (1.10.0)\nsklearn (0.0)\nsnowballstemmer (1.2.1)\nsockjs-tornado (1.0.1)\nSphinx (1.3.5)\nsphinx-rtd-theme (0.1.7)\nspyder (3.0.0b4)\nSQLAlchemy (1.0.5)\nstatsmodels (0.6.1)\nsympy (0.7.6)\ntables (3.2.0)\ntabulate (0.7.5)\ntermcolor (1.1.0)\nTheano (0.8.2)\ntoolz (0.7.2)\ntornado (4.3)\nTPOT (0.3.0)\ntqdm (4.7.6)\ntraitlets (4.2.2)\ntraits (4.4.0)\ntraitsui (4.4.0)\nTwisted (15.4.0)\nujson (1.33)\nunicodecsv (0.9.4)\nupdate-checker (0.11)\nurllib3 (1.15.1)\nvboxapi (1.0)\nVTK (5.10.1)\nw3lib (1.12.0)\nwcwidth (0.1.7)\nwechat-sdk (0.5.8)\nWerkzeug (0.11.2)\nwget (3.2)\nwheel (0.29.0)\nwidgetsnbextension (1.2.3)\nwin-unicode-console (0.5)\nwordcloud (1.2.1)\nwrapt (1.10.8)\nxdot (0.6)\nxgboost (0.4)\nxlrd (0.9.3)\nXlsxWriter (0.7.3)\nxlwings (0.3.5)\nxlwt (1.0.0)\nxmltodict (0.10.1)\nyarg (0.1.9)\nyoutube-dl (2016.5.16)\nzhihu-oauth (0.0.8)\nzope.interface (4.1.3)\n```\n", "commits": [{"node_id": "MDY6Q29tbWl0MTIzNjAwMzo1OTRjYjhkZWI3NzM4NDU3NmRmOGNiMmIyOTNhOTZkNWZmN2U0OWJk", "commit_message": "Be more lenient when bytes are sent to stdout/stderr on Py2+Windows\n\nCloses gh-9768", "commit_timestamp": "2016-07-19T13:33:47Z", "files": ["IPython/terminal/interactiveshell.py"]}], "labels": [], "created_at": "2016-07-16T04:40:40Z", "closed_at": "2016-07-26T16:06:25Z", "method": ["regex"]}
{"issue_number": 9761, "title": "IPython 5 - Embeded shell not reopening once exited", "body": "I recently updated to IPython 5 and am observing some strange behavior with the embedded shell functionality. If ipshell is called more than once in the code, once the first embedded shell is exited, the rest are also exited without allowing for interactivity.\n\nSo for example, from the [IPython 5 documentation on embedding](https://ipython.readthedocs.io/en/stable/interactive/reference.html#embedding), the sample code provided in embed_class_long does not work as intended. Once the first instance of ipshell is exited, IPython does not stop again when it is called. Below is an excerpt of the code from the documentation to highlight the issue.\n\n``` python\nfrom __future__ import print_function\nfrom traitlets.config.loader import Config\ncfg = Config()\n# First import the embeddable shell class\nfrom IPython.terminal.embed import InteractiveShellEmbed\n\nipshell = InteractiveShellEmbed(config=cfg,\n                       banner1 = 'Dropping into IPython',\n                       exit_msg = 'Leaving Interpreter, back to program.')\n\nipshell2 = InteractiveShellEmbed(config=cfg,\n                        banner1 = 'Second IPython instance.')\n\nprint('\\nHello. This is printed from the main controller program.\\n')\n\nipshell('***Called from top level. '\n        'Hit Ctrl-D to exit interpreter and continue program.\\n'\n        'Note that if you use %kill_embedded, you can fully deactivate\\n'\n        'This embedded instance so it will never turn on again')\n\nprint('\\nBack in caller program, moving along...\\n')\n\ndef foo(m):\n    s = 'spam'\n    ipshell('***In foo(). Try %whos, or print s or m:')\n    print('foo says m = ',m)\n\n# Some calls to the above functions which will trigger IPython:\nprint('Main program calling foo(\"eggs\")\\n')\nfoo('eggs')\n\nipshell2()\n```\n\nOn my machine, when this runs, I drop into the first ipshell instance with the \"Called from the top level\" message. I then type exit to leave this embedded shell. I get the exit message as intended, get the print statement \"Back in caller program, moving along...\" and the statement \"Main program calling foo(\"eggs\")\" as intended. Then on my shell, I get the \"Dropping into IPython\" message which is the banner for the first instance of ipshell, but IPython does not stop. Without embedding a shell, the program continues by printing the  \"In foo()\" statement, as well as the \"Leaving Interpreter\" exit message. Finally the script gets to ipshell2() and correctly opens a the second instance. \n\nBefore in IPython 4.x, when foo('eggs') was run, a shell would be embedded. The issue is also a problem when used in for loops. If ipshell is called in a for loop and subsequently exited, all the ipshell calls afterwards will be skipped, which is annoying when you want to stop in every iteration of the for loop to inspect variables.\n\nHere is some system information in case it is relevant.\n\n```\n'commit_hash': u'1ba246d',\n'commit_source': 'installation',\n'default_encoding': 'cp437',\n'ipython_path': 'C:\\\\Anaconda\\\\lib\\\\site-packages\\\\IPython',\n'ipython_version': '5.0.0',\n'os_name': 'nt',\n'platform': 'Windows-7-6.1.7601-SP1',\n'sys_executable': 'C:\\\\Anaconda\\\\python.exe',\n'sys_platform': 'win32',\n'sys_version': '2.7.11 |Anaconda custom (64-bit)| (default, Feb 16 2016, 09:58:36) [MSC v.1500 64 bit (AMD64)]'}\n```\n", "commits": [{"node_id": "MDY6Q29tbWl0MjM0NDA3MzpkYjdkMTA1N2ExNzg3MGViODY1ZDAyZTExYmMzYjIwNjljODg3ZjY0", "commit_message": "Fix deactivation of embedded instance.\n\nWhile deactivation of full instances make some sens, the most common\nbehavior user expect when creating an instance and using\n``kill_embedded`` is deactivation of the current call location.\n\nImplement the expected on by default, add options to get previous\nbehavior, and add flag for direct exit and no-confirm\n\nFix #9761", "commit_timestamp": "2017-01-27T18:16:27Z", "files": ["IPython/terminal/embed.py"]}, {"node_id": "MDY6Q29tbWl0MjM0NDA3MzpmODVlYzJmZDU4ZDZkNjA0YjY1YjcyNWE4ZTM3NzM4Yzg3NzExNGE3", "commit_message": "Fix deactivation of embedded instance.\n\nWhile deactivation of full instances make some sens, the most common\nbehavior user expect when creating an instance and using\n``kill_embedded`` is deactivation of the current call location.\n\nImplement the expected on by default, add options to get previous\nbehavior, and add flag for direct exit and no-confirm\n\nFix #9761", "commit_timestamp": "2017-01-27T18:20:21Z", "files": ["IPython/terminal/embed.py"]}, {"node_id": "MDY6Q29tbWl0MjM0NDA3MzpiODgyYTE0NWFiYjk5YTA4M2UyZjEzMjk2NGQzMTI4NTgzOTg3ZjJk", "commit_message": "Fix deactivation of embedded instance.\n\nWhile deactivation of full instances make some sens, the most common\nbehavior user expect when creating an instance and using\n``kill_embedded`` is deactivation of the current call location.\n\nImplement the expected on by default, add options to get previous\nbehavior, and add flag for direct exit and no-confirm\n\nFix #9761", "commit_timestamp": "2017-01-29T21:34:54Z", "files": ["IPython/terminal/embed.py"]}], "labels": [], "created_at": "2016-07-13T22:28:31Z", "closed_at": "2017-01-29T21:59:41Z", "method": ["regex"]}
{"issue_number": 9759, "title": "no tab completion in terminal when using debugger ", "body": "@Carreau I chatted with Brian Granger, who said I should bring this to your attention.\n\nOS: Mac OS 10.10.5\npython -V: Python 3.5.2 : Anaconda custom (x86_64)\nipython --version : 5.0.0\nsource of ipython: conda-forge build\n\nWhen I am in the ipython terminal and using the debugger, tab completion does not work (i.e., I just get a tab).  This happened in the version of IPython I had before installing this a few minutes ago, so I wonder if it's something wrong with the conda-forge build?\n\nI'm at Scipy, so if someone wants a demo of the problem, I'm happy to do that.\n", "commits": [{"node_id": "MDY6Q29tbWl0MjM0NDA3MzpjYzViNTdmMDdlYjE4YzMwMjRhZjI2NjA1OTk2NTA5N2MxZDAwMTdk", "commit_message": "Restore completion in debugger.\n\nClose #9759, #9781", "commit_timestamp": "2016-07-20T22:08:25Z", "files": ["IPython/core/magics/execution.py"]}, {"node_id": "MDY6Q29tbWl0MjM0NDA3MzozMWE4MGZhNWU5NmZlOWIyNDdiODIxMjgxZmNiMjNiNDBjNGIzZmNh", "commit_message": "Restore completion in debugger.\n\nClose #9759", "commit_timestamp": "2016-07-20T22:14:52Z", "files": ["IPython/core/magics/execution.py"]}, {"node_id": "MDY6Q29tbWl0MjM0NDA3MzpiYzRkZDg5YmFkM2Y3YzljNGYxZDk5ZmMxMjBkZjY4ODRjN2I3OGMy", "commit_message": "Restore completion in debugger.\n\nClose #9759", "commit_timestamp": "2016-07-20T22:15:15Z", "files": ["IPython/core/magics/execution.py"]}, {"node_id": "MDY6Q29tbWl0MjM0NDA3MzpjMDFmMGFjNGM4ZDhkZGZlYjEwZTZiODc1YzYyYzQ0NzBjMTVmYWIz", "commit_message": "Restore completion in debugger.\n\nClose #9759", "commit_timestamp": "2016-07-20T22:22:13Z", "files": ["IPython/core/magics/execution.py"]}], "labels": [], "created_at": "2016-07-13T20:39:51Z", "closed_at": "2016-07-21T12:50:28Z", "method": ["regex"]}
{"issue_number": 9746, "title": "`terminal.debugger.TerminalPdb` doesn't respect profile configuration", "body": "#### Steps to reproduce (tested against cpython 2.7.11 and 3.5.0)\n1. Create and activate a new virtualenvironment. `virtualenv /tmp/ipython2 && source /tmp/ipython2/bin/activate`\n2. Install latest _ipython_ and _ipdb_ available on PyPI: `pip install ipython ipdb`\n3. Configure ipython's default profile to use `TerminalInteractiveShell.display_completions = 'readlinelike'` in ipython_config.py (as per [official docs](http://ipython.readthedocs.io/en/stable/config/options/terminal.html))\n4. Run `python -c  'import ipdb; ipdb.set_trace()'`\n5. Enter `list.<pres TAB>`\n#### Expected:\n\nSee completion options displayed commandl line interface CLI like (similar to how readline was displaying them)\n#### Actual:\n\nCompletion options are displayed using the fancy terminal user interface (TUI) combo box.\n## Notes:\n\nI used _ipdb_ in the steps of reproduce because it's how I had came across this issue and it's just a client of `terminal.debugger.TerminalPdb`.\n\nNaively hacking around I got to a probably naive [fix](https://github.com/ipython/ipython/compare/master...bhodorog:terminal-debugger-kb-shortcuts). Looking at the git history of the affected files I'm thinking @takluyver might know more if the reported behaviour is intended or just an unwanted side effect of 5.0 version. In case of latter I'd be more than happy to create a PR with my fix.\n\nIn case the detailed infos about used ipython/cpython versions are needed:\n[IPython sys info](https://gist.github.com/bhodorog/186ec342d789e7203a8247996349f164) used to reproduce the reported behaviour.\n", "commits": [{"node_id": "MDY6Q29tbWl0MTIzNjAwMzo4YTkyOTAzYTNiNTI4OTI1YjcyY2ZiMDliOWVmMGVhYTgzMzRhMzZh", "commit_message": "Respect completions display style in terminal debugger\n\nMake the debugger prompt use the same completions style as the main\nIPython prompt.\n\nCloses gh-9746", "commit_timestamp": "2017-02-20T16:31:06Z", "files": ["IPython/terminal/debugger.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjY2YmM5YzA5MzJhMmNlZGEwZjhmZWE5NGYxNzkxYzg4ZTEwYTZiMDU=", "commit_message": "Backport PR #10305: Respect completions display style in terminal debugger\n\nMake the debugger prompt use the same completions style as the main IPython prompt.\n\nCloses gh-9746", "commit_timestamp": "2017-02-21T17:12:26Z", "files": ["IPython/terminal/debugger.py"]}], "labels": [], "created_at": "2016-07-13T06:57:18Z", "closed_at": "2017-02-20T21:23:23Z", "method": ["regex"]}
{"issue_number": 9649, "title": "Remove IPython.core.hooks:fix_error_editor (now deprecated) ", "body": "`fix_error_editor` is pending deprecation as of IPython 5.0 and will be removed\nin future versions. It appears to be used only for automatically fixing syntax\nerror that has been broken for a few years and has thus been removed. \n\n---\n\nIn #9647 patch we recommend to users to complain here if they need it, so that we can Un-Deprecated. \n", "commits": [{"node_id": "MDY6Q29tbWl0MjM0NDA3Mzo0OTcwOTdlMDdhNWVmMjZjMTk1Zjg2YjQ5OGQyZWI1MGViNWI2ZmEz", "commit_message": "Deprecate pending deprecation feature, and remove from __all__\n\nShould bump #9649 to 7.0", "commit_timestamp": "2017-02-09T19:25:37Z", "files": ["IPython/core/hooks.py"]}, {"node_id": "MDY6Q29tbWl0MjIxMDcxNzQ2OmRlYjUzNjQwZGM0MjM5YjcwZWY5NTYwMWUwMzIyNGRmMGRlMjg5MTc=", "commit_message": "The fix_error_editor hook was deprecated in version 7.0, and no\ncomplaints have been raised as of today:\n\nhttps://github.com/ipython/ipython/issues/9649", "commit_timestamp": "2020-01-30T02:24:35Z", "files": ["IPython/core/hooks.py"]}, {"node_id": "MDY6Q29tbWl0MjAzNDExNjk0OmY0ODRkM2I5MWY2YzFkOTY4ODk0YTI0ZjNjN2E0NzRhNTg4MzZhODM=", "commit_message": "The fix_error_editor hook was deprecated in version 7.0, and no\ncomplaints have been raised as of today:\n\nhttps://github.com/ipython/ipython/issues/9649", "commit_timestamp": "2020-02-26T07:07:07Z", "files": ["IPython/core/hooks.py"]}], "labels": [], "created_at": "2016-06-22T16:43:49Z", "closed_at": "2020-02-01T01:15:58Z", "method": ["regex"]}
{"issue_number": 9648, "title": "`--colors` flag seems to be ignored, `%colors` doesn't work", "body": "See:\n\n![image](https://cloud.githubusercontent.com/assets/57394/16251033/6a34f510-37d7-11e6-9092-29fe74cf605c.png)\n\nI can't seem to get the no-color or LightBG schemes to work. I know there's a new color system in place, but\n\na) the old ones should be grandfathered in and still work\nb) nocolor should still be available\nc) the `%colors` magic still only lists the old ones and doesn't actually work.\n", "commits": [{"node_id": "MDY6Q29tbWl0MjM0NDA3MzphNmVkMTM5OWVkZDczMDRjNmU4NGM2ODM3NGVhNTZlNzJhMjFmNDJm", "commit_message": "Restore the ability to use %colors to switch terminal theme.\n\nAnd restore previous coloring of prompts on classical color themes.\nUnlike 4.x this will **not** change with your terminal background.\n\nIf the hightligh_style of TerminalInteractiveSHell is set to `legacy`\nthen it uses the value of TermianlInteractiveShell.colors to select the\ntheme:\n\nmonokai for darkbg/linux (by decision of BDFL), and old prompt values.\ndefault for lightbg\n\nCloses #9648", "commit_timestamp": "2016-06-23T18:52:29Z", "files": ["IPython/core/magics/basic.py", "IPython/terminal/interactiveshell.py"]}, {"node_id": "MDY6Q29tbWl0MjM0NDA3MzphZDEwZDk5ZTIwMGU1N2MwMjc2Y2QyNzRiMmEzY2VjNjU0NTMwYWQ3", "commit_message": "Restore the ability to use %colors to switch terminal theme.\n\nAnd restore previous coloring of prompts on classical color themes.\nUnlike 4.x this will **not** change with your terminal background.\n\nIf the hightligh_style of TerminalInteractiveSHell is set to `legacy`\nthen it uses the value of TermianlInteractiveShell.colors to select the\ntheme:\n\nmonokai for darkbg/linux (by decision of BDFL), and old prompt values.\ndefault for lightbg\n\nCloses #9648", "commit_timestamp": "2016-06-24T17:01:38Z", "files": ["IPython/core/magics/basic.py", "IPython/terminal/interactiveshell.py"]}, {"node_id": "MDY6Q29tbWl0MjE2MzExNzg6MDI2NWUwNmFkZjE5ZmJkZTMzODg5ODg1ODUwYjFhYjRkYmY3MmVmZQ==", "commit_message": "Restore the ability to use %colors to switch terminal theme.\n\nAnd restore previous coloring of prompts on classical color themes.\nUnlike 4.x this will **not** change with your terminal background.\n\nIf the hightligh_style of TerminalInteractiveSHell is set to `legacy`\nthen it uses the value of TermianlInteractiveShell.colors to select the\ntheme:\n\nmonokai for darkbg/linux (by decision of BDFL), and old prompt values.\ndefault for lightbg\n\nCloses #9648", "commit_timestamp": "2016-06-24T18:44:36Z", "files": ["IPython/core/magics/basic.py", "IPython/terminal/interactiveshell.py"]}], "labels": ["bug", "regression"], "created_at": "2016-06-22T00:42:41Z", "closed_at": "2016-06-24T19:05:30Z", "method": ["label", "regex"]}
{"issue_number": 9578, "title": "AssertionError on completion on 5.0.0b2", "body": "Constantly reproducible AssertionError on completion.\n\nHow to reproduce:\n- start ipython\n- type `import collect`\n- press Tab key\n- press Enter\n\nAdditional info:\n- prompt_toolkit 1.0.0 (from PyPI)\n- ipython 5.0.0b2 (from PyPI)\n- [Crash_report_ipython.txt](https://github.com/ipython/ipython/files/304616/Crash_report_ipython.txt)\n", "commits": [{"node_id": "MDY6Q29tbWl0MjM0NDA3MzpiMGY4MWM2YTJmYmUxMTFhOTZlMjk3ZDFkMWMwMzg5NGQ5YWNiY2U2", "commit_message": "Fix crash dusing completion on PTK 1.0.0\n\nCloses #9579\nCloses #9578", "commit_timestamp": "2016-06-08T18:39:53Z", "files": ["IPython/terminal/ptshell.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjRhMTg0NGMzMjBlNDcwMTE5NTcwMzFjZmM5ODk3YzFjYTZmODM5NWE=", "commit_message": "Merge pull request #9582 from Carreau/fix-completion-crash\n\nFix crash dusing completion on PTK 1.0.0", "commit_timestamp": "2016-06-09T08:43:20Z", "files": ["IPython/terminal/ptshell.py"]}], "labels": [], "created_at": "2016-06-08T11:17:41Z", "closed_at": "2016-06-09T08:43:20Z", "linked_pr_number": [9578], "method": ["regex"]}
{"issue_number": 9524, "title": "Cannot load IPython extension with --simple-prompt", "body": "Mostly mean you cannot test IPython extensions like @asmeurer iterm2-tools, \nas as soon as you're not in a tty this fails. \n\n```\n$ ipython --ext=iterm2_tools.ipython --simple-prompt\nPython 3.5.1 |Anaconda custom (x86_64)| (default, Dec  7 2015, 11:24:55)\nType \"copyright\", \"credits\" or \"license\" for more information.\n\nIPython 5.0.0.dev -- An enhanced Interactive Python.\n?         -> Introduction and overview of IPython's features.\n%quickref -> Quick reference.\nhelp      -> Python's own help system.\nobject?   -> Details about 'object', use 'object??' for extra details.\n[TerminalIPythonApp] WARNING | Error in loading extension: iterm2_tools.ipython\nCheck your config files in /Users/bussonniermatthias/.ipython/profile_default\nTraceback (most recent call last):\n  File \"/Users/bussonniermatthias/dev/ipython/IPython/core/shellapp.py\", line 246, in init_extensions\n    self.shell.extension_manager.load_extension(ext)\n  File \"/Users/bussonniermatthias/dev/ipython/IPython/core/extensions.py\", line 85, in load_extension\n    if self._call_load_ipython_extension(mod):\n  File \"/Users/bussonniermatthias/dev/ipython/IPython/core/extensions.py\", line 132, in _call_load_ipython_extension\n    mod.load_ipython_extension(self.shell)\n  File \"/Users/bussonniermatthias/dev/iterm2-tools/iterm2_tools/ipython.py\", line 108, in load_ipython_extension\n    load_ipython_extension_prompt_toolkit(ipython)\n  File \"/Users/bussonniermatthias/dev/iterm2-tools/iterm2_tools/ipython.py\", line 140, in load_ipython_extension_prompt_toolkit\n    ipython.prompts = wrap_prompts_class(Prompts)(ipython)\n  File \"/Users/bussonniermatthias/dev/traitlets/traitlets/traitlets.py\", line 567, in __set__\n    self.set(obj, value)\n  File \"/Users/bussonniermatthias/dev/traitlets/traitlets/traitlets.py\", line 556, in set\n    obj._notify_trait(self.name, old_value, new_value)\n  File \"/Users/bussonniermatthias/dev/traitlets/traitlets/traitlets.py\", line 1102, in _notify_trait\n    'type': 'change',\n  File \"/Users/bussonniermatthias/dev/traitlets/traitlets/traitlets.py\", line 1136, in notify_change\n    c(change)\n  File \"/Users/bussonniermatthias/dev/ipython/IPython/terminal/ptshell.py\", line 110, in _\n    self._update_layout()\n  File \"/Users/bussonniermatthias/dev/ipython/IPython/terminal/ptshell.py\", line 285, in _update_layout\n    self._app.layout = create_prompt_layout(**self._layout_options())\nAttributeError: 'TerminalInteractiveShell' object has no attribute '_app'\n```\n", "commits": [{"node_id": "MDY6Q29tbWl0MjM0NDA3MzplNzE3NDMwMTg5Y2JiNDA2YWFkYmQ0ODIzYzdkYmIwMzkyM2JlZTc2", "commit_message": "Don't update PTK layout if --simple-shell\n\nAs there is no prompt_toolkit app instance.\n\ncloses #9524", "commit_timestamp": "2016-06-02T17:23:31Z", "files": ["IPython/terminal/ptshell.py"]}, {"node_id": "MDY6Q29tbWl0MjM0NDA3Mzo3YWZmMzdkZGQ4NDVjMzUzYTI4ZjVkMjQ3YWE3MmEzZDAwYWQwZjdi", "commit_message": "Don't update PTK layout if --simple-shell\n\nAs there is no prompt_toolkit app instance.\n\ncloses #9524", "commit_timestamp": "2016-06-02T17:24:23Z", "files": ["IPython/terminal/ptshell.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjY0ODA2Y2NhMjhkMTdmZjExYzdhOTJhNGNhODY1Y2QwZWNjYTU1ZDk=", "commit_message": "Merge pull request #9527 from Carreau/simple-prompt-update-layout\n\nDon't update PTK layout if --simple-shell", "commit_timestamp": "2016-06-02T18:03:58Z", "files": ["IPython/terminal/ptshell.py"]}], "labels": [], "created_at": "2016-06-01T23:09:21Z", "closed_at": "2016-06-02T18:03:58Z", "linked_pr_number": [9524], "method": ["regex"]}
{"issue_number": 9486, "title": "Exception thrown without source code available", "body": "I got a reproducible crash, apparently when ipython tries to locate the source code (which does not exist).\nThe referenced file `/tmp/zipper/dbtaric.dat` is a zip file used through **zipimport.zipimporter**\n\n```\nipython --version: 4.2.0\nuname -a: Linux l034int 4.5.4-1-ARCH #1 SMP PREEMPT Wed May 11 22:21:28 CEST 2016 x86_64 GNU/Linux\n\nTraceback` (most recent call last):\n  File \"/usr/lib/python3.5/site-packages/IPython/core/interactiveshell.py\", line 2885, in run_code\n    exec(code_obj, self.user_global_ns, self.user_ns)\n  File \"<ipython-input-5-bee41c3a1cc0>\", line 1, in <module>\n    db.countries['KK']\n  File \"countries.py\", line 49, in __getitem__\nKeyError: 'KK'\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/usr/lib/python3.5/site-packages/IPython/core/interactiveshell.py\", line 1827, in showtraceback\n    stb = value._render_traceback_()\nAttributeError: 'KeyError' object has no attribute '_render_traceback_'\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/usr/lib/python3.5/site-packages/IPython/core/interactiveshell.py\", line 2831, in run_ast_nodes\n    if self.run_code(code, result):\n  File \"/usr/lib/python3.5/site-packages/IPython/core/interactiveshell.py\", line 2902, in run_code\n    self.showtraceback()\n  File \"/usr/lib/python3.5/site-packages/IPython/core/interactiveshell.py\", line 1830, in showtraceback\n    value, tb, tb_offset=tb_offset)\n  File \"/usr/lib/python3.5/site-packages/IPython/core/ultratb.py\", line 1394, in structured_traceback\n    self, etype, value, tb, tb_offset, number_of_lines_of_context)\n  File \"/usr/lib/python3.5/site-packages/IPython/core/ultratb.py\", line 1302, in structured_traceback\n    self, etype, value, tb, tb_offset, number_of_lines_of_context\n  File \"/usr/lib/python3.5/site-packages/IPython/core/ultratb.py\", line 1152, in structured_traceback\n    tb_offset)\n  File \"/usr/lib/python3.5/site-packages/IPython/core/ultratb.py\", line 1103, in format_exception_as_a_whole\n    frames = self.format_records(records, last_unique, recursion_repeat)\n  File \"/usr/lib/python3.5/site-packages/IPython/core/ultratb.py\", line 835, in format_records\n    frames.append(self.format_record(*r))\n  File \"/usr/lib/python3.5/site-packages/IPython/core/ultratb.py\", line 925, in format_record\n    file = openpy.source_from_cache(file)\n  File \"<frozen importlib._bootstrap_external>\", line 302, in source_from_cache\nValueError: __pycache__ not bottom-level directory in '/tmp/zipper/dbtaric.dat/py3_logic_dbtaric/countries.pyc'\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/usr/lib/python3.5/site-packages/IPython/core/interactiveshell.py\", line 1827, in showtraceback\n    stb = value._render_traceback_()\nAttributeError: 'ValueError' object has no attribute '_render_traceback_'\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/usr/bin/ipython\", line 5, in <module>\n    start_ipython()\n  File \"/usr/lib/python3.5/site-packages/IPython/__init__.py\", line 119, in start_ipython\n    return launch_new_instance(argv=argv, **kwargs)\n  File \"/usr/lib/python3.5/site-packages/traitlets/config/application.py\", line 596, in launch_instance\n    app.start()\n  File \"/usr/lib/python3.5/site-packages/IPython/terminal/ipapp.py\", line 344, in start\n    self.shell.mainloop()\n  File \"/usr/lib/python3.5/site-packages/IPython/terminal/interactiveshell.py\", line 550, in mainloop\n    self.interact(display_banner=display_banner)\n  File \"/usr/lib/python3.5/site-packages/IPython/terminal/interactiveshell.py\", line 674, in interact\n    self.run_cell(source_raw, store_history=True)\n  File \"/usr/lib/python3.5/site-packages/IPython/core/interactiveshell.py\", line 2723, in run_cell\n    interactivity=interactivity, compiler=compiler, result=result)\n  File \"/usr/lib/python3.5/site-packages/IPython/core/interactiveshell.py\", line 2850, in run_ast_nodes\n    self.showtraceback()\n  File \"/usr/lib/python3.5/site-packages/IPython/core/interactiveshell.py\", line 1830, in showtraceback\n    value, tb, tb_offset=tb_offset)\n  File \"/usr/lib/python3.5/site-packages/IPython/core/ultratb.py\", line 1394, in structured_traceback\n    self, etype, value, tb, tb_offset, number_of_lines_of_context)\n  File \"/usr/lib/python3.5/site-packages/IPython/core/ultratb.py\", line 1302, in structured_traceback\n    self, etype, value, tb, tb_offset, number_of_lines_of_context\n  File \"/usr/lib/python3.5/site-packages/IPython/core/ultratb.py\", line 1171, in structured_traceback\n    chained_exceptions_tb_offset)\n  File \"/usr/lib/python3.5/site-packages/IPython/core/ultratb.py\", line 1103, in format_exception_as_a_whole\n    frames = self.format_records(records, last_unique, recursion_repeat)\n  File \"/usr/lib/python3.5/site-packages/IPython/core/ultratb.py\", line 835, in format_records\n    frames.append(self.format_record(*r))\n  File \"/usr/lib/python3.5/site-packages/IPython/core/ultratb.py\", line 925, in format_record\n    file = openpy.source_from_cache(file)\n  File \"<frozen importlib._bootstrap_external>\", line 302, in source_from_cache\nValueError: __pycache__ not bottom-level directory in '/tmp/zipper/dbtaric.dat/py3_logic_dbtaric/countries.pyc'\n\nIf you suspect this is an IPython bug, please report it at:\n    https://github.com/ipython/ipython/issues\nor send an email to the mailing list at ipython-dev@scipy.org\n\nYou can print a more detailed traceback right now with \"%tb\", or use \"%debug\"\nto interactively debug it.\n\nExtra-detailed tracebacks for bug-reporting purposes can be enabled via:\n    %config Application.verbose_crash=True\n```\n", "commits": [{"node_id": "MDY6Q29tbWl0MTIzNjAwMzpmZTJlZjUwZTAwZDgzNmU0NTk2ZWQxOWVhOWM0ZDVkYjFlM2E1MjFi", "commit_message": "Catch failure to find source file for traceback\n\nCloses gh-9486", "commit_timestamp": "2016-05-20T13:12:34Z", "files": ["IPython/core/ultratb.py"]}], "labels": [], "created_at": "2016-05-20T11:38:40Z", "closed_at": "2016-05-20T14:11:14Z", "method": ["regex"]}
{"issue_number": 9391, "title": "Can't quit `less` without using Ctrl-C: pager quit is effectively broken.", "body": "If I run `!less <somefile>`, issuing `q` fails to quit it. I have to issue `Ctrl-C` to quit.  This is pretty problematic since `less` is used by the pager for long output.\n", "commits": [{"node_id": "MDY6Q29tbWl0MTIzNjAwMzo4Mzk4YTM2ZjEzNjYwYTA0MTIzNGU3ZjI1YzQ2ZTIwNjVlZGZlYTBh", "commit_message": "Use system_raw in ptshell\n\nCloses gh-9391\n\nWe were using system_piped, which runs processes through pexpect. Within\nthe terminal, we can use system_raw, which lets the child processes\ninteract directly with the terminal we're running in.", "commit_timestamp": "2016-04-14T14:31:03Z", "files": ["IPython/terminal/ptshell.py"]}], "labels": ["bug", "regression"], "created_at": "2016-04-13T07:48:17Z", "closed_at": "2016-04-14T14:49:27Z", "method": ["label", "regex"]}
{"issue_number": 9379, "title": "TypeError on Shell Completion", "body": "I get the following error when attempting tab completion within `ipython` console:\n\n``` python\nPython 2.7.11+ (default, Mar 30 2016, 21:00:42) \nType \"copyright\", \"credits\" or \"license\" for more information.\n\nIPython 5.0.0.dev -- An enhanced Interactive Python.\n?         -> Introduction and overview of IPython's features.\n%quickref -> Quick reference.\nhelp      -> Python's own help system.\nobject?   -> Details about 'object', use 'object??' for extra details.\n\nIn [1]: dException in thread Thread-7:\nTraceback (most recent call last):\n  File \"/usr/lib/python2.7/threading.py\", line 801, in __bootstrap_inner\n    self.run()\n  File \"/usr/lib/python2.7/threading.py\", line 754, in run\n    self.__target(*self.__args, **self.__kwargs)\n  File \"/usr/local/lib/python2.7/dist-packages/prompt_toolkit/interface.py\", line 742, in run\n    completions = list(buffer.completer.get_completions(document, complete_event))\n  File \"/home/bwillar0/projects/python/ipython/IPython/terminal/ptshell.py\", line 55, in gets\n    m = unicodedata.normalize('NFC', m)\nTypeError: normalize() argument 2 must be unicode, not str\n```\n\nChanging line 55 of `ptshell.py` to \n\n``` python\nm = unicodedata.normalize('NFC', unicode(m))\n```\n\nworks fine, but I'm not sure if that's really the problem.  Any ideas?\n", "commits": [{"node_id": "MDY6Q29tbWl0MjM0NDA3MzpkMjBmMzNkYjU5YzIzZmVkNzgwNDAxNjJmMWMzNjJlNjRkMjMzN2Uw", "commit_message": "Force completion results to be unicode.\n\nShould fix some of #9379", "commit_timestamp": "2016-04-15T09:02:56Z", "files": ["IPython/core/completer.py"]}, {"node_id": "MDY6Q29tbWl0MjM0NDA3MzpkOWNmOGYzYTQ3ZjBiYTI2ZjcxM2VjMDQ1MTNmNzUwOTIyOTk1NzJl", "commit_message": "Force completion results to be unicode.\n\nShould fix some of #9379", "commit_timestamp": "2016-04-15T09:10:09Z", "files": ["IPython/core/completer.py"]}], "labels": ["bug"], "created_at": "2016-04-06T23:54:52Z", "closed_at": "2016-04-15T12:09:58Z", "method": ["label"]}
{"issue_number": 9361, "title": "Odd, broken buffering of internal messages...", "body": "Consider the following session (this is on master, right now at `51fa9ee`):\n\n```\nIn [1]: alias_magic foo\n\nIn [2]: 1+2\nOut[2]: 3\n\nIn [3]: exit\nUsageError: the following arguments are required: targetdenali[~]>\n```\n\nMy call to `alias_magic` was missing one argument, but the error message got completely swallowed (even though it's a print statement inside the `alias_magic` code). It only makes it to stdout at shutdown.  I tried with longer sessions, creating more errors, and they just keep piling up internally until the exit.  Very odd.\n\nPing @takluyver, I suspect this is also related to the recent ptoolkit work.\n", "commits": [{"node_id": "MDY6Q29tbWl0MTIzNjAwMzpiY2QxM2Q3MWY3ZTNjYmQ2YzBhZGJhOGJkMzJlMmFjZTNmZGU5Yzlh", "commit_message": "Show UsageError exception immediately\n\nCloses gh-9361", "commit_timestamp": "2016-03-28T23:06:56Z", "files": ["IPython/core/interactiveshell.py"]}], "labels": ["bug", "regression"], "created_at": "2016-03-27T03:23:37Z", "closed_at": "2016-03-29T15:56:26Z", "method": ["label", "regex"]}
{"issue_number": 9359, "title": "Confirm-on-exit broken on master", "body": "This is a regression introduced by the new ptshell code, specifically [here](https://github.com/ipython/ipython/blob/master/IPython/terminal/ptshell.py#L260). It should honor the standard `c.TerminalInteractiveShell.confirm_exit = True` flag in `ipython_config.py`.\n\nPinging @takluyver...\n", "commits": [{"node_id": "MDY6Q29tbWl0MTIzNjAwMzpjZTQ5OWE3ZDNlMzAxNjIxNmJkYTFlOTFiY2RlZWE5Mzc0N2U0MWQ4", "commit_message": "Add and use confirm_exit flag in prompt_toolkit shell\n\nCloses gh-9359", "commit_timestamp": "2016-03-27T01:02:33Z", "files": ["IPython/terminal/ptshell.py"]}], "labels": ["bug", "regression"], "created_at": "2016-03-27T00:04:17Z", "closed_at": "2016-04-04T17:01:56Z", "method": ["label", "regex"]}
{"issue_number": 9331, "title": "Auto-rewrite when autocall is on miscomputes the number of dashes to print and then messes output prompt positioning", "body": "Not sure what logic is doing this under the hood, but the problem is pretty obvious:\n\n```\nIn [1]: autocall \nAutomatic calling is: Smart\n\nIn [2]: print 1\n-> print(1)\n1\n\nIn [3]: print 1\n------------> print(1)\n1\n\nIn [4]: print 1\n-----------------------> print(1)\n1\n```\n\nOn each successive call, more and more dashes get printed (and they aren't the right number even on the first call).  This is certainly a new bug, though I haven't bisected it yet.\n\nFurthermore, once this has happened, the output prompt ends up mis-positioned:\n\n```\nIn [10]: 3\n  Out[10]: 3\n```\n\nMy `sys_info`:\n\n```\nIn [9]: print(sys_info())\n{'commit_hash': 'aa586fd',\n 'commit_source': 'repository',\n 'default_encoding': 'UTF-8',\n 'ipython_path': '/Users/fperez/dev/ipython/ipython/IPython',\n 'ipython_version': '5.0.0.dev',\n 'os_name': 'posix',\n 'platform': 'Darwin-15.3.0-x86_64-i386-64bit',\n 'sys_executable': '/Users/fperez/usr/conda/bin/python',\n 'sys_platform': 'darwin',\n 'sys_version': '3.5.1 |Continuum Analytics, Inc.| (default, Dec  7 2015, '\n                '11:24:55) \\n'\n                '[GCC 4.2.1 (Apple Inc. build 5577)]'}\n```\n", "commits": [{"node_id": "MDY6Q29tbWl0MTIzNjAwMzpjMDNiYmE3ZWE3YmM0NWE1YjYwMjUwOTJhNzE0MjNjNjFkMjU1ZGNk", "commit_message": "Don't update width of prompt area\n\nFixes gh-9331 (roughly)\n\nThe input prompts are now displayed through prompt_toolkit, so this code\ndoesn't know the width it's trying to match.", "commit_timestamp": "2016-05-17T13:36:20Z", "files": ["IPython/core/prompts.py"]}, {"node_id": "MDY6Q29tbWl0MTIzNjAwMzpmMmI0NTM0ZTdhZDY2ZDRmNjZmZWNhZWUxMjZkYTkyMzdjYTM2NTYy", "commit_message": "Don't update width of prompt area\n\nFixes gh-9331 (roughly)\n\nThe input prompts are now displayed through prompt_toolkit, so this code\ndoesn't know the width it's trying to match.", "commit_timestamp": "2016-05-18T14:16:35Z", "files": ["IPython/core/prompts.py"]}, {"node_id": "MDY6Q29tbWl0MTIzNjAwMzowNmVlNGRlMDVmNGJmZDU2ZmMzZWIzMWJhZDY3NTIwY2M5MWM1OGI5", "commit_message": "Don't update width of prompt area\n\nFixes gh-9331 (roughly)\n\nThe input prompts are now displayed through prompt_toolkit, so this code\ndoesn't know the width it's trying to match.", "commit_timestamp": "2016-06-01T11:12:04Z", "files": ["IPython/core/prompts.py"]}], "labels": ["bug", "regression"], "created_at": "2016-03-17T02:40:06Z", "closed_at": "2016-06-01T20:37:28Z", "method": ["label", "regex"]}
{"issue_number": 9329, "title": "IPython crash on startup - ValueError: embedded null character", "body": "Hi all,\n\nIPython has been working fine, but I killed a process forcefully and now IPython crashes every time on startup via terminal. IPython via jupyter notebook still works fine. Running python from the terminal also works as usual. I'm using:\n\nPython3.5\nIPython 4.1.2\nCentOS 5.3\n\nHere's the full traceback:\n\n---\n\n[oevans@hamilton chiari]$ ipython\nTraceback (most recent call last):\n  File \"/home/oevans/local/miniconda3/bin/ipython\", line 6, in <module>\n    sys.exit(start_ipython())\n  File \"/home/oevans/local/miniconda3/lib/python3.5/site-packages/IPython/**init**.py\", line 119, in start_ipython\n    return launch_new_instance(argv=argv, *_kwargs)\n  File \"/home/oevans/local/miniconda3/lib/python3.5/site-packages/traitlets/config/application.py\", line 588, in launch_instance\n    app.initialize(argv)\n  File \"<decorator-gen-111>\", line 2, in initialize\n  File \"/home/oevans/local/miniconda3/lib/python3.5/site-packages/traitlets/config/application.py\", line 74, in catch_config_error\n    return method(app, *args, *_kwargs)\n  File \"/home/oevans/local/miniconda3/lib/python3.5/site-packages/IPython/terminal/ipapp.py\", line 306, in initialize\n    self.init_shell()\n  File \"/home/oevans/local/miniconda3/lib/python3.5/site-packages/IPython/terminal/ipapp.py\", line 322, in init_shell\n    ipython_dir=self.ipython_dir, user_ns=self.user_ns)\n  File \"/home/oevans/local/miniconda3/lib/python3.5/site-packages/traitlets/config/configurable.py\", line 404, in instance\n    inst = cls(_args, *_kwargs)\n  File \"/home/oevans/local/miniconda3/lib/python3.5/site-packages/IPython/core/interactiveshell.py\", line 483, in **init**\n    self.init_readline()\n  File \"/home/oevans/local/miniconda3/lib/python3.5/site-packages/IPython/terminal/interactiveshell.py\", line 435, in init_readline\n    self.refill_readline_hist()\n  File \"/home/oevans/local/miniconda3/lib/python3.5/site-packages/IPython/terminal/interactiveshell.py\", line 477, in refill_readline_hist\n    stdin_encoding))\nValueError: embedded null character\n\nIf you suspect this is an IPython bug, please report it at:\n    https://github.com/ipython/ipython/issues\nor send an email to the mailing list at ipython-dev@scipy.org\n\nYou can print a more detailed traceback right now with \"%tb\", or use \"%debug\"\nto interactively debug it.\n\nExtra-detailed tracebacks for bug-reporting purposes can be enabled via:\n    c.Application.verbose_crash=True\n\n---\n\nAny help would be appreciated.\n\nThanks,\nOliver Evans\n", "commits": [{"node_id": "MDY6Q29tbWl0MTIzNjAwMzoyN2RiMDhlNzM0M2VkODE3M2MxMzRmNjNiYTNkNDEzZjMxYWE1M2Rk", "commit_message": "Catch ValueError when filling readline history, and warn\n\nCloses gh-9329", "commit_timestamp": "2016-03-20T13:46:40Z", "files": ["IPython/terminal/interactiveshell.py"]}, {"node_id": "MDY6Q29tbWl0NjU5NDQ2OmVhMmY2NmUxMDhhNzljZDE1MjRhN2IzNTdmNWJiYzFlM2NiNjlkNTU=", "commit_message": "Backport PR #9338: Catch ValueError when filling readline history, and warn\n\nCloses gh-9329", "commit_timestamp": "2016-04-05T23:49:07Z", "files": ["IPython/terminal/interactiveshell.py"]}], "labels": [], "created_at": "2016-03-16T15:41:37Z", "closed_at": "2016-03-16T19:30:45Z", "method": ["regex"]}
{"issue_number": 9286, "title": "%matplotlib notebook broken with current matplotlib master", "body": "With current matplotlib master, executing %matplotlib notebook fails with an `AttributeError: module 'matplotlib.backends' has no attribute 'backend'`\n\nPlease find a notebook demonstrating this problem here: https://gist.github.com/ericdill/1bfdc12692aec09047bb\n\nmatplotlib/matplotlib#6013 is the PR that broke this.\n\nCross-posted at matplotlib/matplotlib#6092.\n\ncc @tacaswell \n", "commits": [{"node_id": "MDY6Q29tbWl0MTcyNTU5NTA6MmEyYjkwZWQzZmU3ZTBjZjJlNTZiZDZjMWJiNzk4NzU4YjZmNGQ0Yg==", "commit_message": "FIX: use mpl.get_backend() instead of a global\n\nUse `matplotlib.get_backend()` to look up the current backend rather\nthan looking at a module-level golabl in `matplotlib.backends`.\n\nCloses #9286", "commit_timestamp": "2016-03-02T02:30:04Z", "files": ["IPython/core/pylabtools.py"]}, {"node_id": "MDY6Q29tbWl0NjU5NDQ2OjY4MjI5ZGJlY2E2ODdmNjIyMDc0YjU2NDE3ODU2YzNmNjVjNDI4YmE=", "commit_message": "Backport PR #9287: FIX: use mpl.get_backend() instead of a global\n\nUse `matplotlib.get_backend()` to look up the current backend rather\nthan looking at a module-level golabl in `matplotlib.backends`.\n\nCloses #9286", "commit_timestamp": "2016-04-05T23:42:02Z", "files": ["IPython/core/pylabtools.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjY2MTlhNGNiMDU1YTA2N2UxZDE5Zjc5Mzg0ZTdlNWYxOWU2MzQyYzI=", "commit_message": "Merge pull request #9287 from tacaswell/fix_nbagg_lookup\n\nFIX: use mpl.get_backend() instead of a global", "commit_timestamp": "2016-03-02T07:33:42Z", "files": ["IPython/core/pylabtools.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjY2MTlhNGNiMDU1YTA2N2UxZDE5Zjc5Mzg0ZTdlNWYxOWU2MzQyYzI=", "commit_message": "Merge pull request #9287 from tacaswell/fix_nbagg_lookup\n\nFIX: use mpl.get_backend() instead of a global", "commit_timestamp": "2016-03-02T07:33:42Z", "files": ["IPython/core/pylabtools.py"]}, {"node_id": "MDY6Q29tbWl0NjU5NDQ2OjY4MjI5ZGJlY2E2ODdmNjIyMDc0YjU2NDE3ODU2YzNmNjVjNDI4YmE=", "commit_message": "Backport PR #9287: FIX: use mpl.get_backend() instead of a global\n\nUse `matplotlib.get_backend()` to look up the current backend rather\nthan looking at a module-level golabl in `matplotlib.backends`.\n\nCloses #9286", "commit_timestamp": "2016-04-05T23:42:02Z", "files": ["IPython/core/pylabtools.py"]}], "labels": [], "created_at": "2016-03-02T02:21:57Z", "closed_at": "2016-03-02T07:33:42Z", "linked_pr_number": [9286], "method": ["regex"]}
{"issue_number": 9281, "title": "ipython setup darwin/CPython error", "body": "Hi on some alternative project, ipython is failing to build on a linux system:\n\n<pre>\nSearching for ipython>=3.0.0\nReading https://pypi.python.org/simple/ipython/\nBest match: ipython 4.1.1\nDownloading https://pypi.python.org/packages/source/i/ipython/ipython-4.1.1.zip#md5=445ff597cccb7818c23c988010f62838\nProcessing ipython-4.1.1.zip\nWriting /tmp/easy_install-gDd17B/ipython-4.1.1/setup.cfg\nRunning ipython-4.1.1/setup.py -q bdist_egg --dist-dir /tmp/easy_install-gDd17B/ipython-4.1.1/egg-dist-tmp-QzsqPK\nerror: Setup script exited with error in ipython setup command: Invalid environment marker: sys_platform == \"darwin\" and platform_python_implementation == \"CPython\"\n</pre>\n\n\nfixing the `requirements.txt` like this solves the problem:\n\n<pre>\ndiff --git a/requirements.txt b/requirements.txt\nindex 2b00519..1a20c72 100644\n--- a/requirements.txt\n+++ b/requirements.txt\n@@ -8,7 +8,7 @@ decorator\n wheel\n pyyaml\n werkzeug\n-ipython>=3.0.0\n+ipython==4.0.0\n statistics\n requests\n rlp>=0.4.4\n</pre>\n\n\nIn short, ipython 4.1.1 is automatically choosen and fails, while 4.0.0 is fine, and it seems related to the following line in `setup.py`:\n`207:  ':sys_platform == \"darwin\" and platform_python_implementation == \"CPython\"': ['gnureadline'],`\n\nCheers\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU4NTE4OmIxMmU5NmZiMWEzNzk4Zjk2YWQyOTI4YWRmYWRkZDY0Yjk4MmJiYmU=", "commit_message": "Merge pull request #9285 from minrk/rm-python-implementation\n\nremove setuptools workaround for platform_python_implementation", "commit_timestamp": "2016-03-01T10:47:28Z", "files": ["setup.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmIxMmU5NmZiMWEzNzk4Zjk2YWQyOTI4YWRmYWRkZDY0Yjk4MmJiYmU=", "commit_message": "Merge pull request #9285 from minrk/rm-python-implementation\n\nremove setuptools workaround for platform_python_implementation", "commit_timestamp": "2016-03-01T10:47:28Z", "files": ["setup.py"]}], "labels": ["osx", "needs-info"], "created_at": "2016-02-27T11:03:09Z", "closed_at": "2016-03-01T11:35:27Z", "linked_pr_number": [9281], "method": ["regex"]}
{"issue_number": 9223, "title": "interactive -i mode doesn't work after exceptions since 4.1.1", "body": "Hi,\n\nI recently noticed that after upgrading from 4.0.3 to 4.1.1 (from anaconda), `-i` flag no longer drops to the interactive shell but quits after an exception. I downgraded to 4.0.3 and it is now working correctly. I searched on google but couldn't find a similar issue. Any ideas?\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU5NDQ2Ojc0NzVjMjEwY2ZmNTMwNjY3MWNmZmU3MjljMmI5YmZiYWRmMzY3Mzg=", "commit_message": "Backport PR #9225: only exit on error if `interact` is False\n\nfixes `ipython -i failing-script.py`\ncloses #9223", "commit_timestamp": "2016-04-05T23:41:38Z", "files": ["IPython/core/shellapp.py", "IPython/terminal/ipapp.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmNjY2QwZWEyNDY4MTAwYjY5YTVkMDQxNzIyYTc5N2QzZjMxYmVkNWM=", "commit_message": "Merge pull request #9225 from minrk/respect-force-interact\n\nonly exit on error if `interact` is False", "commit_timestamp": "2016-02-12T12:40:07Z", "files": ["IPython/core/shellapp.py", "IPython/terminal/ipapp.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmNjY2QwZWEyNDY4MTAwYjY5YTVkMDQxNzIyYTc5N2QzZjMxYmVkNWM=", "commit_message": "Merge pull request #9225 from minrk/respect-force-interact\n\nonly exit on error if `interact` is False", "commit_timestamp": "2016-02-12T12:40:07Z", "files": ["IPython/core/shellapp.py", "IPython/terminal/ipapp.py"]}, {"node_id": "MDY6Q29tbWl0NjU5NDQ2Ojc0NzVjMjEwY2ZmNTMwNjY3MWNmZmU3MjljMmI5YmZiYWRmMzY3Mzg=", "commit_message": "Backport PR #9225: only exit on error if `interact` is False\n\nfixes `ipython -i failing-script.py`\ncloses #9223", "commit_timestamp": "2016-04-05T23:41:38Z", "files": ["IPython/core/shellapp.py", "IPython/terminal/ipapp.py"]}], "labels": [], "created_at": "2016-02-11T19:08:42Z", "closed_at": "2016-02-12T12:40:07Z", "linked_pr_number": [9223], "method": ["regex"]}
{"issue_number": 9179, "title": "tools/github_stats fails on 2fa. ", "body": "```\n$ python tools/github_stats.py --milestone 4.1 --since-tag 4.0.0\nno cache\nfetching GitHub stats since 2015-08-12 00:00:00 (tag: 4.0.0, milestone: 4.1)\nPlease enter your github username and password. These are not stored, only used to get an oAuth token. You can revoke this at any time on Github.\nUsername: *****\nPassword:*****\nTraceback (most recent call last):\n  File \"github_stats.py\", line 165, in <module>\n    auth=True)\n  File \"/Users/bussonniermatthias/dev/ipython/tools/gh_api.py\", line 175, in get_milestone_id\n    milestones = get_milestones(project, auth=auth, **params)\n  File \"/Users/bussonniermatthias/dev/ipython/tools/gh_api.py\", line 168, in get_milestones\n    headers = make_auth_header()\n  File \"/Users/bussonniermatthias/dev/ipython/tools/gh_api.py\", line 73, in make_auth_header\n    return {'Authorization': 'token ' + get_auth_token()}\n  File \"/Users/bussonniermatthias/dev/ipython/tools/gh_api.py\", line 67, in get_auth_token\n    response.raise_for_status()\n  File \"/Users/bussonniermatthias/anaconda3/lib/python3.5/site-packages/requests/models.py\", line 840, in raise_for_status\n    raise HTTPError(http_error_msg, response=self)\nrequests.exceptions.HTTPError: 401 Client Error: Unauthorized for url: https://api.github.com/authorizations\n```\n", "commits": [{"node_id": "MDY6Q29tbWl0MjE5NzcwMDY6Y2Q2NzZiN2FiOGZhMTdmYWRlMGVkYmNhMDIzMzIyNjExOGQ0YzU0MQ==", "commit_message": "fix #9179 2fa login", "commit_timestamp": "2016-01-27T16:58:59Z", "files": ["tools/gh_api.py"]}, {"node_id": "MDY6Q29tbWl0MjE5NzcwMDY6YzhlMjUzYTAwNmRhN2FlZGEzMTk0MWRhYTMwYjM5NTBiMTg3YTM3ZQ==", "commit_message": "fix #9179 2fa login", "commit_timestamp": "2016-01-27T17:08:44Z", "files": ["tools/gh_api.py"]}, {"node_id": "MDY6Q29tbWl0MjE5NzcwMDY6MWI3MzI1NGJmM2QzNTI5ZjgwYWJlZjcyYzdmOWMwYzA4NmFjMzI3Nw==", "commit_message": "fix #9179 2fa login", "commit_timestamp": "2016-01-27T17:14:37Z", "files": ["tools/gh_api.py"]}, {"node_id": "MDY6Q29tbWl0MjE5NzcwMDY6ZjNiMDhmMzg5NmU0ZTMzZTJjYThlOTI1ZjlmOTM1YzlmN2RlMzllNA==", "commit_message": "fix #9179 2fa login", "commit_timestamp": "2016-01-27T17:16:09Z", "files": ["tools/gh_api.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmYzYjA4ZjM4OTZlNGUzM2UyY2E4ZTkyNWY5ZjkzNWM5ZjdkZTM5ZTQ=", "commit_message": "fix #9179 2fa login", "commit_timestamp": "2016-01-27T17:16:09Z", "files": ["tools/gh_api.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmI1YWRkYWVjM2ZhODY1NDUxNTJiZThhNWU3YTU3Nzk3YTU1YWI0MTU=", "commit_message": "Merge pull request #9186 from parleur/auth_sms\n\nfix #9179 2fa login", "commit_timestamp": "2016-01-27T18:10:13Z", "files": ["tools/gh_api.py"]}], "labels": ["good first issue"], "created_at": "2016-01-26T22:20:06Z", "closed_at": "2016-01-27T18:10:16Z", "method": ["regex"]}
{"issue_number": 9122, "title": "mock.call inspection consumes all memory", "body": "to reproduce:\n\n```\nfrom mock import call\ncall?\n```\n\nReproduced on python 2.7.10, mock==1.0.1, IPython==4.0.1 and python 3.5, unittest.mock==1.0 so versions shouldn't matter.\n\nThe code above will consume all memory.\n\n`call` is actually `call = _Call(from_kall=False)`, `from_kall=True` does not cause the problem, that should be a hint.\n\nWhile this might be a problem with mock being too magic, this certainly shouldn't lead to a hanged system. I don't use swap, if that matters.\n", "commits": [{"node_id": "MDY6Q29tbWl0MTIzNjAwMzo4MDk0MjZhYzYwYmYyNjkxMzQwNTM0ZGVjYWU5NDM1NGUwYjgyMTkx", "commit_message": "Limit unwrapping __wrapped__ attributes to prevent infinite loops\n\nCloses gh-9122\n\nSome objects lie. Some objects lie again and again and again. Don't\ntrust the objects.", "commit_timestamp": "2016-01-10T17:01:28Z", "files": ["IPython/core/oinspect.py"]}, {"node_id": "MDY6Q29tbWl0MTIzNjAwMzowZjE4ODgyYWNlMGY4ZDYyYWI2ZDQ2ODRmZDM1NGRhZWYyYmY4MTRj", "commit_message": "Limit unwrapping __wrapped__ attributes to prevent infinite loops\n\nCloses gh-9122\n\nSome objects lie. Some objects lie again and again and again. Don't\ntrust the objects.", "commit_timestamp": "2016-01-11T11:43:02Z", "files": ["IPython/core/oinspect.py"]}, {"node_id": "MDY6Q29tbWl0MTIzNjAwMzo2YWRkZjRhNzYzMTQ4MTc0ODIwZjE1ZjFmYjNkMjg5YzRiNDI3OWQx", "commit_message": "Limit unwrapping __wrapped__ attributes to prevent infinite loops\n\nCloses gh-9122\n\nSome objects lie. Some objects lie again and again and again. Don't\ntrust the objects.", "commit_timestamp": "2016-01-11T11:43:58Z", "files": ["IPython/core/oinspect.py"]}], "labels": [], "created_at": "2016-01-10T14:53:48Z", "closed_at": "2016-01-11T12:34:51Z", "method": ["regex"]}
{"issue_number": 9063, "title": "Regression : %kill_embedded does not work (broken by #6840 )", "body": "The Magic [`%kill_embedded`](http://ipython.readthedocs.org/en/stable/api/generated/IPython.terminal.embed.html?highlight=kill_embedded#IPython.terminal.embed.EmbeddedMagics.kill_embedded) flags the embedded shell instance so that it is not started on subsequent calls of `IPython.embed()`. However, fo this to work, we need to keep the instance in memory otherwise, we'll be flagging new instances all the time and never read the flags we've set.\n\nIn [`IPython/terminal/embed.py`](https://github.com/ipython/ipython/blob/master/IPython/terminal/embed.py#L262), we do several things :\n- We save the instance that might be the current singleton instance of the `InteractiveShell` class\n- We remove it from the singleton\n- We get `InteractiveShellEmbed`'s instance (created if existing) and launch the shell\n- As soon as it's ended, we delete the instance\n- We replace the original shell instance as the singleton instance.\n\nAll these things were done by #6840 in an effort to make embed nestable (but then it broke `%kill_embeded`)\n\nIt's clear that the current behaviour makes it completely impossible for `%kill_embedded` to work as expected.\n\nWhat would be preferred for a PR : to store the flag elsewhere or to improve #6840 to not destroy instances ?\n", "commits": [{"node_id": "MDY6Q29tbWl0MjM0NDA3Mzo1NGFiMzRhYTc0NjZmMWNjNTRkZTJiYzJjZWE0ODI0NmM4ZGExYjNm", "commit_message": "Restore `%kill_embedded` for multiple IPython embed call.\n\nCloses #9063.\n\nInspect frame and store the current file & line reference of the current\ncall. Calling kill_embed subsequently store this in a set of deactivated\nreference.\n\nThe frame inspection is by default to 3, which is the correct number of\nframe when using the `Import IPython; IPython.embed()` syntax, it will\nbe the wrong number of frames when creating an `InteractiveShellEmbed`\nmanually, leading to kill_embed to likely not work correctly.\nThough I expect these case to be rare, and people doing so to be capable\nof wrapping their custom call in a context_manager that set\n`InteractiveShellEmbed._stack_frames` to the right value depending on\nthe context.", "commit_timestamp": "2016-05-02T23:28:21Z", "files": ["IPython/terminal/embed.py"]}, {"node_id": "MDY6Q29tbWl0MjM0NDA3Mzo1ZDE5YTFjMzAzZjkyNTg2ZTExODZkZDU2NDNkNTEwOWI3YjM3ZDk5", "commit_message": "Restore `%kill_embedded` for multiple IPython embed call.\n\nCloses #9063.\n\nInspect frame and store the current file & line reference of the current\ncall. Calling kill_embed subsequently store this in a set of deactivated\nreference.\n\nThe frame inspection is by default to 3, which is the correct number of\nframe when using the `Import IPython; IPython.embed()` syntax, it will\nbe the wrong number of frames when creating an `InteractiveShellEmbed`\nmanually, leading to kill_embed to likely not work correctly.\nThough I expect these case to be rare, and people doing so to be capable\nof wrapping their custom call in a context_manager that set\n`InteractiveShellEmbed._stack_frames` to the right value depending on\nthe context.", "commit_timestamp": "2016-05-02T23:30:14Z", "files": ["IPython/terminal/embed.py"]}, {"node_id": "MDY6Q29tbWl0MjM0NDA3Mzo5MTkxMThhYWRhZjUyZTA0M2E5OGU0Y2QzOTE4MjU1MzFkOTE0ZmNk", "commit_message": "Restore `%kill_embedded` for multiple IPython embed call.\n\nCloses #9063.\n\nInspect frame and store the current file & line reference of the current\ncall. Calling kill_embed subsequently store this in a set of deactivated\nreference.\n\nThe frame inspection is by default to 3, which is the correct number of\nframe when using the `Import IPython; IPython.embed()` syntax, it will\nbe the wrong number of frames when creating an `InteractiveShellEmbed`\nmanually, leading to kill_embed to likely not work correctly.\nThough I expect these case to be rare, and people doing so to be capable\nof wrapping their custom call in a context_manager that set\n`InteractiveShellEmbed._stack_frames` to the right value depending on\nthe context.", "commit_timestamp": "2016-05-03T16:21:39Z", "files": ["IPython/terminal/embed.py"]}, {"node_id": "MDY6Q29tbWl0MjM0NDA3Mzo4ZTUzMzg5ZmYyNTUxOWU2OTFmMjcyYzc1Y2IyZGNkNjlhZTE0NDRm", "commit_message": "Restore `%kill_embedded` for multiple IPython embed call.\n\nCloses #9063.\n\nInspect frame and store the current file & line reference of the current\ncall. Calling kill_embed subsequently store this in a set of deactivated\nreference.", "commit_timestamp": "2016-05-03T18:41:35Z", "files": ["IPython/terminal/embed.py"]}, {"node_id": "MDY6Q29tbWl0MjM0NDA3Mzo2ZjRkOWZmMzUwNmFjN2JiOWY4MTM2Y2U3YzlhMGU3MmI2ZDA5MzUw", "commit_message": "Restore `%kill_embedded` for multiple IPython embed call.\n\nCloses #9063.\n\nInspect frame and store the current file & line reference of the current\ncall. Calling kill_embed subsequently store this in a set of deactivated\nreference.", "commit_timestamp": "2016-05-03T20:21:19Z", "files": ["IPython/terminal/embed.py"]}, {"node_id": "MDY6Q29tbWl0MjM0NDA3Mzo1N2Y0YmNlNjRlNzg1NThlM2NhNDQ1MjRkNDYyZDAxMzk2MWUxMjE3", "commit_message": "Restore `%kill_embedded` for multiple IPython embed call.\n\nCloses #9063.\n\nInspect frame and store the current file & line reference of the current\ncall. Calling kill_embed subsequently store this in a set of deactivated\nreference.", "commit_timestamp": "2016-05-03T22:04:24Z", "files": ["IPython/terminal/embed.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjIxODMwNzYxMjViMmE1NTE3M2IyNTBkYzRhNzYzMjk2YjgzNGUwMGQ=", "commit_message": "Merge pull request #9432 from Carreau/restore-kill-embed\n\nRestore `%kill_embedded` for multiple IPython embed call.", "commit_timestamp": "2016-05-04T07:59:44Z", "files": ["IPython/terminal/embed.py"]}], "labels": ["good first issue"], "created_at": "2015-12-04T09:11:08Z", "closed_at": "2016-05-04T07:59:45Z", "linked_pr_number": [9063], "method": ["regex"]}
{"issue_number": 8971, "title": "IPython fails in a really obscure way when PYTHONOPTIMIZE is set", "body": "To reproduce:\n\n```\nPYTHONOPTIMIZE=2 ipython\n\nTraceback (most recent call last):\n  File \"/Users/davidbutler/PycharmProjects/tanager_local/streaming_engine_project/run/venv/bin/ipython\", line 7, in <module>\n    from IPython import start_ipython\n  File \"/Users/davidbutler/PycharmProjects/tanager_local/streaming_engine_project/run/venv/lib/python3.4/site-packages/IPython/__init__.py\", line 47, in <module>\n    from .core.application import Application\n  File \"/Users/davidbutler/PycharmProjects/tanager_local/streaming_engine_project/run/venv/lib/python3.4/site-packages/IPython/core/application.py\", line 24, in <module>\n    from IPython.core import release, crashhandler\n  File \"/Users/davidbutler/PycharmProjects/tanager_local/streaming_engine_project/run/venv/lib/python3.4/site-packages/IPython/core/crashhandler.py\", line 30, in <module>\n    from IPython.utils.sysinfo import sys_info\n  File \"/Users/davidbutler/PycharmProjects/tanager_local/streaming_engine_project/run/venv/lib/python3.4/site-packages/IPython/utils/sysinfo.py\", line 101, in <module>\n    @py3compat.doctest_refactor_print\n  File \"/Users/davidbutler/PycharmProjects/tanager_local/streaming_engine_project/run/venv/lib/python3.4/site-packages/IPython/utils/py3compat.py\", line 50, in wrapper\n    doc = str_change_func(doc)\n  File \"/Users/davidbutler/PycharmProjects/tanager_local/streaming_engine_project/run/venv/lib/python3.4/site-packages/IPython/utils/py3compat.py\", line 197, in doctest_refactor_print\n    return _print_statement_re.sub(_print_statement_sub, doc)\nTypeError: expected string or buffer\n```\n\nPlease fix, or disable PYTHONOPTIMIZE or at the very least, add a early check to fail with a message\n", "commits": [{"node_id": "MDY6Q29tbWl0MTIzNjAwMzozOWNlMjA1M2FlYjQzMjIzYTExMGE5ZTRiYzhmM2M0N2VhN2JkOThk", "commit_message": "Allow IPython to start when PYTHONOPTIMIZE=2\n\nCloses gh-8971", "commit_timestamp": "2016-01-26T12:24:30Z", "files": ["IPython/utils/py3compat.py"]}], "labels": [], "created_at": "2015-11-09T22:45:07Z", "closed_at": "2016-01-26T12:39:20Z", "method": ["regex"]}
{"issue_number": 8919, "title": "two characters system command are reduced to one in python3.4.3+ under debian unstable", "body": "After installing ipython as the following `pip3 install --user ipython`\n\nI currently use fish shell as a shell so this is the following interaction\n\n```\nxcombelle@xcombelle-laptop ~> ipython3\nPython 3.4.3+ (default, Oct 10 2015, 09:15:38) \nType \"copyright\", \"credits\" or \"license\" for more information.\n\nIPython 4.0.0 -- An enhanced Interactive Python.\n?         -> Introduction and overview of IPython's features.\n%quickref -> Quick reference.\nhelp      -> Python's own help system.\nobject?   -> Details about 'object', use 'object??' for extra details.\n\nIn [1]: !ls\nfish: Unknown command 'l'\nfish: l\n      ^\n```\n\nthe expected result would be the list of files and directory\n\nI debug a little bit and think I found the culprit:\nby commenting out [`FullEvalFormatter.v_eval definition`](https://github.com/ipython/ipython/blob/master/IPython/utils/text.py#L543) the problem disapear\nI think the problem is related to [this python bug patch](https://hg.python.org/cpython/diff/9eae18e8af66/Lib/string.py) where the use and definition of `_vformat` changed\n", "commits": [{"node_id": "MDY6Q29tbWl0MjM0NDA3MzpiNTNhZmJmMTZlN2ZjN2FhNmY3MWZiMTljYThlM2Y3ODFiMGNhOTgy", "commit_message": "Workaround debian 3.4.3 bug\n\ncloses #8919  and #8983", "commit_timestamp": "2015-11-13T01:08:34Z", "files": ["IPython/utils/text.py"]}, {"node_id": "MDY6Q29tbWl0MjM0NDA3Mzo2N2EzN2RkNDYxODgzYjI2Y2E1N2MxYTY1N2Y2MTA1OTE3M2ZiNWI4", "commit_message": "Workaround debian 3.4.3 bug\n\ncloses #8919  and #8983", "commit_timestamp": "2015-11-13T01:09:52Z", "files": ["IPython/utils/text.py"]}, {"node_id": "MDY6Q29tbWl0MjM0NDA3MzpjNTY4YTIxMjU1OGYzNjkzZTI3ZWFiNGVjMmY5YzkyMWQyYWM5ZmM2", "commit_message": "Workaround debian 3.4.3 bug\n\ncloses #8919  and #8983", "commit_timestamp": "2015-11-13T03:32:31Z", "files": ["IPython/utils/text.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4Ojg1ZDUxNGQwYTk0YTFjMTRkYmQ0MGU1ZjM1NzYwNjk3NTZhNjY2Zjk=", "commit_message": "Merge pull request #8985 from minrk/dollar-vformat\n\noverride vformat instead of _vformat", "commit_timestamp": "2015-11-17T17:52:23Z", "files": ["IPython/utils/text.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4Ojg1ZDUxNGQwYTk0YTFjMTRkYmQ0MGU1ZjM1NzYwNjk3NTZhNjY2Zjk=", "commit_message": "Merge pull request #8985 from minrk/dollar-vformat\n\noverride vformat instead of _vformat", "commit_timestamp": "2015-11-17T17:52:23Z", "files": ["IPython/utils/text.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmQzMGIyNTIyYmE3NzZmZWVlMmUxZmNkYmNmODFkMDJlMjc4YTRkYjY=", "commit_message": "Backport PR #8985: override vformat instead of _vformat\n\nin our eval formatters\n\navoids being caught out by changes in private API\n\nthis needs to be backported in order to support Python 3.4.4\n...", "commit_timestamp": "2015-11-24T11:57:07Z", "files": ["IPython/utils/text.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjUyYjI2YjE2NjNhZjRiM2M3MWZhZDI5ODE0YTU0NTRiYzBjNjVhNjY=", "commit_message": "Backport PR #8985: override vformat instead of _vformat\n\nin our eval formatters\n\navoids being caught out by changes in private API\n\nthis needs to be backported in order to support Python 3.4.4\n...", "commit_timestamp": "2015-11-24T11:56:38Z", "files": ["IPython/utils/text.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjFjYWVlY2FlZWM1MGIwZjgxYWIyZjliMTk3YWZiMzMzYjdhMzEzZGU=", "commit_message": "Backport PR #8985: override vformat instead of _vformat\n\nin our eval formatters\n\navoids being caught out by changes in private API\n\nthis needs to be backported in order to support Python 3.4.4\n...", "commit_timestamp": "2015-11-24T11:56:50Z", "files": ["IPython/utils/text.py"]}, {"node_id": "MDY6Q29tbWl0MjMyMzE0NTU6MGUzOTViNzZhYWEzODcwNzY4NGIzN2NkMThjMzFhOTYyYmRmMmQ1ZA==", "commit_message": "Backport PR #8985: override vformat instead of _vformat\n\nin our eval formatters\n\navoids being caught out by changes in private API\n\nthis needs to be backported in order to support Python 3.4.4\n...", "commit_timestamp": "2016-08-03T15:11:16Z", "files": ["IPython/utils/text.py"]}], "labels": [], "created_at": "2015-10-21T11:26:34Z", "closed_at": "2015-11-17T17:52:23Z", "linked_pr_number": [8919], "method": ["regex"]}
{"issue_number": 8866, "title": "Add help string for xmode", "body": "When an exception occurs, IPython displays it with its own fancy traceback formatter. I don't mind the coloured output, but the visually expanded display feels much more cumbersome to me with long tracebacks. I would therefore like to revert to the standard Python excepthook\n\nUnfortunately, setting `__excepthook__` from the console doesn't work (IPython overrides the newly-set value), therefore it would be nice to get a configuration option for it.\n", "commits": [{"node_id": "MDY6Q29tbWl0MjM0NDA3MzpkNGNiZjliZTNjNGE3OTRhYmVlMTA4MjhmZGY3NjM3Y2M4NzI4MzRi", "commit_message": "Provide help String for `xmode`.\n\nCloses #8866", "commit_timestamp": "2017-02-09T21:01:57Z", "files": ["IPython/core/interactiveshell.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmIxMzNhNzA5ODQyZTMyZDgzOGMyNGRkMmIyMmY5YzYyMmJjMzc5OTI=", "commit_message": "Merge pull request #10279 from Carreau/help-xmode\n\nProvide help String for `xmode`.", "commit_timestamp": "2017-02-10T10:28:08Z", "files": ["IPython/core/interactiveshell.py"]}], "labels": ["good first issue", "help wanted"], "created_at": "2015-10-05T12:29:21Z", "closed_at": "2017-02-10T10:28:09Z", "linked_pr_number": [8866], "method": ["regex"]}
{"issue_number": 8806, "title": "ImportError: No module named pexpect", "body": "When I use the ipython with Plone, when start instance, the error occurs:\n\n```\n2015-09-10 10:46:22 INFO ZServer HTTP server started at Thu Sep 10 10:46:22 2015\n    Hostname: 0.0.0.0\n    Port: 8080\n2015-09-10 10:46:23 INFO rdflib RDFLib Version: 4.2.1\nTraceback (most recent call last):\n  File \"/tmp/brasil.gov.vcge/parts/instance/bin/interpreter\", line 292, in <module>\n    execfile(__file__)\n  File \"/home/user/cache-python/eggs/Zope2-2.13.22-py2.7.egg/Zope2/Startup/run.py\", line 76, in <module>\n    run()\n  File \"/home/user/cache-python/eggs/Zope2-2.13.22-py2.7.egg/Zope2/Startup/run.py\", line 22, in run\n    starter.prepare()\n  File \"/home/user/cache-python/eggs/Zope2-2.13.22-py2.7.egg/Zope2/Startup/__init__.py\", line 86, in prepare\n    self.startZope()\n  File \"/home/user/cache-python/eggs/Zope2-2.13.22-py2.7.egg/Zope2/Startup/__init__.py\", line 262, in startZope\n    Zope2.startup()\n  File \"/home/user/cache-python/eggs/Zope2-2.13.22-py2.7.egg/Zope2/__init__.py\", line 47, in startup\n    _startup()\n  File \"/home/user/cache-python/eggs/Zope2-2.13.22-py2.7.egg/Zope2/App/startup.py\", line 118, in startup\n    load_zcml()\n  File \"/home/user/cache-python/eggs/Zope2-2.13.22-py2.7.egg/Zope2/App/startup.py\", line 52, in load_zcml\n    load_site()\n  File \"/home/user/cache-python/eggs/Zope2-2.13.22-py2.7.egg/Zope2/App/zcml.py\", line 46, in load_site\n    _context = xmlconfig.file(site_zcml)\n  File \"/home/user/cache-python/eggs/zope.configuration-3.7.4-py2.7.egg/zope/configuration/xmlconfig.py\", line 649, in file\n    include(context, name, package)\n  File \"/home/user/cache-python/eggs/zope.configuration-3.7.4-py2.7.egg/zope/configuration/xmlconfig.py\", line 548, in include\n    processxmlfile(f, context)\n  File \"/home/user/cache-python/eggs/zope.configuration-3.7.4-py2.7.egg/zope/configuration/xmlconfig.py\", line 380, in processxmlfile\n    parser.parse(src)\n  File \"/home/user/pythons/python279/lib/python2.7/xml/sax/expatreader.py\", line 107, in parse\n    xmlreader.IncrementalParser.parse(self, source)\n  File \"/home/user/pythons/python279/lib/python2.7/xml/sax/xmlreader.py\", line 123, in parse\n    self.feed(buffer)\n  File \"/home/user/pythons/python279/lib/python2.7/xml/sax/expatreader.py\", line 210, in feed\n    self._parser.Parse(data, isFinal)\n  File \"/home/user/pythons/python279/lib/python2.7/xml/sax/expatreader.py\", line 352, in end_element_ns\n    self._cont_handler.endElementNS(pair, None)\n  File \"/home/user/cache-python/eggs/zope.configuration-3.7.4-py2.7.egg/zope/configuration/xmlconfig.py\", line 359, in endElementNS\n    self.context.end()\n  File \"/home/user/cache-python/eggs/zope.configuration-3.7.4-py2.7.egg/zope/configuration/config.py\", line 558, in end\n    self.stack.pop().finish()\n  File \"/home/user/cache-python/eggs/zope.configuration-3.7.4-py2.7.egg/zope/configuration/config.py\", line 706, in finish\n    actions = self.handler(context, **args)\n  File \"/home/user/cache-python/eggs/zope.configuration-3.7.4-py2.7.egg/zope/configuration/xmlconfig.py\", line 548, in include\n    processxmlfile(f, context)\n  File \"/home/user/cache-python/eggs/zope.configuration-3.7.4-py2.7.egg/zope/configuration/xmlconfig.py\", line 380, in processxmlfile\n    parser.parse(src)\n  File \"/home/user/pythons/python279/lib/python2.7/xml/sax/expatreader.py\", line 107, in parse\n    xmlreader.IncrementalParser.parse(self, source)\n  File \"/home/user/pythons/python279/lib/python2.7/xml/sax/xmlreader.py\", line 123, in parse\n    self.feed(buffer)\n  File \"/home/user/pythons/python279/lib/python2.7/xml/sax/expatreader.py\", line 210, in feed\n    self._parser.Parse(data, isFinal)\n  File \"/home/user/pythons/python279/lib/python2.7/xml/sax/expatreader.py\", line 352, in end_element_ns\n    self._cont_handler.endElementNS(pair, None)\n  File \"/home/user/cache-python/eggs/zope.configuration-3.7.4-py2.7.egg/zope/configuration/xmlconfig.py\", line 359, in endElementNS\n    self.context.end()\n  File \"/home/user/cache-python/eggs/zope.configuration-3.7.4-py2.7.egg/zope/configuration/config.py\", line 558, in end\n    self.stack.pop().finish()\n  File \"/home/user/cache-python/eggs/zope.configuration-3.7.4-py2.7.egg/zope/configuration/config.py\", line 706, in finish\n    actions = self.handler(context, **args)\n  File \"/home/user/cache-python/eggs/zope.configuration-3.7.4-py2.7.egg/zope/configuration/xmlconfig.py\", line 548, in include\n    processxmlfile(f, context)\n  File \"/home/user/cache-python/eggs/zope.configuration-3.7.4-py2.7.egg/zope/configuration/xmlconfig.py\", line 380, in processxmlfile\n    parser.parse(src)\n  File \"/home/user/pythons/python279/lib/python2.7/xml/sax/expatreader.py\", line 107, in parse\n    xmlreader.IncrementalParser.parse(self, source)\n  File \"/home/user/pythons/python279/lib/python2.7/xml/sax/xmlreader.py\", line 123, in parse\n    self.feed(buffer)\n  File \"/home/user/pythons/python279/lib/python2.7/xml/sax/expatreader.py\", line 210, in feed\n    self._parser.Parse(data, isFinal)\n  File \"/home/user/pythons/python279/lib/python2.7/xml/sax/expatreader.py\", line 352, in end_element_ns\n    self._cont_handler.endElementNS(pair, None)\n  File \"/home/user/cache-python/eggs/zope.configuration-3.7.4-py2.7.egg/zope/configuration/xmlconfig.py\", line 359, in endElementNS\n    self.context.end()\n  File \"/home/user/cache-python/eggs/zope.configuration-3.7.4-py2.7.egg/zope/configuration/config.py\", line 558, in end\n    self.stack.pop().finish()\n  File \"/home/user/cache-python/eggs/zope.configuration-3.7.4-py2.7.egg/zope/configuration/config.py\", line 705, in finish\n    args = toargs(context, *self.argdata)\n  File \"/home/user/cache-python/eggs/zope.configuration-3.7.4-py2.7.egg/zope/configuration/config.py\", line 1397, in toargs\n    args[str(name)] = field.fromUnicode(s)\n  File \"/home/user/cache-python/eggs/zope.configuration-3.7.4-py2.7.egg/zope/configuration/fields.py\", line 137, in fromUnicode\n    value = self.context.resolve(name)\n  File \"/home/user/cache-python/eggs/zope.configuration-3.7.4-py2.7.egg/zope/configuration/config.py\", line 179, in resolve\n    mod = __import__(mname, *_import_chickens)\n  File \"/home/user/cache-python/eggs/iw.debug-0.3-py2.7.egg/iw/debug/pdbview.py\", line 26, in <module>\n    from ipdb import set_trace\n  File \"/home/user/cache-python/eggs/ipdb-0.8.1-py2.7.egg/ipdb/__init__.py\", line 16, in <module>\n    from ipdb.__main__ import set_trace, post_mortem, pm, run, runcall, runeval, launch_ipdb_on_exception\n  File \"/home/user/cache-python/eggs/ipdb-0.8.1-py2.7.egg/ipdb/__main__.py\", line 27, in <module>\n    import IPython\n  File \"/home/user/cache-python/eggs/ipython-4.0.0-py2.7.egg/IPython/__init__.py\", line 47, in <module>\n    from .core.application import Application\n  File \"/home/user/cache-python/eggs/ipython-4.0.0-py2.7.egg/IPython/core/application.py\", line 24, in <module>\n    from IPython.core import release, crashhandler\n  File \"/home/user/cache-python/eggs/ipython-4.0.0-py2.7.egg/IPython/core/crashhandler.py\", line 28, in <module>\n    from IPython.core import ultratb\n  File \"/home/user/cache-python/eggs/ipython-4.0.0-py2.7.egg/IPython/core/ultratb.py\", line 116, in <module>\n    from IPython.utils import path as util_path\n  File \"/home/user/cache-python/eggs/ipython-4.0.0-py2.7.egg/IPython/utils/path.py\", line 19, in <module>\n    from IPython.utils.process import system\n  File \"/home/user/cache-python/eggs/ipython-4.0.0-py2.7.egg/IPython/utils/process.py\", line 19, in <module>\n    from ._process_posix import system, getoutput, arg_split, check_pid\n  File \"/home/user/cache-python/eggs/ipython-4.0.0-py2.7.egg/IPython/utils/_process_posix.py\", line 24, in <module>\n    import pexpect\nzope.configuration.xmlconfig.ZopeXMLConfigurationError: File \"/tmp/brasil.gov.vcge/parts/instance/etc/site.zcml\", line 15.2-15.55\n    ZopeXMLConfigurationError: File \"/tmp/brasil.gov.vcge/parts/instance/etc/package-includes/003-iw.debug-configure.zcml\", line 1.0-1.52\n    ZopeXMLConfigurationError: File \"/home/user/cache-python/eggs/iw.debug-0.3-py2.7.egg/iw/debug/configure.zcml\", line 7.2-13.4\n    ImportError: No module named pexpect\n```\n\nThe ipython not add pexpect package as a dependency.\n\nI am using Linux/Ubuntu.\n", "commits": [{"node_id": "MDY6Q29tbWl0ODYxNjUyMzphZTJiOWQ4NTBiYjg4MmI3ZDg4ZWU1Y2JlZTgxNzU0ZTQ3YjI5Njcy", "commit_message": "Aumenta cobertura de codigo para acao e condicao da regra de conteudo\n\nAtualiza changelog\n\nAdiciona aviso sobre a nova vers\u00e3o do VCGE\n\nAltera o teste para utilizar assertIn ao inves de assertTrue\n\nAtualiza versao do vcge.n3\n\nModificados arquivos de testes que continham links para endere\u00e7os da antiga vers\u00e3o do VCGE. Basicamente substituido #achados-perdidos para #cultura\n\nCorre\u00e7\u00e3o de uma id no arquivo n3. Havia acentua\u00e7\u00e3o.\n\nCorre\u00e7\u00e3o do n\u00famero de termos atuais do VCGE nos arquivos de teste.\n\nAtualiza com arquivo do dia 21 de maio de 2014\n\nRemove acento\n\nModificado URI base do arquivo n3.\n\nAtualiza\u00e7\u00e3o dos arquivos CONTRIBUTORS.rst, CHANGES.rst e setup.py, com informa\u00e7\u00f5es pertinentes a esta nova vers\u00e3o do plugin.\n\nFollow ZCML style guide\n\nRegister package\n\nThis is to avoid an issue with package not installing when profiles are hidden.\n\nSee: https://github.com/plone/plone.app.event/issues/159\n\nSubstitui\u00e7\u00e3o do arquivo vcge.n3 de vers\u00e3o 2.0.2 para 2.0.3\n\nPreparing release 2.0.0\n\nBack to development: c\n\nFix version\n\nFix changelog\n\nAdd Pillow as a testing dependency on CI\n\nInstala egg pexpect explicitamente\n\nQuando o ipython \u00e9 instalado com buildout, o pexpect n\u00e3o \u00e9 instalado\ncomo depend\u00eancia. Ele deve ser baixado explicitamente, at\u00e9 que a issue:\nhttps://github.com/ipython/ipython/issues/8806\nseja resolvida.\n\n(closes) #30\n\nRemove iw.debug\n\nEvita erro:\n\nImportError: No module named pexpect\n\nVer:\nhttps://github.com/ipython/ipython/issues/8806\n\nclose #31", "commit_timestamp": "2016-09-20T17:50:49Z", "files": ["setup.py", "src/brasil/gov/vcge/tests/test_behavior.py", "src/brasil/gov/vcge/tests/test_contentrules_action.py", "src/brasil/gov/vcge/tests/test_contentrules_condition.py", "src/brasil/gov/vcge/tests/test_setup.py", "src/brasil/gov/vcge/tests/test_viewlet.py", "src/brasil/gov/vcge/tests/test_vocabularies.py", "src/brasil/gov/vcge/utils.py", "src/brasil/gov/vcge/vocabulary.py"]}], "labels": ["needs-info"], "created_at": "2015-09-10T14:30:07Z", "closed_at": "2015-09-11T20:43:39Z", "method": ["regex"]}
{"issue_number": 8804, "title": "Unable to 'pip install ipython' with PyPy 2.6.1 on OS X", "body": "Attempting to `pip install ipython` with PyPy 2.6.1 on OS X fails due to being unable to install gnureadline:\n\n```\nFailed to build gnureadline\nInstalling collected packages: decorator, path.py, pickleshare, simplegeneric, ipython-genutils, traitlets, pexpect, appnope, gnureadline, ipython\n  Running setup.py install for gnureadline\n    Complete output from command /Users/rouge8/.virtualenvs/tmp-62491ef39875e400/bin/python -c \"import setuptools, tokenize;__file__='/private/var/folders/tv/tqsxmfzd7l5_5ys1jq3496hr0000gp/T/pip-build-MSyBT_/gnureadline/setup.py';exec(compile(getattr(tokenize, 'open', open)(__file__).read().replace('\\r\\n', '\\n'), __file__, 'exec'))\" install --record /var/folders/tv/tqsxmfzd7l5_5ys1jq3496hr0000gp/T/pip-Yzq13m-record/install-record.txt --single-version-externally-managed --compile --install-headers /Users/rouge8/.virtualenvs/tmp-62491ef39875e400/include/site/python2.7/gnureadline:\n    running install\n    running build\n    running build_py\n    running egg_info\n    writing gnureadline.egg-info/PKG-INFO\n    writing dependency_links to gnureadline.egg-info/dependency_links.txt\n    writing top-level names to gnureadline.egg-info/top_level.txt\n    warning: manifest_maker: standard file '-c' not found\n\n    reading manifest file 'gnureadline.egg-info/SOURCES.txt'\n    reading manifest template 'MANIFEST.in'\n    writing manifest file 'gnureadline.egg-info/SOURCES.txt'\n    warning: build_py: byte-compiling is disabled, skipping.\n\n    running build_ext\n    building 'gnureadline' extension\n    cc -arch x86_64 -O2 -fPIC -Wimplicit -DHAVE_RL_CALLBACK -DHAVE_RL_CATCH_SIGNAL -DHAVE_RL_COMPLETION_APPEND_CHARACTER -DHAVE_RL_COMPLETION_DISPLAY_MATCHES_HOOK -DHAVE_RL_COMPLETION_MATCHES -DHAVE_RL_COMPLETION_SUPPRESS_APPEND -DHAVE_RL_PRE_INPUT_HOOK -I. -I/Users/rouge8/.virtualenvs/tmp-62491ef39875e400/include -c Modules/2.x/readline.c -o build/temp.macosx-10.10-x86_64-2.7/Modules/2.x/readline.o\n    Modules/2.x/readline.c:1057:21: error: use of undeclared identifier 'PyOS_InputHook'\n        rl_event_hook = PyOS_InputHook;\n                        ^\n    Modules/2.x/readline.c:1170:5: error: use of undeclared identifier 'PyOS_ReadlineFunctionPointer'\n        PyOS_ReadlineFunctionPointer = call_readline;\n        ^\n    2 errors generated.\n    error: command 'cc' failed with exit status 1\n```\n\nPython version:\n\n``` sh\n$ python --version\nPython 2.7.10 (f3ad1e1e1d6215e20d34bb65ab85ff9188c9f559, Sep 01 2015, 06:26:30)\n[PyPy 2.6.1 with GCC 4.2.1 Compatible Apple LLVM 6.1.0 (clang-602.0.53)]\n```\n\nI was able to work around this by installing all of the IPython dependencies except for gnureadline and then running `pip install --no-deps ipython`, but obviously that's not ideal. :/\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU4NTE4OmUyYjI2OWE0ZGIxZmM2MzEzYWVmNTQ0YTQ2M2M3OTdlMDVhMjE0ZDQ=", "commit_message": "Backport PR #8805: only require gnureadline on CPython\n\nSlight shenanigans to workaround [setuptools#147](https://bitbucket.org/pypa/setuptools/pull-requests/147), where setuptools misspells 'platform_python_implementation' as 'python_implementation'.\n\ncloses #8804", "commit_timestamp": "2015-11-24T11:53:28Z", "files": ["setup.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmIyZTIzZTJmZWE0MjhiNzVjYjQ2NWRhODNhMjE4MjZmNmVlODJlYjU=", "commit_message": "Merge pull request #8805 from minrk/gnureadline-cpython\n\nonly require gnureadline on CPython", "commit_timestamp": "2015-09-14T16:02:47Z", "files": ["setup.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmIyZTIzZTJmZWE0MjhiNzVjYjQ2NWRhODNhMjE4MjZmNmVlODJlYjU=", "commit_message": "Merge pull request #8805 from minrk/gnureadline-cpython\n\nonly require gnureadline on CPython", "commit_timestamp": "2015-09-14T16:02:47Z", "files": ["setup.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmUyYjI2OWE0ZGIxZmM2MzEzYWVmNTQ0YTQ2M2M3OTdlMDVhMjE0ZDQ=", "commit_message": "Backport PR #8805: only require gnureadline on CPython\n\nSlight shenanigans to workaround [setuptools#147](https://bitbucket.org/pypa/setuptools/pull-requests/147), where setuptools misspells 'platform_python_implementation' as 'python_implementation'.\n\ncloses #8804", "commit_timestamp": "2015-11-24T11:53:28Z", "files": ["setup.py"]}], "labels": ["bug"], "created_at": "2015-09-10T05:11:56Z", "closed_at": "2015-09-14T16:02:47Z", "linked_pr_number": [8804], "method": ["label", "regex"]}
{"issue_number": 8797, "title": "`pip install ipython[all]` ignores platform dependent dependencies", "body": "If I try to run `pip install ipython[all]` on my python install on windows (Win 7 64-bit, WinPython 2.7.10), it fails with the following:\n\n```\nC:\\Python\\WinPython-64bit-2.7.10.1\\python-2.7.10.amd64>pip install --upgrade ipy\nthon[all]\nRequirement already up-to-date: ipython[all] in c:\\python\\winpython-64bit-2.7.10\n.1\\python-2.7.10.amd64\\lib\\site-packages\nRequirement already up-to-date: decorator in c:\\python\\winpython-64bit-2.7.10.1\\\npython-2.7.10.amd64\\lib\\site-packages (from ipython[all])\nRequirement already up-to-date: simplegeneric>0.8 in c:\\python\\winpython-64bit-2\n.7.10.1\\python-2.7.10.amd64\\lib\\site-packages (from ipython[all])\nRequirement already up-to-date: traitlets in c:\\python\\winpython-64bit-2.7.10.1\\\npython-2.7.10.amd64\\lib\\site-packages (from ipython[all])\nRequirement already up-to-date: pickleshare in c:\\python\\winpython-64bit-2.7.10.\n1\\python-2.7.10.amd64\\lib\\site-packages (from ipython[all])\nRequirement already up-to-date: nose>=0.10.1 in c:\\python\\winpython-64bit-2.7.10\n.1\\python-2.7.10.amd64\\lib\\site-packages (from ipython[all])\nCollecting ipyparallel (from ipython[all])\n  Downloading ipyparallel-4.0.2-py2.py3-none-any.whl (164kB)\n    100% |################################| 167kB 718kB/s\nRequirement already up-to-date: notebook in c:\\python\\winpython-64bit-2.7.10.1\\p\nython-2.7.10.amd64\\lib\\site-packages (from ipython[all])\nRequirement already up-to-date: requests in c:\\python\\winpython-64bit-2.7.10.1\\p\nython-2.7.10.amd64\\lib\\site-packages (from ipython[all])\nRequirement already up-to-date: nbformat in c:\\python\\winpython-64bit-2.7.10.1\\p\nython-2.7.10.amd64\\lib\\site-packages (from ipython[all])\nCollecting pyreadline>=2 (from ipython[all])\n  Downloading pyreadline-2.0.zip (108kB)\n    100% |################################| 110kB 2.0MB/s\nRequirement already up-to-date: nbconvert in c:\\python\\winpython-64bit-2.7.10.1\\\npython-2.7.10.amd64\\lib\\site-packages (from ipython[all])\nCollecting testpath (from ipython[all])\n  Downloading testpath-0.2-py2.py3-none-any.whl\nRequirement already up-to-date: ipykernel in c:\\python\\winpython-64bit-2.7.10.1\\\npython-2.7.10.amd64\\lib\\site-packages (from ipython[all])\nRequirement already up-to-date: numpydoc in c:\\python\\winpython-64bit-2.7.10.1\\p\nython-2.7.10.amd64\\lib\\site-packages (from ipython[all])\nRequirement already up-to-date: qtconsole in c:\\python\\winpython-64bit-2.7.10.1\\\npython-2.7.10.amd64\\lib\\site-packages (from ipython[all])\nRequirement already up-to-date: Sphinx>=1.1 in c:\\python\\winpython-64bit-2.7.10.\n1\\python-2.7.10.amd64\\lib\\site-packages (from ipython[all])\nCollecting mock (from ipython[all])\n  Downloading mock-1.3.0-py2.py3-none-any.whl (56kB)\n    100% |################################| 57kB 2.9MB/s\nCollecting gnureadline (from ipython[all])\n  Downloading gnureadline-6.3.3.tar.gz (2.5MB)\n    100% |################################| 2.5MB 128kB/s\n    Complete output from command python setup.py egg_info:\n    Error: this module is not meant to work on Windows (try pyreadline instead)\n\n    ----------------------------------------\nCommand \"python setup.py egg_info\" failed with error code 1 in <userpath>\\ap\npdata\\local\\temp\\pip-build-scarmp\\gnureadline\n```\n\npip is v7.1.2.\n\nNow, I wasn't able to figure out from pip and setuptools docs how `[all]` is supposed to work, so I'm not sure if this is an issue with the ipython setup file, setuptools, or pip, but I figured this would be the best place to start.\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU4NTE4OjU1MWNiNzEyMGJjODQ1NjEyOGYyZDk3NTk0NjMwMjVlYTQwZjUzYjA=", "commit_message": "Backport PR #8798: don't include platform-specific dependencies in ipython[all]\n\ncloses #8797", "commit_timestamp": "2015-11-24T11:53:25Z", "files": ["setup.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjQ1MTEwYzZiZWFjMTlmNGRlOGIyMGE4NWViNTQxNzFjMTczYmZhOWM=", "commit_message": "Merge pull request #8798 from minrk/plat-all\n\ndon't include platform-specific dependencies in ipython[all]", "commit_timestamp": "2015-09-09T08:12:44Z", "files": ["setup.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjQ1MTEwYzZiZWFjMTlmNGRlOGIyMGE4NWViNTQxNzFjMTczYmZhOWM=", "commit_message": "Merge pull request #8798 from minrk/plat-all\n\ndon't include platform-specific dependencies in ipython[all]", "commit_timestamp": "2015-09-09T08:12:44Z", "files": ["setup.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjU1MWNiNzEyMGJjODQ1NjEyOGYyZDk3NTk0NjMwMjVlYTQwZjUzYjA=", "commit_message": "Backport PR #8798: don't include platform-specific dependencies in ipython[all]\n\ncloses #8797", "commit_timestamp": "2015-11-24T11:53:25Z", "files": ["setup.py"]}], "labels": [], "created_at": "2015-09-08T10:00:06Z", "closed_at": "2015-09-09T08:12:45Z", "linked_pr_number": [8797], "method": ["regex"]}
{"issue_number": 8791, "title": "%%writefile ignores '>>>' at the beginning of lines", "body": "If I write the following in the code cell:\n\n```\n%%writefile test.txt\n>>> fact(5)\n120\n```\n\nI expect that the text after the %%writefile magic will be present in the text file literally. Instead, only the following is found in the textfile:\n\n```\nfact(5)\n120\n```\n\nIPython probably first filters out the '>>>' string and then passes the result to the cell magic function.It behaves like this in both the notebook, and in the IPython console.  I do not think this is the expected behavior. \n", "commits": [{"node_id": "MDY6Q29tbWl0MTIzNjAwMzo4Y2IzZGQ5NzA5YzE1NGM5NjY5YjcyZGVlOTMzNzk4NzJkM2ZjNDc3", "commit_message": "Deactivate prompt transformers if the first line matches certain patterns\n\nDeactivate the >>> prompt stripper if the first line starts with % or !,\nbecause those are obviously IPython syntax.\n\nDisable the IPython 'In [1]:' prompt stripper if the first line starts\nwith %%, because we don't want to interfere with the copy of a cell\nmagic.\n\nThis is all 'what did the user mean' guesswork, but I think this makes\nour guesses slightly smarter.\n\nWe actually had one test that checked that this wasn't happening; I've\nadjusted it.\n\nCloses gh-8791", "commit_timestamp": "2016-01-19T20:48:23Z", "files": ["IPython/core/inputtransformer.py", "IPython/core/tests/test_inputsplitter.py", "IPython/core/tests/test_inputtransformer.py"]}], "labels": ["bug"], "created_at": "2015-09-04T08:47:09Z", "closed_at": "2016-01-19T21:33:33Z", "method": ["label"]}
{"issue_number": 8661, "title": "standard front-ends not showing output of execution from other clients", "body": "I am led to believe by the closing of issue #1873 (by PR #6123) that when multiple console or qtconsole clients are connected to a kernel, the output of commands put into one should be visible from the other (after the latter refreshes, supposedly the next time that enter is pressed?) I cannot seem to get this feature to work on my install of Debian Jessie, even after updating iPython via pip.\n\nTo reproduce (copy/paste'd, not executed in order presented, of course):\n[window 1]\n\n```\n$ pip install -U ipython\n$ ipython kernel\n```\n\n[window 2]\n\n```\n$  ipython console     --existing kernel-30792.json\nIPython Console 3.2.1\n\nIn [1]: print(a)\n2\n\nIn [3]: a\nOut[4]: 2\n\nIn [5]:\n```\n\n[window 3]\n\n```\n$ ipython console     --existing kernel-30792.json\nIPython Console 3.2.1\n\nIn [1]: a = 2\n\nIn [2]: a\nOut[3]: 2\n\nIn [4]: a\nOut[5]: 2\n\nIn [6]:\n```\n\nI expected lines like\n\n```\n[remote]In [2]: a\n[remote]Out[2]: 2\n```\n\nin window 3. Am I missing something? Is this actually an option that needs to be turned on?\n\nThis bug also affects qtconsole clients.\n\n```\n$ python -c \"import IPython; print(IPython.sys_info())\"\n{'commit_hash': u'2d95975',\n 'commit_source': 'installation',\n 'default_encoding': 'UTF-8',\n 'ipython_path': '/usr/local/lib/python2.7/dist-packages/IPython',\n 'ipython_version': '3.2.1',\n 'os_name': 'posix',\n 'platform': 'Linux-3.16.0-4-amd64-x86_64-with-debian-8.1',\n 'sys_executable': '/usr/bin/python',\n 'sys_platform': 'linux2',\n 'sys_version': '2.7.9 (default, Mar  1 2015, 12:57:24) \\n[GCC 4.9.2]'}\n```\n\nAlso appears to affect master; I just got around to trying it in a virtualenv.\n", "commits": [{"node_id": "C_kwDOGPr9KtoAKDUxY2E1NTVmZGVkZjdhNDBlOWM5YmVhZWFmNGViYmIzYmNhMGUwYzY", "commit_message": "Remove unnecessary else clause in repr_failure() (#8661)\n\n* Remove unnecessary else clause in repr_failure()\n\n* [pre-commit.ci] auto fixes from pre-commit.com hooks\n\nfor more information, see https://pre-commit.ci\n\nCo-authored-by: Zachary Kneupper <zacharykneupper@Zacharys-MBP.lan>\nCo-authored-by: pre-commit-ci[bot] <66853113+pre-commit-ci[bot]@users.noreply.github.com>", "commit_timestamp": "2022-02-08T20:55:17Z", "files": ["IPython/testing/plugin/pytest_ipdoctest.py"]}], "labels": [], "created_at": "2015-07-26T05:34:45Z", "closed_at": "2015-07-26T17:19:57Z", "method": ["regex"]}
{"issue_number": 8660, "title": "RPi pip install ipython[all] fails", "body": "RPi pip install ipython[all] fails:\n\n```\nDownloading/unpacking appnope (from ipython[all])\n  Downloading appnope-0.1.0.tar.gz\n  Running setup.py egg_info for package appnope\n    Traceback (most recent call last):\n      File \"<string>\", line 14, in <module>\n      File \"/home/pi/build/appnope/setup.py\", line 17, in <module>\n        raise ValueError(\"Only meant for install on OS X >= 10.9\")\n    ValueError: Only meant for install on OS X >= 10.9\n    Complete output from command python setup.py egg_info:\n    Traceback (most recent call last):\n\n  File \"<string>\", line 14, in <module>\n\n  File \"/home/pi/build/appnope/setup.py\", line 17, in <module>\n\n    raise ValueError(\"Only meant for install on OS X >= 10.9\")\n\nValueError: Only meant for install on OS X >= 10.9\n\n----------------------------------------\nCommand python setup.py egg_info failed with error code 1 in /home/pi/build/appnope\nStoring complete log in /root/.pip/pip.log\n```\n", "commits": [{"node_id": "C_kwDOGPr9KtoAKGQ5ZGYyODU1NGNlNTdkZWQ3MmNmOWFmMzE0ZTI2ZDdmYzUxYWU5MmQ", "commit_message": "Replace some for loops, and other minor changes (#8660)\n\n* Replace for loop using the  operator\n\n* Replace for loop with a generator expression inside any()\n\n* Replace for loop with a dictionary comprehension\n\n* Use list comprehension\n\n* Simplify arguments for range()\n\n* Change newfuncargs variable to in-line dictionary comprehension\n\n* is_ancestor: return base.is_relative_to(query)\n\n* Remove unneeded import of pathlib\n\n* Try using PurePath\n\n* [pre-commit.ci] auto fixes from pre-commit.com hooks\n\nfor more information, see https://pre-commit.ci\n\n* Import PurePath on new line\n\n* Revert and remove is_relative_to\n\nCo-authored-by: Zachary Kneupper <zacharykneupper@Zacharys-MBP.lan>\nCo-authored-by: pre-commit-ci[bot] <66853113+pre-commit-ci[bot]@users.noreply.github.com>", "commit_timestamp": "2022-02-08T20:55:18Z", "files": ["IPython/testing/plugin/pytest_ipdoctest.py"]}], "labels": [], "created_at": "2015-07-25T22:10:27Z", "closed_at": "2015-08-12T01:27:14Z", "method": ["regex"]}
{"issue_number": 8647, "title": "Dict key completion with bytes keys raises", "body": "Dict key tab completion raises when trying to complete a prefix of a bytes literal that is a valid key in the dict, as below.  This issue persists after `pip install --upgrade ipython`.\n\n``` python\nPython 3.4.3 (default, Mar  3 2015, 10:49:33) \nType \"copyright\", \"credits\" or \"license\" for more information.\n\nIPython 3.2.1 -- An enhanced Interactive Python.\n?         -> Introduction and overview of IPython's features.\n%quickref -> Quick reference.\nhelp      -> Python's own help system.\nobject?   -> Details about 'object', use 'object??' for extra details.\n\nIn [1]: foo = {b'spam': True, 'ham': False}\n\nIn [2]: foo['s<TAB>\n%%script             %%system             %store               set                  stat+tlrc.BRIK.gz    str                  symptoms.csv\n%%sh                 %save                %sx                  setattr              stat+tlrc.HEAD       sum                  \n%%svg                %sc                  %system              slice                staticmethod         sun_et_al_seeds.txt  \n%%sx                 %set_env             scripts/             sorted               stims/               super                \n\nIn [2]: foo['h<TAB>\n%%html    %hist     %history  ham       hasattr   hash      help      hex       \n\nIn [2]: foo[b'h<TAB>\n%%html    %hist     %history  hasattr   hash      help      hex       \n\nIn [2]: foo[b's<TAB>Traceback (most recent call last):\n  File \"/home/schwabacher/lib/python3.4/site-packages/IPython/core/completer.py\", line 1092, in complete\n    self.matches.extend(matcher(text))\n  File \"/home/schwabacher/lib/python3.4/site-packages/IPython/core/completer.py\", line 917, in dict_key_matches\n    closing_quote, token_offset, matches = match_dict_keys(keys, prefix, self.splitter.delims)\n  File \"/home/schwabacher/lib/python3.4/site-packages/IPython/core/completer.py\", line 449, in match_dict_keys\n    rem_repr = repr(rem + '\"')\nTypeError: can't concat bytes to str\n\nIf you suspect this is an IPython bug, please report it at:\n    https://github.com/ipython/ipython/issues\nor send an email to the mailing list at ipython-dev@scipy.org\n\nYou can print a more detailed traceback right now with \"%tb\", or use \"%debug\"\nto interactively debug it.\n\nExtra-detailed tracebacks for bug-reporting purposes can be enabled via:\n    %config Application.verbose_crash=True\n\n\n%%script             %%system             %store               set                  stat+tlrc.BRIK.gz    str                  symptoms.csv\n%%sh                 %save                %sx                  setattr              stat+tlrc.HEAD       sum                  \n%%svg                %sc                  %system              slice                staticmethod         sun_et_al_seeds.txt  \n%%sx                 %set_env             scripts/             sorted               stims/               super                \n```\n", "commits": [{"node_id": "MDY6Q29tbWl0MjM0NDA3MzpiMTkzNDJhOTk5ZTYxMTkxMGY0NGY4NzZjMDYzZWVjZmFlYTI0MDdh", "commit_message": "Support Bytes dict completions, and test it.\n\nCloses #8647", "commit_timestamp": "2017-02-09T00:02:43Z", "files": ["IPython/core/completer.py", "IPython/core/tests/test_completer.py"]}, {"node_id": "MDY6Q29tbWl0MjM0NDA3MzpiOWU5MzE1OGJiNmUxNzZjMDdlODJjZjA0YzFjNzhkODA5N2MwMDg5", "commit_message": "Support Bytes dict completions, and test it.\n\nCloses #8647", "commit_timestamp": "2017-02-09T00:04:22Z", "files": ["IPython/core/completer.py", "IPython/core/tests/test_completer.py"]}, {"node_id": "MDY6Q29tbWl0MjM0NDA3MzowNTQ5MDAwZmVmOTkwYmM1MjFiNDQ1ZTY0ZjVhNmVkNjk0YTYzZTI5", "commit_message": "Support Bytes dict completions, and test it.\n\nCloses #8647", "commit_timestamp": "2017-02-09T00:05:22Z", "files": ["IPython/core/completer.py", "IPython/core/tests/test_completer.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjEwNzZjMGRiZmU1Y2MyNzRiZWZiMzZlMjU5Mjk4ZDAwOThlMjJhMTY=", "commit_message": "Merge pull request #10263 from Carreau/fix-bytes-completion\n\nSupport Bytes dict completions, and test it.", "commit_timestamp": "2017-02-09T10:38:59Z", "files": ["IPython/core/completer.py", "IPython/core/tests/test_completer.py"]}], "labels": [], "created_at": "2015-07-21T23:03:49Z", "closed_at": "2017-02-09T10:38:59Z", "linked_pr_number": [8647], "method": ["regex"]}
{"issue_number": 8492, "title": "variable substitution in a %%bash cells first line fails silently if one variable isn't defined", "body": "Variable substitution in the first line of `%%bash` cells doesn't happen if one of the variables isn't defined. Instead, the name of the variable with a \"$\" prepended is sent to bash. This is true even for variables in the list that ARE defined.\n\nTo demonstrate, say I have a cell like this:\n\n```\n%%bash -s $a_variable $another_var\necho $1 $2\n```\n\nIf both variables are defined, `str(a_variable)` and `str(another_var)` are output by bash (since variables are substituted by their string representation). If, on the other hand, at least one of the variables isn't defined, bash outputs this:\n\n```\n$a_variable $another_var\n```\n\nThe bad part about it, is that there is no error, exception or anything to warn you that something's gone wrong.\n", "commits": [{"node_id": "MDY6Q29tbWl0ODE1MDEyNjoxZmViOTNkMGE4NjExODBhYzcwYTBkYmFkZWUyMzEyZDc2OGZjNDQz", "commit_message": "added supressExceptions paramter to FullEvalFormatter\n\nIn order to maintain the current behaviour of FullEvalFormatter (it raises exceptions if it's `eval` fails), a `supressExceptions` parameter is added, defaulting to False. In the DollarFormatter, used for cell magic parsing, it defaults to True. This allows some expressions to be evaluated when there is an exception in another expression.  See #8492 for a discussion...\r\n\r\nIt only catches NameErrora - perhaps it'd be better to catch all exceptions? \r\n\r\nIt may also be a good idea for cell magics to emit a warning if an exception is raised during variable substitution. For that, we'd have to collect the exceptions here and somehow pass them on to the cell magics...", "commit_timestamp": "2015-06-01T05:57:20Z", "files": ["IPython/utils/text.py"]}], "labels": [], "created_at": "2015-05-31T10:56:45Z", "closed_at": "2015-05-31T15:57:06Z", "method": ["regex"]}
{"issue_number": 8482, "title": "quit(keep_kernel=True) doesn't work", "body": "I'm using IPython 3.1.0\n", "commits": [{"node_id": "MDY6Q29tbWl0MjM0NDA3MzpkNTU5M2JkMzE0M2Y3NTQ3ZjcwYjU0NjQwYTU2NzUwNTljNzMyZGJm", "commit_message": "respect keepkernel on exit for zmqshell in console\n\ncloses #8482", "commit_timestamp": "2015-05-28T06:04:36Z", "files": ["IPython/terminal/console/interactiveshell.py"]}, {"node_id": "MDY6Q29tbWl0MjM0NDA3MzowMjFiZjU1NTNlYzg5MjAyM2IwMTQ3YTNhNTUzMjA2MTNjZGI4MDE3", "commit_message": "respect keepkernel on exit for zmqshell in console\n\ncloses #8482", "commit_timestamp": "2015-05-28T18:59:18Z", "files": ["IPython/terminal/console/app.py", "IPython/terminal/console/interactiveshell.py"]}, {"node_id": "MDY6Q29tbWl0MjM0NDA3MzozOGEyOTg2ZmQxOWU4MmE2MzQ2ZTg5Mjg1MDhkMWVjZTM4OTE3MDQ5", "commit_message": "respect keep_kernel in exit()\n\nAnd pass to console wether or not it owns the kernel.\n\ncloses #8482", "commit_timestamp": "2015-05-28T20:02:35Z", "files": ["IPython/terminal/console/app.py", "IPython/terminal/console/interactiveshell.py"]}, {"node_id": "MDY6Q29tbWl0MzY0MTg0NDQ6YjVmZDc0OWVmMmU3NDE5NjExOTM1YmVmNDZmNDE5MjczYWFkYzdlNA==", "commit_message": "respect keepkernel on exit for zmqshell in console\n\nforward port of https://github.com/ipython/ipython/pull/8483", "commit_timestamp": "2015-05-28T06:10:49Z", "files": ["jupyter_console/interactiveshell.py", "setup.py"]}, {"node_id": "MDY6Q29tbWl0MzY0MTg0NDQ6ZGRkNjQzMjk2Mjc0ODMwMjVmMDM2YzliMzlkNmJmZDc1Y2FlYTRiOA==", "commit_message": "respect keepkernel on exit for zmqshell in console\n\nforward port of https://github.com/ipython/ipython/pull/8483", "commit_timestamp": "2015-05-28T06:12:57Z", "files": ["jupyter_console/interactiveshell.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmE0YzVmOTJhZjJmNGUyN2U5MjVjNjA1NzQyNWJlNzk1MTU5NTY2YWQ=", "commit_message": "Merge pull request #8483 from Carreau/keep-kernel\n\nrespect keepkernel on exit for zmqshell in console", "commit_timestamp": "2015-05-28T21:11:07Z", "files": ["IPython/terminal/console/app.py", "IPython/terminal/console/interactiveshell.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmE0YzVmOTJhZjJmNGUyN2U5MjVjNjA1NzQyNWJlNzk1MTU5NTY2YWQ=", "commit_message": "Merge pull request #8483 from Carreau/keep-kernel\n\nrespect keepkernel on exit for zmqshell in console", "commit_timestamp": "2015-05-28T21:11:07Z", "files": ["IPython/terminal/console/app.py", "IPython/terminal/console/interactiveshell.py"]}, {"node_id": "MDY6Q29tbWl0MzY0MTg0NDQ6ZjYyMDZmYjk3NjJjOWJiNTQ4YjJkOGM3NjExNzAzYWI5ODI3NWRiNA==", "commit_message": "respect keepkernel on exit for zmqshell in console\n\nforward port of ipython/ipython#8483", "commit_timestamp": "2015-05-28T21:32:19Z", "files": ["jupyter_console/app.py", "jupyter_console/interactiveshell.py"]}], "labels": [], "created_at": "2015-05-28T05:07:24Z", "closed_at": "2015-05-29T22:37:41Z", "linked_pr_number": [8482], "method": ["regex"]}
{"issue_number": 8478, "title": "DeprecationWarnings should be visible by default in interactive usage", "body": "DeprecationWarning and PendingDeprecationWarning are invisible by default. The rationale for this is that they are only useful to people who are writing code, so they should not be shown to end-users who are merely running code.\n\nIf someone is typing stuff into the interactive REPL or a notebook, though, and the code they type uses some deprecated functionality, then we should actually show them this warning. We know that the author is sitting right there. And they're probably going to take whatever they tested interactively and move it into a more permanent form and ugh.\n\nThis problem is particularly acute for packages that are primarily used through the interactive prompt, like numpy. I'm really tired of getting bugs like this: numpy/numpy#5919\n\nThe solution is simple: when entering interactive mode, IPython should do something like:\n\n```\nwarnings.filterwarnings(\"default\", category=DeprecationWarning, module=\"__main__\")\nwarnings.filterwarnings(\"default\", category=PendingDeprecationWarning, module=\"__main__\")\n```\n\nThis means \"for any `DeprecationWarning` or `PendingDeprecation` warning which is caused by code running in the module with name `\"__main__\"`, use the `\"default\"` handler (which means: display once per line of code that triggered it). (Confusingly, the default handler for these warning messages is not `\"default\"`, but `\"ignore\"`. So overriding the default with `\"default\"` produces a non-default outcome.)\n", "commits": [{"node_id": "MDY6Q29tbWl0MjM0NDA3MzoxNDc4ZTBkN2M3MTUyZGZjYmUzYzFjM2Q5YmE1ODI1NWY2MmZhMmI3", "commit_message": "register default deprecation warning filter.\n\nwarn user if (s)he use a deprecated feature interactively.\n\nCloses #8478\n\n    In [1]: %run -i foo\n    In [2]: foo()\n    foo.py:4: DeprecationWarning: using a non-integer number instead of an\n        integer will result in an error in the future\n        print('x'*np.float64(3.5))\n    xxx\n\n    In [3]: from foo import foo\n    In [4]: foo()\n    xxx", "commit_timestamp": "2015-05-27T17:53:58Z", "files": ["IPython/core/interactiveshell.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjNhMzVhNWU2Njk1N2JmYmZiYmIwOTY1MGYxMWJiMTdjYmFjMjAwYTY=", "commit_message": "Merge pull request #8480 from Carreau/interactive-deprecation-warning\n\nregister default deprecation warning filter.", "commit_timestamp": "2015-06-01T22:00:10Z", "files": ["IPython/core/interactiveshell.py", "IPython/core/tests/test_interactiveshell.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjNhMzVhNWU2Njk1N2JmYmZiYmIwOTY1MGYxMWJiMTdjYmFjMjAwYTY=", "commit_message": "Merge pull request #8480 from Carreau/interactive-deprecation-warning\n\nregister default deprecation warning filter.", "commit_timestamp": "2015-06-01T22:00:10Z", "files": ["IPython/core/interactiveshell.py", "IPython/core/tests/test_interactiveshell.py"]}], "labels": [], "created_at": "2015-05-27T08:10:00Z", "closed_at": "2015-06-01T22:00:10Z", "linked_pr_number": [8478], "method": ["regex"]}
{"issue_number": 8465, "title": "AttributeError in notebook when quitting debugger", "body": "To reproduce execute a cell:\n\n``` python\nraise RuntimeError\n```\n\nfollowed by\n\n``` python\n%debug\n```\n\nand typing `q`.\n\nThis results in an `AttributeError: 'NoneType' object has no attribute 'set_completer_delims'` raised in a deeply nested function call.\n\nThe error appears in 3.1.0 both Python 2.7.8 and 3.4.3 (I couldn't test with master since the installation isn't straightforward right now). The error appears in notebook and qtconsole, but not in the regular shell.\n", "commits": [{"node_id": "MDY6Q29tbWl0MTIzNjAwMzpjZjEzMzE5N2NjM2VkM2Q3MmE3MjY5MDlmYzA1MzhhM2I3NTY0Zjcz", "commit_message": "Fix quitting debugger when readline not in use\n\nCloses gh-8465", "commit_timestamp": "2015-05-24T22:55:14Z", "files": ["IPython/core/debugger.py"]}, {"node_id": "MDY6Q29tbWl0NjU5NDQ2OjRjYjY2OGE5MjE3OGQ3ZWY1MGE3MzQxNTJmYThiYmYxN2RhZjI5Zjg=", "commit_message": "Backport PR #8470: Fix quitting debugger when readline not in use\n\nCloses gh-8465", "commit_timestamp": "2015-06-20T16:54:42Z", "files": ["IPython/core/debugger.py"]}, {"node_id": "MDY6Q29tbWl0MjMyMzE0NTU6M2E2Mzc3YTNlMTc0MjY1OWYzNDVhZmMyZjEyOTcyNTI3MmY2ZDY3Yw==", "commit_message": "Backport PR #8470: Fix quitting debugger when readline not in use\n\nCloses gh-8465", "commit_timestamp": "2016-08-03T15:11:15Z", "files": ["IPython/core/debugger.py"]}], "labels": [], "created_at": "2015-05-23T15:14:12Z", "closed_at": "2015-05-24T23:38:08Z", "method": ["regex"]}
{"issue_number": 8330, "title": "Class attributes are shown regardless of __dir__ override ", "body": "For some user interactions I'm trying to limit what the tab completion options are. I have implemented a `__dir__`, and dir(object) has the expected results. However, the tab completion still shows functions from the class -- inherited from a parent class.\n\nI tried adding a `@classmethod` `__dir__` and I tried adding `__dir__` to the parent class, but neither one seems to help -- though..the `@classmethod` feels like it should have...and that might either be a python bug or \"not a supported feature\" :)\n", "commits": [{"node_id": "MDY6Q29tbWl0NzUzNzY4Ojg3MmRlOGFmMWYzNzYxZDQ3Mzc2NzJkYWIyZjUwYTIyNWFiMDQyM2U=", "commit_message": "restore tab completion behavior\n\nthis is a minimal patch to restore proper tab completion behavior, a\npartial revert of #8355. I think avoiding the explicit poking into the\n__bases__ classes address the concerns #8330.", "commit_timestamp": "2016-11-07T18:24:26Z", "files": ["IPython/utils/dir2.py"]}, {"node_id": "MDY6Q29tbWl0NzUzNzY4OmQwOTQ5ODAxNGFkYWIwODE0M2JjNmYxNWYzZTM1MDJkNTFlN2IzZDc=", "commit_message": "restore more tab completion behavior\n\nAn alternative to #10046, which closes #10044, but also #9606.\n\nThis is a complete revert of #8355, which resolved #8330, but instead\nlead to completions not matching the set provided by standard libarary's\n`rlcompleter`, which is in conflict with the behavior reported in #8330.", "commit_timestamp": "2016-11-07T23:10:32Z", "files": ["IPython/utils/dir2.py"]}, {"node_id": "MDY6Q29tbWl0NzUzNzY4OjZhMTQ0MWNhOTMwNWVkNmJhNWQyODlkODU5MDk3NzE5Mjk1YWRlNDg=", "commit_message": "restore more tab completion behavior\n\nAn alternative to #10046, which closes #10044, but also #9606.\n\nThis is a complete revert of #8355, which resolved #8330, but instead\nlead to completions not matching the set provided by standard libarary's\n`rlcompleter`, which is in conflict with the behavior reported in #8330.", "commit_timestamp": "2016-11-07T23:34:51Z", "files": ["IPython/utils/dir2.py"]}], "labels": [], "created_at": "2015-04-17T10:45:25Z", "closed_at": "2015-04-21T21:40:58Z", "method": ["regex"]}
{"issue_number": 8322, "title": "Autosave \"messing\" with File Permissions", "body": "Hello,\n\nafter upgrading to iPython Notebook 3.1 I realized that the autosave functionality of the notebooks broke my owner rights on my notebooks stored in my companies network storage (netapp).\nI'm running the notebook server from my MacBook (OSX 10.9.5). Our IT-department sais that OSX can show the file permissions on the network, but if it tries to change it, it destroys these rights.\n\nI can reproduce the behavior. If i create a clean notebook and save it, all is fine. But as soon as the autosaved tries to create a new checkpoint, all permissions are gone and I can't even read the notebook anymore.\n\nI realize this is not a ipython notebook bug in the first place, but it can lead to severe dataloss and I don't see why ipython should try to change owner rights when creating checkpoints at all. At least it seems it does\n\nkind regards\nMarkus\n", "commits": [{"node_id": "MDY6Q29tbWl0MzQ0MjM4NTc6NzJkMmUzODVlMzIzNTQxZjYyYTI5MGE3MTE5OWFhM2M0Yzk5N2ExZg==", "commit_message": "Use name ignored by dropbox for atomic saving temp files\n\nSee discussion on ipython/ipython#8322\n\nBy using a '.~' prefix for the temporary files, Dropbox should ignore\nthem, which makes atomic saving a bit less inconvenient.\n\nHowever, to do this, we need to switch back from using temporary\ndirectories (implemented in ipython/ipython#7469). This uses the other\napproach described in ipython/ipython#7317 instead.", "commit_timestamp": "2015-04-23T00:26:18Z", "files": ["jupyter_notebook/services/contents/fileio.py"]}], "labels": [], "created_at": "2015-04-15T08:06:55Z", "closed_at": "2015-09-12T23:27:04Z", "method": ["regex"]}
{"issue_number": 8293, "title": "Error in error reporting.", "body": "The program to reproduce the error is the following:\n\n``` python\n# file: ~/tmp/ipython-except.py\ndef foo(u):\n    raise ValueError\n\n# This shows the correct traceback:\n# sum(sum(foo(u) for u in [0]) for _ in [0])\nsum(sum(foo(u) for _ in [0]) for u in [0])\n```\n\nThe following error is produced:\n\n```\n16:28:05 [5]: %run -i ~/tmp/ipython_except.py\n---------------------------------------------------------------------------\nIndexError                                Traceback (most recent call last)\n<ipython-input-5-21c031f5aefb> in <module>()\n----> 1 get_ipython().magic(u'run -i ~/tmp/ipython_except.py')\n\n/Users/musically_ut/prog/rare/ipython/IPython/core/interactiveshell.py in magic(self, arg_s)\n   2306         magic_name, _, magic_arg_s = arg_s.partition(' ')\n   2307         magic_name = magic_name.lstrip(prefilter.ESC_MAGIC)\n-> 2308         return self.run_line_magic(magic_name, magic_arg_s)\n   2309\n   2310     #-------------------------------------------------------------------------\n\n/Users/musically_ut/prog/rare/ipython/IPython/core/interactiveshell.py in run_line_magic(self, magic_name, line)\n   2227                 kwargs['local_ns'] = sys._getframe(stack_depth).f_locals\n   2228             with self.builtin_trap:\n-> 2229                 result = fn(*args,**kwargs)\n   2230             return result\n   2231\n\n/Users/musically_ut/prog/rare/ipython/IPython/core/magics/execution.py in run(self, parameter_s, runner, file_finder)\n\n/Users/musically_ut/prog/rare/ipython/IPython/core/magic.py in <lambda>(f, *a, **k)\n    191     # but it's overkill for just that one bit of state.\n    192     def magic_deco(arg):\n--> 193         call = lambda f, *a, **k: f(*a, **k)\n    194\n    195         if callable(arg):\n\n/Users/musically_ut/prog/rare/ipython/IPython/core/magics/execution.py in run(self, parameter_s, runner, file_finder)\n    736                         else:\n    737                             # regular execution\n--> 738                             run()\n    739\n    740                 if 'i' in opts:\n\n/Users/musically_ut/prog/rare/ipython/IPython/core/magics/execution.py in run()\n    722                             def run():\n    723                                 runner(filename, prog_ns, prog_ns,\n--> 724                                        exit_ignore=exit_ignore)\n    725\n    726                         if 't' in opts:\n\n/Users/musically_ut/prog/rare/ipython/IPython/core/interactiveshell.py in safe_execfile(self, fname, *where, **kw)\n   2655                     raise\n   2656                 # tb offset is 2 because we wrap execfile\n-> 2657                 self.showtraceback(tb_offset=2)\n   2658\n   2659     def safe_execfile_ipy(self, fname, shell_futures=False):\n\n/Users/musically_ut/prog/rare/ipython/IPython/core/interactiveshell.py in showtraceback(self, exc_tuple, filename, tb_offset, exception_only)\n   1850                     except Exception:\n   1851                         stb = self.InteractiveTB.structured_traceback(etype,\n-> 1852                                             value, tb, tb_offset=tb_offset)\n   1853\n   1854                     self._showtraceback(etype, value, stb)\n\n/Users/musically_ut/prog/rare/ipython/IPython/core/ultratb.pyc in structured_traceback(self, etype, value, tb, tb_offset, number_of_lines_of_context)\n   1238         self.tb = tb\n   1239         return FormattedTB.structured_traceback(\n-> 1240             self, etype, value, tb, tb_offset, number_of_lines_of_context)\n   1241\n   1242\n\n/Users/musically_ut/prog/rare/ipython/IPython/core/ultratb.pyc in structured_traceback(self, etype, value, tb, tb_offset, number_of_lines_of_context)\n   1146             # Verbose modes need a full traceback\n   1147             return VerboseTB.structured_traceback(\n-> 1148                 self, etype, value, tb, tb_offset, number_of_lines_of_context\n   1149             )\n   1150         else:\n\n/Users/musically_ut/prog/rare/ipython/IPython/core/ultratb.pyc in structured_traceback(self, etype, evalue, etb, tb_offset, number_of_lines_of_context)\n    998\n    999         formatted_exception = self.format_exception_as_a_whole(etype, evalue, etb, number_of_lines_of_context,\n-> 1000                                                                tb_offset)\n   1001\n   1002         colors = self.Colors  # just a shorthand + quicker name lookup\n\n/Users/musically_ut/prog/rare/ipython/IPython/core/ultratb.pyc in format_exception_as_a_whole(self, etype, evalue, etb, number_of_lines_of_context, tb_offset)\n    949         records = self.get_records(etb, number_of_lines_of_context, tb_offset)\n    950\n--> 951         frames = self.format_records(records)\n    952         if records is None:\n    953             return \"\"\n\n/Users/musically_ut/prog/rare/ipython/IPython/core/ultratb.pyc in format_records(self, records)\n    745             file = py3compat.cast_unicode(file, util_path.fs_encoding)\n    746             link = tpl_link % file\n--> 747             args, varargs, varkw, locals = inspect.getargvalues(frame)\n    748\n    749             if func == '?':\n\n/usr/local/Cellar/python/2.7.9/Frameworks/Python.framework/Versions/2.7/lib/python2.7/inspect.pyc in getargvalues(frame)\n    827     'varargs' and 'varkw' are the names of the * and ** arguments or None.\n    828     'locals' is the locals dictionary of the given frame.\"\"\"\n--> 829     args, varargs, varkw = getargs(frame.f_code)\n    830     return ArgInfo(args, varargs, varkw, frame.f_locals)\n    831\n\n/usr/local/Cellar/python/2.7.9/Frameworks/Python.framework/Versions/2.7/lib/python2.7/inspect.pyc in getargs(co)\n    789                                 remain[-1] = remain[-1] - 1\n    790                             if not remain: break\n--> 791             args[i] = stack[0]\n    792\n    793     varargs = None\n\nIndexError: list index out of range\n```\n\nExpected output is something along the lines of the following:\n\n```\n16:31:07 [11]: %run -i ~/tmp/ipython_except.py\n---------------------------------------------------------------------------\nValueError                                Traceback (most recent call last)\n/Users/musically_ut/tmp/ipython_except.py in <module>()\n      3\n      4 # This shows the correct traceback:\n----> 5 sum(sum(foo(u) for u in [0]) for _ in [0])\n      6 # sum(sum(foo(u) for _ in [0]) for u in [0])\n\n/Users/musically_ut/tmp/ipython_except.py in <genexpr>((_,))\n      3\n      4 # This shows the correct traceback:\n----> 5 sum(sum(foo(u) for u in [0]) for _ in [0])\n      6 # sum(sum(foo(u) for _ in [0]) for u in [0])\n\n/Users/musically_ut/tmp/ipython_except.py in <genexpr>((u,))\n      3\n      4 # This shows the correct traceback:\n----> 5 sum(sum(foo(u) for u in [0]) for _ in [0])\n      6 # sum(sum(foo(u) for _ in [0]) for u in [0])\n\n/Users/musically_ut/tmp/ipython_except.py in foo(u)\n      1 def foo(u):\n----> 2     raise ValueError\n      3\n      4 # This shows the correct traceback:\n      5 sum(sum(foo(u) for u in [0]) for _ in [0])\n\nValueError:\n```\n\nTested against IPython `4.0.0-dev` (current `master`) and Python `2.7.9`:\n\n```\n$ python -m IPython\nPython 2.7.9 (default, Jan  7 2015, 11:49:12)\nType \"copyright\", \"credits\" or \"license\" for more information.\n\nIPython 4.0.0-dev -- An enhanced Interactive Python.\n```\n", "commits": [{"node_id": "MDY6Q29tbWl0MjMyMzE0NTU6YTFkMmIzMDUzMzg5OTJiNDUwMjFhNWJmYWNhMmJjY2ZkMmMzZTY5Mw==", "commit_message": "BUG: Fix getargvalues call with nested genexprs.\n\nFixes https://github.com/ipython/ipython/issues/8293 and\n      https://github.com/ipython/ipython/issues/8205.", "commit_timestamp": "2015-10-08T00:11:52Z", "files": ["IPython/core/ultratb.py"]}, {"node_id": "MDY6Q29tbWl0MjMyMzE0NTU6ZTRjMmI1ZGFmNWJhZThkMzM1MTY3ODA2YzIxMDQzOTI5NWMxODlmOA==", "commit_message": "BUG: Fix getargvalues call with nested genexprs.\n\nFixes https://github.com/ipython/ipython/issues/8293 and\n      https://github.com/ipython/ipython/issues/8205.", "commit_timestamp": "2015-10-08T00:16:55Z", "files": ["IPython/core/ultratb.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4Ojg3M2U5MDc3NGMwODJhMDYzZjA5NzY2M2QyMzI3YmIyODVlODE2MWM=", "commit_message": "Merge pull request #8882 from quantopian/fix-getargs\n\nBUG: Fix getargvalues call with nested genexprs.", "commit_timestamp": "2015-10-09T08:31:41Z", "files": ["IPython/core/tests/test_ultratb.py", "IPython/core/ultratb.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4Ojg3M2U5MDc3NGMwODJhMDYzZjA5NzY2M2QyMzI3YmIyODVlODE2MWM=", "commit_message": "Merge pull request #8882 from quantopian/fix-getargs\n\nBUG: Fix getargvalues call with nested genexprs.", "commit_timestamp": "2015-10-09T08:31:41Z", "files": ["IPython/core/tests/test_ultratb.py", "IPython/core/ultratb.py"]}], "labels": [], "created_at": "2015-04-09T14:33:40Z", "closed_at": "2015-10-09T08:31:41Z", "linked_pr_number": [8293], "method": ["regex"]}
{"issue_number": 8140, "title": "IPython fails to install", "body": "Running `python3 setup.py install` fails with the message \n\n`no files match pattern IPython/qt/console/resources/icon/*.svg`\n", "commits": [{"node_id": "MDY6Q29tbWl0MTIzNjAwMzpmODRjMjZhMjQ5Y2ZlNDFkMDY2NmE2ZDYzNzZmZjAyNDQ1MDUxOTlk", "commit_message": "Remove Qt console package_data from setup\n\nWe should remember this when the ipython_qtconsole package gets its own\nsetup.\n\nCloses gh-8140", "commit_timestamp": "2015-03-25T16:53:53Z", "files": ["setupbase.py"]}], "labels": [], "created_at": "2015-03-25T09:30:19Z", "closed_at": "2015-03-25T17:18:49Z", "method": ["regex"]}
{"issue_number": 8105, "title": "Console crashes when interrupted during execution", "body": "After updating to IPython 3.0, there was a bug in IPython console where interruptions during execution cause the kernel and console to crash. A simple way of reproducing this bug is by running:\n\n```\n$ ipython console\nIn [1]: for i in range(1000000000):\n    ...:      pass\n    ...:\n```\n\nand then pressing Ctrl-C to interrupt. It results in:\n\n```\nIn [1]: for i in range(1000000000):\n    ...:      pass\n    ...:\n^CTraceback (most recent call last):\n  File \"/usr/custom/Anaconda-2.0.1/bin/ipython\", line 6, in <module>\n    sys.exit(start_ipython())\n  File \"/usr/custom/Anaconda-2.0.1/lib/python2.7/site-packages/IPython/__init__.py\", line 120, in start_ipython\n    return launch_new_instance(argv=argv, **kwargs)\n  File \"/usr/custom/Anaconda-2.0.1/lib/python2.7/site-packages/IPython/config/application.py\", line 574, in launch_instance\n    app.start()\n  File \"/usr/custom/Anaconda-2.0.1/lib/python2.7/site-packages/IPython/terminal/ipapp.py\", line 367, in start\n    return self.subapp.start()\n  File \"/usr/custom/Anaconda-2.0.1/lib/python2.7/site-packages/IPython/terminal/ipapp.py\", line 371, in start\n    self.shell.mainloop()\n  File \"/usr/custom/Anaconda-2.0.1/lib/python2.7/site-packages/IPython/terminal/console/interactiveshell.py\", line 407, in mainloop\n    self.interact(display_banner=display_banner)\n  File \"/usr/custom/Anaconda-2.0.1/lib/python2.7/site-packages/IPython/terminal/console/interactiveshell.py\", line 568, in interact\n    self.run_cell(source_raw)\n  File \"/usr/custom/Anaconda-2.0.1/lib/python2.7/site-packages/IPython/terminal/console/interactiveshell.py\", line 168, in run_cell\n    self.handle_input_request(msg_id, timeout=0.05)\n  File \"/usr/custom/Anaconda-2.0.1/lib/python2.7/site-packages/IPython/terminal/console/interactiveshell.py\", line 373, in handle_input_request\n    req = self.client.stdin_channel.get_msg(timeout=timeout)\n  File \"/usr/custom/Anaconda-2.0.1/lib/python2.7/site-packages/IPython/kernel/blocking/channels.py\", line 50, in get_msg\n    ready = self.socket.poll(timeout)\n  File \"/usr/custom/Anaconda-2.0.1/lib/python2.7/site-packages/zmq/sugar/socket.py\", line 448, in poll\n    evts = dict(p.poll(timeout))\n  File \"/usr/custom/Anaconda-2.0.1/lib/python2.7/site-packages/zmq/sugar/poll.py\", line 101, in poll\nreturn zmq_poll(self.sockets, timeout=timeout)\n  File \"zmq/backend/cython/_poll.pyx\", line 115, in zmq.backend.cython._poll.zmq_poll (zmq/backend/cython/_poll.c:1586)\n  File \"zmq/backend/cython/checkrc.pxd\", line 21, in zmq.backend.cython.checkrc._check_rc (zmq/backend/cython/_poll.c:2016)\n    raise ZMQError(errno)\nZMQError: Interrupted system call\n\nIf you suspect this is an IPython bug, please report it at:\n    https://github.com/ipython/ipython/issues\nor send an email to the mailing list at ipython-dev@scipy.org\n\nYou can print a more detailed traceback right now with \"%tb\", or use \"%debug\"\nto interactively debug it.\n\nExtra-detailed tracebacks for bug-reporting purposes can be enabled via:\n    %config Application.verbose_crash=True\n```\n\nThis does not seem to occur with the basic ipython without separate kernel support. When I attach an ipython console to an ipython notebook kernel, interruption only crashes the console while the notebook kernel remains active.\n\nI am running IPython 3.0 through Anaconda on CentOS 6.6 and python 2.7. More system information is as follows:\n\n```\n$ python -c \"import IPython; print(IPython.sys_info())\"\n{'commit_hash': u'f75fda4',\n 'commit_source': 'installation',\n 'default_encoding': 'UTF-8',\n 'ipython_path': '/usr/custom/Anaconda-2.0.1/lib/python2.7/site-packages/IPython',\n 'ipython_version': '3.0.0',\n 'os_name': 'posix',\n 'platform': 'Linux-2.6.32-504.8.1.el6.x86_64-x86_64-with-centos-6.6-Final',\n 'sys_executable': '/usr/custom/Anaconda-2.0.1/bin/python',\n 'sys_platform': 'linux2',\n 'sys_version': '2.7.9 |Anaconda 2.0.1 (64-bit)| (default, Dec 15 2014, 10:33:51) \\n[GCC 4.4.7 20120313 (Red Hat 4.4.7-1)]'}\n```\n\nI hope that information is adequate! Thanks!\n", "commits": [{"node_id": "MDY6Q29tbWl0MTIzNjAwMzowOTAxZGM5ZDRmOGQ0ODUwODg1NjljZDg1ODljNmM3ZDUzNWVmYjcw", "commit_message": "Catch ZMQError for SIGINT while polling socket in blocking client\n\nCloses gh-8105", "commit_timestamp": "2015-03-21T22:43:52Z", "files": ["IPython/kernel/blocking/channels.py"]}, {"node_id": "MDY6Q29tbWl0MTIzNjAwMzowYjNiMjhkZTMxMzk3MjAxMTMwODhhZDRlOGRjZjg3ZjE5YjYzY2Vh", "commit_message": "Catch interrupted poll() in terminal console\n\nAlternative to my own PR #8108 - catch ZMQError in run_cell, and if it's\ncaused by an interrupt, ignore it.\n\nmore complex, especially if we want to handle the timeout nicely as\nproposed in the comments, but it's possibly also more convenient for\nother users of that API. Or perhaps not - I'm not sure what makes sense\nfor other API consumers in this case.\n\nFixes gh-8105", "commit_timestamp": "2015-03-24T00:00:59Z", "files": ["IPython/terminal/console/interactiveshell.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjBkOWEzNDdjODI5OTBmZGY0MTQ2M2U2OWY2OGU4YjcyNGU0MDk2MTc=", "commit_message": "Backport PR #8129: Catch interrupted poll() in terminal console\n\nAlternative to my own PR #8108 - catch ZMQError in run_cell, and if it's caused by an interrupt, ignore it.\n\n#8108 catches the exception in the blocking kernel client API, which is more complex, especially if we want to handle the timeout nicely as proposed in the comments, but it's possibly also more convenient for other users of that API. Or perhaps not - I'm not sure what makes sense for other API consumers in this case.\n\nFixes gh-8105", "commit_timestamp": "2015-03-25T18:08:20Z", "files": ["IPython/terminal/console/interactiveshell.py"]}], "labels": [], "created_at": "2015-03-21T19:19:56Z", "closed_at": "2015-03-24T18:30:27Z", "method": ["regex"]}
{"issue_number": 8101, "title": "ContentsManager.rename_file and ContentsManager.delete_file have confusing names", "body": "ContentsManager has two abstract methods, `rename_file` and `delete_file`, that allow subclasses to define what it means to delete or rename an object.  It then implements a higher-level `delete` method that calls these implementation-specific methods and also ensures that checkpoints are kept in sync.  \n\nThis is unfortunate for two reasons:\n1. The methods `delete_file` and `rename_file` are also expected to correctly apply to directories.  This is particularly confusing when the class also has plain `delete` and `rename` methods, which might lead one to assume naively that `delete/rename` should handle any path, and `delete/rename_file` should only be called on files.\n2. It's easy for a subclass to accidentally implement `delete` and `rename` instead of `delete_file` and `rename_file`, which causes that class to incorrectly handle checkpoint synchronization. (I had precisely this bug in pgcontents.)\n\nThis issue is almost certainly of my own making, so I'm happy to fix it.  If it weren't using traitlets, the right fix for this would be to make `ContentsManager` a subclass of `ABCMeta` and make the expected overrides `abstractmethods`, so it's possible that the proper solution to this is to implement `AbstractHasTraits` with a compatible union of `MetaHasTraits` and `ABCMeta`.  (@llllllllll this sounds like your kind of project)\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU4NTE4OmMyMzAxMTg5MDRhNTliNDBlM2EwNWEwYTg2MDdhNjNmNTM2ZmM0ZmM=", "commit_message": "Backport PR #8102: TEST: Add test for renaming files with checkpoint.\n\nThe checkpoint name should follow the file rename.\n\nThis catches a bug that I had in pgcontents where I was failing to properly rename checkpoints when files were renamed.  cf. https://github.com/ipython/ipython/issues/8101", "commit_timestamp": "2015-03-25T18:08:01Z", "files": ["IPython/html/services/contents/tests/test_contents_api.py"]}], "labels": ["notebook"], "created_at": "2015-03-21T00:10:55Z", "closed_at": "2017-07-23T00:14:27Z", "method": ["regex"]}
{"issue_number": 8033, "title": "Magic don't get source on ??", "body": "```\nIn [8]: %%bash??\nFile: ~/ipython/IPython/core/magics/script.py\n```\n\nassign @takluyver \n", "commits": [{"node_id": "MDY6Q29tbWl0MTIzNjAwMzo0ZDJjMjQ4YmYyOTg5MzNjOWU0M2M3ZjUzNzg0MjAwYjkwMjkxYmQ5", "commit_message": "Allow inspection of source code for magics\n\nCloses gh-8033", "commit_timestamp": "2015-03-13T19:29:41Z", "files": ["IPython/core/oinspect.py"]}], "labels": ["bug", "core"], "created_at": "2015-03-12T19:08:47Z", "closed_at": "2015-03-13T20:26:14Z", "method": ["label"]}
{"issue_number": 8032, "title": "Non-deterministic tests in IPython.core.magic", "body": "While debugging other tests, @Carreau noticed that running `iptest IPython.core.magics` sometimes runs 9 tests, and sometimes 10.\n", "commits": [{"node_id": "MDY6Q29tbWl0OTA2OTQwODM6OTg4NWQzMWFiMGE0ZTIwOWU2ZTg0NjhlMTY5ZTNmZGVmZDBmMTliMA==", "commit_message": "Fix non-deterministic tests in IPython.core.magics #8032", "commit_timestamp": "2017-05-11T22:51:06Z", "files": ["IPython/core/magics/code.py"]}, {"node_id": "MDY6Q29tbWl0OTA2OTQwODM6Yzc4Y2IxOGM4MGIwNDg4NzRhNzQyMjlhNzFlODRhMTAzMTIzMWIyZQ==", "commit_message": "Fix non-deterministic tests in IPython.core.magics #8032", "commit_timestamp": "2017-05-12T00:36:49Z", "files": ["IPython/core/magics/code.py"]}], "labels": ["testing", "core"], "created_at": "2015-03-12T18:21:53Z", "closed_at": "2017-05-13T21:44:59Z", "method": ["regex"]}
{"issue_number": 7941, "title": "ipython 3.0 broke my readthedocs build", "body": "Not sure if this is a bug but it sure was annoying.\n\npatsy.readthedocs.org uses `IPython.sphinxext.ipython_directive` and `IPython.sphinxext.ipython_console_highlighting`. It installs these by providing RTD with a requirements.txt which contains the string `ipython`, so `pip install ipython` happens.\n\nWhen 3.0 arrived on PyPI, this stopped working: suddenly my RTD builds are failing. Grovelling through the logs reveals that the `pip install ipython` went through fine, but then trying to import the sphinx extensions bailed out saying that I have to install `jsonschema`. Okay, fine, I added that to requirements.txt. Now it bailed out complaining about the lack of `mistune`. Okay, google says that should be pip installable too, so I added that to requirements.txt too. Now it seems to be working? But it seems like you have some broken install_requires or something?\n", "commits": [{"node_id": "MDY6Q29tbWl0MTIzNjAwMzpjNTdkZjM3YmIzYjVmYTFmYmQzZjE3NzA4NzQ4YjMxMzk2NGVmYWYz", "commit_message": "Move IPython lexers module to lib\n\nCloses gh-7941\n\nI've left a backwards compatibility module in\nIPython.nbconvert.utils.lexers - I don't know if anyone is importing it\ndirectly, but since we put it in entry points, we should probably\nconsider it public API.", "commit_timestamp": "2015-03-03T23:06:49Z", "files": ["IPython/lib/lexers.py", "IPython/nbconvert/filters/highlight.py", "IPython/nbconvert/utils/lexers.py", "IPython/nbconvert/utils/tests/lexers.py", "IPython/sphinxext/ipython_console_highlighting.py", "docs/autogen_api.py", "setup.py"]}, {"node_id": "MDY6Q29tbWl0MTIzNjAwMzo4NTdkMTAyZGJmMWU4ZjE0ZGE5NWY5NjM0ODE4MmZiMmE4MTM3NDli", "commit_message": "Move IPython lexers module to lib\n\nCloses gh-7941\n\nI've left a backwards compatibility module in\nIPython.nbconvert.utils.lexers - I don't know if anyone is importing it\ndirectly, but since we put it in entry points, we should probably\nconsider it public API.", "commit_timestamp": "2015-03-03T23:57:22Z", "files": ["IPython/lib/lexers.py", "IPython/nbconvert/filters/highlight.py", "IPython/nbconvert/utils/lexers.py", "IPython/sphinxext/ipython_console_highlighting.py", "docs/autogen_api.py", "setup.py"]}, {"node_id": "MDY6Q29tbWl0MjMyMzE0NTU6OTEzYmZkNjBhOGI3YzZmYzA1NTEwZWI3MjI1ZjgzNDhlMTg4ZTFmOQ==", "commit_message": "Move IPython lexers module to lib\n\nCloses gh-7941\n\nI've left a backwards compatibility module in\nIPython.nbconvert.utils.lexers - I don't know if anyone is importing it\ndirectly, but since we put it in entry points, we should probably\nconsider it public API.", "commit_timestamp": "2015-03-04T23:07:50Z", "files": ["IPython/lib/lexers.py", "IPython/nbconvert/filters/highlight.py", "IPython/nbconvert/utils/lexers.py", "IPython/sphinxext/ipython_console_highlighting.py", "docs/autogen_api.py", "setup.py"]}], "labels": [], "created_at": "2015-03-03T07:28:50Z", "closed_at": "2015-03-04T18:48:07Z", "method": ["regex"]}
{"issue_number": 7939, "title": "Edit magic in Qt console", "body": "I've updated to ipython 3.0.0 today. Unfortunately the edit magic seems to be broken. When I start ipython with `ipython qtconsole --editor=gvim` and type `edit test.py` nothing happens, but the following message appears in the terminal: \nWarning: received unknown payload of type 'edit_magic'\n", "commits": [{"node_id": "MDY6Q29tbWl0MTIzNjAwMzplNmFmY2M5OGUzNGE0MTdiZGU2NTBiMWVmYmFjZjllZjg0MzlkMWI2", "commit_message": "Fix edit magic payload handling for Qt console\n\nCloses gh-7939", "commit_timestamp": "2015-03-04T01:19:07Z", "files": ["IPython/qt/console/ipython_widget.py"]}, {"node_id": "MDY6Q29tbWl0MjMyMzE0NTU6NDI4ZDljNjgzYzk0MTI3Njc1YmFlOTFiZjI2YTY4MWYzNGZlNzc4NA==", "commit_message": "Fix edit magic payload handling for Qt console\n\nCloses gh-7939", "commit_timestamp": "2015-03-04T23:07:50Z", "files": ["IPython/qt/console/ipython_widget.py"]}], "labels": ["qtconsole"], "created_at": "2015-03-03T06:42:50Z", "closed_at": "2015-03-04T18:50:52Z", "method": ["regex"]}
{"issue_number": 7929, "title": "nbconvert crashes when faced with blank items in a bulleted list", "body": "The following linked gist of an extremely simple notebook crashes nbconvert\n\nhttps://gist.github.com/jdavidheiser/d1dd25c7822d265c7e0b\n\nThis could be a bug in mistune instead of in ipython - I haven't dug deeply into how the Markdown to be rendered is getting passed around.\n\nThe error text is as follows:\n\n``` python\n[NbConvertApp] Converting notebook nbconvert-crash.ipynb to html\n[NbConvertApp] Support files will be in nbconvert-crash_files/\n[NbConvertApp] Loaded template full.tpl\nTraceback (most recent call last):\n  File \"/opt/anaconda3/bin/ipython3\", line 9, in <module>\n    load_entry_point('ipython==3.0.0-rc1', 'console_scripts', 'ipython3')()\n  File \"/opt/anaconda3/lib/python3.4/site-packages/IPython/__init__.py\", line 120, in start_ipython\n    return launch_new_instance(argv=argv, **kwargs)\n  File \"/opt/anaconda3/lib/python3.4/site-packages/IPython/config/application.py\", line 574, in launch_instance\n    app.start()\n  File \"/opt/anaconda3/lib/python3.4/site-packages/IPython/terminal/ipapp.py\", line 367, in start\n    return self.subapp.start()\n  File \"/opt/anaconda3/lib/python3.4/site-packages/IPython/nbconvert/nbconvertapp.py\", line 261, in start\n    self.convert_notebooks()\n  File \"/opt/anaconda3/lib/python3.4/site-packages/IPython/nbconvert/nbconvertapp.py\", line 300, in convert_notebooks\n    output, resources = exporter.from_filename(notebook_filename, resources=resources)\n  File \"/opt/anaconda3/lib/python3.4/site-packages/IPython/nbconvert/exporters/exporter.py\", line 153, in from_filename\n    return self.from_notebook_node(nbformat.read(f, as_version=4), resources=resources, **kw)\n  File \"/opt/anaconda3/lib/python3.4/site-packages/IPython/nbconvert/exporters/html.py\", line 57, in from_notebook_node\n    return super(HTMLExporter, self).from_notebook_node(nb, resources, **kw)\n  File \"/opt/anaconda3/lib/python3.4/site-packages/IPython/nbconvert/exporters/templateexporter.py\", line 214, in from_notebook_node\n    output = self.template.render(nb=nb_copy, resources=resources)\n  File \"/opt/anaconda3/lib/python3.4/site-packages/jinja2/environment.py\", line 969, in render\n    return self.environment.handle_exception(exc_info, True)\n  File \"/opt/anaconda3/lib/python3.4/site-packages/jinja2/environment.py\", line 742, in handle_exception\n    reraise(exc_type, exc_value, tb)\n  File \"/opt/anaconda3/lib/python3.4/site-packages/jinja2/_compat.py\", line 36, in reraise\n    raise value.with_traceback(tb)\n  File \"/opt/anaconda3/lib/python3.4/site-packages/IPython/nbconvert/exporters/../templates/html/full.tpl\", line 2, in <module>\n    {% from 'mathjax.tpl' import mathjax %}\n  File \"/opt/anaconda3/lib/python3.4/site-packages/IPython/nbconvert/exporters/../templates/html/basic.tpl\", line 1, in <module>\n    {%- extends 'display_priority.tpl' -%}\n  File \"/opt/anaconda3/lib/python3.4/site-packages/IPython/nbconvert/exporters/../templates/skeleton/display_priority.tpl\", line 1, in <module>\n    {%- extends 'null.tpl' -%}\n  File \"/opt/anaconda3/lib/python3.4/site-packages/IPython/nbconvert/exporters/../templates/skeleton/null.tpl\", line 26, in <module>\n    {%- block body -%}\n  File \"/opt/anaconda3/lib/python3.4/site-packages/IPython/nbconvert/exporters/../templates/html/full.tpl\", line 63, in <module>\n    {{ super() }}\n  File \"/opt/anaconda3/lib/python3.4/site-packages/IPython/nbconvert/exporters/../templates/skeleton/null.tpl\", line 28, in <module>\n    {%- block any_cell scoped -%}\n  File \"/opt/anaconda3/lib/python3.4/site-packages/IPython/nbconvert/exporters/../templates/skeleton/null.tpl\", line 72, in <module>\n    {%- block markdowncell scoped-%}\n  File \"/opt/anaconda3/lib/python3.4/site-packages/IPython/nbconvert/exporters/../templates/html/basic.tpl\", line 76, in <module>\n    {{ cell.source  | markdown2html | strip_files_prefix }}\n  File \"/opt/anaconda3/lib/python3.4/site-packages/IPython/nbconvert/filters/markdown.py\", line 166, in markdown2html_mistune\n    return MarkdownWithMath(renderer=IPythonRenderer()).render(source)\n  File \"mistune.py\", line 927, in mistune.Markdown.render (mistune.c:18685)\n  File \"mistune.py\", line 930, in mistune.Markdown.parse (mistune.c:19057)\n  File \"mistune.py\", line 972, in mistune.Markdown.output (mistune.c:19784)\n  File \"mistune.py\", line 190, in mistune.BlockLexer.__call__ (mistune.c:3345)\n  File \"mistune.py\", line 209, in mistune.BlockLexer.parse (mistune.c:3840)\n  File \"mistune.py\", line 204, in mistune.BlockLexer.parse.manipulate (mistune.c:3661)\n  File \"mistune.py\", line 264, in mistune.BlockLexer.parse_list_block (mistune.c:5171)\n  File \"mistune.py\", line 302, in mistune.BlockLexer._process_list_item (mistune.c:5849)\n  File \"mistune.py\", line 209, in mistune.BlockLexer.parse (mistune.c:3840)\n  File \"mistune.py\", line 204, in mistune.BlockLexer.parse.manipulate (mistune.c:3661)\n  File \"mistune.py\", line 264, in mistune.BlockLexer.parse_list_block (mistune.c:5171)\n  File \"mistune.py\", line 291, in mistune.BlockLexer._process_list_item (mistune.c:5730)\nIndexError: string index out of range\n\n```\n", "commits": [{"node_id": "MDY6Q29tbWl0MTY5NDQ3NjQ6ZmQ4YzE3NTY2ODA0N2M4MmQ2NWY0ZGE3ZTRlZThmZjc5MDBjMTdkMw==", "commit_message": "Fix when list item is blank. Refer https://github.com/ipython/ipython/issues/7929", "commit_timestamp": "2015-03-04T08:14:35Z", "files": ["mistune.py"]}, {"node_id": "MDY6Q29tbWl0MjY1ODA1NzA6ODIzNmViYTczZjA1Y2ZkNTY2MzNkNzNjM2Q4ZWI4YWU2N2JjNjhmMQ==", "commit_message": "Fix tests.\n\nWas hitting https://github.com/ipython/ipython/issues/7929 with the\ntest_empty_list_items_page test. And newer pep8 syntax checker was\nmore strict.", "commit_timestamp": "2015-03-08T02:18:38Z", "files": ["odpdown.py"]}], "labels": ["nbconvert"], "created_at": "2015-03-02T20:46:37Z", "closed_at": "2015-03-04T17:31:15Z", "method": ["regex"]}
{"issue_number": 7503, "title": "Cell magics fail to switch the language", "body": "To reproduce, create a notebook with a cell like this:\n\n```\n%%sh\na=${HOME}\necho $a\n```\n\nSelect File / Print Preview.  Observe the red boxes around `$`'s.\n\n``` html\n..\n<span class=\"n\">a</span>\n<span class=\"o\">=</span>\n<span class=\"err\">$</span>\n<span class=\"p\">{</span>\n<span class=\"n\">HOME</span>\n<span class=\"p\">}</span>\n..\n```\n\nI am using Python 3.4.2 and IPython 3.0.0-dev.\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU4NTE4OmFjNDY1ZDc3Yzc3MzFmODI5Nzg5NmZlZmM2YzdkZTliNjJhNzgzMmI=", "commit_message": "Fixes #7503 - Cell magics fail to switch the language\n\nRecognize \"ipython3\" as a default language to be replaced\nin the presence of cell magic.", "commit_timestamp": "2015-01-20T02:38:59Z", "files": ["IPython/nbconvert/filters/highlight.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjBhNDJkYTBmOGY3ZWRlMjA4MDJhZGFlYTVjNjkyOWUwMjBhYjYyODY=", "commit_message": "Merge pull request #7504 from abalkin/magic-lang\n\nFixes #7503 - Cell magics fail to switch the language", "commit_timestamp": "2015-01-20T17:04:36Z", "files": ["IPython/nbconvert/filters/highlight.py"]}], "labels": ["nbconvert"], "created_at": "2015-01-19T20:04:53Z", "closed_at": "2015-01-20T17:04:37Z", "method": ["regex"]}
{"issue_number": 7485, "title": "%load in qtconsole places cursor in the wrong place", "body": "When using qtconsole and %load to load a Python program the program will not execute once loaded\n\nIt seems that the cursor is being placed on the line after that of the program's last line instead of at the end of the last line. If the cursor is moved back and return is entered, the program will execute.\n\nipython 2.3.1, Qt 4.8.6, PyQt 4.11.3, Python 2.7.9, Scientific Linux 6.4 (64-bit).\n", "commits": [{"node_id": "MDY6Q29tbWl0MTIzNjAwMzo1MmJjMGMzOGZkYTZhNGZmOTBmZjY2MTM5NWM1MThmYjE0NjIyMmY1", "commit_message": "Fix %load files with trailing newline to qtconsole\n\nCloses gh-7485\n\nThis affected setting the next input to any string ending in a newline", "commit_timestamp": "2015-01-16T18:54:00Z", "files": ["IPython/qt/console/console_widget.py"]}], "labels": ["qtconsole", "bug"], "created_at": "2015-01-16T10:39:21Z", "closed_at": "2015-01-17T01:21:24Z", "method": ["label"]}
{"issue_number": 7317, "title": "atomic write umask", "body": "Reported on gitter.im/ipython/ipython by @bigzachattack \n\nSadly no one was on the chat at that time, too busy with a big bearded men \ndressed in red trying to smuggle things in our houses through the cheminee. \n\n```\nI noticed today working in master, that any new notebook I create or copy has permissions\n0o600 and ignores my umask. In IPython.utils.io.atomic_writing() uses mkstemp() to create\na temporary file for the atomic write. According to the python docs, mkstemp creates\nfiles as 0o600.\n\nAfter the write succeeds to the tmp file, _copy_metadata is called to copy the metadata\nfrom the original file to destination file. It will throw an exception if there is no\nsource file. Thus when the notebook is copied into the notebook dir, it has\npermissions 0o600.\n\nIs this desired behavior, temporary, or a bug? I work in an environment where are default\npermissions are 0o660 to allow for users to easily share information, so defaulting new\nnotebooks to 0o600 seriously inhibits this ability.\n```\n", "commits": [{"node_id": "MDY6Q29tbWl0MzQ0MjM4NTc6NzJkMmUzODVlMzIzNTQxZjYyYTI5MGE3MTE5OWFhM2M0Yzk5N2ExZg==", "commit_message": "Use name ignored by dropbox for atomic saving temp files\n\nSee discussion on ipython/ipython#8322\n\nBy using a '.~' prefix for the temporary files, Dropbox should ignore\nthem, which makes atomic saving a bit less inconvenient.\n\nHowever, to do this, we need to switch back from using temporary\ndirectories (implemented in ipython/ipython#7469). This uses the other\napproach described in ipython/ipython#7317 instead.", "commit_timestamp": "2015-04-23T00:26:18Z", "files": ["jupyter_notebook/services/contents/fileio.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjdiMTY0NDc0ODNhYTYyNmFhNzIwZjI3NTc1YWQxMzY4MmZlNjBkNTA=", "commit_message": "Merge pull request #7469 from minrk/atomic-umask\n\npreserve umask in atomic_writing", "commit_timestamp": "2015-01-15T08:20:10Z", "files": ["IPython/utils/io.py", "IPython/utils/tests/test_io.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjdiMTY0NDc0ODNhYTYyNmFhNzIwZjI3NTc1YWQxMzY4MmZlNjBkNTA=", "commit_message": "Merge pull request #7469 from minrk/atomic-umask\n\npreserve umask in atomic_writing", "commit_timestamp": "2015-01-15T08:20:10Z", "files": ["IPython/utils/io.py", "IPython/utils/tests/test_io.py"]}, {"node_id": "MDY6Q29tbWl0MzQ0MjM4NTc6NzJkMmUzODVlMzIzNTQxZjYyYTI5MGE3MTE5OWFhM2M0Yzk5N2ExZg==", "commit_message": "Use name ignored by dropbox for atomic saving temp files\n\nSee discussion on ipython/ipython#8322\n\nBy using a '.~' prefix for the temporary files, Dropbox should ignore\nthem, which makes atomic saving a bit less inconvenient.\n\nHowever, to do this, we need to switch back from using temporary\ndirectories (implemented in ipython/ipython#7469). This uses the other\napproach described in ipython/ipython#7317 instead.", "commit_timestamp": "2015-04-23T00:26:18Z", "files": ["jupyter_notebook/services/contents/fileio.py"]}], "labels": ["bug", "notebook"], "created_at": "2014-12-26T16:37:04Z", "closed_at": "2015-01-15T08:20:10Z", "linked_pr_number": [7317], "method": ["label", "regex"]}
{"issue_number": 7237, "title": "Kernel switching problems (implementation and design)", "body": "When I open a Python 2 kernel and then switch to Python 3 kernel, I see the following in the terminal console:\n\n```\n[E 16:39:08.471 NotebookApp] Uncaught exception HEAD /kernelspecs/python3/kernel.css (::1)\n    HTTPServerRequest(protocol='http', host='localhost:8888', method='HEAD', uri='/kernelspecs/python3/kernel.css', version='HTTP/1.1', remote_ip='::1', headers={'Content-Length': '0', 'Accept-Language': 'en-US,en;q=0.8,gl;q=0.6,sq;q=0.4', 'Accept-Encoding': 'gzip, deflate, sdch', 'Host': 'localhost:8888', 'Accept': '*/*', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/39.0.2171.95 Safari/537.36', 'Connection': 'keep-alive', 'X-Requested-With': 'XMLHttpRequest', 'Referer': 'http://localhost:8888/notebooks/Untitled.ipynb?kernel_name=python2'})\n    Traceback (most recent call last):\n      File \"/Users/bgranger/anaconda/lib/python2.7/site-packages/tornado/web.py\", line 1338, in _execute\n        self.finish()\n      File \"/Users/bgranger/anaconda/lib/python2.7/site-packages/tornado/web.py\", line 877, in finish\n        self.set_etag_header()\n      File \"/Users/bgranger/anaconda/lib/python2.7/site-packages/tornado/web.py\", line 1257, in set_etag_header\n        etag = self.compute_etag()\n      File \"/Users/bgranger/anaconda/lib/python2.7/site-packages/tornado/web.py\", line 2185, in compute_etag\n        version_hash = self._get_cached_version(self.absolute_path)\n    AttributeError: 'KernelSpecResourceHandler' object has no attribute 'absolute_path'\n[E 16:39:08.480 NotebookApp] {\n      \"Content-Length\": \"0\", \n      \"Accept-Language\": \"en-US,en;q=0.8,gl;q=0.6,sq;q=0.4\", \n      \"Accept-Encoding\": \"gzip, deflate, sdch\", \n      \"Connection\": \"keep-alive\", \n      \"Accept\": \"*/*\", \n      \"User-Agent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/39.0.2171.95 Safari/537.36\", \n      \"Host\": \"localhost:8888\", \n      \"X-Requested-With\": \"XMLHttpRequest\", \n      \"Referer\": \"http://localhost:8888/notebooks/Untitled.ipynb?kernel_name=python2\"\n    }\n[E 16:39:08.480 NotebookApp] 500 HEAD /kernelspecs/python3/kernel.css (::1) 10.72ms referer=http://localhost:8888/notebooks/Untitled.ipynb?kernel_name=python2\n[I 16:39:08.893 NotebookApp] Kernel shutdown: bd0457da-716d-4fe5-8f13-42614f444fe5\n[W 16:39:08.899 NotebookApp] 404 GET /kernelspecs/python3/logo-64x64.png (::1) 3.82ms referer=http://localhost:8888/notebooks/Untitled.ipynb?kernel_name=python2\n[W 16:39:08.902 NotebookApp] 404 GET /kernelspecs/python3/kernel.js (::1) 2.22ms referer=http://localhost:8888/notebooks/Untitled.ipynb?kernel_name=python2\n[I 16:39:08.914 NotebookApp] Kernel started: 6875241d-5bbe-4291-8c8e-467867545143\n```\n\nBut there are a number of other related issues:\n- Switching kernels can easily get the notebook into a dead kernel state permanently.\n- When switching kernels, the kernel indicator temporarily shows a bomb and the \"kernel dead\" error. Switching kernels should be considered a \"normal\" operation whose execution doesn't suggest an error to the user.\n", "commits": [{"node_id": "MDY6Q29tbWl0MTIzNjAwMzpmMGJjYzUyYTczZDRlZmNjNDk4ZTljNmQxODA1NTIxODhhZjIzNTlk", "commit_message": "Fix HEAD requests for kernelspec resources\n\nCloses gh-7237\nCloses gh-7258\n\nStaticFileHandler.get() is a coroutine. When Tornado calls a handler\nmethod, it uses the return value to determine whether or not it's a\ncoroutine. So when head() calls get(), it needs to pass the return value\non for Tornado to handle it properly.", "commit_timestamp": "2014-12-17T18:40:55Z", "files": ["IPython/html/kernelspecs/handlers.py"]}], "labels": ["bug", "notebook"], "created_at": "2014-12-16T00:42:07Z", "closed_at": "2014-12-17T19:06:44Z", "method": ["label"]}
{"issue_number": 7127, "title": "need misc updates for dev testing documentation", "body": "This issue refers to the documentation here: https://github.com/ipython/ipython/wiki/Dev%3A-Testing\n\nHopefully I'm looking at the right stuff.  One example mentioned is \n\n```\n$ iptest -v IPython.utils\n..........................SS..SSS............................S.S...\n.........................................................\n----------------------------------------------------------------------\n Ran 125 tests in 0.119s\n```\n\nThis doesn't work for me, because it should be `iptest IPythin.utils -- -v`.  I see\n\n```\n> iptest -v IPython.utils\nusage: iptest [-h] [--all] [--slimerjs] [--url URL] [-j [FAST]] [--xunit] [--coverage [COVERAGE]]\n              [--subproc-streams SUBPROC_STREAMS]\n              [testgroups [testgroups ...]]\niptest: error: unrecognized arguments: -v\n```\n\nAnother broken example is `python tools/test_pr.py -p 1234`, which broke for me because I didn't have the keyring module installed.  Requirements are mentioned in the documentation nearby, but shouldn't this be installed as part of \"ipython[all]\" requirements?  Once I installed keyring, the example still didn't work.  Does this run on the official travis, and is only intended for core committers with extra privs, or can I expect to do this on my local env?  I see:\n\n```\n > python ipython/tools/test_pr.py -p 7125\nno cache\nPlease enter your github username and password. These are not stored, only used to get an oAuth token. You can revoke this at any time on Github.\nUsername: mattvonrocketstein\nPassword: \nTraceback (most recent call last):\n  File \"ipython/tools/test_pr.py\", line 289, in <module>\n    test_pr(args.number, post_results=args.publish, extra_args=extra_args)\n  File \"ipython/tools/test_pr.py\", line 259, in test_pr\n    gh_api.get_auth_token()\n  File \"/home/vagrant/code/ipython/tools/gh_api.py\", line 67, in get_auth_token\n    response.raise_for_status()\n  File \"/home/vagrant/code/ipython/ipy_venv/local/lib/python2.7/site-packages/requests/models.py\", line 825, in raise_for_status\n    raise HTTPError(http_error_msg, response=self)\nrequests.exceptions.HTTPError: 422 Client Error: Unprocessable Entity\n```\n\nFinally and probably most importantly, I think a section on testing extensions is missing.  Extension writers can unittest their own stuff however they wish, but obviously the more integration-style tests used in ipython core could be a very useful for complex extensions.  Are there any existing thoughts about best practice here or better yet examples of third-party code doing this?  Is iptest pretty agnostic about whether it's invoked on IPython.\\* or MyExtension.*? etc\n\nThanks\n", "commits": [{"node_id": "MDY6Q29tbWl0NzUzNzY4Ojc1ZjJlNzBlODJiOGI1MzU1ZTQ1ZTZiY2E2YjhjYzJkNzAxNmM3YTc=", "commit_message": "remove test_pr.py\n\nThis was the last item to address in resolving #7127, where it was\ndeemed that there isn't much value in keeping this around.", "commit_timestamp": "2016-11-02T20:00:11Z", "files": ["tools/post_pr_test.py", "tools/test_pr.py"]}], "labels": [], "created_at": "2014-12-07T20:09:03Z", "closed_at": "2016-11-02T20:06:21Z", "method": ["regex"]}
{"issue_number": 7044, "title": "IPython testsuite is insecure", "body": "(this is about IPython 2.3.0, I am currently unable to check the IPython development version)\n\nWhen a user X runs the IPython testsuite on a shared system, then any user on that system can easily execute arbitrary code as user X.\n\nThe reason is that some tests from `IPython.utils.tests.test_process` involve creating a file `/tmp/tmpxxx.py` containing a `from __future__ import` statement. Python adds the script directory (`/tmp` in this case) to `sys.path` and tries to load `/tmp/__future__.py`. Any user can create a file `/tmp/__future__.py` which will then be executed by the IPython testsuite.\n\nUpstream issue: http://bugs.python.org/issue16202\nFixed downstream in Sage: http://trac.sagemath.org/ticket/13579\n", "commits": [{"node_id": "MDY6Q29tbWl0MjcwMTU3MDY6ZGJiZmNlNTM4YjBjZDE1NjRjODZmNThhZGE5YWExNjgyOTIzNzg1Zg==", "commit_message": "gh-7044: set TMPDIR to workingdir in tests", "commit_timestamp": "2014-12-05T14:20:51Z", "files": ["IPython/testing/iptestcontroller.py", "IPython/utils/tests/test_path.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjA5OTU4ZjRlZTljYmQ3MzJhOGFkODNjMTc1MGZmNzU5N2U4YjI0ZTE=", "commit_message": "Merge pull request #7113 from jdemeyer/test_tmpdir\n\ngh-7044: set TMPDIR to workingdir in tests", "commit_timestamp": "2014-12-08T08:15:21Z", "files": ["IPython/testing/iptestcontroller.py", "IPython/utils/tests/test_path.py"]}], "labels": ["security"], "created_at": "2014-11-27T14:52:42Z", "closed_at": "2014-12-08T08:15:21Z", "method": ["regex"]}
{"issue_number": 7037, "title": "Tab completion does not work after instantiating IPython.core.interactiveshell.InteractiveShell", "body": "This issue can be consistently reproduced on any IPython 2.x version I tried (OS X and Linux), starting from 2.0.0.\nIt **cannot** be reproduced on any IPython 1.x version I tried (up to 1.2.1).\n\nI had some code that worked just fine with IPython 1.x. The application is heavily customizing IPython.\n\nAfter upgrading to 2.x I lost the ability to tab-complete commands. I can still tab-complete built-ins, file names, and package names, but once a module is imported I cannot tab-complete its members.\n\nFor instance, after starting IPython, I can\n\n```\nIn [1]: import sy[TAB]\nsymbol         sympyprinting  symtable       sys            sysconfig      syslog\nIn [1]: import sys\nIn [2]: sys.m[TAB]\nsys.maxint      sys.maxsize     sys.maxunicode  sys.meta_path   sys.modules\n```\n\nHowever, when the application gets an instance of the InteractiveShell singleton, like this:\n\n```\nIn [2]: import IPython.core.interactiveshell\nshell = IPython.core.interactiveshell.InteractiveShell()\n```\n\nI lose most of the tab completion feature, e.g.:\n\n```\nIn [4]: import sy[TAB]\nsymbol         sympyprinting  symtable       sys            sysconfig      syslog\nIn [4]: sys.m[TAB]\n```\n\nI can still get the tab completion for the module, but the second line\ndoes not return any suggestions anymore.\n\nThe workaround is to call instance() instead, like this:\n\n```\nIn [2]: shell = IPython.core.interactiveshell.InteractiveShell.instance()\n```\n\nThis way, it looks like I can tab-complete as usual.\n\nSo, the issue seems to be that the InteractiveShell direct instantiation breaks the singleton instance if the class has already been instantiated. This is somewhat confusing as InteractiveShell is supposed to be a singleton and I believe that any subsequent calls to `__init__` should not have any side effects, but just return the same instance (or at least issue a warning if not an exception).\n\nCalling .instance() on the class instead that instantiating it also works around issue #6921, which seems to be related to this issue, but for `IPython.terminal.embed.InteractiveShellEmbed`.\n\nTo add more info for a possible fix, another workaround is to call init_completer() after the instantiation, but only if instance() is called, i.e.:\n\n```\nIn [1]: import IPython.core.interactiveshell\nIn [2]: IPython.core.interactiveshell.InteractiveShell().instance().init_completer()\n```\n\nResults in tab completion to keep working.\n\nOn the other hand:\n\n```\nIn [2]: IPython.core.interactiveshell.InteractiveShell().init_completer()\n```\n\nWill result in the tab completion feature to be broken anyway.\n", "commits": [{"node_id": "MDY6Q29tbWl0NzQ3ODIzOjljMmRkZmQyMGNkNDYyZGU0ZDY4ZGRhYzc1OTYzZDI4ZjdmYzEwODg=", "commit_message": "FIX: ipython fix_tab, see https://github.com/ipython/ipython/issues/7037", "commit_timestamp": "2015-11-12T22:28:15Z", "files": ["ipython/.ipython/profile_default/ipython_config.py"]}], "labels": ["core"], "created_at": "2014-11-25T17:39:21Z", "closed_at": "2015-01-12T00:37:01Z", "method": ["regex"]}
{"issue_number": 6984, "title": "Autoreload module doesn't work with .net assemblies / clr module", "body": "With autoreload turned on in ipython and a .net assembly loaded the error below occurs as for the .net module imported the `__file__` attribute exists but is `None`.\n\nTraceback (most recent call last):\n\n  File \"<ipython-input-3-ed96c4b1736b>\", line 1, in <module>\n    get_ipython().magic(u'load_ext autoreload')\n\n  File \"C:\\WinPython-64bit-2.7.6.4\\python-2.7.6.amd64\\lib\\site-packages\\IPython\\core\\interactiveshell.py\", line 2205, in magic\n    return self.run_line_magic(magic_name, magic_arg_s)\n\n  File \"C:\\WinPython-64bit-2.7.6.4\\python-2.7.6.amd64\\lib\\site-packages\\IPython\\core\\interactiveshell.py\", line 2126, in run_line_magic\n    result = fn(_args,_*kwargs)\n\n  File \"<string>\", line 2, in load_ext\n\n  File \"C:\\WinPython-64bit-2.7.6.4\\python-2.7.6.amd64\\lib\\site-packages\\IPython\\core\\magic.py\", line 193, in <lambda>\n    call = lambda f, _a, *_k: f(_a, *_k)\n\n  File \"C:\\WinPython-64bit-2.7.6.4\\python-2.7.6.amd64\\lib\\site-packages\\IPython\\core\\magics\\extension.py\", line 63, in load_ext\n    res = self.shell.extension_manager.load_extension(module_str)\n\n  File \"C:\\WinPython-64bit-2.7.6.4\\python-2.7.6.amd64\\lib\\site-packages\\IPython\\core\\extensions.py\", line 100, in load_extension\n    if self._call_load_ipython_extension(mod):\n\n  File \"C:\\WinPython-64bit-2.7.6.4\\python-2.7.6.amd64\\lib\\site-packages\\IPython\\core\\extensions.py\", line 147, in _call_load_ipython_extension\n    mod.load_ipython_extension(self.shell)\n\n  File \"C:\\WinPython-64bit-2.7.6.4\\python-2.7.6.amd64\\lib\\site-packages\\IPython\\extensions\\autoreload.py\", line 533, in load_ipython_extension\n    auto_reload = AutoreloadMagics(ip)\n\n  File \"C:\\WinPython-64bit-2.7.6.4\\python-2.7.6.amd64\\lib\\site-packages\\IPython\\extensions\\autoreload.py\", line 419, in **init**\n    self._reloader = ModuleReloader()\n\n  File \"C:\\WinPython-64bit-2.7.6.4\\python-2.7.6.amd64\\lib\\site-packages\\IPython\\extensions\\autoreload.py\", line 149, in **init**\n    self.check(check_all=True, do_reload=False)\n\n  File \"C:\\WinPython-64bit-2.7.6.4\\python-2.7.6.amd64\\lib\\site-packages\\IPython\\extensions\\autoreload.py\", line 228, in check\n    py_filename, pymtime = self.filename_and_mtime(m)\n\n  File \"C:\\WinPython-64bit-2.7.6.4\\python-2.7.6.amd64\\lib\\site-packages\\IPython\\extensions\\autoreload.py\", line 194, in filename_and_mtime\n    path, ext = os.path.splitext(filename)\n\n  File \"C:\\WinPython-64bit-2.7.6.4\\python-2.7.6.amd64\\lib\\ntpath.py\", line 190, in splitext\n    return genericpath._splitext(p, sep, altsep, extsep)\n\n  File \"C:\\WinPython-64bit-2.7.6.4\\python-2.7.6.amd64\\lib\\genericpath.py\", line 91, in _splitext\n    sepIndex = p.rfind(sep)\n\nAttributeError: 'NoneType' object has no attribute 'rfind'\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU4NTE4OjQ5N2UxMDEyZjUyYTYzOTYwZThhZmZjMzllZmI3ZjRlMjQ3MzQ0YTI=", "commit_message": "Merge pull request #6985 from ajholyoake/master\n\nCatch if module file is not set (issue #6984)", "commit_timestamp": "2014-11-19T18:50:59Z", "files": ["IPython/extensions/autoreload.py"]}], "labels": [], "created_at": "2014-11-19T14:52:20Z", "closed_at": "2014-11-19T21:54:02Z", "method": ["regex"]}
{"issue_number": 6912, "title": "IPython not setting exit status if script errors", "body": "I'm using the subprocess module (Popen) to run a script using IPython, and it doesn't appear to be setting the system status correctly for the process.\n\n``` python\n    #(script run_test.py)\n    import subprocess as proc\n    command = \"ipython test.py\"\n\n    p = proc.Popen( command, shell=True, cwd=None, stdout=proc.PIPE,\n                stderr=proc.STDOUT )\n    ( stdOut, stdErr ) = p.communicate()\n\n    print p.returncode\n    if p.returncode:\n        raise Exception( stdOut )\n```\n\nIn this example, \"test.py\" is just a simple script that raises (just raise Exception()). When I run this script from the command line (Redhat Enterprise 5.11) I get:\n\n```\n> python run_test.py\n0\n```\n\nNow, if I change my command in \"run_test.py\" to use python (instead of IPython), I get:\n\n```\n(using command = \"python test.py\")\n> python run_test.py\n1 \nTraceback (most recent call last):\n  File \"run_test.py\", line 12, in <module>\n    raise Exception( stdOut )\nException: Traceback (most recent call last):\n  File \"test.py\", line 2, in <module>\n    raise Exception()\nException\n```\n\nAny tips on how to get ipython to set the system error code correctly?\n", "commits": [{"node_id": "MDY6Q29tbWl0NDM3NjMyNDQ6ZWU0ZjEwN2M3MWY2NWY2NjRiNTkzYTA2NmJiNjBkMTc4MDZhZTM1Zg==", "commit_message": "Fix #6912 \"IPython not setting exit status if script errors\".\nOnly handle the issue related to .py scripts.\n\n1. interactiveshell: The method safe_execfile is not totally safe now. Errors of user scripts  are raised to a higher level, where we can decide what to do.\n\n2. execution: The %run magic catches exceptions from safe_execfile.\n\n3. shellapp: The _run_cmd_line_code method catches exceptions from safe_execfile and sets the right exit status.", "commit_timestamp": "2015-10-13T00:42:25Z", "files": ["IPython/core/interactiveshell.py", "IPython/core/magics/execution.py", "IPython/core/shellapp.py"]}, {"node_id": "MDY6Q29tbWl0NDM3NjMyNDQ6N2UzNjk3ODcwZTZiZDk4MDcyZDBhYmMyOTIzNzU1ZTU1YTc2OTRlYQ==", "commit_message": "Fix #6912 \"IPython not setting exit status if script errors\".\nOnly handle the issue related to .py scripts.\n\n1. interactiveshell: The method safe_execfile is not totally safe now. Errors of user scripts  are raised to a higher level, where we can decide what to do.\n\n2. execution: The %run magic catches exceptions from safe_execfile.\n\n3. shellapp: The _run_cmd_line_code method catches exceptions from safe_execfile and sets the right exit status.", "commit_timestamp": "2015-10-13T23:10:03Z", "files": ["IPython/core/interactiveshell.py", "IPython/core/magics/execution.py", "IPython/core/shellapp.py"]}], "labels": ["bug", "good first issue"], "created_at": "2014-11-12T22:53:05Z", "closed_at": "2015-10-26T14:32:19Z", "method": ["label"]}
{"issue_number": 6893, "title": "Wrapper Kernel -> `do_shutdown` is not called when the Console is shut down.", "body": "If I start a wrapper kernel as such: `ipython qtconsole --kernel=my_kernel`, and exit the app via the \"X\" button, `do_shutdown` is called as expected.\nIf I start it as `ipython console --kernel=my_kernel` and exit the app via `Ctrl+D`, `y`, it is not called.  \n\nThis can be seen by installing @takluyver's bash_kernel and typing a few commands, closing the kernel properly, and reopening.  When doing this with the `console`, the history is not preserved.  \n", "commits": [{"node_id": "MDY6Q29tbWl0MTIzNjAwMzo2NzkyYWE1Y2Y4ZjhjNGJkNWE1MjhlNjcyNGVkYTBiZmQ2YjBmN2Yx", "commit_message": "Shut down kernel correctly when closing tab in Qt console\n\nCloses gh-6893", "commit_timestamp": "2014-11-12T00:15:06Z", "files": ["IPython/qt/console/mainwindow.py"]}], "labels": ["bug"], "created_at": "2014-11-10T14:52:20Z", "closed_at": "2014-11-12T19:35:06Z", "method": ["label"]}
{"issue_number": 6877, "title": "Qt console doesn't work with pygments 2.0rc1", "body": "We have received two reports about this in Spyder already :-) This is the one I'll maintain open until it's fixed here:\n\nhttps://code.google.com/p/spyderlib/issues/detail?id=2042\n\nI'll see if I can solve this one given that you're busy with 3.0\n", "commits": [{"node_id": "MDY6Q29tbWl0MTIzNjAwMzphMjA2ZWMxNWEwZjZkYmVhMTBiZjc4ZmJjNTBlMGJmNjRlM2ZiMjhm", "commit_message": "Update pygments monkeypatch for compatibility with Pygments 2.0\n\nCloses gh-6877", "commit_timestamp": "2014-11-07T02:06:24Z", "files": ["IPython/qt/console/pygments_highlighter.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4Ojc5NTE2Y2U3MWU3ZWI4OWI0ZTJjNDgxMTM0NGMwOTk0N2VmNjE1ZWM=", "commit_message": "Backport PR #6878: Update pygments monkeypatch for compatibility with Pygments 2.0\n\nCloses gh-6877\n\nI spent a while looking for a better way to achive this, to get rid of the monkeypatch, but none occurred to me, so I went with Carlos' suggestion of just updating it.", "commit_timestamp": "2015-02-09T21:55:40Z", "files": ["IPython/qt/console/pygments_highlighter.py"]}], "labels": [], "created_at": "2014-11-07T00:42:56Z", "closed_at": "2014-11-11T18:52:16Z", "method": ["regex"]}
{"issue_number": 6864, "title": "Exceptions thrown in cell with multiline strings", "body": "It seems that when an exception is raised from a cell with a multiline string, we get a code-red error.\n\nTry:\n\n```\nraise Exception(r'''foo\n''')\n```\n\nIt will report:\n\n```\nERROR: An unexpected error occurred while tokenizing input\nThe following traceback may be corrupted or invalid\nThe error message is: ('EOF in multi-line string', (1, 0))\n\n---------------------------------------------------------------------------\nException                                 Traceback (most recent call last)\n<ipython-input-15-8d28bd905cfc> in <module>()\n      1 raise Exception(r'''foo\n----> 2 ''')\n\nException: foo\n```\n\nThe first three lines are worrying for the casual user.\n", "commits": [{"node_id": "MDY6Q29tbWl0NTg1MDA3NTY6MDIwYzYyNDMzZDFlYzJmNzg4ZGRhMDUxMjJkZmMxMjczNGEzNDhmYw==", "commit_message": "Silence tokenization errors in ultratb.\n\nCurrently, the ultratb module attempts to tokenize the code it finds in\ntracebacks, and issues a scary-sounding warnings about potentially invalid\ntracebacks if it fails. However, this tokenization is known to fail in some\ncases, notably if the reported error line is the terminating line of a\nmultiline, triple-quoted string literal.\n\nThis change fixes the issue by switching this to a `logging.debug` message,\nwhich silences it by default without completely removing it for debugging\npurposes.\n\nFixes #6864.", "commit_timestamp": "2017-09-28T04:21:28Z", "files": ["IPython/core/tests/test_ultratb.py", "IPython/core/ultratb.py"]}, {"node_id": "MDY6Q29tbWl0NTg1MDA3NTY6NGE1ODE3MGVmNTFhMTgyYjRkNDFlNDgwNDZlZmY4NmM0YzY3MTM4MA==", "commit_message": "Silence tokenization errors in ultratb.\n\nCurrently, the ultratb module attempts to tokenize the code it finds in\ntracebacks, and issues a scary-sounding warnings about potentially invalid\ntracebacks if it fails. However, this tokenization is known to fail in some\ncases, notably if the reported error line is the terminating line of a\nmultiline, triple-quoted string literal.\n\nThis change fixes the issue by switching this to a `logging.debug` message,\nwhich silences it by default without completely removing it for debugging\npurposes.\n\nFixes #6864.", "commit_timestamp": "2017-09-28T04:33:26Z", "files": ["IPython/core/tests/test_ultratb.py", "IPython/core/ultratb.py"]}, {"node_id": "MDY6Q29tbWl0NTg1MDA3NTY6NjU1YjNlOWI5M2Q3ZTY2NDRjY2ZmZmFmY2RjMTExMWFmNmQxZGU5YQ==", "commit_message": "Silence tokenization errors in ultratb.\n\nCurrently, the ultratb module attempts to tokenize the code it finds in\ntracebacks, and issues a scary-sounding warnings about potentially invalid\ntracebacks if it fails. However, this tokenization is known to fail in some\ncases, notably if the reported error line is the terminating line of a\nmultiline, triple-quoted string literal.\n\nThis change fixes the issue by switching this to a `logging.debug` message,\nwhich silences it by default without completely removing it for debugging\npurposes.\n\nFixes #6864.", "commit_timestamp": "2017-09-28T04:48:23Z", "files": ["IPython/core/tests/test_ultratb.py", "IPython/core/ultratb.py"]}, {"node_id": "MDY6Q29tbWl0NTg1MDA3NTY6NTFlNGFlOWJmZDUyMDI0ZDQyM2U4ZWY3ZGI5Mzk1NGI0NThjZTRiZQ==", "commit_message": "Silence tokenization errors in ultratb.\n\nCurrently, the ultratb module attempts to tokenize the code it finds in\ntracebacks, and issues a scary-sounding warnings about potentially invalid\ntracebacks if it fails. However, this tokenization is known to fail in some\ncases, notably if the reported error line is the terminating line of a\nmultiline, triple-quoted string literal.\n\nThis change fixes the issue by switching this to a `logging.debug` message,\nwhich silences it by default without completely removing it for debugging\npurposes.\n\nFixes #6864.", "commit_timestamp": "2017-09-28T04:56:34Z", "files": ["IPython/core/tests/test_ultratb.py", "IPython/core/ultratb.py"]}, {"node_id": "MDY6Q29tbWl0NTg1MDA3NTY6MjZmOGYwYmY2YzQyMTFhOWY5OWE2NTE0ZGNkMWY3YmQ3YTA4ZDY4Yw==", "commit_message": "Silence tokenization errors in ultratb.\n\nCurrently, the ultratb module attempts to tokenize the code it finds in\ntracebacks, and issues a scary-sounding warnings about potentially invalid\ntracebacks if it fails. However, this tokenization is known to fail in some\ncases, notably if the reported error line is the terminating line of a\nmultiline, triple-quoted string literal.\n\nThis change fixes the issue by switching this to a `logging.debug` message,\nwhich silences it by default without completely removing it for debugging\npurposes.\n\nFixes #6864.", "commit_timestamp": "2017-09-28T06:08:50Z", "files": ["IPython/core/tests/test_ultratb.py", "IPython/core/ultratb.py", "IPython/testing/iptest.py"]}, {"node_id": "MDY6Q29tbWl0NTg1MDA3NTY6MTc1ZTgwMmUwOTAyMTZjZjgzNjRlMThlMTk4ODM2ZWVmMmZmNzI5Mw==", "commit_message": "Silence tokenization errors in ultratb.\n\nCurrently, the ultratb module attempts to tokenize the code it finds in\ntracebacks, and issues a scary-sounding warnings about potentially invalid\ntracebacks if it fails. However, this tokenization is known to fail in some\ncases, notably if the reported error line is the terminating line of a\nmultiline, triple-quoted string literal.\n\nThis change fixes the issue by switching this to a `logging.debug` message,\nwhich silences it by default without completely removing it for debugging\npurposes.\n\nFixes #6864.", "commit_timestamp": "2017-09-28T18:56:31Z", "files": ["IPython/core/tests/test_run.py", "IPython/core/tests/test_ultratb.py", "IPython/core/ultratb.py", "IPython/testing/iptest.py"]}, {"node_id": "MDY6Q29tbWl0NTg1MDA3NTY6MGZkY2I0M2E5YjRmYTQyODJjZDZhZThiYjQxODZiNmQ4MGQ1YTAxYg==", "commit_message": "Silence tokenization errors in ultratb.\n\nCurrently, the ultratb module attempts to tokenize the code it finds in\ntracebacks, and issues a scary-sounding warnings about potentially invalid\ntracebacks if it fails. However, this tokenization is known to fail in some\ncases, notably if the reported error line is the terminating line of a\nmultiline, triple-quoted string literal.\n\nThis change fixes the issue by switching this to a `logging.debug` message,\nwhich silences it by default without completely removing it for debugging\npurposes.\n\nFixes #6864.", "commit_timestamp": "2017-09-29T15:47:09Z", "files": ["IPython/core/tests/test_ultratb.py", "IPython/core/ultratb.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjdlMjhhOTQ3ZGRlM2U4NjRiMmQ4NGQ1ZDRhNzU5YTQyYTI5MTYzYWY=", "commit_message": "Merge pull request #10841 from craigcitro/noisy\n\nSilence tokenization errors in ultratb.", "commit_timestamp": "2017-09-29T19:55:10Z", "files": ["IPython/core/tests/test_ultratb.py", "IPython/core/ultratb.py"]}], "labels": ["bug", "core"], "created_at": "2014-11-05T20:56:51Z", "closed_at": "2017-09-29T19:55:11Z", "linked_pr_number": [6864], "method": ["label"]}
{"issue_number": 6821, "title": "Terminado raise on exit, should fix `/new`", "body": "Hard to reproduce, but I got it at least once, on Ctrl+D on exit:\n\n```\n[E 14:04:40.085 NotebookApp] Exception in callback None\n    Traceback (most recent call last):\n      File \"/usr/local/lib/python3.4/site-packages/terminado/management.py\", line 159, in pty_read\n        s = ptywclients.ptyproc.read(65536)\n      File \"/usr/local/lib/python3.4/site-packages/ptyprocess/ptyprocess.py\", line 779, in read\n        b = super(PtyProcessUnicode, self).read(size)\n      File \"/usr/local/lib/python3.4/site-packages/ptyprocess/ptyprocess.py\", line 493, in read\n        raise EOFError('End Of File (EOF). Empty string style platform.')\n    EOFError: End Of File (EOF). Empty string style platform.\n\n    During handling of the above exception, another exception occurred:\n\n    Traceback (most recent call last):\n      File \"/usr/local/lib/python3.4/site-packages/tornado/ioloop.py\", line 837, in start\n        handler_func(fd_obj, events)\n      File \"/usr/local/lib/python3.4/site-packages/tornado/stack_context.py\", line 275, in null_wrapper\n        return fn(*args, **kwargs)\n      File \"/usr/local/lib/python3.4/site-packages/terminado/management.py\", line 163, in pty_read\n        self.on_eof(ptywclients)\n      File \"/usr/local/lib/python3.4/site-packages/terminado/management.py\", line 267, in on_eof\n        name = ptywclients.term_name\n    AttributeError: 'PtyWithClients' object has no attribute 'term_name'\n```\n\n@takluyver Do you prefer issue here or on terminado repository ? Will try to reproduce again.\n", "commits": [{"node_id": "MDY6Q29tbWl0MjQ2MTcyNTk6NWJmMDEwYzIxMjlkYjY4MjRjMDkwZTMzYzFmMWVmMTZlZjk2NmI3ZA==", "commit_message": "Decode terminal names before accessing them\n\nUnmasks a bug (ipython/ipython#6821) that was previously hidden on\nPython 3.", "commit_timestamp": "2014-10-31T17:25:03Z", "files": ["terminado/websocket.py"]}, {"node_id": "MDY6Q29tbWl0MjQ2MTcyNTk6MTliMmE2YjQ3NWViNGI0ZmJkYTM2OTlhNjdjMmUyOGJlOGUwNmI1Mg==", "commit_message": "Set terminal name when creating new named terminal\n\nFixes ipython/ipython#6821", "commit_timestamp": "2014-10-31T17:29:20Z", "files": ["terminado/management.py"]}], "labels": [], "created_at": "2014-10-31T13:08:39Z", "closed_at": "2014-10-31T17:29:47Z", "method": ["regex"]}
{"issue_number": 6804, "title": "Fix PyQt5 ctrl-c handling issue introduced by input hook refactoring (pull #5666)", "body": "PyQt5 frontiersman, here.  On OS X, Linux, and Windows with PyQt5, I have to revert out commit d8c13f503b8e40436c75345317b36cec52788c04. If I leave this commit in, issuing ctrl-c after doing `from PyQt5 import Qt; %gui qt` causes the interpreter to exit:\n\n_(control C pressed here)_\n\n```\nIn [4]: Traceback (most recent call last):\nFile \"/Users/ehvatum/Desktop/ipython_git/IPython/lib/inputhookqt4.py\", line 123, in inputhook_qt4\nevent_loop.exec_()\nKeyboardInterrupt\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\nFile \"_ctypes/callbacks.c\", line 277, in 'calling callback function'\nFile \"/Users/ehvatum/Desktop/ipython_git/IPython/lib/inputhookqt4.py\", line 130, in inputhook_qt4\nmgr.clear_inputhook()\nAttributeError: 'Qt4InputHook' object has no attribute 'clear_inputhook'\n\nIf you suspect this is an IPython bug, please report it at:\nhttps://github.com/ipython/ipython/issues\nor send an email to the mailing list at ipython-dev@scipy.org\n\nYou can print a more detailed traceback right now with \"%tb\", or use \"%debug\"\nto interactively debug it.\n\nExtra-detailed tracebacks for bug-reporting purposes can be enabled via:\n%config Application.verbose_crash=True\n\nTraceback (most recent call last):\nFile \"/usr/local/bin/ipython\", line 9, in\nload_entry_point('ipython==3.0.0-dev', 'console_scripts', 'ipython')()\nFile \"/Users/ehvatum/Desktop/ipython_git/IPython/init.py\", line 120, in start_ipython\nreturn launch_new_instance(argv=argv, **kwargs)\nFile \"/Users/ehvatum/Desktop/ipython_git/IPython/config/application.py\", line 549, in launch_instance\napp.start()\nFile \"/Users/ehvatum/Desktop/ipython_git/IPython/terminal/ipapp.py\", line 372, in start\nself.shell.mainloop()\nFile \"/Users/ehvatum/Desktop/ipython_git/IPython/terminal/interactiveshell.py\", line 383, in mainloop\nself.interact(display_banner=display_banner)\nFile \"/Users/ehvatum/Desktop/ipython_git/IPython/terminal/interactiveshell.py\", line 446, in interact\nself.hooks.pre_prompt_hook()\nFile \"/Users/ehvatum/Desktop/ipython_git/IPython/core/hooks.py\", line 137, in call\nreturn cmd(*args, **kw)\nFile \"/Users/ehvatum/Desktop/ipython_git/IPython/lib/inputhookqt4.py\", line 174, in preprompthook_qt4\nmgr.set_inputhook(inputhook_qt4)\nAttributeError: 'Qt4InputHook' object has no attribute 'set_inputhook'\n\nIf you suspect this is an IPython bug, please report it at:\nhttps://github.com/ipython/ipython/issues\nor send an email to the mailing list at ipython-dev@scipy.org\n\nYou can print a more detailed traceback right now with \"%tb\", or use \"%debug\"\nto interactively debug it.\n\nExtra-detailed tracebacks for bug-reporting purposes can be enabled via:\n%config Application.verbose_crash=True\n```\n\nThe above is from OS X, but the errors seen on Windows and Linux are the same (flowing from `AttributeError: 'Qt4InputHook' object has no attribute 'set_inputhook'`).\n", "commits": [{"node_id": "MDY6Q29tbWl0MTIzNjAwMzoyOWEwZGViNDUyZDRmYTdmNTllZGI3ZTA1OWMxYTQ2Y2ViNWExMjRk", "commit_message": "Fix Qt inputhook\n\nCloses gh-6804", "commit_timestamp": "2014-10-28T19:55:05Z", "files": ["IPython/lib/inputhook.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo3YjgzMDNhZTJmMDcyY2VkMThkOGJjNDI0NTBmYzMxOTRlMDliMWY4", "commit_message": "Fix Qt inputhook\n\nCloses gh-6804", "commit_timestamp": "2014-10-28T19:55:05Z", "files": ["IPython/lib/inputhook.py"]}], "labels": ["bug"], "created_at": "2014-10-28T18:17:33Z", "closed_at": "2014-10-28T20:38:25Z", "method": ["label", "regex"]}
{"issue_number": 6736, "title": "Sluggish response and unexplained hangs in QTConsole", "body": "Stepes to reproduce:\n1) plot a graphic, the plot appears and you get the prompt back immediately\n3) quickly enter 1+<Enter>\n4) there is a delay of 2-3 seconds in which everything stops, then you get the result.\n\nThis didn't happen in (much?) older versions. I use `ipython qtconsole  --pylab=inline` with git master 39ecc74. \n\ncontinues QTConsole regressions from #6726\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU5NDQ2OmM1YWI1YWYwMWIxYTQzNzFlNzEwZDgyMzg1OWUwMmFhZGY2NDE5Nzc=", "commit_message": "only sort small dicts and sets in lib.pretty\n\nThe sorting caused performance problems when displaying large collections (e.g. #6736),\neven though the result would be truncated.", "commit_timestamp": "2014-10-22T22:23:22Z", "files": ["IPython/lib/pretty.py"]}], "labels": [], "created_at": "2014-10-19T06:00:14Z", "closed_at": "2014-10-23T10:07:38Z", "method": ["regex"]}
{"issue_number": 6726, "title": "QTConsole broken functionality", "body": "I haven't updated in a while but moving to git master 2df21de, turned up 4 new issues, on top of the line editing problems I reported in #5662.\n- defining a function with a very long signature makes the tooltip extend outside the screen because the width of it is not limited. I can't take a screenshot because it disappears when I try to. Example:\n\n``` python\nIn [7]: def f(asdkfsdfksdf=1,asdkfsdfksdf2=1,asdkfsdfksdf3=1,asdkfsdfksdf4=1,asdkfsdfksdf5=1,asdkfsdfksdf6=1,asdkfsdfksdf7=1,asdkfsdfksdf8=1,asdkfsdfksdf9=1):\n   ...:     1\n```\n- with the signature example above, keyword completion does not work, I'm not sure what the exact trigger is.\n- often a tiny, empty, tooltip appears for no reason. one instance is when the object is not defined. Try \"1(\" for example.\n- completion used to work for filenames from the current directory, for example when entering \"open('./<TAB<)\" but this no longer works.\n- sometime, I'm sorry I can not reproduce this reliably, the empty tooltip becomes \"Stuck\" and does not go away/disappear when outside a function definition, or after executing a bit of code and moving to a next line, navigating through completion items becomes extremely sluggish, and strange delays occur when typing into the console in general. (Edit: #6736  #6777)\n\nHas QTConsole transitioned to End-Of-Life?\n", "commits": [{"node_id": "MDY6Q29tbWl0MTIzNjAwMzowNmVhMDU4ZTc3M2Q4ZWRlMWIzYzk5MjM2ZWMzOTIwMjllNjJhOWEw", "commit_message": "Don't try to lex Python code in the Qt console for completion\n\nThis addresses part of #6726 - completions on function keyword args and\nfilenames in strings now work again.", "commit_timestamp": "2014-10-17T18:27:07Z", "files": ["IPython/qt/console/frontend_widget.py"]}], "labels": ["qtconsole", "bug"], "created_at": "2014-10-17T15:58:07Z", "closed_at": "2014-10-23T11:39:59Z", "method": ["label", "regex"]}
{"issue_number": 6724, "title": "Markdown with Mathjax fails during HTML export", "body": "This Markdown block is failing for us. (extra `<em>` inserted due to `_`)\n\n```\nWater that is stored in $t$, $s_t$, must equal the storage content of the previous stage,\n$s_{t-1}$, plus a stochastic inflow, $I_t$, minus what is being released in $t$, $r_t$.\nWith $s_0$ defined as the initial storage content in $t=1$, we have\n```\n\nIs this an issue with #6028 or is the inline Mathjax wrong?\n\nI checked the Regex and they are OK. Maybe the problem is at another place? Any pointers?\n", "commits": [{"node_id": "MDY6Q29tbWl0MTIzNjAwMzoyNTI5NzdmYjAzMDgzOWI2NGZmNzFiNzBhOGI0NDMzMGFjMzJjZDJl", "commit_message": "Add failing test for issue #6724", "commit_timestamp": "2014-10-17T17:18:30Z", "files": ["IPython/nbconvert/filters/tests/test_markdown.py"]}, {"node_id": "MDY6Q29tbWl0MTIzNjAwMzoxMzI1YWMxNWZmYjhkY2ZhMjBiMjQ5YTZhNmYwZDFmNDVmODAzYjlj", "commit_message": "Fix markdown rendering with inline maths\n\nThe mistune 'text' regex was capturing into math expressions in some\ncases. The fix was to modify it to stop at a $ sign, giving the inline\nmath regex a chance to capture that.\n\nCloses gh-6724", "commit_timestamp": "2014-10-17T17:20:43Z", "files": ["IPython/nbconvert/filters/markdown.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo3NTlkOTc3NDQ1YjI1OTM2ZTAxY2RjMTZkMmY2OWE1NmExNWNkZDBi", "commit_message": "Add failing test for issue #6724", "commit_timestamp": "2014-10-17T17:18:30Z", "files": ["IPython/nbconvert/filters/tests/test_markdown.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzphYWYxMmM3NWZmZmRiNjJlYjg2NzlkMTFhODVhOTVmYmE5ZGQwZjQz", "commit_message": "Fix markdown rendering with inline maths\n\nThe mistune 'text' regex was capturing into math expressions in some\ncases. The fix was to modify it to stop at a $ sign, giving the inline\nmath regex a chance to capture that.\n\nCloses gh-6724", "commit_timestamp": "2014-10-17T17:20:43Z", "files": ["IPython/nbconvert/filters/markdown.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjZlNmEwNDc4MjFkYTJhMDdhODVkZGQxMDc5M2Y3ZjU1YjM2MmU0M2Y=", "commit_message": "Merge pull request #6727 from takluyver/i6724\n\nFix markdown to HTML conversion with inline maths", "commit_timestamp": "2014-10-18T08:33:49Z", "files": ["IPython/nbconvert/filters/markdown.py", "IPython/nbconvert/filters/tests/test_markdown.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjZlNmEwNDc4MjFkYTJhMDdhODVkZGQxMDc5M2Y3ZjU1YjM2MmU0M2Y=", "commit_message": "Merge pull request #6727 from takluyver/i6724\n\nFix markdown to HTML conversion with inline maths", "commit_timestamp": "2014-10-18T08:33:49Z", "files": ["IPython/nbconvert/filters/markdown.py", "IPython/nbconvert/filters/tests/test_markdown.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo2N2QzNWIxMTAwZjA2NDk3ZTQ1ZWRhY2FmY2YzOGI1MTVlNzg4Zjdm", "commit_message": "Merge pull request #6727 from takluyver/i6724\n\nFix markdown to HTML conversion with inline maths", "commit_timestamp": "2014-10-18T08:33:49Z", "files": ["IPython/nbconvert/filters/markdown.py", "IPython/nbconvert/filters/tests/test_markdown.py"]}], "labels": ["bug", "nbconvert"], "created_at": "2014-10-17T13:10:12Z", "closed_at": "2014-10-18T08:33:49Z", "linked_pr_number": [6724], "method": ["label", "regex"]}
{"issue_number": 6709, "title": "Notebook prints classes without regard to __repr__", "body": "Displaying a class that is an instance of a metaclass is done with no regard to the metaclass's **repr**. This is much unexpected and different from what the Python REPL would do.\n\nSee [example notebook](http://nbviewer.ipython.org/gist/remram44/11389cfe653eeceddc0f)\n", "commits": [{"node_id": "MDY6Q29tbWl0NTM0NjQ5NTo4ZmRiMDg2ZWJmODcxYjMxZDY2OTgxODA4MjI3NTliZGIyMjgxNmNj", "commit_message": "Adds (meta)class ModuleClass (wraps a descriptor)", "commit_timestamp": "2014-10-15T21:27:15Z", "files": ["vistrails/core/api.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjRiYzJlZDkxNThlODM1YzBjNDg3YWRkNGI0ODhlNWY3NDRkOWEwOTU=", "commit_message": "Merge pull request #6717 from remram44/use-metaclass-repr-master\n\nUse metaclass repr [master]", "commit_timestamp": "2014-10-20T18:35:44Z", "files": ["IPython/lib/pretty.py", "IPython/lib/tests/test_pretty.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjRiYzJlZDkxNThlODM1YzBjNDg3YWRkNGI0ODhlNWY3NDRkOWEwOTU=", "commit_message": "Merge pull request #6717 from remram44/use-metaclass-repr-master\n\nUse metaclass repr [master]", "commit_timestamp": "2014-10-20T18:35:44Z", "files": ["IPython/lib/pretty.py", "IPython/lib/tests/test_pretty.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo1MTg3MWUzZTdiYzJhNTg5ZjgyYzQ0ZmNmNzM3YTIwOGE2Nzk2OTQ0", "commit_message": "Merge pull request #6717 from remram44/use-metaclass-repr-master\n\nUse metaclass repr [master]", "commit_timestamp": "2014-10-20T18:35:44Z", "files": ["IPython/lib/pretty.py", "IPython/lib/tests/test_pretty.py"]}], "labels": ["bug"], "created_at": "2014-10-15T21:03:26Z", "closed_at": "2014-10-20T18:35:44Z", "linked_pr_number": [6709], "method": ["label"]}
{"issue_number": 6618, "title": "Nbconvert and Unicode highlighing", "body": "If I have unicode variable names in a Python 3 notebook, and use `nbconvert` to convert the notebook to HTML, I get error markers from syntax highlighting:\n![pylexer](https://cloud.githubusercontent.com/assets/2445216/4515160/35357c40-4bac-11e4-90ed-9455d79f7bf0.png)\nNow if I replace `IPythonLexer()` with `IPython3Lexer()` in `highlight.py`, `nbconvert` shows the expected behavior:\n![py3lexer](https://cloud.githubusercontent.com/assets/2445216/4515161/37dc8dda-4bac-11e4-99ad-57490e33dfb9.png)\n\nI suspect it would be possible to modify `basic.tpl` to send the codemirror mode name and version to `highlight.py` to select the correct lexer ?\n", "commits": [{"node_id": "MDY6Q29tbWl0NjAxMDU4MTo2NjBmOGRiMTQxOWNhYWFhNDg2OTIzYTI0ZDc5YjRmZjJjZTAwNmU4", "commit_message": "Nbconvert and unicode variable names\n\nSelect the highlighting lexer for pygments based on the notebook\nkernelspec metadata from codemirror.\nThis fixes https://github.com/ipython/ipython/issues/6618", "commit_timestamp": "2014-10-04T12:21:29Z", "files": ["IPython/nbconvert/filters/highlight.py"]}], "labels": ["bug", "nbconvert"], "created_at": "2014-10-04T10:15:26Z", "closed_at": "2015-01-16T02:10:44Z", "method": ["label"]}
{"issue_number": 6611, "title": "We should clear interactive namespace's __warningregistry__ between executing each cell", "body": "A very very common source of confusion when using python interactively is that warnings disappear. Specifically, they show up the first time they might appear, but then never again after that...:\n\n```\nIn [14]: np.zeros(10) / 0\n/usr/bin/ipython3:1: RuntimeWarning: invalid value encountered in true_divide\n  #!/usr/bin/env python3\nOut[14]: array([ nan,  nan,  nan,  nan,  nan,  nan,  nan,  nan,  nan,  nan])\n\nIn [15]: 0 / np.zeros(5)\nOut[15]: array([ nan,  nan,  nan,  nan,  nan])\n```\n\nThis is because by default, the `warnings` module attempts to only show each warning once per  \"source\"; the idea is that if you write something like\n\n```\nfor i in xrange(10000): \n    np.log(0)  # **\n```\n\nthen you really only need to hear about the problem on line `**` once, not 10,000 times.\n\nBut this interacts badly with interactive usage, because the `warnings` module has a bug: it thinks that the first line of one interactive cell is the same line as the first line of another interactive cell, so if `np.zeros(10) / 0` has raised a warning then it thinks `0 / np.zeros(5)` has as well. Because they are the same line. Oops.\n\nSpecifically, the way the `warnings` module keeps track of these things is with a really weird hack: whenever it issues a warning, it _reaches into the execution environment of the code issuing the warning_, and creates a global variable called `__warningregistry__`. For example:\n\n```\nIn [1]: __warningregistry__\n---------------------------------------------------------------------------\nNameError                                 Traceback (most recent call last)\n<ipython-input-1-41b71685b3a2> in <module>()\n----> 1 __warningregistry__\n\nNameError: name '__warningregistry__' is not defined\n\nIn [2]: np.zeros(10) / 0\n/home/njs/.user-python2.7-64bit-3/bin/ipython:1: RuntimeWarning: invalid value encountered in divide\n  #!/home/njs/.user-python2.7-64bit-3/bin/python\nOut[2]: array([ nan,  nan,  nan,  nan,  nan,  nan,  nan,  nan,  nan,  nan])\n\nIn [3]: __warningregistry__\nOut[3]: {('invalid value encountered in divide', RuntimeWarning, 1): True}\n```\n\nThis `__warningregistry__` value says that line 1 of the code in this namespace has already issued the given warning, so if you ever see another piece of code whose line number is 1, and which is executing in this namespace, try to issue this warning, then that warning should not be displayed.\n\nHowever, in the interactive case, we know that every time we execute a new cell, the line numbers are effectively reset -- line 1 of this cell is totally different from line 1 of the previous cell. Ipython should take care of informing the `warnings` module of this fact.\n\nThis can be done very simply: just delete the `__warningregistry__` variable from the interactive namespace after each time a cell finishes executing. This will cause the `warnings` module to treat each new block of code as a new block of code.\n", "commits": [{"node_id": "MDY6Q29tbWl0MjUwNjE0MjM6ZTA5NjczZjVjNjFmNjM5YmI5NGRjNTQ1ZTljZGU2OTJhMTljMzRjYg==", "commit_message": "Reset the interactive namespace __warningregistry__ before executing code\n\nFixes #6611.\n\nIdea:\n\nRight now, people often don't see important warnings when running\ncode in IPython, because (to a first approximation) any given warning\nwill only issue once per session. Blink and you'll miss it! This is a\nvery common contributor to confused emails to numpy-discussion. E.g.:\n\nIn [5]: 1 / my_array_with_random_contents\n/home/njs/.user-python2.7-64bit-3/bin/ipython:1: RuntimeWarning:\ndivide by zero encountered in divide\n  #!/home/njs/.user-python2.7-64bit-3/bin/python\nOut[5]:\narray([ 1.77073316, -2.29765021, -2.01800811, ...,  1.13871243,\n       -1.08302964, -8.6185091 ])\n\nOo, right, guess I gotta be careful of those zeros -- thanks, numpy,\nfor giving me that warning!\n\nA few days later:\n\nIn [592]: 1 / some_other_array\nOut[592]:\narray([ 3.07735763,  0.50769289,  0.83984078, ..., -0.67563917,\n       -0.85736257, -1.36511271])\n\nOops, it turns out that this array had a zero in it too, and that's\ngoing to bite me later. But no warning this time!\n\nThe effect of this commit is to make it so that warnings triggered by\nthe code in cell 5 do *not* suppress warnings triggered by the code in\ncell 592. Note that this only applies to warnings triggered *directly*\nby code entered interactively -- if somepkg.foo() calls\nanotherpkg.bad_func() which issues a warning, then this warning will\nstill only be displayed once, even if multiple cells call\nsomepkg.foo(). But if cell 5 and cell 592 both call\nanotherpkg.bad_func() directly, then both will get warnings.\n\n(Important exception: if foo() is defined *interactively*, and calls\nanotherpkg.bad_func(), then every cell that calls foo() will display\nthe warning again. This is unavoidable without fixes to CPython\nupstream.)\n\nExplanation:\n\nPython's warning system has some weird quirks. By default, it tries to\nsuppress duplicate warnings, where \"duplicate\" means the same warning\nmessage triggered twice by the same line of code. This requires\ndetermining which line of code is responsible for triggering a\nwarning, and this is controlled by the stacklevel= argument to\nwarnings.warn. Basically, though, the idea is that if foo() calls\nbar() which calls baz() which calls some_deprecated_api(), then baz()\nwill get counted as being \"responsible\", and the warning system will\nmake a note that the usage of some_deprecated_api() inside baz() has\nalready been warned about and doesn't need to be warned about\nagain. So far so good.\n\nTo accomplish this, obviously, there has to be a record of somewhere\nwhich line this was. You might think that this would be done by\nrecording the filename:linenumber pair in a dict inside the warnings\nmodule, or something like that. You would be wrong.\n\nWhat actually happens is that the warnings module will use stack\nintrospection to reach into baz()'s execution environment, create a\nglobal (module-level) variable there named __warningregistry__, and\nthen, inside this dictionary, record just the line number. Basically,\nit assumes that any given module contains only one line 1, only one\nline 2, etc., so storing the filename is irrelevant. Obviously for\ninteractive code this is totally wrong -- all cells share the same\nexecution environment and global namespace, and they all contain a new\nline 1. Currently the warnings module treats these as if they were all\nthe same line.\n\nIn fact they are not the same line; once we have executed a given\nchunk of code, we will never see those particular lines again. As soon\nas a given chunk of code finishes executing, its line number labels\nbecome meaningless, and the corresponding warning registry entries\nbecome meaningless as well. Therefore, with this patch we delete the\n__warningregistry__ each time we execute a new block of code.", "commit_timestamp": "2014-10-11T02:20:13Z", "files": ["IPython/core/interactiveshell.py", "IPython/core/tests/test_interactiveshell.py"]}, {"node_id": "MDY6Q29tbWl0MjUwNjE0MjM6NDhmNGQ3NGMyMzM2OGM3NzY3MWVjMzMwOWRjMmU4MzdhNDk3NGY3OQ==", "commit_message": "Reset the interactive namespace __warningregistry__ before executing code\n\nFixes #6611.\n\nIdea:\n\nRight now, people often don't see important warnings when running\ncode in IPython, because (to a first approximation) any given warning\nwill only issue once per session. Blink and you'll miss it! This is a\nvery common contributor to confused emails to numpy-discussion. E.g.:\n\nIn [5]: 1 / my_array_with_random_contents\n/home/njs/.user-python2.7-64bit-3/bin/ipython:1: RuntimeWarning:\ndivide by zero encountered in divide\n  #!/home/njs/.user-python2.7-64bit-3/bin/python\nOut[5]:\narray([ 1.77073316, -2.29765021, -2.01800811, ...,  1.13871243,\n       -1.08302964, -8.6185091 ])\n\nOo, right, guess I gotta be careful of those zeros -- thanks, numpy,\nfor giving me that warning!\n\nA few days later:\n\nIn [592]: 1 / some_other_array\nOut[592]:\narray([ 3.07735763,  0.50769289,  0.83984078, ..., -0.67563917,\n       -0.85736257, -1.36511271])\n\nOops, it turns out that this array had a zero in it too, and that's\ngoing to bite me later. But no warning this time!\n\nThe effect of this commit is to make it so that warnings triggered by\nthe code in cell 5 do *not* suppress warnings triggered by the code in\ncell 592. Note that this only applies to warnings triggered *directly*\nby code entered interactively -- if somepkg.foo() calls\nanotherpkg.bad_func() which issues a warning, then this warning will\nstill only be displayed once, even if multiple cells call\nsomepkg.foo(). But if cell 5 and cell 592 both call\nanotherpkg.bad_func() directly, then both will get warnings.\n\n(Important exception: if foo() is defined *interactively*, and calls\nanotherpkg.bad_func(), then every cell that calls foo() will display\nthe warning again. This is unavoidable without fixes to CPython\nupstream.)\n\nExplanation:\n\nPython's warning system has some weird quirks. By default, it tries to\nsuppress duplicate warnings, where \"duplicate\" means the same warning\nmessage triggered twice by the same line of code. This requires\ndetermining which line of code is responsible for triggering a\nwarning, and this is controlled by the stacklevel= argument to\nwarnings.warn. Basically, though, the idea is that if foo() calls\nbar() which calls baz() which calls some_deprecated_api(), then baz()\nwill get counted as being \"responsible\", and the warning system will\nmake a note that the usage of some_deprecated_api() inside baz() has\nalready been warned about and doesn't need to be warned about\nagain. So far so good.\n\nTo accomplish this, obviously, there has to be a record of somewhere\nwhich line this was. You might think that this would be done by\nrecording the filename:linenumber pair in a dict inside the warnings\nmodule, or something like that. You would be wrong.\n\nWhat actually happens is that the warnings module will use stack\nintrospection to reach into baz()'s execution environment, create a\nglobal (module-level) variable there named __warningregistry__, and\nthen, inside this dictionary, record just the line number. Basically,\nit assumes that any given module contains only one line 1, only one\nline 2, etc., so storing the filename is irrelevant. Obviously for\ninteractive code this is totally wrong -- all cells share the same\nexecution environment and global namespace, and they all contain a new\nline 1. Currently the warnings module treats these as if they were all\nthe same line.\n\nIn fact they are not the same line; once we have executed a given\nchunk of code, we will never see those particular lines again. As soon\nas a given chunk of code finishes executing, its line number labels\nbecome meaningless, and the corresponding warning registry entries\nbecome meaningless as well. Therefore, with this patch we delete the\n__warningregistry__ each time we execute a new block of code.", "commit_timestamp": "2014-10-21T17:27:14Z", "files": ["IPython/core/interactiveshell.py", "IPython/core/tests/test_interactiveshell.py"]}, {"node_id": "MDY6Q29tbWl0MjUwNjE0MjM6NjE0MzFkN2Q2NjMwZDQ2MDRhMTk0NjRjNWY2M2Y4NjIxZjkxYWQ3OQ==", "commit_message": "Reset the interactive namespace __warningregistry__ before executing code\n\nFixes #6611.\n\nIdea:\n\nRight now, people often don't see important warnings when running\ncode in IPython, because (to a first approximation) any given warning\nwill only issue once per session. Blink and you'll miss it! This is a\nvery common contributor to confused emails to numpy-discussion. E.g.:\n\nIn [5]: 1 / my_array_with_random_contents\n/home/njs/.user-python2.7-64bit-3/bin/ipython:1: RuntimeWarning:\ndivide by zero encountered in divide\n  #!/home/njs/.user-python2.7-64bit-3/bin/python\nOut[5]:\narray([ 1.77073316, -2.29765021, -2.01800811, ...,  1.13871243,\n       -1.08302964, -8.6185091 ])\n\nOo, right, guess I gotta be careful of those zeros -- thanks, numpy,\nfor giving me that warning!\n\nA few days later:\n\nIn [592]: 1 / some_other_array\nOut[592]:\narray([ 3.07735763,  0.50769289,  0.83984078, ..., -0.67563917,\n       -0.85736257, -1.36511271])\n\nOops, it turns out that this array had a zero in it too, and that's\ngoing to bite me later. But no warning this time!\n\nThe effect of this commit is to make it so that warnings triggered by\nthe code in cell 5 do *not* suppress warnings triggered by the code in\ncell 592. Note that this only applies to warnings triggered *directly*\nby code entered interactively -- if somepkg.foo() calls\nanotherpkg.bad_func() which issues a warning, then this warning will\nstill only be displayed once, even if multiple cells call\nsomepkg.foo(). But if cell 5 and cell 592 both call\nanotherpkg.bad_func() directly, then both will get warnings.\n\n(Important exception: if foo() is defined *interactively*, and calls\nanotherpkg.bad_func(), then every cell that calls foo() will display\nthe warning again. This is unavoidable without fixes to CPython\nupstream.)\n\nExplanation:\n\nPython's warning system has some weird quirks. By default, it tries to\nsuppress duplicate warnings, where \"duplicate\" means the same warning\nmessage triggered twice by the same line of code. This requires\ndetermining which line of code is responsible for triggering a\nwarning, and this is controlled by the stacklevel= argument to\nwarnings.warn. Basically, though, the idea is that if foo() calls\nbar() which calls baz() which calls some_deprecated_api(), then baz()\nwill get counted as being \"responsible\", and the warning system will\nmake a note that the usage of some_deprecated_api() inside baz() has\nalready been warned about and doesn't need to be warned about\nagain. So far so good.\n\nTo accomplish this, obviously, there has to be a record of somewhere\nwhich line this was. You might think that this would be done by\nrecording the filename:linenumber pair in a dict inside the warnings\nmodule, or something like that. You would be wrong.\n\nWhat actually happens is that the warnings module will use stack\nintrospection to reach into baz()'s execution environment, create a\nglobal (module-level) variable there named __warningregistry__, and\nthen, inside this dictionary, record just the line number. Basically,\nit assumes that any given module contains only one line 1, only one\nline 2, etc., so storing the filename is irrelevant. Obviously for\ninteractive code this is totally wrong -- all cells share the same\nexecution environment and global namespace, and they all contain a new\nline 1. Currently the warnings module treats these as if they were all\nthe same line.\n\nIn fact they are not the same line; once we have executed a given\nchunk of code, we will never see those particular lines again. As soon\nas a given chunk of code finishes executing, its line number labels\nbecome meaningless, and the corresponding warning registry entries\nbecome meaningless as well. Therefore, with this patch we delete the\n__warningregistry__ each time we execute a new block of code.", "commit_timestamp": "2014-10-31T01:54:33Z", "files": ["IPython/core/interactiveshell.py", "IPython/core/tests/test_interactiveshell.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzpkOTU0NDMzMDM4OGNjZTUxOWM4MDUzMDE2MDNjZDFhNzRkZGE2NmZk", "commit_message": "Reset the interactive namespace __warningregistry__ before executing code\n\nFixes #6611.\n\nIdea:\n\nRight now, people often don't see important warnings when running\ncode in IPython, because (to a first approximation) any given warning\nwill only issue once per session. Blink and you'll miss it! This is a\nvery common contributor to confused emails to numpy-discussion. E.g.:\n\nIn [5]: 1 / my_array_with_random_contents\n/home/njs/.user-python2.7-64bit-3/bin/ipython:1: RuntimeWarning:\ndivide by zero encountered in divide\n  #!/home/njs/.user-python2.7-64bit-3/bin/python\nOut[5]:\narray([ 1.77073316, -2.29765021, -2.01800811, ...,  1.13871243,\n       -1.08302964, -8.6185091 ])\n\nOo, right, guess I gotta be careful of those zeros -- thanks, numpy,\nfor giving me that warning!\n\nA few days later:\n\nIn [592]: 1 / some_other_array\nOut[592]:\narray([ 3.07735763,  0.50769289,  0.83984078, ..., -0.67563917,\n       -0.85736257, -1.36511271])\n\nOops, it turns out that this array had a zero in it too, and that's\ngoing to bite me later. But no warning this time!\n\nThe effect of this commit is to make it so that warnings triggered by\nthe code in cell 5 do *not* suppress warnings triggered by the code in\ncell 592. Note that this only applies to warnings triggered *directly*\nby code entered interactively -- if somepkg.foo() calls\nanotherpkg.bad_func() which issues a warning, then this warning will\nstill only be displayed once, even if multiple cells call\nsomepkg.foo(). But if cell 5 and cell 592 both call\nanotherpkg.bad_func() directly, then both will get warnings.\n\n(Important exception: if foo() is defined *interactively*, and calls\nanotherpkg.bad_func(), then every cell that calls foo() will display\nthe warning again. This is unavoidable without fixes to CPython\nupstream.)\n\nExplanation:\n\nPython's warning system has some weird quirks. By default, it tries to\nsuppress duplicate warnings, where \"duplicate\" means the same warning\nmessage triggered twice by the same line of code. This requires\ndetermining which line of code is responsible for triggering a\nwarning, and this is controlled by the stacklevel= argument to\nwarnings.warn. Basically, though, the idea is that if foo() calls\nbar() which calls baz() which calls some_deprecated_api(), then baz()\nwill get counted as being \"responsible\", and the warning system will\nmake a note that the usage of some_deprecated_api() inside baz() has\nalready been warned about and doesn't need to be warned about\nagain. So far so good.\n\nTo accomplish this, obviously, there has to be a record of somewhere\nwhich line this was. You might think that this would be done by\nrecording the filename:linenumber pair in a dict inside the warnings\nmodule, or something like that. You would be wrong.\n\nWhat actually happens is that the warnings module will use stack\nintrospection to reach into baz()'s execution environment, create a\nglobal (module-level) variable there named __warningregistry__, and\nthen, inside this dictionary, record just the line number. Basically,\nit assumes that any given module contains only one line 1, only one\nline 2, etc., so storing the filename is irrelevant. Obviously for\ninteractive code this is totally wrong -- all cells share the same\nexecution environment and global namespace, and they all contain a new\nline 1. Currently the warnings module treats these as if they were all\nthe same line.\n\nIn fact they are not the same line; once we have executed a given\nchunk of code, we will never see those particular lines again. As soon\nas a given chunk of code finishes executing, its line number labels\nbecome meaningless, and the corresponding warning registry entries\nbecome meaningless as well. Therefore, with this patch we delete the\n__warningregistry__ each time we execute a new block of code.", "commit_timestamp": "2014-10-31T01:54:33Z", "files": ["IPython/core/interactiveshell.py", "IPython/core/tests/test_interactiveshell.py"]}], "labels": [], "created_at": "2014-10-03T21:37:30Z", "closed_at": "2014-10-31T16:58:09Z", "method": ["regex"]}
{"issue_number": 6572, "title": "Legacy cleanup", "body": "IPython/core/debbuger.py contains the following:\n\n```\n#######################################################################\n# XXX Hack!  Use python-2.5 compatible code for this call, because with\n# all of our changes, we've drifted from the pdb api in 2.6.  For now,\n# changing:\n#\n#line = linecache.getline(filename, lineno, self.curframe.f_globals)\n# to:\n#\nline = linecache.getline(filename, lineno)\n#\n# does the trick.  But in reality, we need to fix this by reconciling\n# our updates with the new Pdb APIs in Python 2.6.\n#\n# End hack.  The rest of this method is copied verbatim from 2.6 pdb.py\n#######################################################################\n```\n\nShould be easy to clean/test. Marking as Sprint friendly quickfix as we dropped 2.5 and 2.6 support. \n", "commits": [{"node_id": "MDY6Q29tbWl0MzM4OTkyNjA6YTY2OGNmM2U3ZWM2ZDA2Mzg5YmVmNWQ2NDMwMzk5MWYyYzAxNWRjYQ==", "commit_message": "Remove unneeded Pdb.checkline override\n\nCloses #6572", "commit_timestamp": "2015-04-13T23:17:55Z", "files": ["IPython/core/debugger.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmU5ODU0ODgwNTZjZTI3YTNhYjJhYzBjMTc1MjYyNTcwZDVjZDQ2ZjA=", "commit_message": "Merge pull request #8318 from drocco007/master\n\nRemove unneeded Pdb.checkline override", "commit_timestamp": "2015-04-14T03:37:35Z", "files": ["IPython/core/debugger.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmU5ODU0ODgwNTZjZTI3YTNhYjJhYzBjMTc1MjYyNTcwZDVjZDQ2ZjA=", "commit_message": "Merge pull request #8318 from drocco007/master\n\nRemove unneeded Pdb.checkline override", "commit_timestamp": "2015-04-14T03:37:35Z", "files": ["IPython/core/debugger.py"]}], "labels": [], "created_at": "2014-09-28T16:08:26Z", "closed_at": "2015-04-14T03:37:35Z", "linked_pr_number": [6572], "method": ["regex"]}
{"issue_number": 6552, "title": "Test failure kernel.inprocess", "body": "```\nTest group: kernel.inprocess\nF.......\n======================================================================\nFAIL: Does pylab work in the in-process kernel?\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/local/lib/python2.7/site-packages/IPython/testing/decorators.py\", line 225, in skipper_func\n    return f(*args, **kwargs)\n  File \"/usr/local/lib/python2.7/site-packages/IPython/kernel/inprocess/tests/test_kernel.py\", line 49, in test_pylab\n    self.assert_('matplotlib' in msg['content']['data'])\nAssertionError: False is not true\n    'False is not true' = self._formatMessage('False is not true', \"%s is not true\" % safe_repr(False))\n>>  raise self.failureException('False is not true')\n\n-------------------- >> begin captured logging << --------------------\nIPython.kernel.inprocess.ipkernel: DEBUG:\n*** MESSAGE TYPE:execute_request***\nIPython.kernel.inprocess.ipkernel: DEBUG:    Content: {u'code': u'%pylab', u'silent': False, u'user_variables': [], u'store_history': True, u'user_expressions': {}, u'allow_stdin': True}\n   --->\n\nIPython.kernel.inprocess.ipkernel: DEBUG: {'parent_header': {u'date': datetime.datetime(2014, 9, 26, 11, 48, 27, 263401), u'username': u'beccamorgan92', u'session': u'07e688ec-88dc-4011-a9d1-7fc50398e5ca', u'msg_id': u'4f602414-2f3f-46f6-8903-e2f8623b5ee2', u'msg_type': u'execute_request'}, 'msg_type': u'execute_reply', 'msg_id': '58c2ccab-dfc6-44f5-9213-6449b6de06c8', 'content': {u'status': u'ok', u'execution_count': 1, u'user_variables': {}, u'payload': [], u'user_expressions': {}}, 'header': {'date': datetime.datetime(2014, 9, 26, 11, 48, 28, 701177), 'username': u'beccamorgan92', 'session': u'8786d191-9eee-4b1e-82dd-19da74c0e33d', 'msg_id': '58c2ccab-dfc6-44f5-9213-6449b6de06c8', 'msg_type': u'execute_reply'}, 'tracker': <zmq.sugar.tracker.MessageTracker object at 0x109223710>, 'metadata': {'dependencies_met': True, 'engine': u'474aa60e-7008-45e5-97ec-e21146ec614c', 'status': u'ok', 'started': datetime.datetime(2014, 9, 26, 11, 48, 27, 267768)}}\n--------------------- >> end captured logging << ---------------------\n\n----------------------------------------------------------------------\nRan 8 tests in 1.655s\n\nFAILED (failures=1)\n\n______________________________________________________________________\nTest suite completed for system with the following information:\nIPython version: 2.2.0\nIPython commit : d87a8cd (installation)\nIPython package: /usr/local/lib/python2.7/site-packages/IPython\nPython version : 2.7.8 (default, Sep 14 2014, 19:04:32) [GCC 4.2.1 Compatible Apple LLVM 5.1 (clang-503.0.40)]\nsys.executable : /usr/local/opt/python/bin/python2.7\nPlatform       : Darwin-13.4.0-x86_64-i386-64bit\n\nTools and libraries available at test time:\n   casperjs curses cython jinja2 matplotlib numpy oct2py pexpect pygments pymongo qt requests rpy2 sphinx sqlite3 tornado zmq\n\nStatus: ERROR - 1 out of 1 test groups failed (kernel.inprocess). Took 3.056s.\n\nYou may wish to rerun these, with:\n  iptest kernel.inprocess\n```\n", "commits": [{"node_id": "MDY6Q29tbWl0MTIzNjAwMzoxZGUwYjEyMWFmNTRiZTZmYTk4ODZiM2E5NDg5YWM2ODBhYzg2MjFl", "commit_message": "Use some more informative asserts in inprocess kernel tests\n\nPrompted by gh-6552 (but doesn't fix it)", "commit_timestamp": "2014-09-26T18:31:25Z", "files": ["IPython/kernel/inprocess/tests/test_kernel.py", "IPython/kernel/inprocess/tests/test_kernelmanager.py"]}, {"node_id": "MDY6Q29tbWl0MTIzNjAwMzoxY2JmZmQ3ZDMxYjcwMzIzOWY5NmYzMzc1YmEzNTYzNzFkZjAxYjAw", "commit_message": "Use some more informative asserts in inprocess kernel tests\n\nPrompted by gh-6552 (but doesn't fix it)", "commit_timestamp": "2014-09-26T18:34:36Z", "files": ["IPython/kernel/inprocess/tests/test_kernel.py", "IPython/kernel/inprocess/tests/test_kernelmanager.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjQyNWQ4MjJhMTBlZDg0NDI1YWM5ZWY0YmYyZjk1NGUzNzkzMTkyZjc=", "commit_message": "Backport PR #6556: Use some more informative asserts in inprocess kernel tests\n\nPrompted by gh-6552 (but doesn't fix it)", "commit_timestamp": "2014-09-26T19:01:58Z", "files": ["IPython/kernel/inprocess/tests/test_kernel.py", "IPython/kernel/inprocess/tests/test_kernelmanager.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzpiZTM3MjEyMDNmMDA4YjI3ZGM4MzQ0N2M4NmU4OWVlMzU5OWIzYjZi", "commit_message": "Use some more informative asserts in inprocess kernel tests\n\nPrompted by gh-6552 (but doesn't fix it)", "commit_timestamp": "2014-09-26T18:34:36Z", "files": ["IPython/kernel/inprocess/tests/test_kernel.py", "IPython/kernel/inprocess/tests/test_kernelmanager.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjA1OGIwMzhiYzZmNWEwMjkwZjBhNmEwZjlkM2QwZWJiNGI2YzE2MTI=", "commit_message": "Merge pull request #7430 from minrk/inprocess-test\n\nuse assemble_output in in-process kernel test", "commit_timestamp": "2015-01-12T20:37:40Z", "files": ["IPython/kernel/inprocess/tests/test_kernel.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjA1OGIwMzhiYzZmNWEwMjkwZjBhNmEwZjlkM2QwZWJiNGI2YzE2MTI=", "commit_message": "Merge pull request #7430 from minrk/inprocess-test\n\nuse assemble_output in in-process kernel test", "commit_timestamp": "2015-01-12T20:37:40Z", "files": ["IPython/kernel/inprocess/tests/test_kernel.py"]}], "labels": ["matplotlib"], "created_at": "2014-09-26T10:49:22Z", "closed_at": "2015-01-12T20:37:40Z", "linked_pr_number": [6552], "method": ["regex"]}
{"issue_number": 6507, "title": "%%cython magic module caching behavior confusing", "body": "The %%cython magic builds an importable module with name derived from the hash of the cell. If the hash does not change, the cell code is not recompiled.\n\nHowever, this creates a confusing problem when compilation fails because, say, the path of a required library was not given correctly as an argument to %%cython. Changing the %%cython arguments and running the cell again does not recompile the module, so the failure persists.\n\nThe solution would be to derive the hash from the entire cell, including the first line.\n", "commits": [{"node_id": "MDY6Q29tbWl0MTMwNjQ0NjM6NjI2ZmU3OWE5NDExNjkwNmY5NzY5ZTY1ZGU5MTJlNGZjNDg4MjVkZQ==", "commit_message": "Fix caching issues of cython magic.\n\nShould fix https://github.com/ipython/ipython/issues/6507 when using cython magic. \r\nWe will deprecate cython magic in IPython itself.", "commit_timestamp": "2014-09-20T15:31:52Z", "files": ["Cython/Build/IpythonMagic.py"]}], "labels": ["bug"], "created_at": "2014-09-19T20:01:42Z", "closed_at": "2015-01-12T18:40:16Z", "method": ["label", "regex"]}
{"issue_number": 6450, "title": "Temporary files in FilesWriter", "body": "I am not sure if this is a bug or not, but it was unexpected behavior for me, so I figured I'd report it.\n\nWhen using `FilesWriter` with nbconvert, if you are converting multiple notebooks at once that rely on the same set of supplementary files, they do get copied to the build directory, but so do temporary files (one version per extra notebook). For example, if I have the following directory/file structure:\n\n```\n$ ls -R\n.:\nbar.ipynb  files/  foo.ipynb  ipython_nbconvert_config.py\n\n./files:\nfile1.txt  file2.txt\n```\n\nWhere `ipython_nbconvert_config.py` is:\n\n``` python\nfrom glob import glob\n\nc = get_config()\n\nc.NbConvertApp.export_format = 'notebook'\nc.NbConvertApp.notebooks = glob('*.ipynb')\nc.NbConvertApp.writer_class = 'FilesWriter'\n\nc.FilesWriter.build_directory = 'build'\nc.FilesWriter.files = glob('files/*')\n```\n\nThen, if I run nbconvert, the `build/files` directory contains:\n\n```\n$ ls build/files/\nfile1.txt  file1.txt-temp-77A5  file2.txt  file2.txt-temp-CE50\n```\n\nI traced the root of the problem to `IPython.utils.path.link_or_copy`, which says \"Because `os.link` does not overwrite files, a unique temporary file will be used if the target already exists, then that file will be moved into place.\" That's fine, except it seems like the `os.rename(new_dst, dst)` line isn't actually removing `new_dst` (which is the temporary file).\n", "commits": [{"node_id": "MDY6Q29tbWl0MTIzNjAwMzowZmE4YTI4ZmM1ZjkxZGRiNjU2ZDJkN2EzN2E3NWVkZjFlNzZmOWI5", "commit_message": "Don't link file again if it's already a correct hard link\n\nCloses gh-6450", "commit_timestamp": "2015-01-20T20:33:37Z", "files": ["IPython/utils/path.py", "IPython/utils/tests/test_path.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4Ojg0NDg4YjVkMmJjMDAyYWQ4NGZhYzQxN2IzMjliYTBiNDBlNWZlZTc=", "commit_message": "Merge pull request #7513 from takluyver/i6450\n\nDon't link file again if it's already a correct hard link", "commit_timestamp": "2015-01-20T22:26:05Z", "files": ["IPython/utils/path.py", "IPython/utils/tests/test_path.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4Ojg0NDg4YjVkMmJjMDAyYWQ4NGZhYzQxN2IzMjliYTBiNDBlNWZlZTc=", "commit_message": "Merge pull request #7513 from takluyver/i6450\n\nDon't link file again if it's already a correct hard link", "commit_timestamp": "2015-01-20T22:26:05Z", "files": ["IPython/utils/path.py", "IPython/utils/tests/test_path.py"]}], "labels": ["needs-info", "nbconvert"], "created_at": "2014-09-11T16:17:53Z", "closed_at": "2015-01-20T22:26:05Z", "linked_pr_number": [6450], "method": ["regex"]}
{"issue_number": 6409, "title": "No module named '_dummy'", "body": "Running IPython 2.2.0 with Python 3.4.1 I get the following error when invoking:\n\n`C:\\Python34\\Scripts\\ipython-script.py -i -c --confirm-exit  --pylab`\n\n```\nError:\n[TerminalIPythonApp] WARNING | Eventloop or matplotlib integration failed. Is matplotlib installed?\n---------------------------------------------------------------------------\nImportError                               Traceback (most recent call last)\nC:\\Python34\\lib\\site-packages\\IPython\\core\\shellapp.py in <lambda>(key)\n    231         shell = self.shell\n    232         if self.pylab:\n--> 233             enable = lambda key: shell.enable_pylab(key, import_all=self.pylab_import_all)\n    234             key = self.pylab\n    235         elif self.matplotlib:\n\nC:\\Python34\\lib\\site-packages\\IPython\\core\\interactiveshell.py in enable_pylab(self, gui, import_all, welcome_message)\n   2980         from IPython.core.pylabtools import import_pylab\n   2981\n-> 2982         gui, backend = self.enable_matplotlib(gui)\n   2983\n   2984         # We want to prevent the loading of pylab to pollute the user's\n\nC:\\Python34\\lib\\site-packages\\IPython\\core\\interactiveshell.py in enable_matplotlib(self, gui)\n   2946         # Now we must activate the gui pylab wants to use, and fix %run to take\n   2947         # plot updates into account\n-> 2948         self.enable_gui(gui)\n   2949         self.magics_manager.registry['ExecutionMagics'].default_runner = \\\n   2950             pt.mpl_runner(self.safe_execfile)\n\nC:\\Python34\\lib\\site-packages\\IPython\\terminal\\interactiveshell.py in enable_gui(gui, app)\n    314         from IPython.lib.inputhook import enable_gui as real_enable_gui\n    315         try:\n--> 316             return real_enable_gui(gui, app)\n    317         except ValueError as e:\n    318             raise UsageError(\"%s\" % e)\n\nC:\\Python34\\lib\\site-packages\\IPython\\lib\\inputhook.py in enable_gui(gui, app)\n    539         e = \"Invalid GUI request %r, valid ones are:%s\" % (gui, guis.keys())\n    540         raise ValueError(e)\n--> 541     return gui_hook(app)\n    542\n\nC:\\Python34\\lib\\site-packages\\IPython\\lib\\inputhook.py in enable_qt4(self, app)\n    259         \"\"\"\n    260         from IPython.lib.inputhookqt4 import create_inputhook_qt4\n--> 261         from IPython.external.appnope import nope\n    262         app, inputhook_qt4 = create_inputhook_qt4(self, app)\n    263         self.set_inputhook(inputhook_qt4)\n\nC:\\Python34\\lib\\site-packages\\IPython\\external\\appnope\\__init__.py in <module>()\n      9\n     10     if sys.platform != \"darwin\" or V(platform.mac_ver()[0]) < V(\"10.9\"):\n---> 11         from _dummy import *\n     12     else:\n     13         from ._nope import *\n\nImportError: No module named '_dummy'\n```\n\nIf I change line 11 in site-packages\\IPython\\external\\appnope__initi__.py from:\n`from _dummy import *`\nto:\n`from ._dummy import *`\nit seems to work fine.  Looks like the \".\" is missing.\n", "commits": [{"node_id": "MDY6Q29tbWl0MTIzNjAwMzo3YzExNzNiYjViNmQwOTNiNGZmN2NjODljYmUwNjllMTE3OWYxZDk2", "commit_message": "Fix relative import in appnope\n\nCloses gh-6409", "commit_timestamp": "2014-09-04T19:07:02Z", "files": ["IPython/external/appnope/__init__.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmU1ODI4NWM4N2IyNWZhYTg4MzZkMzg1ZTRjYmNkMWIzYzY2YmI1YzA=", "commit_message": "Backport PR #6410: Fix relative import in appnope\n\nCloses gh-6409\n\nPing @minrk - this fix should go into appnope as well.", "commit_timestamp": "2014-09-11T21:38:39Z", "files": ["IPython/external/appnope/__init__.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzpkYTM1YWUxN2FhNTI5NjM1MjY0YTRlNGQ0MTUyMzFhN2NiNDYzYjM2", "commit_message": "Fix relative import in appnope\n\nCloses gh-6409", "commit_timestamp": "2014-09-04T19:07:02Z", "files": ["IPython/external/appnope/__init__.py"]}], "labels": ["bug", "osx"], "created_at": "2014-09-04T18:50:24Z", "closed_at": "2014-09-04T21:48:54Z", "method": ["label"]}
{"issue_number": 6386, "title": "ipython.parallel in wsgi app", "body": "When importing IPython.parallel in a script running as a wsgi service, an error occurs:\n\n[Sat Aug 30 21:36:52.586183 2014] [:error] [pid 7469] [remote 10.252.230.165:51802] mod_wsgi (pid=7469): Target WSGI script '/home/opta/www/env/pyramid.wsgi' cannot be loaded as Python module.\n[Sat Aug 30 21:36:52.586274 2014] [:error] [pid 7469] [remote 10.252.230.165:51802] mod_wsgi (pid=7469): Exception occurred processing WSGI script '/home/opta/www/env/pyramid.wsgi'.\n[Sat Aug 30 21:36:52.586316 2014] [:error] [pid 7469] [remote 10.252.230.165:51802] Traceback (most recent call last):\n[Sat Aug 30 21:36:52.586338 2014] [:error] [pid 7469] [remote 10.252.230.165:51802]   File \"/home/opta/www/env/pyramid.wsgi\", line 4, in <module>\n[Sat Aug 30 21:36:52.586493 2014] [:error] [pid 7469] [remote 10.252.230.165:51802]     application = get_app(ini_path, 'main')\n[Sat Aug 30 21:36:52.586510 2014] [:error] [pid 7469] [remote 10.252.230.165:51802]   File \"/home/opta/www/env/lib/python3.3/site-packages/pyramid/paster.py\", line 31, in get_app\n[Sat Aug 30 21:36:52.586672 2014] [:error] [pid 7469] [remote 10.252.230.165:51802]     global_conf=options)\n[Sat Aug 30 21:36:52.586689 2014] [:error] [pid 7469] [remote 10.252.230.165:51802]   File \"/home/opta/www/env/lib/python3.3/site-packages/paste/deploy/loadwsgi.py\", line 247, in loadapp\n[Sat Aug 30 21:36:52.586988 2014] [:error] [pid 7469] [remote 10.252.230.165:51802]     return loadobj(APP, uri, name=name, *_kw)\n[Sat Aug 30 21:36:52.587005 2014] [:error] [pid 7469] [remote 10.252.230.165:51802]   File \"/home/opta/www/env/lib/python3.3/site-packages/paste/deploy/loadwsgi.py\", line 272, in loadobj\n[Sat Aug 30 21:36:52.587044 2014] [:error] [pid 7469] [remote 10.252.230.165:51802]     return context.create()\n[Sat Aug 30 21:36:52.587060 2014] [:error] [pid 7469] [remote 10.252.230.165:51802]   File \"/home/opta/www/env/lib/python3.3/site-packages/paste/deploy/loadwsgi.py\", line 710, in create\n[Sat Aug 30 21:36:52.587086 2014] [:error] [pid 7469] [remote 10.252.230.165:51802]     return self.object_type.invoke(self)\n[Sat Aug 30 21:36:52.587100 2014] [:error] [pid 7469] [remote 10.252.230.165:51802]   File \"/home/opta/www/env/lib/python3.3/site-packages/paste/deploy/loadwsgi.py\", line 146, in invoke\n[Sat Aug 30 21:36:52.587126 2014] [:error] [pid 7469] [remote 10.252.230.165:51802]     return fix_call(context.object, context.global_conf, *_context.local_conf)\n[Sat Aug 30 21:36:52.587140 2014] [:error] [pid 7469] [remote 10.252.230.165:51802]   File \"/home/opta/www/env/lib/python3.3/site-packages/paste/deploy/util.py\", line 55, in fix_call\n[Sat Aug 30 21:36:52.587167 2014] [:error] [pid 7469] [remote 10.252.230.165:51802]     val = callable(_args, *_kw)\n[Sat Aug 30 21:36:52.587181 2014] [:error] [pid 7469] [remote 10.252.230.165:51802]   File \"/home/opta/www/env/zebra/zebra/**init**.py\", line 13, in main\n[Sat Aug 30 21:36:52.587207 2014] [:error] [pid 7469] [remote 10.252.230.165:51802]     config.scan()\n[Sat Aug 30 21:36:52.587221 2014] [:error] [pid 7469] [remote 10.252.230.165:51802]   File \"/home/opta/www/env/lib/python3.3/site-packages/pyramid/config/**init**.py\", line 930, in scan\n[Sat Aug 30 21:36:52.587248 2014] [:error] [pid 7469] [remote 10.252.230.165:51802]     ignore=ignore)\n[Sat Aug 30 21:36:52.587263 2014] [:error] [pid 7469] [remote 10.252.230.165:51802]   File \"/home/opta/www/env/lib/python3.3/site-packages/venusian/**init**.py\", line 205, in scan\n[Sat Aug 30 21:36:52.587289 2014] [:error] [pid 7469] [remote 10.252.230.165:51802]     **import**(modname)\n[Sat Aug 30 21:36:52.587303 2014] [:error] [pid 7469] [remote 10.252.230.165:51802]   File \"/home/opta/www/env/zebra/zebra/views.py\", line 3, in <module>\n[Sat Aug 30 21:36:52.587417 2014] [:error] [pid 7469] [remote 10.252.230.165:51802]     import IPython#.parallel\n[Sat Aug 30 21:36:52.587434 2014] [:error] [pid 7469] [remote 10.252.230.165:51802]   File \"/home/opta/www/env/lib/python3.3/site-packages/IPython/**init**.py\", line 48, in <module>\n[Sat Aug 30 21:36:52.587610 2014] [:error] [pid 7469] [remote 10.252.230.165:51802]     from .core.application import Application\n[Sat Aug 30 21:36:52.587646 2014] [:error] [pid 7469] [remote 10.252.230.165:51802]   File \"/home/opta/www/env/lib/python3.3/site-packages/IPython/core/application.py\", line 40, in <module>\n[Sat Aug 30 21:36:52.587877 2014] [:error] [pid 7469] [remote 10.252.230.165:51802]     from IPython.core import release, crashhandler\n[Sat Aug 30 21:36:52.587894 2014] [:error] [pid 7469] [remote 10.252.230.165:51802]   File \"/home/opta/www/env/lib/python3.3/site-packages/IPython/core/crashhandler.py\", line 28, in <module>\n[Sat Aug 30 21:36:52.588064 2014] [:error] [pid 7469] [remote 10.252.230.165:51802]     from IPython.core import ultratb\n[Sat Aug 30 21:36:52.588081 2014] [:error] [pid 7469] [remote 10.252.230.165:51802]   File \"/home/opta/www/env/lib/python3.3/site-packages/IPython/core/ultratb.py\", line 110, in <module>\n[Sat Aug 30 21:36:52.588539 2014] [:error] [pid 7469] [remote 10.252.230.165:51802]     from IPython.core import debugger\n[Sat Aug 30 21:36:52.588556 2014] [:error] [pid 7469] [remote 10.252.230.165:51802]   File \"/home/opta/www/env/lib/python3.3/site-packages/IPython/core/debugger.py\", line 36, in <module>\n[Sat Aug 30 21:36:52.588823 2014] [:error] [pid 7469] [remote 10.252.230.165:51802]     from IPython.utils import coloransi, io, py3compat\n[Sat Aug 30 21:36:52.588840 2014] [:error] [pid 7469] [remote 10.252.230.165:51802]   File \"/home/opta/www/env/lib/python3.3/site-packages/IPython/utils/io.py\", line 86, in <module>\n[Sat Aug 30 21:36:52.589036 2014] [:error] [pid 7469] [remote 10.252.230.165:51802]     stdout = IOStream(sys.stdout, fallback=devnull)\n[Sat Aug 30 21:36:52.589053 2014] [:error] [pid 7469] [remote 10.252.230.165:51802]   File \"/home/opta/www/env/lib/python3.3/site-packages/IPython/utils/io.py\", line 45, in **init**\n[Sat Aug 30 21:36:52.589081 2014] [:error] [pid 7469] [remote 10.252.230.165:51802]     setattr(self, meth, getattr(stream, meth))\n[Sat Aug 30 21:36:52.589112 2014] [:error] [pid 7469] [remote 10.252.230.165:51802] AttributeError: 'mod_wsgi.Log' object has no attribute 'name'\n\nIt seems ipython tries to redirect stdout but fails to do so. \nA quick and dirty workaround i did was in\nIPython/utils/io.py\nto change line 45 from\n\n```\n    for meth in filter(clone, dir(stream)):\n         setattr(self, meth, getattr(stream, meth))\n```\n\nto\n\n```\n    for meth in filter(clone, dir(stream)):\n        try:\n            setattr(self, meth, getattr(stream, meth))\n        except AttributeError:\n            pass\n```\n\nIs it possible to fix this in a nicer way?\n", "commits": [{"node_id": "MDY6Q29tbWl0ODU0NTQxMjpkMDM0MWMyNjU3YmU5ZjZjNWI1ZjExZDg4MjkzMmUyZWY2NTY0M2Mw", "commit_message": "bugfix: highlighter: IPython https://github.com/ipython/ipython/issues/6386", "commit_timestamp": "2017-01-20T04:34:35Z", "files": ["wp_main/utilities/highlighter.py"]}, {"node_id": "MDY6Q29tbWl0Nzk1OTQ5OTk6MTRiZGU0YWZlOGI1MDY0YjJlZjI1NTc1NWVkYWRkYmViYmY1YWQ1NA==", "commit_message": "IOStream: Ignore missing attrs from `dir()`. #6386\n\nIn some cases calling `getattr()` on attributes found with\n`dir()` will fail. This is seen in Issue #6386.\n\nThe attribute in that issue is `name`, which is not needed for\n`IOStream` to work correctly. This fix will set the attribute\nto `None` and move on.\n\nTests were added in `IPython.utils.tests.test_io.py` to catch\nany regressions.", "commit_timestamp": "2017-01-20T20:16:37Z", "files": ["IPython/utils/io.py", "IPython/utils/tests/test_io.py"]}, {"node_id": "MDY6Q29tbWl0Nzk1OTQ5OTk6ZmEwNjljZTVlOGY4ZTZkZmM2OTBhNDk4OGIwZGRhZGU3NmJmOWU0ZQ==", "commit_message": "IOStream: Ignore missing attrs from `dir()`. #6386\n\nIn some cases calling `getattr()` on attributes found with\n`dir()` will fail. This is seen in Issue #6386.\n\nThe attribute in that issue is `name`, which is not needed for\n`IOStream` to work correctly. This fix will set the attribute\nto `None` and move on.\n\nTests were added in `IPython.utils.tests.test_io.py` to catch\nany regressions.", "commit_timestamp": "2017-01-20T22:11:46Z", "files": ["IPython/utils/io.py", "IPython/utils/tests/test_io.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmYwNjAxNTg2NjUxODlmZDQ1NmU1NGE1YTg2NDA4MGVmZTI4YjRmZGY=", "commit_message": "Merge pull request #10191 from cjwelborn/IOStream-issue-6386\n\nIOStream: Ignore missing attrs from `dir()`.\r\n\r\ncloses #6386", "commit_timestamp": "2017-01-20T22:40:50Z", "files": ["IPython/utils/io.py", "IPython/utils/tests/test_io.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjViMmU3MzY1NDg1MTM5OGQ3ZmIxN2MyY2Y1YTZiMmVkNzA4Y2I5YzY=", "commit_message": "Backport PR #10191: IOStream: Ignore missing attrs from `dir()`. #6386\n\nIn some cases calling `getattr()` on attributes found with\n`dir()` will fail. This is seen in Issue #6386.\n\nThe attribute in that issue is `name`, which is not needed for\n`IOStream` to work correctly. This fix will set the attribute\nto `None` and move on.\n\nTests were added in `IPython.utils.tests.test_io.py` to catch\nany regressions.", "commit_timestamp": "2017-01-28T12:06:50Z", "files": ["IPython/utils/io.py", "IPython/utils/tests/test_io.py"]}], "labels": ["parallel"], "created_at": "2014-08-30T20:26:51Z", "closed_at": "2017-01-20T22:40:53Z", "method": ["regex"]}
{"issue_number": 6251, "title": "%debug magic \"up\" fails to pass through generator stack", "body": "Consider the following example \"pdbtest.py\":\n\n```\ndef f(x):\n    raise Exception\n\ngen = (f(x) for x in [0])\n\nfor x in gen:\n    pass\n```\n\nIf I run this with `python -i pdbtest.py`, when the exception is thrown I can go up the stack all the way to the module-level with pdb:\n\n```\nTraceback (most recent call last):\n  File \"pdbtest.py\", line 6, in <module>\n    for x in gen:\n  File \"pdbtest.py\", line 4, in <genexpr>\n    gen = (f(x) for x in [0])\n  File \"pdbtest.py\", line 2, in f\n    raise Exception\nException\n>>> import pdb; pdb.pm()\n> /home/antony/tests/pdbtest.py(2)f()\n-> raise Exception\n(Pdb) u\n> /home/antony/tests/pdbtest.py(4)<genexpr>()\n-> gen = (f(x) for x in [0])\n(Pdb) u\n> /home/antony/tests/pdbtest.py(6)<module>()\n-> for x in gen:\n(Pdb) u\n*** Oldest frame\n(Pdb) \n>>> \n```\n\nHowever, if I try to do the same with ipython's %debug magic, I cannot go beyond the generator frame -- which is particularly annoying when you think the actual bug happens earlier:\n\n```\nIn [1]: %debug\n> /path/to/pdbtest.py(2)f()\n      1 def f(x):\n----> 2     raise Exception\n      3 \n\nipdb> u\n> /path/to/pdbtest.py(4)<genexpr>()\n      3 \n----> 4 gen = (f(x) for x in [0])\n      5 \n\nipdb> u\n*** Oldest frame\nipdb>\n```\n\nThis happens with ipython 2.1.0 and python 3.4.\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU4NTE4OjE2ZDc3MmYyMzY3YTUyM2JhZmJiMGNkMDNiZTllYWM0YjE1YjMwMGI=", "commit_message": "Merge pull request #11266 from rhelmot/master\n\nFix `up` through generators in postmortem debugger; closes #6251", "commit_timestamp": "2018-10-13T15:57:11Z", "files": ["IPython/core/ultratb.py", "IPython/terminal/tests/test_debug_magic.py"]}], "labels": [], "created_at": "2014-07-31T20:19:26Z", "closed_at": "2018-10-13T15:57:18Z", "method": ["regex"]}
{"issue_number": 6239, "title": "install_nbextension(symlink=True) doesn't work on Windows", "body": "Because [`os.symlink`](https://github.com/ipython/ipython/blob/master/IPython/html/nbextensions.py#L160) is not available on Windows and Python 2.7 (not sure about Python 3.x?)\n", "commits": [{"node_id": "MDY6Q29tbWl0MTIzNjAwMzoxOTNiOGQxNDc1NTgyYjU0NzczZTc4MWZiNzg5ZDdhOWE2OTA0ZDA2", "commit_message": "Document limitations of symlink parameter to install_nbextension\n\nCloses gh-6239", "commit_timestamp": "2014-11-07T18:48:06Z", "files": ["IPython/html/nbextensions.py"]}], "labels": [], "created_at": "2014-07-30T07:16:36Z", "closed_at": "2014-11-07T18:51:26Z", "method": ["regex"]}
{"issue_number": 6203, "title": "Faulty logic in widget get_css and set_css", "body": "related to #6185\n\nFrom @jasongrout on https://github.com/ipython/ipython/commit/6c1b85991d8e49413e103fa41c6c337c06a2fd8e:\n\n> I just realized that this change should have also involved changes in the get_css function, which still erroneously assumes the _css attribute is a dict of dicts.\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU4NTE4OjZjMWI4NTk5MWQ4ZTQ5NDEzZTEwM2ZhNDFjNmMzMzdjMDZhMmZkOGU=", "commit_message": "Change css dict to a list,\neven though this introduces O(N) complexity, it fixes a bug\nwhere path dependent css traits could be executed out of order,\nmaking it impossible to actually set the traits from the back-end.", "commit_timestamp": "2014-06-02T22:00:33Z", "files": ["IPython/html/widgets/widget.py"]}], "labels": ["bug", "widgets"], "created_at": "2014-07-24T19:54:52Z", "closed_at": "2014-10-03T23:16:18Z", "method": ["label"]}
{"issue_number": 6189, "title": "ipython console freezes for increasing no of seconds in %pylab mode", "body": "launching ipython just in console with `ipython`.\nAm trying to reproduce bad editing (readline?) behavior now, looking at some functions, their help text etc. but it's all ok.\nThen launching `%pylab`.\nTyping in rubbish (like 'aoeuaoeaoeu') and can keep editing it without freezes.\nBut from the moment I type in a function name that exists, like `dir()` it even gets stuck before printing the `()`. From now on the cursor gets stuck every 5 seconds or so and keeps stuck for 2-3 seconds at a time, but that number is increasing.\n\nVersion abffd96eaa9c7\ninside iTerm2 on Mac OSX.\nPython 2.7.8 from conda\n", "commits": [{"node_id": "MDY6Q29tbWl0MTk5OTEzMDpmY2JiYmE5ZTkwY2ExODEwMDQxNmMwNWU5NmFkY2I1ZWJmOGE2M2I5", "commit_message": "Use appnope in qt and wx gui support from the terminal; closes #6189\n\nOn Mavericks, the qt and wx gui support was unusable from the\nipython console in a terminal.  Using nope() in enable_qt4 and\nenable_wx, and reversing with nap() in disable_qt4 and disable_wx,\nsolves the problem.", "commit_timestamp": "2014-08-16T02:14:42Z", "files": ["IPython/lib/inputhook.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjlkNmNmY2UyY2Q5YThiYjU4NGJmOTBjMTBlOWYwYWQzMTIzNzEyZjI=", "commit_message": "Merge pull request #6321 from efiring/fix_nap_qt_wx\n\nUse appnope in qt and wx gui support from the terminal; closes #6189", "commit_timestamp": "2014-08-17T05:55:01Z", "files": ["IPython/lib/inputhook.py"]}, {"node_id": "MDY6Q29tbWl0NjU5NDQ2Ojg1ODgyNDA0YWE0YzBjNGE2MDM4ZDcxNzQ2ZmFmZmJhZTE0ZTU3NjM=", "commit_message": "Use appnope in qt and wx gui support from the terminal; closes #6189\n\nOn Mavericks, the qt and wx gui support was unusable from the\nipython console in a terminal.  Using nope() in enable_qt4 and\nenable_wx, and reversing with nap() in disable_qt4 and disable_wx,\nsolves the problem.", "commit_timestamp": "2014-08-17T05:56:57Z", "files": ["IPython/lib/inputhook.py"]}, {"node_id": "MDY6Q29tbWl0NjU5NDQ2OmRmYTk2ZTg4MGM1MWM3MzE2NTA1Mzc3Mzg2MTM5OWU2MmJlZmFlODM=", "commit_message": "Use appnope in qt and wx gui support from the terminal; closes #6189\n\nOn Mavericks, the qt and wx gui support was unusable from the\nipython console in a terminal.  Using nope() in enable_qt4 and\nenable_wx, and reversing with nap() in disable_qt4 and disable_wx,\nsolves the problem.", "commit_timestamp": "2014-08-17T05:59:08Z", "files": ["IPython/lib/inputhook.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmRmYTk2ZTg4MGM1MWM3MzE2NTA1Mzc3Mzg2MTM5OWU2MmJlZmFlODM=", "commit_message": "Use appnope in qt and wx gui support from the terminal; closes #6189\n\nOn Mavericks, the qt and wx gui support was unusable from the\nipython console in a terminal.  Using nope() in enable_qt4 and\nenable_wx, and reversing with nap() in disable_qt4 and disable_wx,\nsolves the problem.", "commit_timestamp": "2014-08-17T05:59:08Z", "files": ["IPython/lib/inputhook.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo4Njg0YjQ0NDI0YjVhODI5MWUyMmU1OGVkMDgyZDI0YzhkNjI1OGVj", "commit_message": "Use appnope in qt and wx gui support from the terminal; closes #6189\n\nOn Mavericks, the qt and wx gui support was unusable from the\nipython console in a terminal.  Using nope() in enable_qt4 and\nenable_wx, and reversing with nap() in disable_qt4 and disable_wx,\nsolves the problem.", "commit_timestamp": "2014-08-17T05:59:08Z", "files": ["IPython/lib/inputhook.py"]}], "labels": [], "created_at": "2014-07-22T22:03:29Z", "closed_at": "2014-08-17T17:05:19Z", "method": ["regex"]}
{"issue_number": 6075, "title": "Reconnect with password", "body": "In case you have a public notebook you will most certainly want to use a password (BTW. why is this not using HTTP basic auth?)\n\nWhen your notebook server wents down/you do a manual restart you get a reconnect question, though this fails on notebooks with passwords, obviously.\n\nCan we just trigger a normal F5 in this case?\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU5NDQ2OjMzMjQ3YTFlN2I1NGMwMjI4OThlOTA3NTJjZTczNzgyYWY1MzIwYTc=", "commit_message": "persist notebook server cookie secret in security dir\n\nprevents loss of login after relaunching the notebook server\n\ncloses #6075", "commit_timestamp": "2014-07-03T16:18:11Z", "files": ["IPython/html/notebookapp.py"]}, {"node_id": "MDY6Q29tbWl0NjU5NDQ2OjE2ODNjODBhYjE3NTExZTU2YjczMjI3MjRmN2Q3ZThmYTM2MzViNTQ=", "commit_message": "persist notebook server cookie secret in security dir\n\nprevents loss of login after relaunching the notebook server\n\ncloses #6075", "commit_timestamp": "2014-07-07T03:21:59Z", "files": ["IPython/html/notebookapp.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo5MDJiN2E4NWU3NDg1ZjE5YTdiZDEwODQ3MWQxZTVhMTUyNjg4ZWMx", "commit_message": "persist notebook server cookie secret in security dir\n\nprevents loss of login after relaunching the notebook server\n\ncloses #6075", "commit_timestamp": "2014-07-07T03:21:59Z", "files": ["IPython/html/notebookapp.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjZiNTEwM2EzNDBiMzgwY2Y2ZWYxMjkzNjUzZDFkYWQzMDkyNTUwZjg=", "commit_message": "Merge pull request #6076 from minrk/cookie-secret\n\npersist notebook server cookie secret in security dir", "commit_timestamp": "2014-07-07T03:33:33Z", "files": ["IPython/html/notebookapp.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjZiNTEwM2EzNDBiMzgwY2Y2ZWYxMjkzNjUzZDFkYWQzMDkyNTUwZjg=", "commit_message": "Merge pull request #6076 from minrk/cookie-secret\n\npersist notebook server cookie secret in security dir", "commit_timestamp": "2014-07-07T03:33:33Z", "files": ["IPython/html/notebookapp.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzozZDZhNjRhZGVjNTNjODliZGM0MTEyMjkzZWRiM2NmNGJhNDZjNWUw", "commit_message": "Merge pull request #6076 from minrk/cookie-secret\n\npersist notebook server cookie secret in security dir", "commit_timestamp": "2014-07-07T03:33:33Z", "files": ["IPython/html/notebookapp.py"]}], "labels": [], "created_at": "2014-07-03T12:20:34Z", "closed_at": "2014-07-07T03:33:33Z", "linked_pr_number": [6075], "method": ["regex"]}
{"issue_number": 6025, "title": "Bug: unnecessary removal of ellipses", "body": "One of IPythons features is removal of triple dots or triple '>' at the start of a line. This is to make it easy to copy/paste code from the python/ipython console.\nThis can be slightly improved, for example:\n\n```\ntxt = '''.......\n>>>>>>>\n.......\n.......\n...R...\n...BB..\n..BRB..\n.RRBR..'''\n```\n\nIPython removes the first three characters in rows 2-6.\nThis shouldn't have happened since the triple dots were followed by a non-whitespace character.\nCode that was copied from a console will always have either a space/newline/end_of_string after the console prompt.\n", "commits": [{"node_id": "MDY6Q29tbWl0MTIzNjAwMzo0NWZmMDgyMDhmNTVhZjhlM2U5NTFiOGEwMjA5NDZkM2ZiMTVjOGM5", "commit_message": "Add failing test for gh-6025", "commit_timestamp": "2014-06-20T23:07:28Z", "files": ["IPython/core/tests/test_inputtransformer.py"]}, {"node_id": "MDY6Q29tbWl0MTIzNjAwMzowNTMwZWM5NDY0MmE5ZTA3ZjM0YjI5MmE3YzRmMTg3ZjUzMzM2NDMz", "commit_message": "Only allow '>>>' prompt without space afterwards if line is blank\n\nCloses gh-6025", "commit_timestamp": "2014-06-20T23:14:31Z", "files": ["IPython/core/inputtransformer.py", "IPython/core/tests/test_inputsplitter.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjA1MzBlYzk0NjQyYTllMDdmMzRiMjkyYTdjNGYxODdmNTMzMzY0MzM=", "commit_message": "Only allow '>>>' prompt without space afterwards if line is blank\n\nCloses gh-6025", "commit_timestamp": "2014-06-20T23:14:31Z", "files": ["IPython/core/inputtransformer.py", "IPython/core/tests/test_inputsplitter.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzoyYjBiMzkyYWI0MDA1MmU2OWRkZTFmOTQwN2E0MmExYWExYjc2ZWE0", "commit_message": "Add failing test for gh-6025", "commit_timestamp": "2014-06-20T23:07:28Z", "files": ["IPython/core/tests/test_inputtransformer.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo3NTUzNmFhNGI2YzZkMGZiODAwNzVkY2JhMWU4ZjZmNDFiMGYzNzY2", "commit_message": "Only allow '>>>' prompt without space afterwards if line is blank\n\nCloses gh-6025", "commit_timestamp": "2014-06-20T23:14:31Z", "files": ["IPython/core/inputtransformer.py", "IPython/core/tests/test_inputsplitter.py"]}], "labels": ["bug", "core"], "created_at": "2014-06-20T16:54:23Z", "closed_at": "2014-06-21T15:10:16Z", "method": ["label", "regex"]}
{"issue_number": 6009, "title": "Time magics shadow __future__.division", "body": "I regularly include `from __future__ import division` in the first cell of my notebooks, alongside `%pylab inline`.  I also frequently wish to identify bottlenecks in my code using the `%time` and `%%time` magics.  However, this occasionally causes subtle bugs, because a line using the `%time` magic or a cell using the `%%time` magic does not actually use `__future__.division`.\n\n```\n1/2\n```\n\nyields 0.5, but\n\n```\n%time 1/2\n```\n\nand\n\n```\n%%time\n1/2\n```\n\nboth yield 0.\n", "commits": [{"node_id": "MDY6Q29tbWl0MTIzNjAwMzo2OGU0NGQ0YTk1ODhmMGEwOGVhNzBmNTM5OGJhOGEzMTYwNmQ5MWU1", "commit_message": "Add failing test for issue gh-6009", "commit_timestamp": "2014-06-18T17:41:39Z", "files": ["IPython/core/tests/test_magic.py"]}, {"node_id": "MDY6Q29tbWl0MTIzNjAwMzozYTNlMDZlMGFlMDM3NGI2YmYyNzdiMDg4Zjk2MzYzMThiOGIwOGUy", "commit_message": "Use shell futures environment for code in %time and %timeit\n\nCloses gh-6009", "commit_timestamp": "2014-06-18T17:48:06Z", "files": ["IPython/core/magics/execution.py", "IPython/core/tests/test_magic.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzozZWUzYzczMTEwZDI1NDViYTA5YjM0YmNhZDAxZTJkNzgzOTBiZjI2", "commit_message": "Add failing test for issue gh-6009", "commit_timestamp": "2014-06-18T17:41:39Z", "files": ["IPython/core/tests/test_magic.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo2NWU2ZmE1NmY0ZjY1ZTJmODEwZTk1YjNhZDE2NjA4MzY0YTZhNDNk", "commit_message": "Use shell futures environment for code in %time and %timeit\n\nCloses gh-6009", "commit_timestamp": "2014-06-18T17:48:06Z", "files": ["IPython/core/magics/execution.py", "IPython/core/tests/test_magic.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4Ojk2MjM0ODJmN2M0ZmVlOTMzOWVjNzc5YjYwMjkwNjljOGE5MGEzNmE=", "commit_message": "Merge pull request #6010 from takluyver/i6009\n\nUse shell futures environment for code in %time and %timeit", "commit_timestamp": "2014-06-21T18:20:11Z", "files": ["IPython/core/magics/execution.py", "IPython/core/tests/test_magic.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4Ojk2MjM0ODJmN2M0ZmVlOTMzOWVjNzc5YjYwMjkwNjljOGE5MGEzNmE=", "commit_message": "Merge pull request #6010 from takluyver/i6009\n\nUse shell futures environment for code in %time and %timeit", "commit_timestamp": "2014-06-21T18:20:11Z", "files": ["IPython/core/magics/execution.py", "IPython/core/tests/test_magic.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzpkYTk1YmI2YWM2ZDNjNjAxYTVkODQ3MzU4NTVhMzE5ZjMxYzYzZTU5", "commit_message": "Merge pull request #6010 from takluyver/i6009\n\nUse shell futures environment for code in %time and %timeit", "commit_timestamp": "2014-06-21T18:20:11Z", "files": ["IPython/core/magics/execution.py", "IPython/core/tests/test_magic.py"]}], "labels": ["core"], "created_at": "2014-06-18T16:43:49Z", "closed_at": "2014-06-21T18:20:11Z", "linked_pr_number": [6009], "method": ["regex"]}
{"issue_number": 5970, "title": "Tests don't run without jsonschema installed", "body": "Because iptest imports a utility function from nbconvert, the tests don't even start without jsonschema installed. I'll look into this.\n", "commits": [{"node_id": "MDY6Q29tbWl0MTIzNjAwMzo1NTc5ZWVlM2Q4YTNiZTBiOWI3NDA4Njk0MDNmYWY5NmQzNzZiNmQ2", "commit_message": "Skip some tests if nbformat not importable\n\nCloses gh-5970", "commit_timestamp": "2014-06-10T19:29:41Z", "files": ["IPython/core/tests/test_magic.py", "IPython/core/tests/test_run.py", "IPython/terminal/tests/test_help.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjU1NzllZWUzZDhhM2JlMGI5Yjc0MDg2OTQwM2ZhZjk2ZDM3NmI2ZDY=", "commit_message": "Skip some tests if nbformat not importable\n\nCloses gh-5970", "commit_timestamp": "2014-06-10T19:29:41Z", "files": ["IPython/core/tests/test_magic.py", "IPython/core/tests/test_run.py", "IPython/terminal/tests/test_help.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo1OGYzMDdhMWZkYmRmMGUyZWQxOTMyOWIxNDMxZWI4NzM4ZjJkY2I5", "commit_message": "Skip some tests if nbformat not importable\n\nCloses gh-5970", "commit_timestamp": "2014-06-10T19:29:41Z", "files": ["IPython/core/tests/test_magic.py", "IPython/core/tests/test_run.py", "IPython/terminal/tests/test_help.py"]}], "labels": ["bug", "testing", "regression"], "created_at": "2014-06-10T19:01:59Z", "closed_at": "2014-06-10T22:47:19Z", "method": ["label"]}
{"issue_number": 5946, "title": "Edit fails with notepad on Windows 7", "body": "Using ipython 2.1 with anaconda python 2.7 on a fresh install of 64-bit Windows 7.\nThe ipython 'edit' command pops up notepad.  When I try to save the contents it says \"The process cannot access the file because it is being used by another process\".  It seems like ipython might have an open file handle on the temporary file.\n", "commits": [{"node_id": "MDY6Q29tbWl0MTIzNjAwMzoyNzQ3OTRhZmE0MzA3N2FlNmFlNTMyYjA1OWE1YTUwMzIwZjcwMDY5", "commit_message": "Close handle on new temporary files before returning filename\n\nOn Windows, a file can only have one open writable handle at a time, so\nwe need to close the one created by mkstemp before anything else can use\nthat file.\n\nCloses gh-5946", "commit_timestamp": "2014-07-23T22:33:35Z", "files": ["IPython/core/interactiveshell.py", "IPython/core/tests/test_interactiveshell.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjRlY2EyMjA4YmNmYzQ2ZWNlODc1ZGM3M2Y3NDk4NjQzMWUyZGI3YWQ=", "commit_message": "Backport PR #6195: Close handle on new temporary files before returning filename\n\nOn Windows, a file can only have one open writable handle at a time, so we need to close the one created by mkstemp before anything else can use that file.\n\nCloses gh-5946", "commit_timestamp": "2014-07-24T22:08:10Z", "files": ["IPython/core/interactiveshell.py", "IPython/core/tests/test_interactiveshell.py"]}, {"node_id": "MDY6Q29tbWl0MjM0NDA3MzoyMDUwMmM3Njc2NGI0ZWUyYTViZWZmOTMwMGMzM2VhOWI5MWFlNjlh", "commit_message": "Close handle on new temporary files before returning filename\n\nOn Windows, a file can only have one open writable handle at a time, so\nwe need to close the one created by mkstemp before anything else can use\nthat file.\n\nCloses gh-5946", "commit_timestamp": "2014-07-25T08:33:37Z", "files": ["IPython/core/interactiveshell.py", "IPython/core/tests/test_interactiveshell.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo5NzljMTZjZmY1ZDk2OTJmMjE3YTk4MzMxNTEwMzFhYjljOTJkMDFi", "commit_message": "Close handle on new temporary files before returning filename\n\nOn Windows, a file can only have one open writable handle at a time, so\nwe need to close the one created by mkstemp before anything else can use\nthat file.\n\nCloses gh-5946", "commit_timestamp": "2014-07-23T22:33:35Z", "files": ["IPython/core/interactiveshell.py", "IPython/core/tests/test_interactiveshell.py"]}], "labels": [], "created_at": "2014-06-04T13:10:01Z", "closed_at": "2014-07-23T22:53:56Z", "method": ["regex"]}
{"issue_number": 5905, "title": "%guiref in qtconsole broken", "body": "With the latest git master, %guiref gives the following error in qtconsole:\n\n```\nIn [1]: %guiref\n---------------------------------------------------------------------------\nTypeError                                 Traceback (most recent call last)\n<ipython-input-1-abc9b6d653cc> in <module>()\n----> 1 get_ipython().magic(u'guiref')\n\n/Users/takimoto/Library/Python/2.7/lib/python/site-packages/IPython/core/interactiveshell.pyc in magic(self, arg_s)\n   2238         magic_name, _, magic_arg_s = arg_s.partition(' ')\n   2239         magic_name = magic_name.lstrip(prefilter.ESC_MAGIC)\n-> 2240         return self.run_line_magic(magic_name, magic_arg_s)\n   2241 \n   2242     #-------------------------------------------------------------------------\n\n/Users/takimoto/Library/Python/2.7/lib/python/site-packages/IPython/core/interactiveshell.pyc in run_line_magic(self, magic_name, line)\n   2159                 kwargs['local_ns'] = sys._getframe(stack_depth).f_locals\n   2160             with self.builtin_trap:\n-> 2161                 result = fn(*args,**kwargs)\n   2162             return result\n   2163 \n\n/Users/takimoto/Library/Python/2.7/lib/python/site-packages/IPython/core/usage.pyc in page_guiref(arg_s)\n    567     \"\"\"Show a basic reference about the GUI Console.\"\"\"\n    568     from IPython.core import page\n--> 569     page.page(gui_reference, auto_html=True)\n    570 \n\nTypeError: page() got an unexpected keyword argument 'auto_html'\n```\n\nSee #5902 for my system info.\nMay be related with the commit 095e73ab7386af077968a3bb6c28e5d88d9abe60 ?\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU5NDQ2OjMwMGI5ZjhmNzhiYWFjNWExZWJhMjkzMDA2YzQxMGRkYjRkODAyZjg=", "commit_message": "fix a couple typos in Qt from the msg spec update\n\ncloses #5902\ncloses #5905", "commit_timestamp": "2014-05-28T17:46:00Z", "files": ["IPython/core/usage.py", "IPython/qt/console/ipython_widget.py", "IPython/qt/console/rich_ipython_widget.py"]}, {"node_id": "MDY6Q29tbWl0MTk0MzAzMTQ6ZTVkYjQxNTYxMjRjMTJhMGQxYzU3NTQ4YjI3MThkMzUzMjRjNGE4ZQ==", "commit_message": "fix a couple typos in Qt from the msg spec update\n\ncloses #5902\ncloses #5905", "commit_timestamp": "2014-06-03T04:14:06Z", "files": ["IPython/core/usage.py", "IPython/qt/console/ipython_widget.py", "IPython/qt/console/rich_ipython_widget.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzplYWVhNmQyODdmZGY3YjI1MGEzMTFhNjUyYmUxY2IyODgwMjcyOWVi", "commit_message": "fix a couple typos in Qt from the msg spec update\n\ncloses #5902\ncloses #5905", "commit_timestamp": "2014-05-28T17:46:00Z", "files": ["IPython/core/usage.py", "IPython/qt/console/ipython_widget.py", "IPython/qt/console/rich_ipython_widget.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjhiNmIzMTYzNDg5ZjFhYjcwOGZjZWZkNGMyYmNiYjljNmVhNzM2Mjk=", "commit_message": "Merge pull request #5916 from minrk/bad-source\n\nfix a couple of typos in Qt", "commit_timestamp": "2014-05-29T16:45:54Z", "files": ["IPython/core/usage.py", "IPython/qt/console/ipython_widget.py", "IPython/qt/console/rich_ipython_widget.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjhiNmIzMTYzNDg5ZjFhYjcwOGZjZWZkNGMyYmNiYjljNmVhNzM2Mjk=", "commit_message": "Merge pull request #5916 from minrk/bad-source\n\nfix a couple of typos in Qt", "commit_timestamp": "2014-05-29T16:45:54Z", "files": ["IPython/core/usage.py", "IPython/qt/console/ipython_widget.py", "IPython/qt/console/rich_ipython_widget.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzpkNmZlMWM2ZjhiNDUwNDM3NjBmN2NkMGI4OWIwNjMyM2Y4NTFlN2U2", "commit_message": "Merge pull request #5916 from minrk/bad-source\n\nfix a couple of typos in Qt", "commit_timestamp": "2014-05-29T16:45:54Z", "files": ["IPython/core/usage.py", "IPython/qt/console/ipython_widget.py", "IPython/qt/console/rich_ipython_widget.py"]}], "labels": [], "created_at": "2014-05-26T15:41:35Z", "closed_at": "2014-05-29T16:45:54Z", "linked_pr_number": [5905], "method": ["regex"]}
{"issue_number": 5898, "title": "OSError when moving configuration file", "body": "1. Why are you moving something that adheres to http://standards.freedesktop.org/basedir-spec/basedir-spec-latest.html elsewhere???? I want fewer things cluttering up my home directory, not more! Really. I am disappoint.\n2. use shutil.move\n3. my ~/.config/ is a symlink to a different filesystem than my ~/\n\n```\n    __05:54:43 fdata $ ipython\n    /media/hashem/fdata/fdata/pyve/local/lib/python2.7/site-packages/IPython/utils/path.py:302: UserWarning: Moving ~/.config/ipython to ~/.ipython\n      warnings.warn('Moving {0} to {1}'.format(cu(xdg_ipdir), cu(ipdir)))\n    Traceback (most recent call last):\n      File \"/home/hashem/pyve/bin/ipython\", line 11, in <module>\n        sys.exit(start_ipython())\n      File \"/media/hashem/fdata/fdata/pyve/local/lib/python2.7/site-packages/IPython/__init__.py\", line 120, in start_ipython\n        return launch_new_instance(argv=argv, **kwargs)\n      File \"/media/hashem/fdata/fdata/pyve/local/lib/python2.7/site-packages/IPython/config/application.py\", line 563, in launch_instance\n        app.initialize(argv)\n      File \"<string>\", line 2, in initialize\n      File \"/media/hashem/fdata/fdata/pyve/local/lib/python2.7/site-packages/IPython/config/application.py\", line 92, in catch_config_error\n        return method(app, *args, **kwargs)\n      File \"/media/hashem/fdata/fdata/pyve/local/lib/python2.7/site-packages/IPython/terminal/ipapp.py\", line 321, in initialize\n        super(TerminalIPythonApp, self).initialize(argv)\n      File \"<string>\", line 2, in initialize\n      File \"/media/hashem/fdata/fdata/pyve/local/lib/python2.7/site-packages/IPython/config/application.py\", line 92, in catch_config_error\n        return method(app, *args, **kwargs)\n      File \"/media/hashem/fdata/fdata/pyve/local/lib/python2.7/site-packages/IPython/core/application.py\", line 387, in initialize\n        self.init_profile_dir()\n      File \"/media/hashem/fdata/fdata/pyve/local/lib/python2.7/site-packages/IPython/core/application.py\", line 295, in init_profile_dir\n        p = ProfileDir.find_profile_dir_by_name(self.ipython_dir, self.profile, self.config)\n      File \"/media/hashem/fdata/fdata/pyve/local/lib/python2.7/site-packages/IPython/utils/traitlets.py\", line 342, in __get__\n        value = method()\n      File \"/media/hashem/fdata/fdata/pyve/local/lib/python2.7/site-packages/IPython/core/application.py\", line 140, in _ipython_dir_default\n        d = get_ipython_dir()\n      File \"/media/hashem/fdata/fdata/pyve/local/lib/python2.7/site-packages/IPython/utils/path.py\", line 303, in get_ipython_dir\n        os.rename(xdg_ipdir, ipdir)\n    OSError: [Errno 18] Invalid cross-device link\n\n    If you suspect this is an IPython bug, please report it at:\n        https://github.com/ipython/ipython/issues\n    or send an email to the mailing list at ipython-dev@scipy.org\n\n    You can print a more detailed traceback right now with \"%tb\", or use \"%debug\"\n    to interactively debug it.\n\n    Extra-detailed tracebacks for bug-reporting purposes can be enabled via:\n        c.Application.verbose_crash=True\n```\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU4NTE4OjAzOTg5ZGEwNDE1NmI2YWFmNjBhNTUyZGIwZTFlMjM3MWU0NTMxZTg=", "commit_message": "Backport PR #5917: use shutil.move instead of os.rename\n\nwhen moving config files\n\ncloses #5898", "commit_timestamp": "2014-06-24T21:40:36Z", "files": ["IPython/utils/path.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjZjMGIwZWIwYTYzZmNmMzAzZTg2MWU3MjQxZjg5NTU2MjczZTg0MTA=", "commit_message": "Merge pull request #5917 from minrk/shutil.move\n\nuse shutil.move instead of os.rename", "commit_timestamp": "2014-05-29T16:47:30Z", "files": ["IPython/utils/path.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjZjMGIwZWIwYTYzZmNmMzAzZTg2MWU3MjQxZjg5NTU2MjczZTg0MTA=", "commit_message": "Merge pull request #5917 from minrk/shutil.move\n\nuse shutil.move instead of os.rename", "commit_timestamp": "2014-05-29T16:47:30Z", "files": ["IPython/utils/path.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjAzOTg5ZGEwNDE1NmI2YWFmNjBhNTUyZGIwZTFlMjM3MWU0NTMxZTg=", "commit_message": "Backport PR #5917: use shutil.move instead of os.rename\n\nwhen moving config files\n\ncloses #5898", "commit_timestamp": "2014-06-24T21:40:36Z", "files": ["IPython/utils/path.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo4ZTg1M2MxZjBkZjE2YWZmZGJhZTcwOWE1MDhhMDIxZmIyMzc2Nzhm", "commit_message": "Merge pull request #5917 from minrk/shutil.move\n\nuse shutil.move instead of os.rename", "commit_timestamp": "2014-05-29T16:47:30Z", "files": ["IPython/utils/path.py"]}], "labels": [], "created_at": "2014-05-23T21:59:21Z", "closed_at": "2014-05-29T16:47:30Z", "linked_pr_number": [5898], "method": ["regex"]}
{"issue_number": 5801, "title": "startup_command specified in ipengine_config.py is not executed", "body": "This used to work in IPython 1.2.1 \n\nTo recreate from a clean setup (i.e. new virtualenv with IPython installed):\n`ipython profile create testcluster --parallel`\nedit `$HOME/.ipython/profile_newcluster/ipengine_config.py`  to modify one line to `c.IPEngineApp.startup_command = 'open(u\"/tmp/IPtouch\",\"a\").close();'`\nand set in `$HOME/.ipython/profile_newcluster/ipcluster_config.py` `c.IPClusterStart.controller_launcher_class = 'LocalControllerLauncher'` and `c.IPClusterStart.engine_launcher_class = 'LocalEngineSetLauncher'`.\n\nNow  starting ipython: `ipcluster start --profile=testcluster --n 1 --log-level=DEBUG`\nthe log is as follows:\n\n```\n$ ipcluster start --profile=testcluster --n 1 --log-level=DEBUG\n2014-05-07 14:46:49.876 [IPClusterStart] Config changed:\n2014-05-07 14:46:49.876 [IPClusterStart] {'Application': {'log_level': u'DEBUG'}, 'BaseIPythonApplication': {'profile': u'testcluster'}, 'IPClusterStart': {'n': 1}}\n2014-05-07 14:46:49.877 [IPClusterStart] IPYTHONDIR set to: $HOME/.ipython\n2014-05-07 14:46:49.885 [IPClusterStart] Using existing profile dir: u'$HOME/.ipython/profile_testcluster'\n2014-05-07 14:46:49.885 [IPClusterStart] Searching path [u'$HOME/.ipython/profile_testcluster', u'$HOME/.ipython/profile_testcluster'] for config files\n2014-05-07 14:46:49.885 [IPClusterStart] Attempting to load config file: ipython_config.py\n2014-05-07 14:46:49.886 [IPClusterStart] Loaded config file: $HOME/.ipython/profile_testcluster/ipython_config.py\n2014-05-07 14:46:49.886 [IPClusterStart] Attempting to load config file: ipcluster_config.py\n2014-05-07 14:46:49.887 [IPClusterStart] Loaded config file: $HOME/.ipython/profile_testcluster/ipcontroller_config.py\n2014-05-07 14:46:49.887 [IPClusterStart] Attempting to load config file: ipcluster_config.py\n2014-05-07 14:46:49.888 [IPClusterStart] Loaded config file: $HOME/.ipython/profile_testcluster/ipengine_config.py\n2014-05-07 14:46:49.889 [IPClusterStart] Config changed:\n2014-05-07 14:46:49.889 [IPClusterStart] {'Application': {'log_level': u'DEBUG'}, 'BaseIPythonApplication': {'profile': u'testcluster'}, 'IPEngineApp': {'startup_command': 'open(u\"/tmp/IPtouch\",\"a\").close();'}, 'IPClusterStart': {'n': 1}}\n2014-05-07 14:46:49.890 [IPClusterStart] Attempting to load config file: ipcluster_config.py\n2014-05-07 14:46:49.891 [IPClusterStart] Loaded config file: $HOME/.ipython/profile_testcluster/ipcluster_config.py\n2014-05-07 14:46:49.892 [IPClusterStart] Config changed:\n2014-05-07 14:46:49.892 [IPClusterStart] {'Application': {'log_level': u'DEBUG'}, 'BaseIPythonApplication': {'profile': u'testcluster'}, 'IPEngineApp': {'startup_command': 'open(u\"/tmp/IPtouch\",\"a\").close();'}, 'IPClusterStart': {'controller_launcher_class': 'LocalControllerLauncher', 'engine_launcher_class': 'LocalEngineSetLauncher', 'n': 1}}\n2014-05-07 14:46:49.895 [IPClusterStart] Starting ipcluster with [daemon=False]\n2014-05-07 14:46:49.896 [IPClusterStart] Creating pid file: $HOME/.ipython/profile_testcluster/pid/ipcluster.pid\n2014-05-07 14:46:49.897 [IPClusterStart] Starting Controller with LocalControllerLauncher\n2014-05-07 14:46:49.897 [IPClusterStart] Starting LocalControllerLauncher: ['$HOME/startupTest/env/bin/python', '-m', 'IPython.parallel.controller', '--profile-dir', u'$HOME/.ipython/profile_testcluster', '--cluster-id', u'', '--log-to-file', '--log-level=20']\n2014-05-07 14:46:49.901 [IPClusterStart] Process '$HOME/startupTest/env/bin/python' started: 8650\n2014-05-07 14:46:50.305 [IPClusterStart] 2014-05-07 14:46:50.305 [IPControllerApp] Using existing profile dir: u'$HOME/.ipython/profile_testcluster'\n2014-05-07 14:46:50.635 [IPClusterStart] 2014-05-07 14:46:50.635 [scheduler] Scheduler started [leastload]\n2014-05-07 14:46:50.896 [IPClusterStart] Starting 1 Engines with LocalEngineSetLauncher\n2014-05-07 14:46:50.899 [IPClusterStart] Starting LocalEngineLauncher: ['$HOME/startupTest/env/bin/python', '-m', 'IPython.parallel.engine', '--profile-dir', u'$HOME/.ipython/profile_testcluster', '--cluster-id', u'', '--log-to-file', '--log-level=20']\n2014-05-07 14:46:50.905 [IPClusterStart] Process '$HOME/startupTest/env/bin/python' started: 8669\n2014-05-07 14:46:50.905 [IPClusterStart] Process 'engine set' started: [None]\n2014-05-07 14:46:51.302 [IPClusterStart] 2014-05-07 14:46:51.302 [IPEngineApp] Using existing profile dir: u'$HOME/.ipython/profile_testcluster'\n2014-05-07 14:47:20.905 [IPClusterStart] Engines appear to have started successfully\n```\n\nIts clear that the config file is properly read, as `startup_command` appears in the `config changed` lists. But the file `/tmp/IPtouch` has not been read.\n\nI am happy to try and fix it myself - although I am not sure where to start looking!\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU4NTE4OjgyMzllMThmMDVlYzY3NDRlNjMzYjYzNjhhNWJiNTMyNjkwNWEwYTI=", "commit_message": "Backport PR #5805: fix engine startup files\n\nengine startup_file and startup_command are ignored in 2.0\n\ncloses #5801", "commit_timestamp": "2014-05-07T19:40:55Z", "files": ["IPython/parallel/apps/ipengineapp.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjExYTY2MmE5MDY0MWRlNWVlODYyMDk3MDYyNDUxZTRjMjk4ZGVjZDE=", "commit_message": "Merge pull request #5805 from minrk/engine_startup\n\nfix engine startup files", "commit_timestamp": "2014-05-07T19:40:22Z", "files": ["IPython/parallel/apps/ipengineapp.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjExYTY2MmE5MDY0MWRlNWVlODYyMDk3MDYyNDUxZTRjMjk4ZGVjZDE=", "commit_message": "Merge pull request #5805 from minrk/engine_startup\n\nfix engine startup files", "commit_timestamp": "2014-05-07T19:40:22Z", "files": ["IPython/parallel/apps/ipengineapp.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjgyMzllMThmMDVlYzY3NDRlNjMzYjYzNjhhNWJiNTMyNjkwNWEwYTI=", "commit_message": "Backport PR #5805: fix engine startup files\n\nengine startup_file and startup_command are ignored in 2.0\n\ncloses #5801", "commit_timestamp": "2014-05-07T19:40:55Z", "files": ["IPython/parallel/apps/ipengineapp.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo1ZWRmYjQ1OTE4NWM0NGI1YWRkOGI0YjI4MjdlODAxN2QxOTA0OWVj", "commit_message": "Merge pull request #5805 from minrk/engine_startup\n\nfix engine startup files", "commit_timestamp": "2014-05-07T19:40:22Z", "files": ["IPython/parallel/apps/ipengineapp.py"]}], "labels": [], "created_at": "2014-05-07T13:54:31Z", "closed_at": "2014-05-07T19:40:22Z", "linked_pr_number": [5801], "method": ["regex"]}
{"issue_number": 5723, "title": "Output location of source code being tested in iptest and update docs", "body": "The tool iptest does a great job enabling the IPython team to support both Python 2 and 3 and run unit tests against both. However, currently it can appear to succeed without errors or warning when the local code is broken. This occurs when iptest3 silently runs stale code that is not in the local directory. This issue is to track two short-term improvements: \n- Make iptest not be silent about what code it is running: Print what directory the code is being imported from when the tests are run. This will make it no longer be silent about running non-local, stale code and add only one line to the test output.\n- Make it not be mysterious: Update the documentation so that it clearly explains the current design and the possibility of testing stale, non-local code. The behavior will still be unexpected but at least when someone reads the documentation they will know what's going on.\n\nA long term improvement to run the tests against local code will be investigated in another ticket. \n", "commits": [{"node_id": "MDY6Q29tbWl0MTI0OTcwMTE6N2Y0NTFmZGUyNGMzNDk1YTMyNTRiNTkxNWMwNDZiZmE5MDM0MjlhOA==", "commit_message": "Output location of source code being tested in iptest and update docs\n\nIssue 5723. Docs were updated in wiki. Nile Geisinger", "commit_timestamp": "2014-04-25T09:03:46Z", "files": ["IPython/testing/iptestcontroller.py"]}, {"node_id": "MDY6Q29tbWl0MTI0OTcwMTE6ZjA0MTdlNDBlMzQxYmEyNDA5NTk5NmFlOWNjMjQzMTlkNGFmOGI4ZA==", "commit_message": "Output location of source code being tested in iptest and update doc\n\nipython#5723. Docs were updated in wiki. Nile Geisinger", "commit_timestamp": "2014-04-25T09:45:22Z", "files": ["IPython/testing/iptestcontroller.py"]}, {"node_id": "MDY6Q29tbWl0MTI0OTcwMTE6ODM0MDNlZDM3NGExNzZmODc3ZGI0YzlkYTE3OTQzMzVjMDljODcyZQ==", "commit_message": "Output location of source code being tested in iptest and update doc\n\nipython#5723. Docs were updated in wiki. Nile Geisinger", "commit_timestamp": "2014-04-25T17:38:01Z", "files": ["IPython/testing/iptestcontroller.py"]}], "labels": [], "created_at": "2014-04-25T07:53:07Z", "closed_at": "2014-04-30T21:12:44Z", "method": ["regex"]}
{"issue_number": 5706, "title": "Multi-Directory notebooks overwrite each other's checkpoints", "body": "IPython version: 71ff8f9523e438402f696104be44e90394bbf429 (after 2.0)\n\nEven though I haven't seen any open issue about this yet, I believe it might be already known, given that it is mentioned here: https://github.com/ipython/ipython/wiki/IPEP-16%3A-Notebook-multi-directory-dashboard-and-URL-mapping#create-a-checkpoint\n\nIn brief, the problem is that notebooks that have the same name will write/read the same checkpoint file, regardless of the notebooks' path.\n\nExample:\nNotebooks `/test.ipynb` and `/some_path/test.ipynb` will both have their checkpoint file named `test-checkpoint.ipynb` directly under `.ipynb_checkpoints`.\n\nThe consequence of this is that if two or more notebooks located in different subdirectories happen to have the same name they will overwrite each other's checkpoints. A potential solution could be to save the checkpoints in subdirectories as well.\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU4NTE4OjFiYjE4ZjE1MWY4NDAwOTJmYTNjM2Q0MDNlNGU2OGQ1ZTVhOTM1YjM=", "commit_message": "Backport PR #5708: create checkpoints dir in notebook subdirectories\n\ncloses #5706", "commit_timestamp": "2014-05-07T20:10:37Z", "files": ["IPython/html/services/notebooks/filenbmanager.py", "IPython/html/services/notebooks/tests/test_nbmanager.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmE3YzVjYWRhODM3ODlkNTkxOWViZGZmZjdkYjYzMjljM2VjNGNjNmU=", "commit_message": "Merge pull request #5708 from minrk/checkpoints-path\n\ncreate checkpoints dir in notebook subdirectories", "commit_timestamp": "2014-04-25T19:38:23Z", "files": ["IPython/html/services/notebooks/filenbmanager.py", "IPython/html/services/notebooks/tests/test_nbmanager.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmE3YzVjYWRhODM3ODlkNTkxOWViZGZmZjdkYjYzMjljM2VjNGNjNmU=", "commit_message": "Merge pull request #5708 from minrk/checkpoints-path\n\ncreate checkpoints dir in notebook subdirectories", "commit_timestamp": "2014-04-25T19:38:23Z", "files": ["IPython/html/services/notebooks/filenbmanager.py", "IPython/html/services/notebooks/tests/test_nbmanager.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjFiYjE4ZjE1MWY4NDAwOTJmYTNjM2Q0MDNlNGU2OGQ1ZTVhOTM1YjM=", "commit_message": "Backport PR #5708: create checkpoints dir in notebook subdirectories\n\ncloses #5706", "commit_timestamp": "2014-05-07T20:10:37Z", "files": ["IPython/html/services/notebooks/filenbmanager.py", "IPython/html/services/notebooks/tests/test_nbmanager.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo0NmM1MjA2NzUxNzY3Y2QyZmMwNTA1YmM5ZjcxYmRjNTBlODY4YzQy", "commit_message": "Merge pull request #5708 from minrk/checkpoints-path\n\ncreate checkpoints dir in notebook subdirectories", "commit_timestamp": "2014-04-25T19:38:23Z", "files": ["IPython/html/services/notebooks/filenbmanager.py", "IPython/html/services/notebooks/tests/test_nbmanager.py"]}], "labels": ["bug", "notebook"], "created_at": "2014-04-23T10:50:19Z", "closed_at": "2014-04-25T19:38:23Z", "linked_pr_number": [5706], "method": ["label"]}
{"issue_number": 5676, "title": "\"bookmark -l\" not working in ipython 2.0", "body": "On\n\nC:\\WinPython-64bit-3.3.3.3\\python-3.3.3.amd64>python -c \"import IPython; print(IPython.sys_info())\"\n{'commit_hash': 'd268878',\n 'commit_source': 'installation',\n 'default_encoding': 'cp850',\n 'ipython_path': 'C:\\WinPython-64bit-3.3.3.3\\python-3.3.3.amd64\\lib\\site-pac kages\\IPython',\n 'ipython_version': '2.0.0',\n 'os_name': 'nt',\n 'platform': 'Windows-7-6.1.7601-SP1',\n 'sys_executable': 'C:\\WinPython-64bit-3.3.3.3\\python-3.3.3.amd64\\python.exe'\n,\n 'sys_platform': 'win32',\n 'sys_version': '3.3.3 (v3.3.3:c3896275c0f6, Nov 18 2013, 21:19:30) [MSC v.1600 64 bit (AMD64)]'}\n\nthe command\n%bookmark -l\n\ncrashes, with the following message:\n\nAttributeError                            Traceback (most recent call last)\n<ipython-input-25-a447c2cdfc59> in <module>()\n----> 1 get_ipython().magic('bookmark -l')\n\nC:\\WinPython-64bit-3.3.3.3\\python-3.3.3.amd64\\lib\\site-packages\\IPython\\core\\interactiveshell.py in magic(self, arg_s)\n   2203         magic_name, _, magic_arg_s = arg_s.partition(' ')\n   2204         magic_name = magic_name.lstrip(prefilter.ESC_MAGIC)\n-> 2205         return self.run_line_magic(magic_name, magic_arg_s)\n   2206 \n   2207     #-------------------------------------------------------------------------\n\nC:\\WinPython-64bit-3.3.3.3\\python-3.3.3.amd64\\lib\\site-packages\\IPython\\core\\interactiveshell.py in run_line_magic(self, magic_name, line)\n   2124                 kwargs['local_ns'] = sys._getframe(stack_depth).f_locals\n   2125             with self.builtin_trap:\n-> 2126                 result = fn(_args,_*kwargs)\n   2127             return result\n   2128 \n\nC:\\WinPython-64bit-3.3.3.3\\python-3.3.3.amd64\\lib\\site-packages\\IPython\\core\\magics\\osm.py in bookmark(self, parameter_s)\n\nC:\\WinPython-64bit-3.3.3.3\\python-3.3.3.amd64\\lib\\site-packages\\IPython\\core\\magic.py in <lambda>(f, _a, *_k)\n    191     # but it's overkill for just that one bit of state.\n    192     def magic_deco(arg):\n--> 193         call = lambda f, _a, *_k: f(_a, *_k)\n    194 \n    195         if callable(arg):\n\nC:\\WinPython-64bit-3.3.3.3\\python-3.3.3.amd64\\lib\\site-packages\\IPython\\core\\magics\\osm.py in bookmark(self, parameter_s)\n    665         elif 'l' in opts:\n    666             bks = bkms.keys()\n--> 667             bks.sort()\n    668             if bks:\n    669                 size = max(map(len, bks))\n\nAttributeError: 'dict_keys' object has no attribute 'sort'\n", "commits": [{"node_id": "MDY6Q29tbWl0MTIzNjAwMzplZWYwNjFlN2U0NDZhOTk5MzM3Zjk5MGJjZWYxZTc5M2FhMTcwYzg3", "commit_message": "Fix %bookmark -l for Python 3\n\nCloses gh-5676\n\nAlso add a simple test for %bookmark", "commit_timestamp": "2014-04-19T18:45:02Z", "files": ["IPython/core/magics/osm.py", "IPython/core/tests/test_magic.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjUwNzcyODczNTgwMDk4MmFjODgzMTllODM3MWY1NjMwOWE2NmEwYmU=", "commit_message": "Backport PR #5677: Fix %bookmark -l for Python 3\n\nCloses gh-5676\n\nAlso add a simple test for %bookmark", "commit_timestamp": "2014-05-07T20:01:28Z", "files": ["IPython/core/magics/osm.py", "IPython/core/tests/test_magic.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjI3MGM3Y2I4ZmY3MzYzMzNmN2Q3ZjM4MWViOWY4ZGY1N2ZiY2Q3Zjk=", "commit_message": "Backport PR #5677: Fix %bookmark -l for Python 3\n\nCloses gh-5676\n\nAlso add a simple test for %bookmark", "commit_timestamp": "2014-05-07T20:05:29Z", "files": ["IPython/core/magics/osm.py", "IPython/core/tests/test_magic.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzpjNjE0ODIwY2ZhM2VjZTdlMzU4ZTNlYzVmYjAzYWFiM2ZkMjZjNDYy", "commit_message": "Fix %bookmark -l for Python 3\n\nCloses gh-5676\n\nAlso add a simple test for %bookmark", "commit_timestamp": "2014-04-19T18:45:02Z", "files": ["IPython/core/magics/osm.py", "IPython/core/tests/test_magic.py"]}], "labels": ["bug"], "created_at": "2014-04-19T18:05:13Z", "closed_at": "2014-04-19T19:25:25Z", "method": ["label", "regex"]}
{"issue_number": 5589, "title": "Kernel start fails when using --browser argument", "body": "repro steps: \n1. Start ipython notebook with browser flag: \n    - $ ipython notebook --browser firefox\n    - Note that this successfully starts the notebook in firefox instead of the default browser\n2. Open/create a notebook document\n3. Wait for kernel to start\n\nWhat I expect to see:\neverything should just work :)\n\nWhat I see:\nA \"Kernel restarting\" dialog opens in the browser window for a little while, and finally switches to a \"Dead kernel\" dialog.\n\nThe console log shows evidence of attempting to restart the kernel, ending with the following:\n[IPKernelApp] CRITICAL | Bad config encountered during initialization:\n[IPKernelApp] CRITICAL | Unrecognized flag: '--browser'\n2014-04-11 15:58:30.172 [NotebookApp] WARNING | KernelRestarter: restart failed\n2014-04-11 15:58:30.174 [NotebookApp] WARNING | Kernel 218d6d1f-0779-42b8-802f-5b3df58bc919 died, removing from map.\nERROR:root:kernel 218d6d1f-0779-42b8-802f-5b3df58bc919 restarted failed!\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU4NTE4OjE5MDcwYWI4ZmY2NzllNzBiNzNlZTk5NTA4NmI1ZWRjM2M3ZjExNjA=", "commit_message": "Backport PR #5592: add missing `browser` to notebook_aliases list\n\ncloses #5589", "commit_timestamp": "2014-05-07T19:56:07Z", "files": ["IPython/html/notebookapp.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjY0MDc0NDE3NjAzYjA1YzdiOTA5MThjNWYzNTUyMjE4MzA2YWQzMjA=", "commit_message": "Backport PR #5592: add missing `browser` to notebook_aliases list\n\ncloses #5589", "commit_timestamp": "2014-05-07T20:05:28Z", "files": ["IPython/html/notebookapp.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmZiMTI4M2VkY2FjZGViMGFhYWQxMjIwMTc0MWU1NTAyYTM0MWYwZWI=", "commit_message": "Merge pull request #5592 from minrk/browser-alias\n\nadd missing `browser` to notebook_aliases list", "commit_timestamp": "2014-04-11T18:27:48Z", "files": ["IPython/html/notebookapp.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmZiMTI4M2VkY2FjZGViMGFhYWQxMjIwMTc0MWU1NTAyYTM0MWYwZWI=", "commit_message": "Merge pull request #5592 from minrk/browser-alias\n\nadd missing `browser` to notebook_aliases list", "commit_timestamp": "2014-04-11T18:27:48Z", "files": ["IPython/html/notebookapp.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjE5MDcwYWI4ZmY2NzllNzBiNzNlZTk5NTA4NmI1ZWRjM2M3ZjExNjA=", "commit_message": "Backport PR #5592: add missing `browser` to notebook_aliases list\n\ncloses #5589", "commit_timestamp": "2014-05-07T19:56:07Z", "files": ["IPython/html/notebookapp.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjY0MDc0NDE3NjAzYjA1YzdiOTA5MThjNWYzNTUyMjE4MzA2YWQzMjA=", "commit_message": "Backport PR #5592: add missing `browser` to notebook_aliases list\n\ncloses #5589", "commit_timestamp": "2014-05-07T20:05:28Z", "files": ["IPython/html/notebookapp.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzphZDBiMzJiMTRiZTc0YTA1YzY0ZmZmYTY3YzEwNzI0ODRiYjNmNmQy", "commit_message": "Merge pull request #5592 from minrk/browser-alias\n\nadd missing `browser` to notebook_aliases list", "commit_timestamp": "2014-04-11T18:27:48Z", "files": ["IPython/html/notebookapp.py"]}], "labels": [], "created_at": "2014-04-11T16:23:03Z", "closed_at": "2014-04-11T18:27:48Z", "linked_pr_number": [5589], "method": ["regex"]}
{"issue_number": 5566, "title": "Function name printing should use __qualname__ instead of __name__ (Python 3)", "body": "There is a bug in the formatting of functions belonging to a class in IPython 2.0.0 running in Python3.\n\n```\nIn [1]: class A:\n   ...:     def f(self):\n   ...:         pass\n   ...:\n\nIn [2]: A.f\nOut[2]: <function __main__.f>\n\nIn [3]: str(A.f)\nOut[3]: '<function A.f at 0x10b283840>'\n```\n\nThe function name formatting is using the `__name__` attribute of the function instead of `__qualname__`, which results in incorrectly showing the function `f` here in our example belongs to `__main__` instead of `__main__.A`.\n\nA quick fix would be a one line change in https://github.com/ipython/ipython/blob/master/IPython/lib/pretty.py#L749 to use `__qualname__` instead, but will break in Python 2.x as there is no `__qualname__` support.\n\n```\ndef _function_pprint(obj, p, cycle):\n    \"\"\"Base pprint for all functions and builtin functions.\"\"\"\n    if obj.__module__ in ('__builtin__', 'builtins', 'exceptions') or not obj.__module__:\n        name = obj.__name__\n    else:\n        name = obj.__module__ + '.' + obj.__name__  # use obj.__qualname__\n    p.text('<function %s>' % name)\n```\n", "commits": [{"node_id": "MDY6Q29tbWl0MTIzNjAwMzphOTAyZjA4NDU3MTYxNTYzMjg1ZDkzNjBjMDMxMzE1ZWU2ZjUwNzQ4", "commit_message": "Use __qualname__ for pretty reprs where possible.\n\nCloses gh-5566", "commit_timestamp": "2014-04-09T17:43:29Z", "files": ["IPython/lib/pretty.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjhmYzAzOWQ0NWRkNzljMmFiMGM5NDY2MWU1NmM0NDdlYmY1YmU1Mjg=", "commit_message": "Backport PR #5568: Use __qualname__ in pretty reprs for Python 3\n\nCloses #5566.", "commit_timestamp": "2014-04-21T22:54:35Z", "files": ["IPython/lib/pretty.py", "IPython/lib/tests/test_pretty.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzpiYjhlMjhjZDZmODkyOTRjOTg1NjM5NDIxM2U0YjRiM2ExMzJkOWVl", "commit_message": "Use __qualname__ for pretty reprs where possible.\n\nCloses gh-5566", "commit_timestamp": "2014-04-09T17:43:29Z", "files": ["IPython/lib/pretty.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjgyZTQ1M2EzNjI4NWYxMzBkNzEzYjM4NTI0ZmMzY2RkOTBhYzI5MWM=", "commit_message": "Merge pull request #5568 from takluyver/i5556\n\nUse __qualname__ in pretty reprs for Python 3", "commit_timestamp": "2014-04-21T22:37:02Z", "files": ["IPython/lib/pretty.py", "IPython/lib/tests/test_pretty.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjgyZTQ1M2EzNjI4NWYxMzBkNzEzYjM4NTI0ZmMzY2RkOTBhYzI5MWM=", "commit_message": "Merge pull request #5568 from takluyver/i5556\n\nUse __qualname__ in pretty reprs for Python 3", "commit_timestamp": "2014-04-21T22:37:02Z", "files": ["IPython/lib/pretty.py", "IPython/lib/tests/test_pretty.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjhmYzAzOWQ0NWRkNzljMmFiMGM5NDY2MWU1NmM0NDdlYmY1YmU1Mjg=", "commit_message": "Backport PR #5568: Use __qualname__ in pretty reprs for Python 3\n\nCloses #5566.", "commit_timestamp": "2014-04-21T22:54:35Z", "files": ["IPython/lib/pretty.py", "IPython/lib/tests/test_pretty.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzpkMTE1MzY4ZWExZDgyOTkzMWEzYWUxMjRkZWQ3ZDc4NGQ3M2E3OTY4", "commit_message": "Merge pull request #5568 from takluyver/i5556\n\nUse __qualname__ in pretty reprs for Python 3", "commit_timestamp": "2014-04-21T22:37:02Z", "files": ["IPython/lib/pretty.py", "IPython/lib/tests/test_pretty.py"]}], "labels": [], "created_at": "2014-04-09T16:38:57Z", "closed_at": "2014-04-21T22:37:03Z", "linked_pr_number": [5566], "method": ["regex"]}
{"issue_number": 5553, "title": "Notebook matplotlib inline backend: can't set figure facecolor", "body": "I have tried setting my rcParams, the figure constructor and setting the ipython config via %config \n\n``` python\n%pylab inline\nrcParams['savefig.facecolor'] = 'red'\nrcParams['figure.facecolor'] = 'red'\na = %config InlineBackend.rc \na['figure.facecolor'] = 'red'\nplot([1,2,3])\nfigure(facecolor='red')\nplot([1,2,3])\n```\n\nUsing ipython 2.0, is this a bug or i am missing something.\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU4NTE4OjEwYTg5OTAwOTlhOWIwZGEyMzg1Yzg3MjM4NDc4ODUzMTdlM2NkM2I=", "commit_message": "Backport PR #5758: Applied bug fix: using fc and ec did not properly set the figure canvas ...\n\n...facecolor and edgecolor. This is resolves issue #5553 in which rcParams['figure.facecolor'] is ignored. The fix is now applied to master.", "commit_timestamp": "2014-04-30T18:17:32Z", "files": ["IPython/core/pylabtools.py"]}], "labels": [], "created_at": "2014-04-07T22:57:53Z", "closed_at": "2014-04-30T18:18:06Z", "method": ["regex"]}
{"issue_number": 5491, "title": "Bug in Windows ipconfig ip address regular expression  ", "body": "on line 125 of IPython.utils.localinterfaces in the 2.0.0 release, there is the following regex for matching public IP addresses on the windows output of ipconfig:\n\n`_ipconfig_ipv4_pat = re.compile(r'ipv4.*(\\d+\\.\\d+\\.\\d+\\.\\d+)$', re.IGNORECASE)`\n\nthe `.*` after `ipv4` should be `.*?` or `[^\\d]*` so we get more than just the last digit of the first part of the ip address assigned to PUBLIC_IPS. This was causing some problems with my IPython parallel setup with python 3.3 and all windows 7 and server 2008 machines and manual ssh tunnels.\n", "commits": [{"node_id": "MDY6Q29tbWl0MTIzNjAwMzpjMDJlODNlMmI1Mjc1ZmY2ZTdiNDgxMjhhMGQ2YzVhZjlmMDQ4N2Fm", "commit_message": "Fix ipconfig regex pattern\n\nAs suggested by @andjoely. Should be tested by Windows users without\nnetifaces installed.\n\nCloses gh-5491", "commit_timestamp": "2014-04-02T21:59:15Z", "files": ["IPython/utils/localinterfaces.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjVjNjZmMjI2N2JjODBhNzViNDcwMTc0ZDBkNjc5ZTg3MTIxNDAxYzY=", "commit_message": "Backport PR #5506: Fix ipconfig regex pattern\n\nAs suggested by @andjoely. Should be tested by Windows users without netifaces installed.\n\nCloses gh-5491", "commit_timestamp": "2014-04-16T21:31:38Z", "files": ["IPython/utils/localinterfaces.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo2NzdlODg5ZDg3ZDYyOWY5MDhjYTczNzhiZDdiNjUxYjE5Njk1N2Mz", "commit_message": "Fix ipconfig regex pattern\n\nAs suggested by @andjoely. Should be tested by Windows users without\nnetifaces installed.\n\nCloses gh-5491", "commit_timestamp": "2014-04-02T21:59:15Z", "files": ["IPython/utils/localinterfaces.py"]}], "labels": [], "created_at": "2014-04-02T15:39:29Z", "closed_at": "2014-04-10T21:06:38Z", "method": ["regex"]}
{"issue_number": 5477, "title": "counterintuitive behavior of ipengine when controller is listening on all interfaces.", "body": "When I start ipcontroller as follows:\n\n```\nipcontroller --ip='172.16.1.140'\n```\n\n(where 173.16.1.140 is the public ip of the machine)\n\nand then on remote hosts start ipengine as follows:\n\n```\nipengine --location=172.16.1.140\n```\n\neverything works fine.\n\nHowever if I instead start ipcontroller with:\n\n```\nipcontroller --ip='*' \n```\n\nit starts up fine, but then trying to start a controller on a remote host with:\n\n```\nipengine --location=172.16.1.140 --log-level=DEBUG\n```\n\ngives \n\n```\n2014-04-01 00:26:55.408 [IPEngineApp] Config changed:\n2014-04-01 00:26:55.409 [IPEngineApp] {'EngineFactory': {'location': u'172.16.1.140'}, 'IPEngineApp': {'log_level': u'DEBUG'}}\n2014-04-01 00:26:55.488 [IPEngineApp] Using existing profile dir: u'/glusterfs/users/PORTERJAMESJ/.config/ipython/profile_default'\n2014-04-01 00:26:55.488 [IPEngineApp] Searching path [u'/glusterfs/users/PORTERJAMESJ', u'/glusterfs/users/PORTERJAMESJ/.config/ipython/profile_default'] for config files\n2014-04-01 00:26:55.488 [IPEngineApp] Attempting to load config file: ipython_config.py\n2014-04-01 00:26:55.529 [IPEngineApp] Loaded config file: /glusterfs/users/PORTERJAMESJ/.config/ipython/profile_default/ipython_config.py\n2014-04-01 00:26:55.529 [IPEngineApp] Attempting to load config file: ipengine_config.py\n2014-04-01 00:26:55.605 [IPEngineApp] Config file not found, skipping: ipcontroller_config.py\n2014-04-01 00:26:55.605 [IPEngineApp] Attempting to load config file: ipengine_config.py\n2014-04-01 00:26:55.745 [IPEngineApp] Config file not found, skipping: ipengine_config.py\n2014-04-01 00:26:55.745 [IPEngineApp] Attempting to load config file: ipengine_config.py\n2014-04-01 00:26:55.769 [IPEngineApp] Config file not found, skipping: ipcluster_config.py\n2014-04-01 00:26:55.805 [IPEngineApp] Loading url_file u'/glusterfs/users/PORTERJAMESJ/.config/ipython/profile_default/security/ipcontroller-engine.json'\n2014-04-01 00:26:55.815 [IPEngineApp] Config changed:\n2014-04-01 00:26:55.815 [IPEngineApp] {'RegistrationFactory': {}, 'EngineFactory': {'url': u'tcp://127.0.0.1:59799', 'location': u'172.16.1.140', 'sshserver': u''}, 'Session': {'packer': u'json', 'unpacker': u'json', 'signature_scheme': u'hmac-sha256', 'key': '7cf13c1c-00b0-4570-ac76-4899c4560783'}, 'IPEngineApp': {'log_level': u'DEBUG'}, 'ProfileDir': {}}\n2014-04-01 00:26:56.074 [IPEngineApp] Registering with controller at tcp://127.0.0.1:59799\n2014-04-01 00:27:01.078 [IPEngineApp] CRITICAL | Registration timed out after 5.0 seconds\n```\n\nnote that the engine tries to register on localhost instead of the `location` specified in the url file, which is correct, and for reference looks like the following:\n\n```\n{\n  \"control\": 44663,\n  \"task\": 52709,\n  \"hb_ping\": 33695,\n  \"mux\": 58852,\n  \"pack\": \"json\",\n  \"hb_pong\": 50757,\n  \"ssh\": \"\",\n  \"key\": \"7cf13c1c-00b0-4570-ac76-4899c4560783\",\n  \"registration\": 59799,\n  \"interface\": \"tcp://*\",\n  \"iopub\": 48465,\n  \"signature_scheme\": \"hmac-sha256\",\n  \"unpack\": \"json\",\n  \"location\": \"172.16.1.140\"\n}\n```\n\nAs far as I can tell this is due to the way [`disambiguate_ip_address`](https://github.com/ipython/ipython/blob/master/IPython/parallel/util.py#L188-L197) works. It's called [here](https://github.com/ipython/ipython/blob/master/IPython/parallel/apps/ipengineapp.py#L232) when the engine is launching. This behavior is confusing to me; why shoudn't the engine use the location specified in the url_file when the interface is `*`?\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU4NTE4OjZmOTQzNDQ0ZDkwOWUxY2FjODU3MjJhYzFkMTRmYmZiZjgwZGFlMTk=", "commit_message": "Backport PR #5486: disambiguate to location when no IPs can be determined\n\npreviously, fallback was to localhost, which could often be wrong.\n\ncloses #5477", "commit_timestamp": "2014-05-07T19:54:52Z", "files": ["IPython/parallel/util.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmFhMTFhZmJlZDNiMjMzNDNjMzY4MGFjMjQ4ODhjMGFlZGVjMjA4MTA=", "commit_message": "Backport PR #5486: disambiguate to location when no IPs can be determined\n\npreviously, fallback was to localhost, which could often be wrong.\n\ncloses #5477", "commit_timestamp": "2014-05-07T20:05:28Z", "files": ["IPython/parallel/util.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjNjYzA0MGVmMWZjNmZmMDRjYzM5MzQxYjMxMjZkMjg0MGIwZTc4YjM=", "commit_message": "Merge pull request #5486 from minrk/disambiguate-default\n\ndisambiguate to location when no IPs can be determined", "commit_timestamp": "2014-04-21T23:05:42Z", "files": ["IPython/parallel/util.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjNjYzA0MGVmMWZjNmZmMDRjYzM5MzQxYjMxMjZkMjg0MGIwZTc4YjM=", "commit_message": "Merge pull request #5486 from minrk/disambiguate-default\n\ndisambiguate to location when no IPs can be determined", "commit_timestamp": "2014-04-21T23:05:42Z", "files": ["IPython/parallel/util.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjZmOTQzNDQ0ZDkwOWUxY2FjODU3MjJhYzFkMTRmYmZiZjgwZGFlMTk=", "commit_message": "Backport PR #5486: disambiguate to location when no IPs can be determined\n\npreviously, fallback was to localhost, which could often be wrong.\n\ncloses #5477", "commit_timestamp": "2014-05-07T19:54:52Z", "files": ["IPython/parallel/util.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmFhMTFhZmJlZDNiMjMzNDNjMzY4MGFjMjQ4ODhjMGFlZGVjMjA4MTA=", "commit_message": "Backport PR #5486: disambiguate to location when no IPs can be determined\n\npreviously, fallback was to localhost, which could often be wrong.\n\ncloses #5477", "commit_timestamp": "2014-05-07T20:05:28Z", "files": ["IPython/parallel/util.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzpiMDZjMDBkNzNkYzAzNTllNGY4MGFiNjg1ZGY5YTZmNTc4ZDNiMThi", "commit_message": "Merge pull request #5486 from minrk/disambiguate-default\n\ndisambiguate to location when no IPs can be determined", "commit_timestamp": "2014-04-21T23:05:42Z", "files": ["IPython/parallel/util.py"]}], "labels": [], "created_at": "2014-04-01T05:31:39Z", "closed_at": "2014-04-02T00:16:38Z", "linked_pr_number": [5477], "method": ["regex"]}
{"issue_number": 5460, "title": "Can't start the notebook server specifying a notebook", "body": "Previously, `ipython notebook Foo.ipynb` would open the browser to the specified notebook. Now it ignores the filename and goes to the dashboard. No messages are displayed about this.\n", "commits": [{"node_id": "MDY6Q29tbWl0MTIzNjAwMzo2NjRjNGY0ZTRiZDNmZmM0YzIxYTUxZWVmYjBhOWIzNTg3NTAzNDA4", "commit_message": "Fix starting notebook server with file/directory at command line.\n\nThe base class implementation of parse_command_line uses update_config,\nwhich ensures that the change event fires for the config traitlet. This\ncopies that.\n\nCloses gh-5460", "commit_timestamp": "2014-03-28T18:51:21Z", "files": ["IPython/html/notebookapp.py"]}, {"node_id": "MDY6Q29tbWl0MTQwNTcyNjg6MTEyYWU2ZjdmZDM5MGM5ZGI0M2U0OGYxNzQ4OWE4MDMwNTNlMzlmMA==", "commit_message": "Fix starting notebook server with file/directory at command line.\n\nThe base class implementation of parse_command_line uses update_config,\nwhich ensures that the change event fires for the config traitlet. This\ncopies that.\n\nCloses gh-5460", "commit_timestamp": "2014-04-22T11:07:02Z", "files": ["IPython/html/notebookapp.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzphZjhjOGRiYmY3M2RjN2UwMjI0ZGM1ZjIxMzJkNWE1YTEyNmUzN2I3", "commit_message": "Fix starting notebook server with file/directory at command line.\n\nThe base class implementation of parse_command_line uses update_config,\nwhich ensures that the change event fires for the config traitlet. This\ncopies that.\n\nCloses gh-5460", "commit_timestamp": "2014-03-28T18:51:21Z", "files": ["IPython/html/notebookapp.py"]}], "labels": ["bug", "notebook", "regression"], "created_at": "2014-03-28T16:22:30Z", "closed_at": "2014-03-28T18:54:33Z", "method": ["label"]}
{"issue_number": 5382, "title": "Qtconsole doesn't run in Python 3", "body": "Trying to run the qtconsole with Python 3 fails, as it tries to import `SocketServer`, which has been moved to `socketserver`. This is running off the current git version. The traceback is:\n\n```\nsean@minerva ~/ % ipython qtconsole --profile empty\nTraceback (most recent call last):\n  File \"/usr/bin/ipython\", line 9, in <module>\n    load_entry_point('ipython==2.0.0-dev', 'console_scripts', 'ipython')()\n  File \"/home/sean/ipython/IPython/__init__.py\", line 118, in start_ipython\n    return launch_new_instance(argv=argv, **kwargs)\n  File \"/home/sean/ipython/IPython/config/application.py\", line 562, in launch_instance\n    app.initialize(argv)\n  File \"<string>\", line 2, in initialize\n  File \"/home/sean/ipython/IPython/config/application.py\", line 92, in catch_config_error\n    return method(app, *args, **kwargs)\n  File \"/home/sean/ipython/IPython/terminal/ipapp.py\", line 321, in initialize\n    super(TerminalIPythonApp, self).initialize(argv)\n  File \"<string>\", line 2, in initialize\n  File \"/home/sean/ipython/IPython/config/application.py\", line 92, in catch_config_error\n    return method(app, *args, **kwargs)\n  File \"/home/sean/ipython/IPython/core/application.py\", line 381, in initialize\n    self.parse_command_line(argv)\n  File \"/home/sean/ipython/IPython/terminal/ipapp.py\", line 316, in parse_command_line\n    return super(TerminalIPythonApp, self).parse_command_line(argv)\n  File \"<string>\", line 2, in parse_command_line\n  File \"/home/sean/ipython/IPython/config/application.py\", line 92, in catch_config_error\n    return method(app, *args, **kwargs)\n  File \"/home/sean/ipython/IPython/config/application.py\", line 474, in parse_command_line\n    return self.initialize_subcommand(subc, subargv)\n  File \"<string>\", line 2, in initialize_subcommand\n  File \"/home/sean/ipython/IPython/config/application.py\", line 92, in catch_config_error\n    return method(app, *args, **kwargs)\n  File \"/home/sean/ipython/IPython/config/application.py\", line 405, in initialize_subcommand\n    subapp = import_item(subapp)\n  File \"/home/sean/ipython/IPython/utils/importstring.py\", line 42, in import_item\n    module = __import__(package, fromlist=[obj])\n  File \"/home/sean/ipython/IPython/qt/console/qtconsoleapp.py\", line 67, in <module>\n    from IPython.qt.client import QtKernelClient\n  File \"/home/sean/ipython/IPython/qt/client.py\", line 6, in <module>\n    from IPython.kernel.channels import (\n  File \"/home/sean/ipython/IPython/kernel/__init__.py\", line 6, in <module>\n    from .connect import *\n  File \"/home/sean/ipython/IPython/kernel/connect.py\", line 34, in <module>\n    from IPython.external.ssh import tunnel\n  File \"/home/sean/ipython/IPython/external/ssh/tunnel.py\", line 38, in <module>\n    from .forward import forward_tunnel\n  File \"/home/sean/ipython/IPython/external/ssh/forward.py\", line 32, in <module>\n    import SocketServer\nImportError: No module named 'SocketServer'\n```\n", "commits": [{"node_id": "MDY6Q29tbWl0MTIzNjAwMzo1NmZhMThjN2FkZTdlNGNhNzgxNzc5Y2Q3OTVhN2JmNGY0YmQ0NjJk", "commit_message": "Fix import of socketserver on Python 3.\n\nCloses gh-5382", "commit_timestamp": "2014-03-19T16:40:04Z", "files": ["IPython/external/ssh/forward.py"]}, {"node_id": "MDY6Q29tbWl0MTQwNTcyNjg6Y2RlZDQzYzg3MjY4YWNlNmVjNzYxYjk4YWU0NmNjOTczMGE1NmQwZQ==", "commit_message": "Fix import of socketserver on Python 3.\n\nCloses gh-5382", "commit_timestamp": "2014-04-22T11:03:31Z", "files": ["IPython/external/ssh/forward.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzowYzYyMjk1MTg0MjY5YmFiYjY0MGQzMmY4YjIzY2QyOTczMjRhY2Uw", "commit_message": "Fix import of socketserver on Python 3.\n\nCloses gh-5382", "commit_timestamp": "2014-03-19T16:40:04Z", "files": ["IPython/external/ssh/forward.py"]}], "labels": [], "created_at": "2014-03-19T04:44:43Z", "closed_at": "2014-03-19T19:01:03Z", "method": ["regex"]}
{"issue_number": 5348, "title": "BUG: HistoryAccessor.get_session_info(0) - exception", "body": "According to [documentation](http://ipython.org/ipython-doc/stable/api/generated/IPython.core.history.html#IPython.core.history.HistoryAccessor.get_session_info), `HistoryAccessor.get_session_info(0)` should return information about current session. Instead, it throws exception. \n\n```\nIn [1]: from IPython.core.history import HistoryAccessor\n\nIn [2]: h = HistoryAccessor()\n\nIn [3]: h.get_session_info(0)\n---------------------------------------------------------------------------\nAttributeError                            Traceback (most recent call last)\n<ipython-input-3-3e9c0d3a6d56> in <module>()\n----> 1 h.get_session_info(0)\n\n/Users/xxxxx/.virtualenvs/d/lib/python2.7/site-packages/IPython/core/history.pyc in get_session_info(self, session)\n\n/Users/xxxxx/.virtualenvs/d/lib/python2.7/site-packages/IPython/core/history.pyc in needs_sqlite(f, self, *a, **kw)\n     63         return []\n     64     else:\n---> 65         return f(self, *a, **kw)\n     66\n     67\n\n/Users/xxxxx/.virtualenvs/d/lib/python2.7/site-packages/IPython/core/history.pyc in get_session_info(self, session)\n\n/Users/xxxxx/.virtualenvs/d/lib/python2.7/site-packages/IPython/core/history.pyc in catch_corrupt_db(f, self, *a, **kw)\n     79     \"\"\"\n     80     try:\n---> 81         return f(self, *a, **kw)\n     82     except DatabaseError:\n     83         if os.path.isfile(self.hist_file):\n\n/Users/xxxxx/.virtualenvs/d/lib/python2.7/site-packages/IPython/core/history.pyc in get_session_info(self, session)\n    276\n    277         if session <= 0:\n--> 278             session += self.session_number\n    279\n    280         query = \"SELECT * from sessions where session == ?\"\n\nAttributeError: 'HistoryAccessor' object has no attribute 'session_number'\n```\n\nWhen providing session number everything works as expected:\n\n```\nIn [6]: h.get_session_info(session=102)\nOut[6]: (102, datetime.datetime(2014, 3, 13, 9, 30, 57, 524807), None, None, u'')\n```\n\nAs a workaround, to get current session, I'm using get_tail(n=1):\n\n```\nfor x in h.get_tail(n=1): \n    session = x[0]\n```\n", "commits": [{"node_id": "MDY6Q29tbWl0MTIzNjAwMzozMjZiNWZjZGZlNzZkOTVlMTQ1ODE4ZThlN2YwNzMyYjZkM2RlOTEw", "commit_message": "Separate get_session_info between HistoryAccessor and HistoryManager\n\nHistoryAccessor has no concept of the current session, whereas\nHistoryManager does. HistoryAccessor should therefore always be used\nwith a session number > 0. However, I have added get_last_session_id()\nto HistoryAccessor to make it easier to work with recent history.\n\nCloses gh-5348", "commit_timestamp": "2014-03-25T18:27:05Z", "files": ["IPython/core/history.py"]}, {"node_id": "MDY6Q29tbWl0MTQwNTcyNjg6ODczNDI3ZTI2OTk3YmUxMjEyZGM1ZDQ3NjZlYTJhMTFlNmZkNjVjNg==", "commit_message": "Separate get_session_info between HistoryAccessor and HistoryManager\n\nHistoryAccessor has no concept of the current session, whereas\nHistoryManager does. HistoryAccessor should therefore always be used\nwith a session number > 0. However, I have added get_last_session_id()\nto HistoryAccessor to make it easier to work with recent history.\n\nCloses gh-5348", "commit_timestamp": "2014-04-22T11:07:00Z", "files": ["IPython/core/history.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzpkMDMzYTk0YTg4NDA4Y2Q3OWVlYzRhZGQwZDQwY2ZiMGRhM2ZiNTNh", "commit_message": "Separate get_session_info between HistoryAccessor and HistoryManager\n\nHistoryAccessor has no concept of the current session, whereas\nHistoryManager does. HistoryAccessor should therefore always be used\nwith a session number > 0. However, I have added get_last_session_id()\nto HistoryAccessor to make it easier to work with recent history.\n\nCloses gh-5348", "commit_timestamp": "2014-03-25T18:27:05Z", "files": ["IPython/core/history.py"]}], "labels": [], "created_at": "2014-03-13T14:19:04Z", "closed_at": "2014-03-26T00:15:14Z", "method": ["regex"]}
{"issue_number": 5306, "title": "Notebook and qtconsole: ipdb.set_trace() not displayed properly", "body": "When using the `ipdb` with the notebook, the stacktrace is not displayed. I still get the interactive input as when I would do `%debug` in the notebook, but no information is displayed\n\n**code**:\n\n```\nimport ipdb as pdb\n\ndef functionWithBreakpoint():\n    number = 4\n    number += 3\n    pdb.set_trace()\n    number += 2\n    return number\n\nprint functionWithBreakpoint()\n```\n\n---\n\n**ipdb session** (note that there is no output displayed, and as soon as I quit the ipdb, another Traceback is shown):\n\n```\nipdb> w\nipdb> print number\nipdb> q\n\n---------------------------------------------------------------------------\nBdbQuit                                   Traceback (most recent call last)\n<ipython-input-1-00309e27a4f2> in <module>()\n    8     return number\n    9 \n---> 10 print functionWithBreakpoint()\n\n<ipython-input-1-00309e27a4f2> in functionWithBreakpoint()\n    5     number += 3\n    6     pdb.set_trace()\n----> 7     number += 2\n    8     return number\n    9 \n\n<ipython-input-1-00309e27a4f2> in functionWithBreakpoint()\n    5     number += 3\n    6     pdb.set_trace()\n----> 7     number += 2\n    8     return number\n    9 \n\n/home/peter/anaconda/lib/python2.7/bdb.pyc in trace_dispatch(self, frame, event, arg)\n    47             return # None\n    48         if event == 'line':\n---> 49             return self.dispatch_line(frame)\n    50         if event == 'call':\n    51             return self.dispatch_call(frame, arg)\n\n/home/peter/anaconda/lib/python2.7/bdb.pyc in dispatch_line(self, frame)\n    66         if self.stop_here(frame) or self.break_here(frame):\n    67             self.user_line(frame)\n---> 68             if self.quitting: raise BdbQuit\n    69         return self.trace_dispatch\n    70 \n\nBdbQuit: \n```\n", "commits": [{"node_id": "C_kwDOAz-HA9oAKGZjMjM1OTg1NTA4ZDA0MzExOTI0MDViNDZjNmZiZmIyMDkwNjkwNDg", "commit_message": "fix uncaught `BdbQuit` exceptions on ipdb `exit`\n\n- `BdbQuit` is now handled in the top-most scope of `InteractiveShell.run_code`. This ensures that `BdbQuit` is correctly handled but can still do its job of breaking out of all user code/loops/further breakpoint requests. Hopefully will work better than previous attempts, which put the `BdqQuit` handling in `Pdb.set_trace`\n\n- fixes:\n  - jupyterlab/jupyterlab#12501\n\n- refs:\n  - ipython/ipython#876\n  - ipython/ipython#1273\n  - ipython/ipython#4474\n  - ipython/ipython#5306\n  - ipython/ipython#9731\n  - ipython/ipython#9942\n  - ipython/ipython#9950\n  - ipython/ipython#10006\n  - ipython/ipython#12378", "commit_timestamp": "2022-05-03T00:36:53Z", "files": ["IPython/core/debugger.py", "IPython/core/interactiveshell.py"]}], "labels": [], "created_at": "2014-03-09T15:27:07Z", "closed_at": "2014-03-09T17:34:44Z", "method": ["regex"]}
{"issue_number": 5293, "title": "Javascript(\"element.append()\") looks broken.", "body": "So something like \n\n``` python\nJavascript(\"element.append($('<a href=\\\"#\\\">Link</a>'))\")\n```\n\nCreates a link that is flushed to the right due to the flex hbox. Appending to `toinsert` works as I would expect. Not sure if `element` referring to `output_area` is a bug or API change since it was explicitly done here https://github.com/ipython/ipython/commit/0ea988b4f912fd784453055ff6efa4021a11257a\n", "commits": [{"node_id": "MDY6Q29tbWl0MTcwMTA5NjE6YTY5YmViODVjZmRhZGZlNGIxODUzNDViMWIyYWNjNTNmNmY1ZmE5NA==", "commit_message": "fix for https://github.com/ipython/ipython/issues/5293", "commit_timestamp": "2014-03-08T01:32:03Z", "files": ["nbx/handlers/standalone.py"]}], "labels": ["notebook"], "created_at": "2014-03-08T01:23:15Z", "closed_at": "2014-03-25T23:44:34Z", "linked_pr_number": [5293], "method": ["regex"]}
{"issue_number": 5251, "title": "ipython console ignoring some stream messages?", "body": "In JuliaLang/IJulia.jl#153, @cbecker commented that `ipython console` does not seem to get standard output (which is sent to the console via `stream` messages according to the message spec).  I confirmed this:\n\n```\n$ ipython console --profile julia \nPython 2.7.1 (r271:86832, Jul 31 2011, 19:30:53) \nType \"copyright\", \"credits\" or \"license\" for more information.\n\nIPython 1.1.0 -- An enhanced Interactive Python.\n?         -> Introduction and overview of IPython's features.\n%quickref -> Quick reference.\nhelp      -> Python's own help system.\nobject?   -> Details about 'object', use 'object??' for extra details.\n\nIPython profile: julia\nStarting kernel event loops.\n\nIn [1]: \n\nIn [1]: ccall(:printf, Cint, (Ptr{Uint8},), \"Hello world!\\n\")\nOut[1]: 13\n```\n\nIt works (prints `\"Hello world!\"`) in both the `qtconsole` and `notebook` front-ends, so it seems like it may be a bug in the `console` front-end.\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU5NDQ2OjcxOGNjZjEyYTJkMTQ2ZjBiY2FmMzRmM2FlNTNkMGMwYjk4MWFlNTU=", "commit_message": "display any output from this session in terminal console\n\nrather than filtering based on the most recent msg_id.\n\navoids excluding async output displayed after status=idle\n\ncloses #5251", "commit_timestamp": "2014-03-03T04:46:44Z", "files": ["IPython/terminal/console/interactiveshell.py"]}, {"node_id": "MDY6Q29tbWl0NjU5NDQ2OjcwOWZlMTBmZjE3YzA0YzViOGNjZjQ4ZTMzNTFhZWY1MDVmNDliYTM=", "commit_message": "display any output from this session in terminal console\n\nrather than filtering based on the most recent msg_id.\n\navoids excluding async output displayed after status=idle\n\ncloses #5251", "commit_timestamp": "2014-03-03T04:47:05Z", "files": ["IPython/terminal/console/interactiveshell.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzphY2E1YWZkMmIxZGQ0NDU3ZTg1ODFjYWMzZjI1ZTFhNjMyM2Y0OTEy", "commit_message": "display any output from this session in terminal console\n\nrather than filtering based on the most recent msg_id.\n\navoids excluding async output displayed after status=idle\n\ncloses #5251", "commit_timestamp": "2014-03-03T04:47:05Z", "files": ["IPython/terminal/console/interactiveshell.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjkzMzhjNjVmMzcwNjVmYTNlMDRkMDJkNGY3NTFlNzUxYWMxNmM3NWI=", "commit_message": "Merge pull request #5253 from minrk/console-async\n\ndisplay any output from this session in terminal console", "commit_timestamp": "2014-03-07T21:07:05Z", "files": ["IPython/terminal/console/interactiveshell.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjkzMzhjNjVmMzcwNjVmYTNlMDRkMDJkNGY3NTFlNzUxYWMxNmM3NWI=", "commit_message": "Merge pull request #5253 from minrk/console-async\n\ndisplay any output from this session in terminal console", "commit_timestamp": "2014-03-07T21:07:05Z", "files": ["IPython/terminal/console/interactiveshell.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzplMDJkNjliY2YwYjUyOTUwYjk0OGI0NWNiZWZjNzI0MjA4OTgzYTg2", "commit_message": "Merge pull request #5253 from minrk/console-async\n\ndisplay any output from this session in terminal console", "commit_timestamp": "2014-03-07T21:07:05Z", "files": ["IPython/terminal/console/interactiveshell.py"]}], "labels": ["bug"], "created_at": "2014-03-03T00:15:30Z", "closed_at": "2014-03-07T21:07:05Z", "linked_pr_number": [5251], "method": ["label", "regex"]}
{"issue_number": 5064, "title": "Errors during interact display at the terminal, not anywhere in the notebook", "body": "If an error is raised by calling a function from an interact widget (or presumably from any widget update), the traceback appears in the terminal where the server was started, not anywhere in the notebook interface.\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU5NDQ2OmVhNDRmNmVhMzQwNWYwOThlZDI0YmYwNDUwNTBkNWQ1MTRjYzJjZTU=", "commit_message": "show traceback in widget handlers\n\nrather than logging\n\ncloses #5064", "commit_timestamp": "2014-02-08T00:43:49Z", "files": ["IPython/html/widgets/widget.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzpmM2E3ZWQ2NzNmYTU1MWQ3ZThkYWYyN2ExMGJkZDlmNzA4ZjBlMTZi", "commit_message": "show traceback in widget handlers\n\nrather than logging\n\ncloses #5064", "commit_timestamp": "2014-02-08T00:43:49Z", "files": ["IPython/html/widgets/widget.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjIxODJiM2ZlZDdiNjliNjcyNmU5ZDUzNmQ2Yzk3NTRiYjBjZTY2ZWI=", "commit_message": "Merge pull request #5067 from minrk/widget-error\n\nshow traceback in widget handlers", "commit_timestamp": "2014-02-08T19:16:02Z", "files": ["IPython/html/widgets/interaction.py", "IPython/html/widgets/widget.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjIxODJiM2ZlZDdiNjliNjcyNmU5ZDUzNmQ2Yzk3NTRiYjBjZTY2ZWI=", "commit_message": "Merge pull request #5067 from minrk/widget-error\n\nshow traceback in widget handlers", "commit_timestamp": "2014-02-08T19:16:02Z", "files": ["IPython/html/widgets/interaction.py", "IPython/html/widgets/widget.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzphNWI2NWIzZmNiZmVlM2IzZjdlOTZkZDMwNjVkMjBmMTA0MzA2NmQ3", "commit_message": "Merge pull request #5067 from minrk/widget-error\n\nshow traceback in widget handlers", "commit_timestamp": "2014-02-08T19:16:02Z", "files": ["IPython/html/widgets/interaction.py", "IPython/html/widgets/widget.py"]}], "labels": ["bug", "widgets"], "created_at": "2014-02-07T23:31:21Z", "closed_at": "2014-02-08T19:16:02Z", "linked_pr_number": [5064], "method": ["label"]}
{"issue_number": 5046, "title": "python setup.py failed vs git submodule update worked", "body": "Hi, \n\nI am following master and just pulled to get the navigation feature. I'm using IPython from the git repo by issuing\n\n```\npython setup.py develop\n```\n\nafter pulling. This time it told me to update the submodules. Issuing \n\n```\npython setup.py submodule\n```\n\nthrew an error. While \n\n```\ngit submodule update\n```\n\nworked. Not sure whether this problem is with my local installation or with some changes in master. I'm not even sure how to debug this. If you want me to test anything please feel free to ask.\n\nHere is the full shell session including the traceback\n\n``` shell\nmarkus@zurich:~/python-dev/ipython$ python setup.py  develop\nCannot build / install IPython with unclean submodules\nPlease update submodules with\n    python setup.py submodule\nor\n    git submodule update\nor commit any submodule changes you have made.\nmarkus@zurich:~/python-dev/ipython$ python setup.py submodule\nTraceback (most recent call last):\n  File \"setup.py\", line 193, in <module>\n    package_data = find_package_data()\n  File \"/home/markus/python-dev/ipython/setupbase.py\", line 197, in find_package_data\n    assert len(glob(path)) > 0, \"No files match pattern %s\" % path\nAssertionError: No files match pattern IPython/html/static/components/font-awesome/font/*.*\nmarkus@zurich:~/python-dev/ipython$ git submodule update\nSubmodule path 'IPython/html/static/components': checked out 'bf1ac7f0df7207b26775089c5ac788ce11c23be5'\n```\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU5NDQ2OmQ4YjhkNmM5MWZmN2FlYzFhNTI4NGZjOGNmYTVmMWJhM2EwNmQ5MTE=", "commit_message": "only validate package_data when it might be used\n\ncloses #5046", "commit_timestamp": "2014-02-06T05:36:49Z", "files": ["setup.py", "setupbase.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo4Yjc1NjI0YTIyMzgzMTAyODA1ZGY5YzgxMGJlNzBiMmE5ZTg5NmRi", "commit_message": "only validate package_data when it might be used\n\ncloses #5046", "commit_timestamp": "2014-02-06T05:36:49Z", "files": ["setup.py", "setupbase.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmE0N2EyNzI0ZjYyNmViYTc0YWE3MWE4MjhmYjdjYzFlOTZiMjgzZjc=", "commit_message": "Merge pull request #5047 from minrk/check-pkg-data\n\nonly validate package_data when it might be used", "commit_timestamp": "2014-02-14T01:17:36Z", "files": ["setup.py", "setupbase.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmE0N2EyNzI0ZjYyNmViYTc0YWE3MWE4MjhmYjdjYzFlOTZiMjgzZjc=", "commit_message": "Merge pull request #5047 from minrk/check-pkg-data\n\nonly validate package_data when it might be used", "commit_timestamp": "2014-02-14T01:17:36Z", "files": ["setup.py", "setupbase.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo4ZjQ0ZjJjMjUzMDE0OWNiNmE1OGRhYjJjMDY3MDE5MGM3OWIxMzMy", "commit_message": "Merge pull request #5047 from minrk/check-pkg-data\n\nonly validate package_data when it might be used", "commit_timestamp": "2014-02-14T01:17:36Z", "files": ["setup.py", "setupbase.py"]}], "labels": [], "created_at": "2014-02-06T03:16:49Z", "closed_at": "2014-02-14T01:17:36Z", "linked_pr_number": [5046], "method": ["regex"]}
{"issue_number": 5031, "title": "Bug during integration of IPython console in Qt application", "body": "I have a PyQt application that integrates an IPython Qt console widget. It was working fine until now (I recently updated IPython to master). I'm not sure what's going on. The [code is here](https://github.com/klusta-team/klustaviewa/blob/master/klustaviewa/views/ipythonview.py).\n\n```\n======================================================================\nERROR: klustaviewa.views.tests.test_ipythonview.test_ipythonview\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"P:\\WinPython-64bit-2.7.5.3\\python-2.7.5.amd64\\lib\\site-packages\\nose\\cas\ne.py\", line 197, in runTest\n    self.test(*self.arg)\n  File \"D:\\Git\\klustaviewa\\klustaviewa\\views\\tests\\test_ipythonview.py\", line 36\n, in test_ipythonview\n    window = show_view(IPythonView, **kwargs)\n  File \"D:\\Git\\klustaviewa\\klustaviewa\\views\\tests\\utils.py\", line 137, in show_\nview\n    window = show_window(TestWindow)\n  File \"D:\\Git\\qtools\\qtools\\utils.py\", line 28, in show_window\n    window = window(**kwargs)\n  File \"D:\\Git\\klustaviewa\\klustaviewa\\views\\tests\\utils.py\", line 90, in __init\n__\n    self.view = view_class(self, getfocus=False)\n  File \"D:\\Git\\klustaviewa\\klustaviewa\\views\\ipythonview.py\", line 44, in __init\n__\n    self.control.kernel_client = self.kernel_client\n  File \"d:\\git\\ipython\\IPython\\qt\\base_frontend_mixin.py\", line 64, in kernel_cl\nient\n    self._started_channels()\n  File \"d:\\git\\ipython\\IPython\\qt\\console\\ipython_widget.py\", line 280, in _star\nted_channels\n    self.kernel_client.kernel_info()\nAttributeError: 'QtInProcessKernelClient' object has no attribute 'kernel_info'\n-------------------- >> begin captured logging << --------------------\n\nIPython.kernel.inprocess.ipkernel: DEBUG:\n*** MESSAGE TYPE:execute_request***\nIPython.kernel.inprocess.ipkernel: DEBUG:    Content: {'code': u'', 'silent': Tr\nue, 'user_variables': [], 'store_history': True, 'user_expressions': {}, 'allow_\nstdin': True}\n   --->\n\nIPython.kernel.inprocess.ipkernel: DEBUG: {'parent_header': {'date': datetime.da\ntetime(2014, 2, 5, 11, 41, 15, 331000), 'username': 'username', 'session': '8c95\n6882-0a88-424b-9388-fb77fef5e792', 'msg_id': '86a7a466-45ad-4bdb-93ba-f33e1bd340\nb9', 'msg_type': 'execute_request'}, 'msg_type': u'execute_reply', 'msg_id': '7e\n9b1242-88b4-4ad3-b7df-eb199b045cea', 'content': {'status': u'ok', 'execution_cou\nnt': 0, 'user_variables': {}, 'payload': [], 'user_expressions': {}}, 'header':\n{'date': datetime.datetime(2014, 2, 5, 11, 41, 15, 338000), 'username': u'userna\nme', 'session': u'49828235-6b29-4ba1-81fe-3e4184b15830', 'msg_id': '7e9b1242-88b\n4-4ad3-b7df-eb199b045cea', 'msg_type': u'execute_reply'}, 'tracker': <zmq.sugar.\ntracker.MessageTracker object at 0x0000000012B45C50>, 'metadata': {'dependencies\n_met': True, 'engine': u'39a05a32-a60f-49a5-b02d-74c0b3cd7212', 'status': u'ok',\n 'started': datetime.datetime(2014, 2, 5, 11, 41, 15, 337000)}}\n--------------------- >> end captured logging << ---------------------\n\n----------------------------------------------------------------------\nRan 1 test in 0.323s\n\nFAILED (errors=1)\n```\n", "commits": [{"node_id": "MDY6Q29tbWl0MTIzNjAwMzphMTkzZjExOTVjYjAwNjFhZDBhNDkwODkwM2Y4MjI5ZGU5NDljNTIw", "commit_message": "Expose kernel_info method on inprocess kernel client\n\nCloses gh-5031", "commit_timestamp": "2014-02-05T22:45:45Z", "files": ["IPython/kernel/inprocess/channels.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzpiZTdmZDljYmVlOTY5YjYxOGUzYTAxOTA5MjllYTgyN2UwNmEyNDMy", "commit_message": "Expose kernel_info method on inprocess kernel client\n\nCloses gh-5031", "commit_timestamp": "2014-02-05T22:45:45Z", "files": ["IPython/kernel/inprocess/channels.py"]}], "labels": [], "created_at": "2014-02-05T10:47:26Z", "closed_at": "2014-02-07T20:05:05Z", "method": ["regex"]}
{"issue_number": 4997, "title": "Inconsistent %matplotlib qt behavior", "body": "Evaluating a cell beginning with the `%matplotlib qt` magic and immediately following with commands to [Mayavi](https://github.com/enthought/mayavi) cause the kernel to freeze. The Mayavi window opens correctly and responds to user input, but the cell never yields control back to the user.\n\nIf instead, a cell containing `%matplotlib qt` in isolation is run, it returns without issue. Subsequently issuing Mayavi commands in a separate cell work as expected, returning immediately.\n\n[This notebook](http://nbviewer.ipython.org/gist/jabooth/8770104) gives a minimal demonstration of the problem, as well as some further diagnostic information.\n\nNote that the problem is confirmed to exist on OS X on a [recent master](https://github.com/ipython/ipython/commit/9b8c058d4ef1667b292fea5e5a365aa545da6112) and on Linux (thanks @fperez)\n\nNote that this bug only occurs the first time the `%matplotlib qt` command is executed - subsequent calls (e.g. after switching to `%matplotlib inline` and back to `%matplotlib qt` with commands immediately following in the qt enabled cell) work fine.\n\n```\n{'codename': 'Work in Progress',\n 'commit_hash': '9b8c058',\n 'commit_source': 'installation',\n 'default_encoding': 'UTF-8',\n 'ipython_path':     '/usr/local/Cellar/python/2.7.5/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/IPython',\n 'ipython_version': '2.0.0-dev',\n 'os_name': 'posix',\n 'platform': 'Darwin-13.0.2-x86_64-i386-64bit',\n 'sys_executable':     '/usr/local/Cellar/python/2.7.5/Frameworks/Python.framework/Versions/2.7/Resources/Python.app/Contents/MacOS/Python',\n 'sys_platform': 'darwin',\n 'sys_version': '2.7.5 (default, Oct 25 2013, 08:11:09) \\n[GCC 4.2.1 Compatible Apple LLVM 5.0 (clang-500.2.79)]'}\n```\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU4NTE4Ojk5MTA3MWY3ODQ1M2Q1ZDIyMWU0NTk1MjliNmNlZjY0NGU3OGVkNzg=", "commit_message": "Merge pull request #5077 from minrk/qt-hmm\n\nFlush replies when entering an eventloop. This avoids possible hangs when the GUI eventloop prevents queued replies from being sent.\r\n\r\nCloses #4997.", "commit_timestamp": "2014-02-11T02:16:22Z", "files": ["IPython/kernel/zmq/eventloops.py", "IPython/kernel/zmq/ipkernel.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo3MGNjMGI2OTMwZGY2NDcxZmQ0MGQyMDZlODEzNTE4ZmU1ODNlOTJk", "commit_message": "Merge pull request #5077 from minrk/qt-hmm\n\nFlush replies when entering an eventloop. This avoids possible hangs when the GUI eventloop prevents queued replies from being sent.\r\n\r\nCloses #4997.", "commit_timestamp": "2014-02-11T02:16:22Z", "files": ["IPython/kernel/zmq/eventloops.py", "IPython/kernel/zmq/ipkernel.py"]}], "labels": ["bug"], "created_at": "2014-02-02T21:01:24Z", "closed_at": "2014-02-11T02:16:22Z", "method": ["label", "regex"]}
{"issue_number": 4990, "title": "_repr_html_ exception reporting corner case when using type(foo)", "body": "@michaelaye reported this in https://github.com/pydata/pandas/issues/6225,\nbut it seems to be an ipython issues, resulting from the recent https://github.com/ipython/ipython/pull/4745.\n\n``` python\nIn [11]: class Foo(object):\n    ...:     def _repr_html_(self):\n    ...:         return \"Me\"\n    ...: x=Foo()\nIn [12]: type(x)\n/home/user1/src/ipython/IPython/core/formatters.py:199: FormatterWarning: \nException in text/html formatter: unbound method _repr_html_() must \nbe called with Foo instance as first argument (got nothing instead)\n  FormatterWarning,\n```\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU5NDQ2OjNlNDhlMWVkNTk1N2IwOWE3M2Y4NWY2NGNhMmQ0OGQ4NWE1MjBlMzc=", "commit_message": "require print_method to be a bound method\n\ncloses #4990", "commit_timestamp": "2014-02-02T19:12:07Z", "files": ["IPython/core/formatters.py", "IPython/core/tests/test_formatters.py"]}, {"node_id": "MDY6Q29tbWl0NjU5NDQ2Ojk3ZWY1MGQxYTVhNzFkZTJiMzlkMWJiZjE2NjZkM2MyZTMwMTM1MmQ=", "commit_message": "require print_method to be a bound method\n\ncloses #4990", "commit_timestamp": "2014-02-09T03:50:34Z", "files": ["IPython/core/formatters.py", "IPython/core/tests/test_formatters.py"]}, {"node_id": "MDY6Q29tbWl0NjU5NDQ2OmM4M2ZmNGI4YzY4NjYxZmE2OWU5YTJkMTM1NDg2NjdhNWUxOWM5OTk=", "commit_message": "require print_method to be a bound method\n\ncloses #4990", "commit_timestamp": "2014-02-09T03:55:27Z", "files": ["IPython/core/formatters.py", "IPython/core/tests/test_formatters.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzozZmRiOTkwMjZkYzQ1NmYxNTNjYTRkNTQ2N2ZlNGI5ZTQ3MTM4MzQw", "commit_message": "require print_method to be a bound method\n\ncloses #4990", "commit_timestamp": "2014-02-09T03:55:27Z", "files": ["IPython/core/formatters.py", "IPython/core/tests/test_formatters.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjlhYmRmNjJmMjNhMTZjMWQ3NzE3YzI2MTUwZjJlMGZiYjU0ZDUyYWY=", "commit_message": "Merge pull request #4996 from minrk/safe-formatter-check\n\nrequire print_method to be a bound method", "commit_timestamp": "2014-02-13T00:13:07Z", "files": ["IPython/config/loader.py", "IPython/config/tests/test_loader.py", "IPython/core/formatters.py", "IPython/core/tests/test_formatters.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjlhYmRmNjJmMjNhMTZjMWQ3NzE3YzI2MTUwZjJlMGZiYjU0ZDUyYWY=", "commit_message": "Merge pull request #4996 from minrk/safe-formatter-check\n\nrequire print_method to be a bound method", "commit_timestamp": "2014-02-13T00:13:07Z", "files": ["IPython/config/loader.py", "IPython/config/tests/test_loader.py", "IPython/core/formatters.py", "IPython/core/tests/test_formatters.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzpmYzg5NDYzODZiMWQ5ZmZlYmNmZjc0Y2FlZDIzMzk0NTU2YWU2ZTE4", "commit_message": "Merge pull request #4996 from minrk/safe-formatter-check\n\nrequire print_method to be a bound method", "commit_timestamp": "2014-02-13T00:13:07Z", "files": ["IPython/config/loader.py", "IPython/config/tests/test_loader.py", "IPython/core/formatters.py", "IPython/core/tests/test_formatters.py"]}], "labels": ["bug"], "created_at": "2014-02-02T05:53:02Z", "closed_at": "2014-02-13T00:13:07Z", "linked_pr_number": [4990], "method": ["label"]}
{"issue_number": 4907, "title": "Test for traceback depth fails on Windows", "body": "```\n======================================================================\nFAIL: Test traceback offset in `ipython script.py`\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"S:\\Users\\slave\\Jenkins\\shiningpanda\\jobs\\671a3b23\\virtualenvs\\ff035a1d\\lib\\site-packages\\nose\\case.py\", line 198, in runTest\n    self.test(*self.arg)\n  File \"S:\\Users\\slave\\Jenkins\\shiningpanda\\jobs\\671a3b23\\virtualenvs\\ff035a1d\\lib\\site-packages\\ipython-2.0.0_dev-py3.3.egg\\IPython\\core\\tests\\test_run.py\", line 512, in test_script_tb\n    nt.assert_in(\"RuntimeError\", out)\nnose.proxy.AssertionError: 'RuntimeError' not found in ''\n    \"\"\"Fail immediately, with the given message.\"\"\"\n>>  raise self.failureException(\"'RuntimeError' not found in ''\")\n```\n", "commits": [{"node_id": "MDY6Q29tbWl0MTIzNjAwMzpkYTM4MDFlM2M0OGNlNWQwZDNkZDBiOWZkMDAxYzU0MGEzNGExYzJi", "commit_message": "Mark known failure test on Windows.\n\nCloses gh-4907", "commit_timestamp": "2014-01-28T23:41:36Z", "files": ["IPython/core/tests/test_run.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmRhMzgwMWUzYzQ4Y2U1ZDBkM2RkMGI5ZmQwMDFjNTQwYTM0YTFjMmI=", "commit_message": "Mark known failure test on Windows.\n\nCloses gh-4907", "commit_timestamp": "2014-01-28T23:41:36Z", "files": ["IPython/core/tests/test_run.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzpmNGIxZDBhMDY0YjJmMmNhNTA4MTk1OTQ3ZjdjMTJlNTVlNmM4Zjg4", "commit_message": "Mark known failure test on Windows.\n\nCloses gh-4907", "commit_timestamp": "2014-01-28T23:41:36Z", "files": ["IPython/core/tests/test_run.py"]}], "labels": ["windows", "bug", "testing"], "created_at": "2014-01-28T20:27:13Z", "closed_at": "2014-01-29T19:12:46Z", "method": ["label", "regex"]}
{"issue_number": 4906, "title": "Test for IPython.embed() fails on Windows", "body": "Looks like our banner isn't getting printed or captured for some reason.\n\n```\n======================================================================\nFAIL: test that `IPython.embed()` works\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"S:\\Users\\slave\\Jenkins\\shiningpanda\\jobs\\671a3b23\\virtualenvs\\ff035a1d\\lib\\site-packages\\nose\\case.py\", line 198, in runTest\n    self.test(*self.arg)\n  File \"S:\\Users\\slave\\Jenkins\\shiningpanda\\jobs\\671a3b23\\virtualenvs\\ff035a1d\\lib\\site-packages\\ipython-2.0.0_dev-py3.3.egg\\IPython\\terminal\\tests\\test_embed.py\", line 52, in test_ipython_embed\n    nt.assert_in('IPython', std)\nnose.proxy.AssertionError: 'IPython' not found in '3 . 14\\r\\n\\r\\n\\x01\\x1b[0;32m\\x02In [\\x01\\x1b[1;32m\\x021\\x01\\x1b[0;32m\\x02]: \\x01\\x1b[0m\\x02\\r\\nbye!\\r\\n'\n    \"\"\"Fail immediately, with the given message.\"\"\"\n>>  raise self.failureException(\"'IPython' not found in '3 . 14\\\\r\\\\n\\\\r\\\\n\\\\x01\\\\x1b[0;32m\\\\x02In [\\\\x01\\\\x1b[1;32m\\\\x021\\\\x01\\\\x1b[0;32m\\\\x02]: \\\\x01\\\\x1b[0m\\\\x02\\\\r\\\\nbye!\\\\r\\\\n'\")\n```\n", "commits": [{"node_id": "MDY6Q29tbWl0MTIzNjAwMzo2OGNlZjAwMGM3MTRkZTIxOWQxNzdjOTIxZjk0ODM0YzA4YjQ3Mzc2", "commit_message": "Skip failing test part on Windows\n\nCloses gh-4906", "commit_timestamp": "2014-01-28T23:33:17Z", "files": ["IPython/terminal/tests/test_embed.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjY4Y2VmMDAwYzcxNGRlMjE5ZDE3N2M5MjFmOTQ4MzRjMDhiNDczNzY=", "commit_message": "Skip failing test part on Windows\n\nCloses gh-4906", "commit_timestamp": "2014-01-28T23:33:17Z", "files": ["IPython/terminal/tests/test_embed.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo4MTE4Yzg2YzIxYmMzNGRkZjg1YzdmNDIyYjlkY2MyMGI3YTJmYjBl", "commit_message": "Skip failing test part on Windows\n\nCloses gh-4906", "commit_timestamp": "2014-01-28T23:33:17Z", "files": ["IPython/terminal/tests/test_embed.py"]}], "labels": ["windows", "bug", "testing"], "created_at": "2014-01-28T20:25:23Z", "closed_at": "2014-01-29T19:12:46Z", "method": ["label", "regex"]}
{"issue_number": 4863, "title": "BUG: cannot create an OBJECT array from memory buffer", "body": "I found a problem with the IPython.parallel (v1.1.0) cluster that is similar but not identical to [this stackoverflow question](http://stackoverflow.com/questions/17013457/ipython-parallel-valueerror-cannot-create-an-object-array-from-memory-buffer).\nMy guess is that IPython has an optimized way to return numpy arrays from the cluster, but it fails on numpy arrays with `dtype=object`.\nThis runs as expected:\n\n```\nfrom IPython.parallel import Client\nc = Client()\nlv = c.load_balanced_view()\nimport numpy\nc[:].execute('import numpy')\n\ndef foo(i):\n    a = numpy.zeros(3); a.fill(1)\n    return a\ndef bar(i):\n    a = numpy.zeros(3, dtype=object); a.fill(1)\n    return a\ndef bar_wrapped(i):\n    a = numpy.zeros(3, dtype=object); a.fill(1)\n    return {'a': a }\n\nprint(foo(1))\nprint(bar(1))\nprint(bar_wrapped(1))\n```\n\nAny of these lines work\n\n```\nlv.map_sync(foo, range(5))\nlv.apply_sync(foo, 1)\nlv.map_sync(bar_wrapped, range(5))\n```\n\nOn the other hand, any of these lines give the error:\n\n```\nlv.map_sync(bar, range(5))\nlv.apply_sync(bar, 1)\nlv.apply_sync(bar_wrapped, 1)\n```\n\n```\nValueError: cannot create an OBJECT array from memory buffer\n```\n\nFurthermore, after attempting map on bar, any other attempts to map/apply any of the functions will fail with the same error. Note that this doesn't happen for apply on bar or apply on bar_wrapped\nRestarting the notebook (no need to restart the cluster), will fix the problem (i.e. you can map on foo again)\n\nMy system information: (This happened on both Windows/Linux)\n\n```\n{'codename': 'An Afternoon Hack',\n 'commit_hash': '7c2ea3a',\n 'commit_source': 'installation',\n 'default_encoding': 'cp437',\n 'ipython_path': 'C:\\\\Python33\\\\lib\\\\site-packages\\\\IPython',\n 'ipython_version': '1.1.0',\n 'os_name': 'nt',\n 'platform': 'Windows-7-6.1.7601-SP1',\n 'sys_executable': 'C:\\\\Python33\\\\python.exe',\n 'sys_platform': 'win32',\n 'sys_version': '3.3.2 (v3.3.2:d047928ae3f6, May 16 2013, 00:03:43) [MSC v.1600 32 bit (Intel)]'}\n```\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU5NDQ2OjUxYzU1N2RmN2UwMDgwM2YzMWQyOTAxMzY5MDA1ZGYzYTY4OWRjMTg=", "commit_message": "pickle arrays with dtype=object\n\ncan't use memory views on these\n\ncloses #4863", "commit_timestamp": "2014-01-29T21:18:58Z", "files": ["IPython/parallel/tests/test_view.py", "IPython/utils/pickleutil.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo2N2IxMTJiYjc5N2U0ZDg3Y2I0OWU3NWNhOGFiNDhiMjI3NmY5NTNk", "commit_message": "pickle arrays with dtype=object\n\ncan't use memory views on these\n\ncloses #4863", "commit_timestamp": "2014-01-29T21:18:58Z", "files": ["IPython/parallel/tests/test_view.py", "IPython/utils/pickleutil.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmNiMDY3ODU1NDk5NjJmMWZjZGQ4NTJhN2ViNDg4ZDRhOGRiOGIzMTk=", "commit_message": "Merge pull request #4937 from minrk/object-dtype\n\npickle arrays with dtype=object", "commit_timestamp": "2014-01-31T19:54:30Z", "files": ["IPython/parallel/tests/test_view.py", "IPython/utils/pickleutil.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmNiMDY3ODU1NDk5NjJmMWZjZGQ4NTJhN2ViNDg4ZDRhOGRiOGIzMTk=", "commit_message": "Merge pull request #4937 from minrk/object-dtype\n\npickle arrays with dtype=object", "commit_timestamp": "2014-01-31T19:54:30Z", "files": ["IPython/parallel/tests/test_view.py", "IPython/utils/pickleutil.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzpiYTc1MGFhYWI0ZDlkNDQ2MmMyMDQ0OGE5NzYzMjIzYjM0YzY4ZTI3", "commit_message": "Merge pull request #4937 from minrk/object-dtype\n\npickle arrays with dtype=object", "commit_timestamp": "2014-01-31T19:54:30Z", "files": ["IPython/parallel/tests/test_view.py", "IPython/utils/pickleutil.py"]}], "labels": ["parallel"], "created_at": "2014-01-24T15:58:35Z", "closed_at": "2014-01-31T19:54:30Z", "linked_pr_number": [4863], "method": ["regex"]}
{"issue_number": 4839, "title": "Error in Session.send_raw()", "body": "I believe that the line:\nhttps://github.com/ipython/ipython/blob/master/IPython/kernel/zmq/session.py#L682\n\nstream.send_multipart(msg_list, flags, copy=copy)\n\nshould be:\n\nstream.send_multipart(to_send, flags, copy=copy)\n", "commits": [{"node_id": "MDY6Q29tbWl0MTYxMDIyMjc6NDI1YjgyMjlmMGZlZTRlN2UyMTA2NzA4Mzg4M2Q2MjkxYjA2OWIyNw==", "commit_message": "Error in Session.send_raw()\n\nAddresses issue ipython/ipython/#4839.", "commit_timestamp": "2014-01-21T12:52:38Z", "files": ["IPython/kernel/zmq/session.py"]}, {"node_id": "MDY6Q29tbWl0MTYxMDIyMjc6NzYzODJkYzgxMjNjZGQwYjljYjRlYzkzZmM4YmZiNTJjODI1NDdkZg==", "commit_message": "Added test_send_raw() for issue #4839, see pull request 4840", "commit_timestamp": "2014-01-21T15:48:14Z", "files": ["IPython/kernel/zmq/tests/test_session.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjViZjYxMTA5NWIwYWNkZmNjZjYzNDBmNWNmNjg4NTA0M2U5N2FhNzU=", "commit_message": "Backport PR #4840: Error in Session.send_raw()\n\nAddresses issue ipython/ipython/#4839.\n\n(This is my first pull request, and first contribution to ipython, so should be checked to make sure that my assumption about the problem is correct).", "commit_timestamp": "2014-01-28T23:46:33Z", "files": ["IPython/kernel/zmq/session.py", "IPython/kernel/zmq/tests/test_session.py"]}, {"node_id": "MDY6Q29tbWl0NDAwNDYyNjphOWE1M2QwZDhiYzM1OGVlMjg1ZGMwODJkNmJjMjgzNjYyY2MxZDgy", "commit_message": "Backport PR #4840: Error in Session.send_raw()\n\nAddresses issue ipython/ipython/#4839.\n\n(This is my first pull request, and first contribution to ipython, so should be checked to make sure that my assumption about the problem is correct).", "commit_timestamp": "2014-02-18T13:42:38Z", "files": ["IPython/kernel/zmq/session.py", "IPython/kernel/zmq/tests/test_session.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzpjZGYyOTJjNTAzZDgzMTI0N2MwMmY2OWNkMTNjZjBlOTlhYTI3MThk", "commit_message": "Error in Session.send_raw()\n\nAddresses issue ipython/ipython/#4839.", "commit_timestamp": "2014-01-21T12:52:38Z", "files": ["IPython/kernel/zmq/session.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzpiNjY1NTNkZTE0NTI2NDg5YmRkZTFlM2ZiNTg5MzdhOGY4ZjdjY2Q5", "commit_message": "Added test_send_raw() for issue #4839, see pull request 4840", "commit_timestamp": "2014-01-21T15:48:14Z", "files": ["IPython/kernel/zmq/tests/test_session.py"]}], "labels": ["bug"], "created_at": "2014-01-21T12:37:24Z", "closed_at": "2014-03-05T01:44:26Z", "method": ["label"]}
{"issue_number": 4835, "title": "running ipython on python files adds an extra traceback frame", "body": "If you make a file `test.py` that throws a trivial error, and then run it with `ipython test.py`, you get an extra frame in the traceback:\n\n```\nroot@8e0bcc11822a:~# ipython test.py\n---------------------------------------------------------------------------\nZeroDivisionError                         Traceback (most recent call last)\n/usr/lib/python2.7/dist-packages/IPython/utils/py3compat.pyc in execfile(fname, *where)\n    173             else:\n    174                 filename = fname\n--> 175             __builtin__.execfile(filename, *where)\n\n/home/coderpad/test.py in <module>()\n      2 while x < 10:\n      3   x += 1\n----> 4   10 / (5 - x)\n      5\n      6 print x\n\nZeroDivisionError: integer division or modulo by zero\nroot@8e0bcc11822a:~# ipython --version\n0.12.1\n```\n\nIs there some way to configure the traceback formatted for file runs to drop the topmost frame? I know that the console does this in places, but I have no idea how to achieve that for script runs.\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU5NDQ2Ojc1NjE4ZGYzODYxODczNDJkMDQxYWYyOTAzMTkxMTcwMTg3NzFiMzg=", "commit_message": "fix tb_offset when running a file\n\neither with %run or via `ipython script.py`\n\nsince we wrap execfile, the tb_offset needs to be 2 instead of the default (1).\n\ncloses #4835", "commit_timestamp": "2014-01-24T01:41:05Z", "files": ["IPython/core/interactiveshell.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzplZmEyZTMyMTYyYmY2YmY2NDU5NjhhZjFmOTFmYWU2YjcyYWRkYjE2", "commit_message": "fix tb_offset when running a file\n\neither with %run or via `ipython script.py`\n\nsince we wrap execfile, the tb_offset needs to be 2 instead of the default (1).\n\ncloses #4835", "commit_timestamp": "2014-01-24T01:41:05Z", "files": ["IPython/core/interactiveshell.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmY2ZTI1OThkMmY1NTVjNDE1ZGNlMDJlNzM5ZDA0MDc3YTMzNzU0NzA=", "commit_message": "Merge pull request #4858 from minrk/execfile-offset\n\nfix tb_offset when running a file", "commit_timestamp": "2014-01-24T23:40:01Z", "files": ["IPython/core/interactiveshell.py", "IPython/core/tests/test_run.py", "IPython/utils/py3compat.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmY2ZTI1OThkMmY1NTVjNDE1ZGNlMDJlNzM5ZDA0MDc3YTMzNzU0NzA=", "commit_message": "Merge pull request #4858 from minrk/execfile-offset\n\nfix tb_offset when running a file", "commit_timestamp": "2014-01-24T23:40:01Z", "files": ["IPython/core/interactiveshell.py", "IPython/core/tests/test_run.py", "IPython/utils/py3compat.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzpkNzBiYzcyZjExZmZjMTI5ZGZlNTZiMWYyNzdmZGNhZjZhNTAxOGE0", "commit_message": "Merge pull request #4858 from minrk/execfile-offset\n\nfix tb_offset when running a file", "commit_timestamp": "2014-01-24T23:40:01Z", "files": ["IPython/core/interactiveshell.py", "IPython/core/tests/test_run.py", "IPython/utils/py3compat.py"]}], "labels": ["bug"], "created_at": "2014-01-20T17:00:24Z", "closed_at": "2014-01-24T23:40:01Z", "linked_pr_number": [4835], "method": ["label"]}
{"issue_number": 4810, "title": "ipcluster bug in clean_logs flag", "body": "Setting clean_logs=True when using the IPClusterEngines application doesn't remove the log files.  The offending line is at parallel/apps/ipclusterapp.py line 404 in IPClusterEngines.start_logging() which looks like this:\n\n```\nif re.match(r'ip(engine|controller)z-\\d+\\.(log|err|out)',f):\n```\n\nThe 'z' after controller) should be removed.\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU5NDQ2OmFmOThhODA4NzY1ZTI3YzlmZTZmNDI3MzdjYTMxNGY4ODkzM2JjYTA=", "commit_message": "fix regex for cleaning old logs with ipcluster\n\nit still had the 'z' suffix from ages and ages ago, so no files would ever match.\n\ncloses #4810", "commit_timestamp": "2014-01-17T16:53:43Z", "files": ["IPython/parallel/apps/ipclusterapp.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmI5YTNjMTkyNWRjMjc2MTcxZjVhMzUwNDc4NDYwYzliNDk3Mzc2NjY=", "commit_message": "Backport PR #4820: fix regex for cleaning old logs with ipcluster\n\nIt still had the 'z' suffix from ages and ages ago, so no files would ever match.\n\ncloses #4810", "commit_timestamp": "2014-01-28T23:40:59Z", "files": ["IPython/parallel/apps/ipclusterapp.py"]}, {"node_id": "MDY6Q29tbWl0NDAwNDYyNjo0MGE4ODY4NDAxMzBhOGEyZWEyOTE2ZjM2Mjc4YWRmMjc5YjQzODkz", "commit_message": "Backport PR #4820: fix regex for cleaning old logs with ipcluster\n\nIt still had the 'z' suffix from ages and ages ago, so no files would ever match.\n\ncloses #4810", "commit_timestamp": "2014-02-18T13:42:38Z", "files": ["IPython/parallel/apps/ipclusterapp.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzpjYmYxNWJkM2NmOWM2ZDk4ZThlNGNhNWRkMjAzMGQyYjE3NTUyNmQ5", "commit_message": "fix regex for cleaning old logs with ipcluster\n\nit still had the 'z' suffix from ages and ages ago, so no files would ever match.\n\ncloses #4810", "commit_timestamp": "2014-01-17T16:53:43Z", "files": ["IPython/parallel/apps/ipclusterapp.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjAzZDlmZGUyOTZjOTdhZDRmNjVlZDI4YTBkM2U1N2FjMjlkNTAwOTY=", "commit_message": "Merge pull request #4820 from minrk/super-old-z\n\nfix regex for cleaning old logs with ipcluster", "commit_timestamp": "2014-01-22T08:58:18Z", "files": ["IPython/parallel/apps/ipclusterapp.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjAzZDlmZGUyOTZjOTdhZDRmNjVlZDI4YTBkM2U1N2FjMjlkNTAwOTY=", "commit_message": "Merge pull request #4820 from minrk/super-old-z\n\nfix regex for cleaning old logs with ipcluster", "commit_timestamp": "2014-01-22T08:58:18Z", "files": ["IPython/parallel/apps/ipclusterapp.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmI5YTNjMTkyNWRjMjc2MTcxZjVhMzUwNDc4NDYwYzliNDk3Mzc2NjY=", "commit_message": "Backport PR #4820: fix regex for cleaning old logs with ipcluster\n\nIt still had the 'z' suffix from ages and ages ago, so no files would ever match.\n\ncloses #4810", "commit_timestamp": "2014-01-28T23:40:59Z", "files": ["IPython/parallel/apps/ipclusterapp.py"]}, {"node_id": "MDY6Q29tbWl0NDAwNDYyNjo0MGE4ODY4NDAxMzBhOGEyZWEyOTE2ZjM2Mjc4YWRmMjc5YjQzODkz", "commit_message": "Backport PR #4820: fix regex for cleaning old logs with ipcluster\n\nIt still had the 'z' suffix from ages and ages ago, so no files would ever match.\n\ncloses #4810", "commit_timestamp": "2014-02-18T13:42:38Z", "files": ["IPython/parallel/apps/ipclusterapp.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzoxODk5NGY3ZWMwZTk4Nzg3ZjU3ZWI0NDZmNTg0NzFlNjE5NmM2NTcw", "commit_message": "Merge pull request #4820 from minrk/super-old-z\n\nfix regex for cleaning old logs with ipcluster", "commit_timestamp": "2014-01-22T08:58:18Z", "files": ["IPython/parallel/apps/ipclusterapp.py"]}], "labels": [], "created_at": "2014-01-16T17:04:45Z", "closed_at": "2014-01-22T08:58:18Z", "linked_pr_number": [4810], "method": ["regex"]}
{"issue_number": 4783, "title": "ipython 2dev  under windows / (win)python 3.3 experiment", "body": "Unless I did something wrong in my update process, I remark the following \n\nOn the notebook :\nlink \"Help ->editor Shortcuts\" is broken (404)\n(points to http://ipython.org/ipython-doc/dev/interactive/cm_keyboard.html )\n\ntrying the pidigits parrallel example, I get \n%load parallelpi.py\n(run) ....AttributeError: 'module' object has no attribute 'urlretrieve'\n\n![pi_parallel](https://f.cloud.github.com/assets/4312421/1893963/8877904e-7ac6-11e3-92b3-49c0e7f308c5.JPG)\n\nIf I download manually, then I hit another issue \n![pi_parallel2](https://f.cloud.github.com/assets/4312421/1894001/a114d2fe-7ac8-11e3-95fa-b0eac79f8628.JPG)\n\nDid i miss something ?\n\nNota : I upgraded via C:\\Users...\\GitHub\\ipython>pip install -e \".[notebook]\" --upgrade\n\nThe new modal is very pleasant, AFTER you  have discovered the tutorial.\n\nshouldn't you place a link in  the README.rst  , to avoid a long stressing \"windows 8\" moment ?\n\n(a possible memo could be an image showing the shortcuts if your mouse is going over a keyboard icon)\n\nhttp://nbviewer.ipython.org/github/ipython/ipython/blob/master/examples/notebooks/User%20Interface.ipynb\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU4NTE4OjExOTQ3YTY3MmE3MTY4ZmE5MTBjNzI2MzA2NzcwYzc1MmY3MzlmMDU=", "commit_message": "Merge pull request #4794 from stonebig/python3_example_fix\n\nCompatibility fix for Python3 (Issue #4783 )", "commit_timestamp": "2014-01-14T23:28:08Z", "files": ["examples/parallel/davinci/pwordfreq.py", "examples/parallel/pi/pidigits.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo4N2VlNjgwODNhMTQ0MDc5Y2ExNmRlODQxNWFlYjQ3NjBhZWNkYTRh", "commit_message": "Merge pull request #4794 from stonebig/python3_example_fix\n\nCompatibility fix for Python3 (Issue #4783 )", "commit_timestamp": "2014-01-14T23:28:08Z", "files": ["examples/parallel/davinci/pwordfreq.py", "examples/parallel/pi/pidigits.py"]}], "labels": [], "created_at": "2014-01-11T13:42:51Z", "closed_at": "2014-01-14T23:28:59Z", "method": ["regex"]}
{"issue_number": 4769, "title": "Ipython 2.0 will not startup on py27 on windows", "body": "My attempt of using ipython 2.0dev was a bust.  Ipython installed from sources using \n\n```\npython setup.py install\n```\n\nsucceeds.\n\nThen when I try to run ipython, it won't start:\n\n```\n...\nInstalled c:\\python27\\lib\\site-packages\\ipython-2.0.0_dev-py2.7.egg\nProcessing dependencies for ipython==2.0.0-dev\nFinished processing dependencies for ipython==2.0.0-dev\n\nC:\\Users\\Belli\\ipython>ipython\nTraceback (most recent call last):\n  File \"C:\\Python27\\Scripts\\ipython-script.py\", line 9, in <module>\n    load_entry_point('ipython==2.0.0-dev', 'console_scripts', 'ipython')()\n  File \"c:\\Python27\\lib\\site-packages\\ipython-2.0.0_dev-py2.7.egg\\IPython\\__init__.py\", line 118, in start_ipython\n    return launch_new_instance(argv=argv, **kwargs)\n  File \"c:\\Python27\\lib\\site-packages\\ipython-2.0.0_dev-py2.7.egg\\IPython\\config\\application.py\", line 565, in launch_instance\n    app.initialize(argv)\n  File \"<string>\", line 2, in initialize\n  File \"c:\\Python27\\lib\\site-packages\\ipython-2.0.0_dev-py2.7.egg\\IPython\\config\\application.py\", line 92, in catch_config_error\n    return method(app, *args, **kwargs)\n  File \"c:\\Python27\\lib\\site-packages\\ipython-2.0.0_dev-py2.7.egg\\IPython\\terminal\\ipapp.py\", line 325, in initialize\n    self.init_shell()\n  File \"c:\\Python27\\lib\\site-packages\\ipython-2.0.0_dev-py2.7.egg\\IPython\\terminal\\ipapp.py\", line 341, in init_shell\n    ipython_dir=self.ipython_dir, user_ns=self.user_ns)\n  File \"c:\\Python27\\lib\\site-packages\\ipython-2.0.0_dev-py2.7.egg\\IPython\\config\\configurable.py\", line 353, in instance\n    inst = cls(*args, **kwargs)\n  File \"c:\\Python27\\lib\\site-packages\\ipython-2.0.0_dev-py2.7.egg\\IPython\\terminal\\interactiveshell.py\", line 328, in __init__\n    **kwargs\n  File \"c:\\Python27\\lib\\site-packages\\ipython-2.0.0_dev-py2.7.egg\\IPython\\core\\interactiveshell.py\", line 506, in __init__\n    self.init_alias()\n  File \"c:\\Python27\\lib\\site-packages\\ipython-2.0.0_dev-py2.7.egg\\IPython\\terminal\\interactiveshell.py\", line 383, in init_alias\n    for name, cmd in aliases:\nUnboundLocalError: local variable 'aliases' referenced before assignment\n\nIf you suspect this is an IPython bug, please report it at:\n    https://github.com/ipython/ipython/issues\nor send an email to the mailing list at ipython-dev@scipy.org\n```\n", "commits": [{"node_id": "MDY6Q29tbWl0MjM0NDA3MzoxYjFjMzhiYmU3NDg1YWVhMzRmMWJhODYyZjU3ZDBjNjY3ZTIyMTk5", "commit_message": "alway define aliases, even if empty\n\ncloses gh-4769", "commit_timestamp": "2014-01-08T15:55:35Z", "files": ["IPython/terminal/interactiveshell.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzoxZTMxM2I1ZWU1MzkxNWY0ZjQ5YjcxMGI4NjViMjAxZTQ5Mzk2NDUw", "commit_message": "alway define aliases, even if empty\n\ncloses gh-4769", "commit_timestamp": "2014-01-08T15:55:35Z", "files": ["IPython/terminal/interactiveshell.py"]}], "labels": [], "created_at": "2014-01-08T14:57:31Z", "closed_at": "2014-01-08T17:06:00Z", "method": ["regex"]}
{"issue_number": 4759, "title": "Application._load_config_files log parameter default fails", "body": "The files `examples/tests/embed/embed[1-3].py` are failing with an error like this:\n\n```\nTraceback (most recent call last):\n  File \"embed1.py\", line 10, in <module>\n    bar(f)\n  File \"embed1.py\", line 8, in bar\n    IPython.embed(banner1='check f in globals, foo in locals')\n  File \"/home/takluyver/.local/lib/python3.3/site-packages/IPython/terminal/embed.py\", line 287, in embed\n    config = load_default_config()\n  File \"/home/takluyver/.local/lib/python3.3/site-packages/IPython/terminal/ipapp.py\", line 379, in load_default_config\n    for cf in Application._load_config_files(\"ipython_config\", path=profile_dir):\n  File \"/home/takluyver/.local/lib/python3.3/site-packages/IPython/config/application.py\", line 527, in _load_config_files\n    log.debug(\"Loaded config file: %s\", loader.full_filename)\nAttributeError: 'NoneType' object has no attribute 'debug'\n```\n\n`_load_config_files` has a log parameter with a default of None. It should either be required, or it should do something sensible when it gets the default.\n", "commits": [{"node_id": "MDY6Q29tbWl0NzUzNzY4OjJkY2U3YThhYzUwZmMwNjVhNTNhMjJkNzA3NzAxY2ZkNTljYWZhOWY=", "commit_message": "cleaner string/bytes solution, closes #4759\n\nThanks @takluyver for the suggestion. I'll eventually learn this\nstrings/bytes/unicode stuff properly for Python3.", "commit_timestamp": "2014-01-24T02:24:01Z", "files": ["IPython/terminal/tests/test_embed.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjJkY2U3YThhYzUwZmMwNjVhNTNhMjJkNzA3NzAxY2ZkNTljYWZhOWY=", "commit_message": "cleaner string/bytes solution, closes #4759\n\nThanks @takluyver for the suggestion. I'll eventually learn this\nstrings/bytes/unicode stuff properly for Python3.", "commit_timestamp": "2014-01-24T02:24:01Z", "files": ["IPython/terminal/tests/test_embed.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo5ZDc3YzNkZmRkNWFiMmQ0YjZlYTVkNzY2Nzg3YzgxOTJkMDhmNWZh", "commit_message": "cleaner string/bytes solution, closes #4759\n\nThanks @takluyver for the suggestion. I'll eventually learn this\nstrings/bytes/unicode stuff properly for Python3.", "commit_timestamp": "2014-01-24T02:24:01Z", "files": ["IPython/terminal/tests/test_embed.py"]}], "labels": ["bug"], "created_at": "2014-01-06T19:26:05Z", "closed_at": "2014-01-27T19:39:42Z", "method": ["label", "regex"]}
{"issue_number": 4728, "title": "Copy/Paste stripping broken in version > 0.13.x in QTConsole", "body": "This bug has kept me on 0.13.x for as long as I can remember. Every time\nI decided to open a bug report I'd fire up QTconsole and make sure it\nwasn't fixed in master already. And evertyime It was. And I would happily switch,\nand in a day or so the bug always reappeard, and It seemed as if I was losing my mind. \n\nGladly, not so. Finally nailed it.\n\nWhen Ipython is in the following state:\n\n```\nIn [1]: \"\"\"\n   ...: just\n   ...: some\n   ...: foo\n   ...: and bar\n   ...: \"\"\"\n```\n\nMarking the entire context with mouse and copying removes the leading\ndots and let's you paste your code into your code editor. As it should.\n\n```\nIn [2]: \"\"\"\n   ...: just\n   ...: some\n   ...: foo\n   ...: and bar\n   ...: \"\"\"\n```\n\nThat works too.\n\n```\nIn [10]: \"\"\"\n   ...: just\n   ...: some\n   ...: foo\n   ...: and bar\n   ...: \"\"\"\n```\n\nThis only strips the prompt from the first line. See it?\n\nMonths. Literally Months to figure this out.\n\nRelated #3323, #3206\n\ncc @takluyver \n", "commits": [{"node_id": "MDY6Q29tbWl0MTIzNjAwMzpiYjU2ZTZiNWU4YTY1YjA2OWIxOTJlYzIzMTNlNjBiZjA3YmQxMzg0", "commit_message": "Add failing test for issue gh-4728", "commit_timestamp": "2013-12-21T21:39:28Z", "files": ["IPython/core/tests/test_inputtransformer.py"]}, {"node_id": "MDY6Q29tbWl0MTIzNjAwMzoxMTM5NjFiYmJjNDlhZjhiNmNjMDk3ZWVkZGU3MGEzZGZkMzdhMTA2", "commit_message": "Fix InputTransformer to strip Qt console continuation prompts.\n\nCloses gh-4728\n\nThanks to the excellent detective work by @y-p, this was an easy fix.", "commit_timestamp": "2013-12-21T21:40:42Z", "files": ["IPython/core/inputtransformer.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjExMzk2MWJiYmM0OWFmOGI2Y2MwOTdlZWRkZTcwYTNkZmQzN2ExMDY=", "commit_message": "Fix InputTransformer to strip Qt console continuation prompts.\n\nCloses gh-4728\n\nThanks to the excellent detective work by @y-p, this was an easy fix.", "commit_timestamp": "2013-12-21T21:40:42Z", "files": ["IPython/core/inputtransformer.py"]}, {"node_id": "MDY6Q29tbWl0Nzc2ODA5MTo5MDRkYjdkNTQ2ZWQxYTgxYzZlNDg2ZDY1MWQzYzRmYzFhOWFhMDU0", "commit_message": "Add failing test for issue gh-4728", "commit_timestamp": "2014-01-02T01:08:53Z", "files": ["IPython/core/tests/test_inputtransformer.py"]}, {"node_id": "MDY6Q29tbWl0Nzc2ODA5MTpjNDUxZmMyODlhYzNkMzQ2NjUyZTY5M2Q5ODA2NmY3MmI1ODRkOGU1", "commit_message": "Fix InputTransformer to strip Qt console continuation prompts.\n\nCloses gh-4728\n\nThanks to the excellent detective work by @y-p, this was an easy fix.", "commit_timestamp": "2014-01-02T01:08:53Z", "files": ["IPython/core/inputtransformer.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo0ZTFmOTk4MDE4MjY3ZGIwNTk4ZDk5ODFkZmRkYTQ3MmZlODUyMTdm", "commit_message": "Add failing test for issue gh-4728", "commit_timestamp": "2013-12-21T21:39:28Z", "files": ["IPython/core/tests/test_inputtransformer.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzplOTE3YzAzZDFmYmI0MDllNTk0M2QyMmU3ZjdmNGQ5Mjk0ZDFiMzBm", "commit_message": "Fix InputTransformer to strip Qt console continuation prompts.\n\nCloses gh-4728\n\nThanks to the excellent detective work by @y-p, this was an easy fix.", "commit_timestamp": "2013-12-21T21:40:42Z", "files": ["IPython/core/inputtransformer.py"]}], "labels": [], "created_at": "2013-12-21T21:15:13Z", "closed_at": "2013-12-22T00:05:07Z", "method": ["regex"]}
{"issue_number": 4704, "title": "Subcommand `profile` ignores --ipython-dir ", "body": "Hi\n\n`ipython profile create --ipython-dir=<local-dir> --reset` ignores `--ipython-dir` option and overwrites the default profile in `$HOME/.ipython`.\n\nI'm using IPython from the current master with Python 2.7.5 on Mac OS X.  The below is the output I got with --debug option.  It says that `IPYTHONDIR` is set to `$HOME/.ipython`, but I have not set the variable at all.\n\n```\n[~/Desktop]$ \\ipython profile create --ipython-dir=tmp --reset --debug\n[ProfileCreate] Config changed:\n[ProfileCreate] {'ProfileCreate': {'ipython_dir': u'tmp', 'log_level': 10, 'overwrite': True}}\n[ProfileCreate] Using existing profile dir: u'tmp/profile_default'\n[ProfileCreate] IPYTHONDIR set to: /Users/takeshi/.ipython\n[ProfileCreate] Using existing profile dir: u'/Users/takeshi/.ipython/profile_default'\n[ProfileCreate] Generating default config file: u'/Users/takeshi/.ipython/profile_default/ipython_config.py'\n[ProfileCreate] IPYTHONDIR set to: /Users/takeshi/.ipython\n[ProfileCreate] Using existing profile dir: u'/Users/takeshi/.ipython/profile_default'\n[ProfileCreate] Generating default config file: u'/Users/takeshi/.ipython/profile_default/ipython_qtconsole_config.py'\n[ProfileCreate] IPYTHONDIR set to: /Users/takeshi/.ipython\n[ProfileCreate] Using existing profile dir: u'/Users/takeshi/.ipython/profile_default'\n[ProfileCreate] Generating default config file: u'/Users/takeshi/.ipython/profile_default/ipython_notebook_config.py'\n[ProfileCreate] IPYTHONDIR set to: /Users/takeshi/.ipython\n[ProfileCreate] Using existing profile dir: u'/Users/takeshi/.ipython/profile_default'\n[ProfileCreate] Generating default config file: u'/Users/takeshi/.ipython/profile_default/ipython_nbconvert_config.py'\n[ProfileCreate] Searching path [u'/Users/takeshi/Desktop', u'tmp/profile_default'] for config files\n[ProfileCreate] Attempting to load config file: ipython_config.py\n[ProfileCreate] Config file ipython_config.py not found\n[ProfileCreate] Attempting to load config file: ipython_profile_config.py\n[ProfileCreate] Config file not found, skipping: ipython_profile_config.py\n```\n\nThanks,\n\nTakeshi\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU5NDQ2OjdjODIyNzYzYzMwYmZmODQ5YWY5NDU5ZjVlNWZmOTM5ZDM2YmJmMjA=", "commit_message": "`ipython profile create` respects `--ipython-dir`\n\ncloses #4704", "commit_timestamp": "2014-01-29T20:42:09Z", "files": ["IPython/core/profileapp.py", "IPython/core/tests/test_profile.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmUzODYxMmEwMDlkNTc3NGFhNjQ4MTM5ZjUxZjM0NGFiOTliMWNiN2I=", "commit_message": "Backport PR #4934: `ipython profile create` respects `--ipython-dir`\n\ncloses #4704", "commit_timestamp": "2014-01-31T19:40:49Z", "files": ["IPython/core/profileapp.py", "IPython/core/tests/test_profile.py"]}, {"node_id": "MDY6Q29tbWl0NDAwNDYyNjpkNjg0YzdmODg0MTU1Yjg4MjAyYjg4ZTk1Mjg3ZTk4MmIzNzhhNTJm", "commit_message": "Backport PR #4934: `ipython profile create` respects `--ipython-dir`\n\ncloses #4704", "commit_timestamp": "2014-02-18T13:42:39Z", "files": ["IPython/core/profileapp.py", "IPython/core/tests/test_profile.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzoxYzUwOWVhZDEyMWI1ZjAwZDhjZTdiZWU3NTkyY2Y0OThmMjBiOTgy", "commit_message": "`ipython profile create` respects `--ipython-dir`\n\ncloses #4704", "commit_timestamp": "2014-01-29T20:42:09Z", "files": ["IPython/core/profileapp.py", "IPython/core/tests/test_profile.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmI5YmEwODlhZWVmZmZjNDk3ZmIyNTU4YjE0N2Y2YjM1OWMwMjg1MGE=", "commit_message": "Merge pull request #4934 from minrk/profile-ipython-dir\n\n`ipython profile create` respects `--ipython-dir`", "commit_timestamp": "2014-01-31T19:38:43Z", "files": ["IPython/core/profileapp.py", "IPython/core/tests/test_profile.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmI5YmEwODlhZWVmZmZjNDk3ZmIyNTU4YjE0N2Y2YjM1OWMwMjg1MGE=", "commit_message": "Merge pull request #4934 from minrk/profile-ipython-dir\n\n`ipython profile create` respects `--ipython-dir`", "commit_timestamp": "2014-01-31T19:38:43Z", "files": ["IPython/core/profileapp.py", "IPython/core/tests/test_profile.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmUzODYxMmEwMDlkNTc3NGFhNjQ4MTM5ZjUxZjM0NGFiOTliMWNiN2I=", "commit_message": "Backport PR #4934: `ipython profile create` respects `--ipython-dir`\n\ncloses #4704", "commit_timestamp": "2014-01-31T19:40:49Z", "files": ["IPython/core/profileapp.py", "IPython/core/tests/test_profile.py"]}, {"node_id": "MDY6Q29tbWl0NDAwNDYyNjpkNjg0YzdmODg0MTU1Yjg4MjAyYjg4ZTk1Mjg3ZTk4MmIzNzhhNTJm", "commit_message": "Backport PR #4934: `ipython profile create` respects `--ipython-dir`\n\ncloses #4704", "commit_timestamp": "2014-02-18T13:42:39Z", "files": ["IPython/core/profileapp.py", "IPython/core/tests/test_profile.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo2NjhjYTUwOTFkNWVmNjUyMjc3OTNlNTRhMjY1ZGQ4ZGE3NmJjNGI4", "commit_message": "Merge pull request #4934 from minrk/profile-ipython-dir\n\n`ipython profile create` respects `--ipython-dir`", "commit_timestamp": "2014-01-31T19:38:43Z", "files": ["IPython/core/profileapp.py", "IPython/core/tests/test_profile.py"]}], "labels": ["bug"], "created_at": "2013-12-16T06:27:42Z", "closed_at": "2014-01-31T19:38:43Z", "linked_pr_number": [4704], "method": ["label", "regex"]}
{"issue_number": 4615, "title": "UnicodeDecodeError", "body": "I am receiving an error running ipython from the shell. Everything was running fine a few days ago but recently I have been unable to get it running. \n\nI'm on osx mavericks and have pip installed everything in a virualenv. I have also created a new virtualenv and have the same error. Tried both V 1.1 and 1.0 but no luck\n\nthis is my python version\n\nPython 2.7.5 (default, Aug 25 2013, 00:04:04)\n[GCC 4.2.1 Compatible Apple LLVM 5.0 (clang-500.0.68)] on darwin\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\nhere is what is installed\n\nJinja2==2.7.1\nMarkupSafe==0.18\nbrewer2mpl==1.3.2\nipython==1.1.0\nmatplotlib==1.3.1\nnose==1.3.0\nnumpy==1.8.0\npandas==0.12.0\nprettyplotlib==0.1.3\npyparsing==2.0.1\npython-dateutil==2.2\npytz==2013.8\npyzmq==14.0.0\nseaborn==0.1\nsix==1.4.1\ntornado==3.1.1\nwsgiref==0.1.2\n\n-----------------error from terminal-------------------------------------\n\n(pyData)Zunayeds-MacBook-Pro:pyData zunayed$ ipython\nTraceback (most recent call last):\n  File \"/Users/zunayed/pyData/bin/ipython\", line 9, in <module>\n    load_entry_point('ipython==1.1.0', 'console_scripts', 'ipython')()\n  File \"/Users/zunayed/pyData/lib/python2.7/site-packages/IPython/**init**.py\", line 118, in start_ipython\n    return launch_new_instance(argv=argv, *_kwargs)\n  File \"/Users/zunayed/pyData/lib/python2.7/site-packages/IPython/config/application.py\", line 544, in launch_instance\n    app.initialize(argv)\n  File \"<string>\", line 2, in initialize\n  File \"/Users/zunayed/pyData/lib/python2.7/site-packages/IPython/config/application.py\", line 89, in catch_config_error\n    return method(app, *args, *_kwargs)\n  File \"/Users/zunayed/pyData/lib/python2.7/site-packages/IPython/terminal/ipapp.py\", line 323, in initialize\n    self.init_shell()\n  File \"/Users/zunayed/pyData/lib/python2.7/site-packages/IPython/terminal/ipapp.py\", line 339, in init_shell\n    ipython_dir=self.ipython_dir, user_ns=self.user_ns)\n  File \"/Users/zunayed/pyData/lib/python2.7/site-packages/IPython/config/configurable.py\", line 349, in instance\n    inst = cls(_args, *_kwargs)\n  File \"/Users/zunayed/pyData/lib/python2.7/site-packages/IPython/utils/traitlets.py\", line 424, in **new**\n    value.instance_init(inst)\n  File \"/Users/zunayed/pyData/lib/python2.7/site-packages/IPython/utils/traitlets.py\", line 255, in instance_init\n    self.set_default_value(obj)\n  File \"/Users/zunayed/pyData/lib/python2.7/site-packages/IPython/utils/traitlets.py\", line 275, in set_default_value\n    newdv = self._validate(obj, dv)\n  File \"/Users/zunayed/pyData/lib/python2.7/site-packages/IPython/utils/traitlets.py\", line 323, in _validate\n    return self.validate(obj, value)\n  File \"/Users/zunayed/pyData/lib/python2.7/site-packages/IPython/utils/traitlets.py\", line 1028, in validate\n    return unicode(value)\nUnicodeDecodeError: 'ascii' codec can't decode byte 0xc2 in position 7: ordinal not in range(128)\n\nIf you suspect this is an IPython bug, please report it at:\n    https://github.com/ipython/ipython/issues\nor send an email to the mailing list at ipython-dev@scipy.org\n\nYou can print a more detailed traceback right now with \"%tb\", or use \"%debug\"\nto interactively debug it.\n\nExtra-detailed tracebacks for bug-reporting purposes can be enabled via:\n    c.Application.verbose_crash=True\n", "commits": [{"node_id": "MDY6Q29tbWl0MTIzNjAwMzo4YmE5MDk0YTE4MzhjMjlhZmQwOWVmMzU0N2YzM2UxN2M5MGEwNjBl", "commit_message": "Fall back to default editor if $EDITOR is non-ASCII.\n\nCloses gh-4615", "commit_timestamp": "2013-12-02T21:06:44Z", "files": ["IPython/terminal/interactiveshell.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjQ3N2E5M2JmYjNkNzI5ODQwYTgwZWE2NzNmOTZiYTQ0M2VhMzE2ZjA=", "commit_message": "Merge pull request #4624 from takluyver/i4615\n\nFix crash when $EDITOR is non-ASCII\r\n\r\ncloses #4615", "commit_timestamp": "2013-12-03T18:05:46Z", "files": ["IPython/terminal/interactiveshell.py", "IPython/utils/traitlets.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzpkYTQyMmQ4ODQ5YmFhNDNmNzgzMDg2MDJlN2QzNzc2ZTAyY2UzODkz", "commit_message": "Fall back to default editor if $EDITOR is non-ASCII.\n\nCloses gh-4615", "commit_timestamp": "2013-12-02T21:06:44Z", "files": ["IPython/terminal/interactiveshell.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzpjZTBiNmJlZWM0ZWM3NDE2MjBhMDk4YzY4NzZmZDBiZWM3OWIxNDVh", "commit_message": "Merge pull request #4624 from takluyver/i4615\n\nFix crash when $EDITOR is non-ASCII\r\n\r\ncloses #4615", "commit_timestamp": "2013-12-03T18:05:46Z", "files": ["IPython/terminal/interactiveshell.py", "IPython/utils/traitlets.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjQ3N2E5M2JmYjNkNzI5ODQwYTgwZWE2NzNmOTZiYTQ0M2VhMzE2ZjA=", "commit_message": "Merge pull request #4624 from takluyver/i4615\n\nFix crash when $EDITOR is non-ASCII\r\n\r\ncloses #4615", "commit_timestamp": "2013-12-03T18:05:46Z", "files": ["IPython/terminal/interactiveshell.py", "IPython/utils/traitlets.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjQ3N2E5M2JmYjNkNzI5ODQwYTgwZWE2NzNmOTZiYTQ0M2VhMzE2ZjA=", "commit_message": "Merge pull request #4624 from takluyver/i4615\n\nFix crash when $EDITOR is non-ASCII\r\n\r\ncloses #4615", "commit_timestamp": "2013-12-03T18:05:46Z", "files": ["IPython/terminal/interactiveshell.py", "IPython/utils/traitlets.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzpjZTBiNmJlZWM0ZWM3NDE2MjBhMDk4YzY4NzZmZDBiZWM3OWIxNDVh", "commit_message": "Merge pull request #4624 from takluyver/i4615\n\nFix crash when $EDITOR is non-ASCII\r\n\r\ncloses #4615", "commit_timestamp": "2013-12-03T18:05:46Z", "files": ["IPython/terminal/interactiveshell.py", "IPython/utils/traitlets.py"]}], "labels": [], "created_at": "2013-12-01T16:48:25Z", "closed_at": "2013-12-03T18:05:46Z", "linked_pr_number": [4615], "method": ["regex"]}
{"issue_number": 4602, "title": "\"ipcluster stop\" fails after \"ipcluster start --daemonize\" using python3.3", "body": "When I use python3.3 and start ipcluster with the option --daemonize, \"ipcluster stop\" fails with the following error message.\nI could avoid this by replacing r'^\\W_\\d+' with b'^\\W_\\d+' in baseapp.py.\n\n```\n Traceback (most recent call last):\n  File \"/work/bin/ipcluster3\", line 9, in <module>\n    load_entry_point('ipython==1.1.0', 'console_scripts', 'ipcluster3')()\n  File \"/work/lib/python3.3/site-packages/IPython/config/application.py\", line 545, in launch_instance\n    app.start()\n  File \"/work/lib/python3.3/site-packages/IPython/parallel/apps/ipclusterapp.py\", line 604, in start\n    return self.subapp.start()\n  File \"/work/lib/python3.3/site-packages/IPython/parallel/apps/ipclusterapp.py\", line 195, in start\n    if not self.check_pid(pid):\n  File \"/work/lib/python3.3/site-packages/IPython/parallel/apps/baseapp.py\", line 275, in check_pid\n    pids = list(map(int, re.findall(r'^\\W*\\d+', output, re.MULTILINE)))\n  File \"/work/lib/python3.3/re.py\", line 201, in findall\n    return _compile(pattern, flags).findall(string)\nTypeError: can't use a string pattern on a bytes-like object\n```\n", "commits": [{"node_id": "MDY6Q29tbWl0MTIzNjAwMzoxMzFhNGFiYjkwMDQyNGE4NWM1NWQ0ZmYxYjI4MjFkN2FkZjNiNGUw", "commit_message": "Fix bytes regex for Python 3.\n\nCloses gh-4602", "commit_timestamp": "2013-11-27T00:32:50Z", "files": ["IPython/parallel/apps/baseapp.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo2ZTg5ZDUyODU1ZDUyZGQwZWY5ZTBjZmFmYmY0MzIwN2NmZDA0OWIx", "commit_message": "Fix bytes regex for Python 3.\n\nCloses gh-4602", "commit_timestamp": "2013-11-27T00:32:50Z", "files": ["IPython/parallel/apps/baseapp.py"]}], "labels": ["bug", "parallel"], "created_at": "2013-11-26T08:39:24Z", "closed_at": "2013-11-27T01:36:11Z", "method": ["label", "regex"]}
{"issue_number": 4598, "title": "Qtconsole docstring pop-up fails on method containing defaulted enum argument", "body": "[We've found](http://trac.mantidproject.org/mantid/ticket/8422) that an error is generated in the (admittedly rare) situation where a C++ enum is exposed to Python via boost python and included in a python function as a default to an argument. This is seen in IPython 1.1 and the current tip of master.\n\nHere's the simplest example I could come up with, though it does still require compiling C++ and linking to boost python. In a C++ file:\n\n``` c++\n#include <boost/python.hpp>\n\nenum MyEnum\n{\n  Red,\n  Yellow,\n  Blue\n};\n\nBOOST_PYTHON_MODULE(enum_test)\n{\n  using namespace boost::python;\n\n  enum_<MyEnum>(\"MyEnum\")\n    .value(\"Red\", Red)\n    .value(\"Yellow\", Yellow)\n    .value(\"Blue\", Blue);\n}\n```\n\nThis should be compiled to a shared library with something like `gcc -fPIC -I /usr/include/python2.6 -shared -o enum_test.so enum_test.cpp -lboost_python`\n\nThen, in the IPython qtconsole enter:\n\n```\nIn [1]: import enum_test\n\nIn [2]: def MyFunc(color = enum_test.MyEnum.Red):\n   ...:     pass\n   ...: \n\nIn [3]: MyFunc(\n```\n\nOn typing the opening parenthesis a stack trace will appear that culminates in:\n\n```\n  File \"/usr/lib/python2.6/site-packages/IPython/kernel/zmq/session.py\", line 83, in <lambda>\n    json_unpacker = lambda s: extract_dates(jsonapi.loads(s))\n  File \"/usr/lib64/python2.6/site-packages/zmq/utils/jsonapi.py\", line 81, in loads\n    return jsonmod.loads(s, **kwargs)\n  File \"/usr/lib64/python2.6/site-packages/simplejson/__init__.py\", line 307, in loads\n    return _default_decoder.decode(s)\n  File \"/usr/lib64/python2.6/site-packages/simplejson/decoder.py\", line 335, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File \"/usr/lib64/python2.6/site-packages/simplejson/decoder.py\", line 353, in raw_decode\n    raise ValueError(\"No JSON object could be decoded\")\n```\n\nThe string that's going into the raw_decode function of decoder.py and leads to the exception is:\n\n```\n{\"base_class\":\"<type 'function'>\",\"init_definition\":null,\"type_name\":\"function\",\"name\":\"MyFunc\",\"isclass\":null,\"namespace\":\"Interactive\",\"isalias\":false,\"init_docstring\":null,\"argspec\":{\"args\":[\"color\"],\"varkw\":null,\"defaults\":[Red],\"varargs\":null},\"source\":null,\"length\":null,\"call_def\":null,\"call_docstring\":null,\"file\":\"/home/enumproblem/<ipython-input-2-b6e10dea3e06>\",\"string_form\":\"<function MyFunc at 0x16a8de8>\",\"found\":true,\"class_docstring\":null,\"definition\":\"\\u001b[0mMyFunc\\u001b[0m\\u001b[1;33m(\\u001b[0m\\u001b[0mcolor\\u001b[0m\\u001b[1;33m=\\u001b[0m\\u001b[0menum_test\\u001b[0m\\u001b[1;33m.\\u001b[0m\\u001b[0mMyEnum\\u001b[0m\\u001b[1;33m.\\u001b[0m\\u001b[0mRed\\u001b[0m\\u001b[1;33m)\\u001b[0m\\u001b[1;33m\\u001b[0m\\u001b[0m\\n\",\"docstring\":\"<no docstring>\",\"ismagic\":false}\n```\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU5NDQ2OmU2ZjE0ZDVhNDQ5OTliNzMyMjMxOTQ2MTZiOTgxNWExMWYxOTU1N2I=", "commit_message": "re-cast int/float subclasses to int/float in json_clean\n\nProtects against custom `__str__` in int subclasses (e.g. enums).\n\nWorks around a [bug in the stdlib](http://bugs.python.org/issue12657).\n\ncloses #4598", "commit_timestamp": "2013-11-25T19:55:34Z", "files": ["IPython/utils/jsonutil.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzpkMzU2MTc5YThiMjc0MmY0NjFjMTA4ZTdmZWE5ZTkzMTM4ZGVhZjE2", "commit_message": "re-cast int/float subclasses to int/float in json_clean\n\nProtects against custom `__str__` in int subclasses (e.g. enums).\n\nWorks around a [bug in the stdlib](http://bugs.python.org/issue12657).\n\ncloses #4598", "commit_timestamp": "2013-11-25T19:55:34Z", "files": ["IPython/utils/jsonutil.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmYyZDMyYWZjYTZiYmUyMzNlZTQwOTUzNWQ2YjU3OTRmMDM0NmFkMTU=", "commit_message": "Merge pull request #4599 from minrk/json_clean_enum\n\nre-cast int/float subclasses to int/float in json_clean", "commit_timestamp": "2013-11-26T00:10:46Z", "files": ["IPython/utils/jsonutil.py", "IPython/utils/tests/test_jsonutil.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmYyZDMyYWZjYTZiYmUyMzNlZTQwOTUzNWQ2YjU3OTRmMDM0NmFkMTU=", "commit_message": "Merge pull request #4599 from minrk/json_clean_enum\n\nre-cast int/float subclasses to int/float in json_clean", "commit_timestamp": "2013-11-26T00:10:46Z", "files": ["IPython/utils/jsonutil.py", "IPython/utils/tests/test_jsonutil.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo4ZDFlYTg3YzBhYWEzMmQxNzZkMDE1MDZiODMwNTRiN2Q4OWFlODAx", "commit_message": "Merge pull request #4599 from minrk/json_clean_enum\n\nre-cast int/float subclasses to int/float in json_clean", "commit_timestamp": "2013-11-26T00:10:46Z", "files": ["IPython/utils/jsonutil.py", "IPython/utils/tests/test_jsonutil.py"]}], "labels": ["bug", "kernel"], "created_at": "2013-11-25T18:52:59Z", "closed_at": "2013-11-26T00:10:46Z", "linked_pr_number": [4598], "method": ["label", "regex"]}
{"issue_number": 4583, "title": "overwrite? prompt gets EOFError in 2 process", "body": "#4582 fixes part of the problem with 2 process history saving, but if a file by that name already exists, we get an EOFError instead of a prompt for some reason, before the client is even able to respond.\n\nIf someone (@minrk or @takluyver) give me a way forward, I can add this as part of #4582, or just make a PR to my repo against _that_ branch.\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU5NDQ2OmYxMDYxY2NmODVlODM3NmEzNDU0ZjQyZTU1OTBlYTRlODUyNTYzYWQ=", "commit_message": "always point py3compat.input to builtin_mod.input\n\nto preserve forwarding overrides made by the Kernel\n\ncloses #4583", "commit_timestamp": "2014-01-29T20:22:16Z", "files": ["IPython/utils/py3compat.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo0MWYzYWJmN2YwODIwMDJiYmFiYmNiYjBlMzMxYzRhODNmZmU0NDEw", "commit_message": "always point py3compat.input to builtin_mod.input\n\nto preserve forwarding overrides made by the Kernel\n\ncloses #4583", "commit_timestamp": "2014-01-29T20:22:16Z", "files": ["IPython/utils/py3compat.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmFiZGU1NzEwNmQ1NmQ1YTdhZTYyYWUxOWViMDUxYTBiYjlhYzUyOWQ=", "commit_message": "Merge pull request #4932 from minrk/input-lazy\n\nalways point py3compat.input to builtin_mod.input", "commit_timestamp": "2014-01-29T21:37:22Z", "files": ["IPython/utils/py3compat.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmFiZGU1NzEwNmQ1NmQ1YTdhZTYyYWUxOWViMDUxYTBiYjlhYzUyOWQ=", "commit_message": "Merge pull request #4932 from minrk/input-lazy\n\nalways point py3compat.input to builtin_mod.input", "commit_timestamp": "2014-01-29T21:37:22Z", "files": ["IPython/utils/py3compat.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo0OWE2YmIzODQwNGE3MmFmN2YwZWQ3MzlhNmNlYmVkNDlkZDc2ZGUx", "commit_message": "Merge pull request #4932 from minrk/input-lazy\n\nalways point py3compat.input to builtin_mod.input", "commit_timestamp": "2014-01-29T21:37:22Z", "files": ["IPython/utils/py3compat.py"]}], "labels": ["bug"], "created_at": "2013-11-22T19:57:28Z", "closed_at": "2014-01-29T21:37:22Z", "linked_pr_number": [4583], "method": ["label"]}
{"issue_number": 4578, "title": "NBconvert fails with unicode errors when `--stdout` and file redirection is specified and HTML entities are present", "body": "I'm not sure if this is a bug, but we just got caught by this in:https://github.com/swcarpentry/bc/pull/163\n\nTo reproduce, create an IPython Notebook with any HTML entity such as:\n\n`&times;`\n\nThen try running nbconvert with --stdout with output to a file.\n\n```\nipython nbconvert --stdout test.ipynb > test.html\n```\n\nThis will break, although:\n\n```\nipython nbconvert --stdout test.ipynb\n```\n\nand\n\n```\nipython nbconvert test.ipynb\n```\n\nboth work.\n", "commits": [{"node_id": "MDY6Q29tbWl0MTIzNjAwMzpkMThiZTI0MzkxMzA3ODJkNmIxNDdmYjI1M2ZlOTc1OTE4YThkMjlh", "commit_message": "Use unicode_std_stream in nbconvert stdout writer\n\nCloses gh-4578", "commit_timestamp": "2013-11-22T18:59:29Z", "files": ["IPython/nbconvert/writers/stdout.py", "IPython/nbconvert/writers/tests/test_stdout.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzozMTVkZDUxZDllODFjN2UxNDc4ZjViZGE0YWY4MzYyM2QzYzZjMDdi", "commit_message": "Use unicode_std_stream in nbconvert stdout writer\n\nCloses gh-4578", "commit_timestamp": "2013-11-22T18:59:29Z", "files": ["IPython/nbconvert/writers/stdout.py", "IPython/nbconvert/writers/tests/test_stdout.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmU1YjQ5OTE4MDA4NzE3ZGE5ZmRjZmQ5ZmYzYTAxNmE4NGQ0ZTIxNmI=", "commit_message": "Merge pull request #4581 from takluyver/i4578\n\nWriting unicode to stdout", "commit_timestamp": "2013-11-26T22:25:22Z", "files": ["IPython/nbconvert/writers/stdout.py", "IPython/nbconvert/writers/tests/test_stdout.py", "IPython/utils/io.py", "IPython/utils/tests/test_io.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmU1YjQ5OTE4MDA4NzE3ZGE5ZmRjZmQ5ZmYzYTAxNmE4NGQ0ZTIxNmI=", "commit_message": "Merge pull request #4581 from takluyver/i4578\n\nWriting unicode to stdout", "commit_timestamp": "2013-11-26T22:25:22Z", "files": ["IPython/nbconvert/writers/stdout.py", "IPython/nbconvert/writers/tests/test_stdout.py", "IPython/utils/io.py", "IPython/utils/tests/test_io.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjNkNzZhODBiYWU5N2M5ZDcyMWUyN2FlY2ZhNjUxZmM3Y2JjZTJhM2Y=", "commit_message": "Backport PR #4581.\n\nFixing nbconvert writing unicode characters to redirected stdout.", "commit_timestamp": "2013-11-26T22:49:06Z", "files": ["IPython/nbconvert/writers/stdout.py", "IPython/utils/io.py", "IPython/utils/tests/test_io.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo0YTRjMDRjODBkMDUyNzc0YzQ2NjFjMjQxMTliN2Q3ZTZjMTg3MzNm", "commit_message": "Merge pull request #4581 from takluyver/i4578\n\nWriting unicode to stdout", "commit_timestamp": "2013-11-26T22:25:22Z", "files": ["IPython/nbconvert/writers/stdout.py", "IPython/nbconvert/writers/tests/test_stdout.py", "IPython/utils/io.py", "IPython/utils/tests/test_io.py"]}], "labels": ["unicode", "bug", "nbconvert"], "created_at": "2013-11-22T16:49:37Z", "closed_at": "2013-11-26T22:25:22Z", "linked_pr_number": [4578], "method": ["label", "regex"]}
{"issue_number": 4562, "title": "nbconvert: Default encoding problem on OS X", "body": "Greetings.\n\nI am using IPython 1.1.0 via MacPorts on OSX 10.7.5.  The following problem is reproducible on the master git branch (IPython 2.0.0-dev).\n\nOn any call to nbconvert, I get the following failure:\n\n```\n[NbConvertApp] Using existing profile dir: u'/Users/USERNAME_REDACTED/.ipython/profile_default'\n[NbConvertApp] Converting notebook ticks.ipynb to html\n[NbConvertApp] Support files will be in ticks_files/\nTraceback (most recent call last):\n  File \"/opt/local/bin/ipython\", line 6, in <module>\n    start_ipython()\n  File \"/opt/local/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/IPython/__init__.py\", line 118, in start_ipython\n    return launch_new_instance(argv=argv, **kwargs)\n  File \"/opt/local/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/IPython/config/application.py\", line 545, in launch_instance\n    app.start()\n  File \"/opt/local/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/IPython/terminal/ipapp.py\", line 358, in start\n    return self.subapp.start()\n  File \"/opt/local/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/IPython/nbconvert/nbconvertapp.py\", line 267, in start\n    self.convert_notebooks()\n  File \"/opt/local/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/IPython/nbconvert/nbconvertapp.py\", line 300, in convert_notebooks\n    output, resources = exporter.from_filename(notebook_filename, resources=resources)\n  File \"/opt/local/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/IPython/nbconvert/exporters/exporter.py\", line 288, in from_filename\n    with io.open(filename) as f:\nLookupError: unknown encoding: \n\nIf you suspect this is an IPython bug, please report it at:\n    https://github.com/ipython/ipython/issues\nor send an email to the mailing list at ipython-dev@scipy.org\n\nYou can print a more detailed traceback right now with \"%tb\", or use \"%debug\"\nto interactively debug it.\n\nExtra-detailed tracebacks for bug-reporting purposes can be enabled via:\n    c.Application.verbose_crash=True\n```\n\nThis is an easy fix: I change the troublesome line such that it reads,\n\n```\nwith io.open(filename, encoding='ascii') as f:\n```\n\nHowever, this ad hoc and likely a suboptimal solution.  I wanted to bring this to the developers' attention and inquire about a proper solution.  Thanks!\n\nSystem info:\n\n```\npython -c \"import IPython; print(IPython.sys_info())\"\n{'codename': 'An Afternoon Hack',\n 'commit_hash': '7c2ea3a',\n 'commit_source': 'installation',\n 'default_encoding': 'US-ASCII',\n 'ipython_path': '/opt/local/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/IPython',\n 'ipython_version': '1.1.0',\n 'os_name': 'posix',\n 'platform': 'Darwin-11.4.2-x86_64-i386-64bit',\n 'sys_executable': '/opt/local/Library/Frameworks/Python.framework/Versions/2.7/Resources/Python.app/Contents/MacOS/Python',\n 'sys_platform': 'darwin',\n 'sys_version': '2.7.6 (default, Nov 19 2013, 16:37:14) \\n[GCC 4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2336.11.00)]'}\n```\n", "commits": [{"node_id": "MDY6Q29tbWl0MTIzNjAwMzpmYmZhMzIwYzYwNDU3MTU5Mzg4OTI5NGRmNmE4ODU3ZjlhZmViMDU2", "commit_message": "Specify encoding for reading notebook file.\n\nCloses gh-4562", "commit_timestamp": "2013-11-20T18:32:10Z", "files": ["IPython/nbconvert/exporters/exporter.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzphNmVlNWU1YjhmMjQzYzJmMTcyMzQ4ZTBjMjIwZGJkMTc3NmNhYWYy", "commit_message": "Specify encoding for reading notebook file.\n\nCloses gh-4562", "commit_timestamp": "2013-11-20T18:32:10Z", "files": ["IPython/nbconvert/exporters/exporter.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjZlMmI1ZWZjZTU5ZGM0ZjdmZGQyMTI3N2ZlY2MyNWJjZmM4NTE2ZGU=", "commit_message": "Merge pull request #4563 from takluyver/i4562\n\nSpecify encoding for reading notebook file. and a few other calls to io.open with missing encoding", "commit_timestamp": "2013-11-20T22:29:18Z", "files": ["IPython/core/tests/test_magic.py", "IPython/html/services/notebooks/tests/test_notebooks_api.py", "IPython/html/services/sessions/tests/test_sessions_api.py", "IPython/nbconvert/exporters/exporter.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjZlMmI1ZWZjZTU5ZGM0ZjdmZGQyMTI3N2ZlY2MyNWJjZmM4NTE2ZGU=", "commit_message": "Merge pull request #4563 from takluyver/i4562\n\nSpecify encoding for reading notebook file. and a few other calls to io.open with missing encoding", "commit_timestamp": "2013-11-20T22:29:18Z", "files": ["IPython/core/tests/test_magic.py", "IPython/html/services/notebooks/tests/test_notebooks_api.py", "IPython/html/services/sessions/tests/test_sessions_api.py", "IPython/nbconvert/exporters/exporter.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzoyM2Q0NmNkMzc2NjdiMDQ4ZjBkZThiZjg1NjQ1MGNhZTcxNWYwMWVh", "commit_message": "Merge pull request #4563 from takluyver/i4562\n\nSpecify encoding for reading notebook file. and a few other calls to io.open with missing encoding", "commit_timestamp": "2013-11-20T22:29:18Z", "files": ["IPython/core/tests/test_magic.py", "IPython/html/services/notebooks/tests/test_notebooks_api.py", "IPython/html/services/sessions/tests/test_sessions_api.py", "IPython/nbconvert/exporters/exporter.py"]}], "labels": [], "created_at": "2013-11-20T15:26:36Z", "closed_at": "2013-11-20T22:29:18Z", "linked_pr_number": [4562], "method": ["regex"]}
{"issue_number": 4525, "title": "Output for semicolon-terminated lines with comments", "body": "cf https://github.com/JuliaLang/IJulia.jl/issues/109\n\nThe output of a semicolon-terminated line with comment is not suppressed in IPython.\n\n```\nb = 1\nb; # foo\n```\n\ngive `Out[13]: 1`\n\n```\nb = 1\nb;\n```\n\ndoes not.\n\nHavent found such and issue on our tracker.\n\n @takluyver you are the best with the input machinery and coroutines; Thoughts ?\n\n(Because of the comment @stevengj in sus-cited issue, marking as prio-high, but won't  mind if priority decreased later, or not fixed)\n", "commits": [{"node_id": "MDY6Q29tbWl0MTc5MjM0NDI6NGRmOTlmMDA3YjZhZWY4YWE3ODk3YjcxNDMwZTc1MWM5MTY4MjI0OQ==", "commit_message": "Suppress output even when a comment follows ;. Fixes #4525.", "commit_timestamp": "2014-03-19T22:53:52Z", "files": ["IPython/core/displayhook.py"]}, {"node_id": "MDY6Q29tbWl0MTc5MjM0NDI6OGRhZTZiOTQ3MDE0MTIyMjViOTFjOTdlNzk0MDRjYzk1MWRmN2Q4Nw==", "commit_message": "Suppress output even when a comment follows ;. Fixes #4525.", "commit_timestamp": "2014-03-19T23:40:54Z", "files": ["IPython/core/displayhook.py"]}, {"node_id": "MDY6Q29tbWl0MTc5MjM0NDI6MjQwNmIxZmQzZjNmNGIzNDI3ZjRhYTA0OGUyMWZmNzBmOWY5MGRkZg==", "commit_message": "Suppress output even when a comment follows ;. Fixes #4525.", "commit_timestamp": "2014-03-20T08:40:50Z", "files": ["IPython/core/displayhook.py"]}, {"node_id": "MDY6Q29tbWl0MTc5MjM0NDI6MDI4YWQwZTc5NzkyZDY2NGI3YmQ1OWJmYWNmZjU4M2NhN2JjZmIzNw==", "commit_message": "Suppress output even when a comment follows ;. Fixes #4525.", "commit_timestamp": "2014-03-20T12:47:49Z", "files": ["IPython/core/displayhook.py", "IPython/core/tests/test_interactiveshell.py"]}, {"node_id": "MDY6Q29tbWl0MTc5MjM0NDI6NWVkMTZlYzg5NzEzMjhiZmI5YWNjZGMyYjhlMzVlMjA3NzY5MTQ5Mg==", "commit_message": "Suppress output even when a comment follows ;. Fixes #4525.", "commit_timestamp": "2014-03-20T13:00:22Z", "files": ["IPython/core/displayhook.py", "IPython/core/tests/test_interactiveshell.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjZiYzU1MTI4NTVhZGI4NDFkZDY5N2Q0YjhlNTJiODg0ZjI2MTRhNWQ=", "commit_message": "Merge pull request #5388 from shashi/semicolon-fix\n\nSuppress output even when a comment follows ;. Fixes #4525.", "commit_timestamp": "2014-03-20T16:13:54Z", "files": ["IPython/core/displayhook.py", "IPython/core/tests/test_interactiveshell.py"]}, {"node_id": "MDY6Q29tbWl0MTQwNTcyNjg6YTU2OWU1NzI5OTNkZDNlYzUzYTVhYWI3Njg2OGI5ZDBjOGM5NmUwOQ==", "commit_message": "Suppress output even when a comment follows ;. Fixes #4525.", "commit_timestamp": "2014-04-22T11:03:32Z", "files": ["IPython/core/displayhook.py", "IPython/core/tests/test_interactiveshell.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo0MTg3NWUyOTQ0YTRlOTU3ZTIxOTgzZDYyYjM4MzhiMmU1M2MxMDQx", "commit_message": "Suppress output even when a comment follows ;. Fixes #4525.", "commit_timestamp": "2014-03-20T13:00:22Z", "files": ["IPython/core/displayhook.py", "IPython/core/tests/test_interactiveshell.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzozOTBlMDA2YzdkNzczMDA2ZWE3Yjc4M2E5NjMxOWI2YzU3OGVmYmM0", "commit_message": "Merge pull request #5388 from shashi/semicolon-fix\n\nSuppress output even when a comment follows ;. Fixes #4525.", "commit_timestamp": "2014-03-20T16:13:54Z", "files": ["IPython/core/displayhook.py", "IPython/core/tests/test_interactiveshell.py"]}, {"node_id": "MDY6Q29tbWl0NjU5NDQ2OmQ5MmQ0NWY0ZWJkYzNhNmJhNzNjZTEwYzYyNDk4YWM5ZTkzMjdmOTk=", "commit_message": "Backport PR #9228: adapt DisplayHook.quiet() for multiline input\n\nFixes #4525.\n\nAFAICS [# inside strings](https://github.com/ipython/ipython/issues/4525#issuecomment-38192973) was already resolved by #8505 (and does not require a separate test?).", "commit_timestamp": "2016-04-05T23:41:43Z", "files": ["IPython/core/displayhook.py", "IPython/core/tests/test_displayhook.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjViN2JiMTA2OTM4NGI2OTU1Mzk5NzdmMWM0NGU5MzRiMGNmY2E1Yjk=", "commit_message": "Merge pull request #9228 from xflr6/issue4525\n\nadapt DisplayHook.quiet() for multiline input", "commit_timestamp": "2016-02-15T13:06:48Z", "files": ["IPython/core/displayhook.py", "IPython/core/tests/test_displayhook.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjViN2JiMTA2OTM4NGI2OTU1Mzk5NzdmMWM0NGU5MzRiMGNmY2E1Yjk=", "commit_message": "Merge pull request #9228 from xflr6/issue4525\n\nadapt DisplayHook.quiet() for multiline input", "commit_timestamp": "2016-02-15T13:06:48Z", "files": ["IPython/core/displayhook.py", "IPython/core/tests/test_displayhook.py"]}, {"node_id": "MDY6Q29tbWl0NjU5NDQ2OmQ5MmQ0NWY0ZWJkYzNhNmJhNzNjZTEwYzYyNDk4YWM5ZTkzMjdmOTk=", "commit_message": "Backport PR #9228: adapt DisplayHook.quiet() for multiline input\n\nFixes #4525.\n\nAFAICS [# inside strings](https://github.com/ipython/ipython/issues/4525#issuecomment-38192973) was already resolved by #8505 (and does not require a separate test?).", "commit_timestamp": "2016-04-05T23:41:43Z", "files": ["IPython/core/displayhook.py", "IPython/core/tests/test_displayhook.py"]}], "labels": ["bug"], "created_at": "2013-11-12T18:51:16Z", "closed_at": "2016-02-15T13:06:48Z", "linked_pr_number": [4525], "method": ["label"]}
{"issue_number": 4524, "title": "Fix bug with non ascii passwords in notebook login", "body": "When a password is entered with non ascii characters, a `500: Internal Server Error` is returned.\nI don't think non ascii passwords should be supported, but a 'Invalid password' message should be returned.\n\n```\n2013-11-12 11:43:19.608 [tornado.application] ERROR | Uncaught exception POST /login?next=%2F (127.0.0.1)\nHTTPRequest(protocol='http', host='127.0.0.1:8888', method='POST', uri='/login?next=%2F', version='HTTP/1.1', remote_ip='127.0.0.1', headers={'Origin': 'http://127.0.0.1:8888', 'Content-Length': '63', 'Accept-Language': 'en-US,en;q=0.8', 'Accept-Encoding': 'gzip,deflate,sdch', 'Host': '127.0.0.1:8888', 'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8', 'User-Agent': 'Mozilla/5.0 (Windows NT 6.2; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/30.0.1599.101 Safari/537.36', 'Connection': 'keep-alive', 'Referer': 'http://127.0.0.1:8888/login', 'Content-Type': 'application/x-www-form-urlencoded'})\nTraceback (most recent call last):\n  File \"C:\\Python27\\lib\\site-packages\\tornado\\web.py\", line 1141, in _when_complete\n    callback()\n  File \"C:\\Python27\\lib\\site-packages\\tornado\\web.py\", line 1162, in _execute_method\n    self._when_complete(method(*self.path_args, **self.path_kwargs),\n  File \"C:\\Python27\\lib\\site-packages\\IPython\\html\\auth\\login.py\", line 48, in post\n    if passwd_check(self.password, pwd):\n  File \"C:\\Python27\\lib\\site-packages\\IPython\\lib\\security.py\", line 116, in passwd_check\n    h.update(cast_bytes(passphrase, 'utf-8') + str_to_bytes(salt, 'ascii'))\nUnicodeDecodeError: 'ascii' codec can't decode byte 0xd7 in position 0: ordinal not in range(128)\n```\n", "commits": [{"node_id": "MDY6Q29tbWl0MTIzNjAwMzphODgxZDMyMjY2NzE0YjZiM2Q3ZDdhNThiM2I5NmY5MjM2ZTUyOGY4", "commit_message": "Allow unicode arguments to passwd_check on Python 2.\n\nCloses gh-4524", "commit_timestamp": "2013-11-12T18:53:00Z", "files": ["IPython/lib/security.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjNlZjU0YzMyODVjMzcyN2VkZjYwMjAzZDc1NGY3MWIwZTkwYjc1ZjI=", "commit_message": "Merge pull request #4526 from takluyver/passwd_check_unicode\n\nAllow unicode arguments to passwd_check on Python 2\r\n\r\nCloses #4524", "commit_timestamp": "2013-11-12T19:44:41Z", "files": ["IPython/lib/security.py", "IPython/lib/tests/test_security.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzpiNmJiODk2YWNkMGZkMzY2ZjBmMWEyZDk2OTExM2MxZjkxNGIyZWI1", "commit_message": "Allow unicode arguments to passwd_check on Python 2.\n\nCloses gh-4524", "commit_timestamp": "2013-11-12T18:53:00Z", "files": ["IPython/lib/security.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzplYzZlN2UxOWFlMmVlZmM3YzVlYzA4ZjEzMWU3YjgyNWFlNGQ4NTc4", "commit_message": "Merge pull request #4526 from takluyver/passwd_check_unicode\n\nAllow unicode arguments to passwd_check on Python 2\r\n\r\nCloses #4524", "commit_timestamp": "2013-11-12T19:44:41Z", "files": ["IPython/lib/security.py", "IPython/lib/tests/test_security.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjNlZjU0YzMyODVjMzcyN2VkZjYwMjAzZDc1NGY3MWIwZTkwYjc1ZjI=", "commit_message": "Merge pull request #4526 from takluyver/passwd_check_unicode\n\nAllow unicode arguments to passwd_check on Python 2\r\n\r\nCloses #4524", "commit_timestamp": "2013-11-12T19:44:41Z", "files": ["IPython/lib/security.py", "IPython/lib/tests/test_security.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjNlZjU0YzMyODVjMzcyN2VkZjYwMjAzZDc1NGY3MWIwZTkwYjc1ZjI=", "commit_message": "Merge pull request #4526 from takluyver/passwd_check_unicode\n\nAllow unicode arguments to passwd_check on Python 2\r\n\r\nCloses #4524", "commit_timestamp": "2013-11-12T19:44:41Z", "files": ["IPython/lib/security.py", "IPython/lib/tests/test_security.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzplYzZlN2UxOWFlMmVlZmM3YzVlYzA4ZjEzMWU3YjgyNWFlNGQ4NTc4", "commit_message": "Merge pull request #4526 from takluyver/passwd_check_unicode\n\nAllow unicode arguments to passwd_check on Python 2\r\n\r\nCloses #4524", "commit_timestamp": "2013-11-12T19:44:41Z", "files": ["IPython/lib/security.py", "IPython/lib/tests/test_security.py"]}], "labels": [], "created_at": "2013-11-12T09:54:00Z", "closed_at": "2013-11-12T19:44:41Z", "linked_pr_number": [4524], "method": ["regex"]}
{"issue_number": 4520, "title": "unicode error when trying Audio('data/Bach Cello Suite #3.wav') ", "body": "Hello,\n\nI'm under  ipython2.0dev/windows7 / python3\n\nTrying the greatest and latest @ellisonbg notebook at \nhttps://github.com/ellisonbg/talk-pydata-nyc2013/blob/master/Close to Data.ipynb\n\nI get an unicode error at the wave example.\nDoes anyone else has the same problem ? (I suspect a bug, as the file plays music if I click on it via the explorer)\n\n```\nfrom IPython.display import display, Audio, Latex\na = Audio('data/Bach Cello Suite #3.wav')\n```\n\n```\n--------------------------------------------------------------------------\nUnicodeDecodeError                        Traceback (most recent call last)\n<ipython-input-4-35380f5da86b> in <module>()\n----> 1 a = Audio('data/Bach Cello Suite #3.wav')\n\nc:\\users\\famille\\documents\\winpython\\winpython-32bit-3.3.2.3ggplotip2\\python-3.3.2\\src\\master\\IPython\\lib\\display.py in __init__(self, data, filename, url, embed, rate, autoplay)\n     80             self.embed = True\n     81         self.autoplay = autoplay\n---> 82         super(Audio, self).__init__(data=data, url=url, filename=filename)\n     83 \n     84         if self.data is not None and not isinstance(self.data, bytes):\n\nc:\\users\\famille\\documents\\winpython\\winpython-32bit-3.3.2.3ggplotip2\\python-3.3.2\\src\\master\\IPython\\core\\display.py in __init__(self, data, url, filename)\n    304         self.filename = None if filename is None else unicode_type(filename)\n    305 \n--> 306         self.reload()\n    307 \n    308     def reload(self):\n\nc:\\users\\famille\\documents\\winpython\\winpython-32bit-3.3.2.3ggplotip2\\python-3.3.2\\src\\master\\IPython\\lib\\display.py in reload(self)\n     89         import mimetypes\n     90         if self.embed:\n---> 91             super(Audio, self).reload()\n     92 \n     93         if self.filename is not None:\n\nc:\\users\\famille\\documents\\winpython\\winpython-32bit-3.3.2.3ggplotip2\\python-3.3.2\\src\\master\\IPython\\core\\display.py in reload(self)\n    310         if self.filename is not None:\n    311             with open(self.filename, self._read_flags) as f:\n--> 312                 self.data = f.read()\n    313         elif self.url is not None:\n    314             try:\n\nC:\\Users\\famille\\Documents\\winpython\\WinPython-32bit-3.3.2.3ggplotip2\\python-3.3.2\\lib\\encodings\\cp1252.py in decode(self, input, final)\n     21 class IncrementalDecoder(codecs.IncrementalDecoder):\n     22     def decode(self, input, final=False):\n---> 23         return codecs.charmap_decode(input,self.errors,decoding_table)[0]\n     24 \n     25 class StreamWriter(Codec,codecs.StreamWriter):\n\nUnicodeDecodeError: 'charmap' codec can't decode byte 0x9d in position 75132: character maps to <undefined>\n```\n", "commits": [{"node_id": "MDY6Q29tbWl0MTIzNjAwMzpmZGY4ZDFiOWYxY2VmODhkOGFiNjk5YzNiNTk3ZGZjYTgyZDE1OGUz", "commit_message": "Read wav files in binary mode.\n\nCloses gh-4520", "commit_timestamp": "2013-11-11T17:37:11Z", "files": ["IPython/lib/display.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzphNjc3ZjBmOWZhNzlmYTQ5YmRmNjdjODNmMDVmZDA1YTQ0NDE5NzMx", "commit_message": "Read wav files in binary mode.\n\nCloses gh-4520", "commit_timestamp": "2013-11-11T17:37:11Z", "files": ["IPython/lib/display.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjdlMGIzZDM1MTZiYzMyMWI0ZWIzNjM4ZjMzMzQyNzRhNTM1MGI5MTU=", "commit_message": "Merge pull request #4521 from takluyver/test-display-audio\n\nRead wav files in binary mode", "commit_timestamp": "2013-11-11T20:02:11Z", "files": ["IPython/lib/display.py", "IPython/lib/tests/test_display.py", "setupbase.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjdlMGIzZDM1MTZiYzMyMWI0ZWIzNjM4ZjMzMzQyNzRhNTM1MGI5MTU=", "commit_message": "Merge pull request #4521 from takluyver/test-display-audio\n\nRead wav files in binary mode", "commit_timestamp": "2013-11-11T20:02:11Z", "files": ["IPython/lib/display.py", "IPython/lib/tests/test_display.py", "setupbase.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo5OTlkMjkyOTdjZDE5YjU4OGJhMjI4ZmQxMWM2Mzg3YmYxNjYxZmJh", "commit_message": "Merge pull request #4521 from takluyver/test-display-audio\n\nRead wav files in binary mode", "commit_timestamp": "2013-11-11T20:02:11Z", "files": ["IPython/lib/display.py", "IPython/lib/tests/test_display.py", "setupbase.py"]}], "labels": [], "created_at": "2013-11-11T13:10:58Z", "closed_at": "2013-11-11T20:02:11Z", "linked_pr_number": [4520], "method": ["regex"]}
{"issue_number": 4495, "title": "firefox 25.0: notebooks report \"Notebook save failed\", .py script save fails, but .ipynb save succeeds", "body": "Notebooks have recently reported \"Notebook save failed\" when I save (or it autosaves). The .ipnb is updated, but the .py script fails to save. If I don't set NotebookManager.save_script=True, things work as expected. I get this in in the log when I attempt a save is:\n\n> [tornado.access] WARNING | 400 PUT /api/notebooks/Untitled0.ipynb (127.0.0.1) 3.94ms\n\nThe \"Last Checkpoint\" is reported as Ocober 28 or 29 (depending on the notebook) This is presumably just before problems started?\n\nSuspiciously, I have this in my apt logs:\n\n> Start-Date: 2013-10-30  12:25:13\n> Commandline: apt-get upgrade -y --fix-missing\n> Upgrade: firefox-globalmenu:amd64 (24.0+build1-0ubuntu0.12.04.1, 25.0+build3-0ubuntu0.12.04.1), firefox:amd64 (24.0+build1-0ubuntu0.12.04.1, 25.0+build3-0ubuntu0.12.04.1), firefox-locale-cs:amd64 (24.0+build1-0ub\n> End-Date: 2013-10-30  12:25:43\n\nThat's the most recent firefox update, and is just after the reported \"Last Checkpoint\"s.\n\nI'm running in firefox 25.0 (the most recent ubuntu update). My ipython is updated (14625df).\n", "commits": [{"node_id": "MDY6Q29tbWl0MTIzNjAwMzo4OGJjNmE0YTkxMzkyM2ZkZGQ3NzkxY2EzMzdjZjZlNzc0NWQwMDI1", "commit_message": "Pass nbformat object to write call to save .py script\n\nCloses gh-4495", "commit_timestamp": "2013-11-06T01:35:36Z", "files": ["IPython/html/services/notebooks/filenbmanager.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjM5NDU2MDIwNmVhNjA2ZWYwODIyY2M5MzMwZjZlYjJmZDcxNDZkNTE=", "commit_message": "Merge pull request #4496 from takluyver/i4495\n\nPass nbformat object to write call to save .py script\r\n\r\nCloses #4495", "commit_timestamp": "2013-11-06T01:55:52Z", "files": ["IPython/html/services/notebooks/filenbmanager.py", "IPython/html/services/notebooks/tests/test_nbmanager.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzoyMTliOWJmMmUzM2JiOTA4MzJkZDU5YTE1ZjgzMDIzNDJjMjdkNTRh", "commit_message": "Pass nbformat object to write call to save .py script\n\nCloses gh-4495", "commit_timestamp": "2013-11-06T01:35:36Z", "files": ["IPython/html/services/notebooks/filenbmanager.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo0N2U4MWQ1YzAyNjFkMDI3OTliM2Y4YjhlYTZmNDM3MTI1YWMwOTZj", "commit_message": "Merge pull request #4496 from takluyver/i4495\n\nPass nbformat object to write call to save .py script\r\n\r\nCloses #4495", "commit_timestamp": "2013-11-06T01:55:52Z", "files": ["IPython/html/services/notebooks/filenbmanager.py", "IPython/html/services/notebooks/tests/test_nbmanager.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjM5NDU2MDIwNmVhNjA2ZWYwODIyY2M5MzMwZjZlYjJmZDcxNDZkNTE=", "commit_message": "Merge pull request #4496 from takluyver/i4495\n\nPass nbformat object to write call to save .py script\r\n\r\nCloses #4495", "commit_timestamp": "2013-11-06T01:55:52Z", "files": ["IPython/html/services/notebooks/filenbmanager.py", "IPython/html/services/notebooks/tests/test_nbmanager.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjM5NDU2MDIwNmVhNjA2ZWYwODIyY2M5MzMwZjZlYjJmZDcxNDZkNTE=", "commit_message": "Merge pull request #4496 from takluyver/i4495\n\nPass nbformat object to write call to save .py script\r\n\r\nCloses #4495", "commit_timestamp": "2013-11-06T01:55:52Z", "files": ["IPython/html/services/notebooks/filenbmanager.py", "IPython/html/services/notebooks/tests/test_nbmanager.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo0N2U4MWQ1YzAyNjFkMDI3OTliM2Y4YjhlYTZmNDM3MTI1YWMwOTZj", "commit_message": "Merge pull request #4496 from takluyver/i4495\n\nPass nbformat object to write call to save .py script\r\n\r\nCloses #4495", "commit_timestamp": "2013-11-06T01:55:52Z", "files": ["IPython/html/services/notebooks/filenbmanager.py", "IPython/html/services/notebooks/tests/test_nbmanager.py"]}], "labels": [], "created_at": "2013-11-06T01:14:05Z", "closed_at": "2013-11-06T01:55:52Z", "linked_pr_number": [4495], "method": ["regex"]}
{"issue_number": 4493, "title": "Qtconsole cannot print an ISO8601 date at nanosecond precision", "body": "This is seen in 1.1. Entering the following produces an error:\n\n``` python\nprint '2013-11-05T16:36:22.100000002'\n```\n\nThe pertinent part of the error trace shows that strptime is raising an uncaught ValueError because it's not getting a format that matches up with that given in the ISO8601 variable:\n\n```\nFile \"/usr/lib/python2.6/site-packages/IPython/utils/jsonutil.py\", line 70, in extract_dates\n    obj[k] = extract_dates(v)\nFile \"/usr/lib/python2.6/site-packages/IPython/utils/jsonutil.py\", line 79, in extract_dates\n    obj = datetime.strptime(notz, ISO8601)\nFile \"/usr/lib64/python2.6/_strptime.py\", line 328, in _strptime\n    data_string[found.end():])\nValueError: unconverted data remains: 000\nERROR:root:Exception in callback <zmq.eventloop.stack_context._StackContextWrapper object at 0x7f0128021838>\n```\n\nWe came across this because our application exposes Boost Posix Time (where we use nanosecond precision) to python.\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU5NDQ2OmYyMDUyMjUzYzUxMzFhMDgzZGY2NWEyMzAwNTgyMmViNTEzNTkxODI=", "commit_message": "fix ISO8601 re\n\ncloses #4493", "commit_timestamp": "2013-11-06T01:12:21Z", "files": ["IPython/utils/jsonutil.py"]}, {"node_id": "MDY6Q29tbWl0NjU5NDQ2OjYyNTVjZTI5ODU5Y2MwYTY5ODFhYzAyNTc5NGM4MGY4ODhlNzVhNGM=", "commit_message": "test that we don't choke on sub-millisecond precision timestamps\n\n(#4493)", "commit_timestamp": "2013-11-06T20:28:31Z", "files": ["IPython/utils/tests/test_jsonutil.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmMxY2YxYTkzNGU0YzYxODBiYzdhOGUwMTI4ZDJmMWRkOTc3MTI5YWI=", "commit_message": "Merge pull request #4497 from minrk/datetime-session\n\ndon't automatically unpack datetime objects in the message spec\r\n\r\nonly unpack in headers\r\nmove handling of datetime objects in content and metadata to application-level code\r\nminor fix to ISO8601 re (closes #4493)", "commit_timestamp": "2013-11-10T19:20:25Z", "files": ["IPython/kernel/zmq/session.py", "IPython/kernel/zmq/tests/test_session.py", "IPython/parallel/client/client.py", "IPython/parallel/controller/hub.py", "IPython/utils/jsonutil.py", "IPython/utils/tests/test_jsonutil.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzphNGQxMjdhNDE4N2IzNDkxZjQ3MmZhZmFiYThkMWZjNTJiZWFmNmQy", "commit_message": "fix ISO8601 re\n\ncloses #4493", "commit_timestamp": "2013-11-06T01:12:21Z", "files": ["IPython/utils/jsonutil.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzpmY2Y3ZWFlZWRiMjc0NTMwNzY2OGZmNmQ5ZDJhM2I5OTkwYjNhMjA4", "commit_message": "test that we don't choke on sub-millisecond precision timestamps\n\n(#4493)", "commit_timestamp": "2013-11-06T20:28:31Z", "files": ["IPython/utils/tests/test_jsonutil.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo4NTYyODc5YTQxMGJiZjkyMTIxMjk0N2RmYmJmMTI5YzcxNGU1MDg3", "commit_message": "Merge pull request #4497 from minrk/datetime-session\n\ndon't automatically unpack datetime objects in the message spec\r\n\r\nonly unpack in headers\r\nmove handling of datetime objects in content and metadata to application-level code\r\nminor fix to ISO8601 re (closes #4493)", "commit_timestamp": "2013-11-10T19:20:25Z", "files": ["IPython/kernel/zmq/session.py", "IPython/kernel/zmq/tests/test_session.py", "IPython/parallel/client/client.py", "IPython/parallel/controller/hub.py", "IPython/utils/jsonutil.py", "IPython/utils/tests/test_jsonutil.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmMxY2YxYTkzNGU0YzYxODBiYzdhOGUwMTI4ZDJmMWRkOTc3MTI5YWI=", "commit_message": "Merge pull request #4497 from minrk/datetime-session\n\ndon't automatically unpack datetime objects in the message spec\r\n\r\nonly unpack in headers\r\nmove handling of datetime objects in content and metadata to application-level code\r\nminor fix to ISO8601 re (closes #4493)", "commit_timestamp": "2013-11-10T19:20:25Z", "files": ["IPython/kernel/zmq/session.py", "IPython/kernel/zmq/tests/test_session.py", "IPython/parallel/client/client.py", "IPython/parallel/controller/hub.py", "IPython/utils/jsonutil.py", "IPython/utils/tests/test_jsonutil.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmMxY2YxYTkzNGU0YzYxODBiYzdhOGUwMTI4ZDJmMWRkOTc3MTI5YWI=", "commit_message": "Merge pull request #4497 from minrk/datetime-session\n\ndon't automatically unpack datetime objects in the message spec\r\n\r\nonly unpack in headers\r\nmove handling of datetime objects in content and metadata to application-level code\r\nminor fix to ISO8601 re (closes #4493)", "commit_timestamp": "2013-11-10T19:20:25Z", "files": ["IPython/kernel/zmq/session.py", "IPython/kernel/zmq/tests/test_session.py", "IPython/parallel/client/client.py", "IPython/parallel/controller/hub.py", "IPython/utils/jsonutil.py", "IPython/utils/tests/test_jsonutil.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo4NTYyODc5YTQxMGJiZjkyMTIxMjk0N2RmYmJmMTI5YzcxNGU1MDg3", "commit_message": "Merge pull request #4497 from minrk/datetime-session\n\ndon't automatically unpack datetime objects in the message spec\r\n\r\nonly unpack in headers\r\nmove handling of datetime objects in content and metadata to application-level code\r\nminor fix to ISO8601 re (closes #4493)", "commit_timestamp": "2013-11-10T19:20:25Z", "files": ["IPython/kernel/zmq/session.py", "IPython/kernel/zmq/tests/test_session.py", "IPython/parallel/client/client.py", "IPython/parallel/controller/hub.py", "IPython/utils/jsonutil.py", "IPython/utils/tests/test_jsonutil.py"]}], "labels": ["bug"], "created_at": "2013-11-05T22:06:45Z", "closed_at": "2013-11-10T19:20:25Z", "linked_pr_number": [4493], "method": ["label"]}
{"issue_number": 4486, "title": "Test for whether inside virtualenv does not work if directory is symlinked", "body": "The following test for whether IPython is running inside a virtualenv does not work if the python executable and the VIRTUAL_ENV variable are at the same place but one is at a symlinked path to the other: https://github.com/ipython/ipython/blob/5bf4949fbd30de6211226e4b27e8680c4b199fc9/IPython/core/interactiveshell.py#L719\n\nDiscovered when using invewrapper, but problem appears more generic: https://github.com/berdario/invewrapper/issues/8\n\n```\ntcorbettclark@cmed1:~$ python -c \"import IPython; print(IPython.sys_info())\"\n{'codename': 'An Afternoon Hack',\n 'commit_hash': '7c2ea3a',\n 'commit_source': 'installation',\n 'default_encoding': 'UTF-8',\n 'ipython_path': '/home/tcorbettclark/.virtualenvs/ice/local/lib/python2.7/site-packages/IPython',\n 'ipython_version': '1.1.0',\n 'os_name': 'posix',\n 'platform': 'Linux-3.5.0-42-generic-x86_64-with-Ubuntu-12.10-quantal',\n 'sys_executable': '/home/tcorbettclark/.virtualenvs/ice/bin/python',\n 'sys_platform': 'linux2',\n 'sys_version': '2.7.3 (default, Sep 26 2013, 16:35:25) \\n[GCC 4.7.2]'}\ntcorbettclark@cmed1:~$ \n```\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU5NDQ2OjVjYjEzOTU5MWQ5N2Q4NzNmZmYzZjdiMTM1YmEyMjYxYTFmODE2Mjg=", "commit_message": "compare realpath in init_virtualenv\n\nshould help with symlinked envs\n\ncloses #4486", "commit_timestamp": "2013-11-04T18:53:34Z", "files": ["IPython/core/interactiveshell.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzplMDNiYTRjMWJhMTc3YzhjNzk1NGFmMjFhNzUxODAwOGY0MDcxZjQx", "commit_message": "compare realpath in init_virtualenv\n\nshould help with symlinked envs\n\ncloses #4486", "commit_timestamp": "2013-11-04T18:53:34Z", "files": ["IPython/core/interactiveshell.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjU3ZDNlODQ0MTFmNDIwYzdhMjE1ZDQ1Y2Q2OGNkZjBmNGM1YmYyNDI=", "commit_message": "Merge pull request #4489 from minrk/venv-realpath\n\ncheck realpath of env in init_virtualenv", "commit_timestamp": "2013-11-04T22:41:15Z", "files": ["IPython/core/interactiveshell.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjU3ZDNlODQ0MTFmNDIwYzdhMjE1ZDQ1Y2Q2OGNkZjBmNGM1YmYyNDI=", "commit_message": "Merge pull request #4489 from minrk/venv-realpath\n\ncheck realpath of env in init_virtualenv", "commit_timestamp": "2013-11-04T22:41:15Z", "files": ["IPython/core/interactiveshell.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzphYTBlMjViZDAzMmY2ZjdkMmY2ODcxYjRiMWJkYjViMGMzNzFlYjZi", "commit_message": "Merge pull request #4489 from minrk/venv-realpath\n\ncheck realpath of env in init_virtualenv", "commit_timestamp": "2013-11-04T22:41:15Z", "files": ["IPython/core/interactiveshell.py"]}], "labels": [], "created_at": "2013-11-04T09:22:23Z", "closed_at": "2013-11-04T22:41:15Z", "linked_pr_number": [4486], "method": ["regex"]}
{"issue_number": 4474, "title": "BdbQuit exception when quitting ipdb", "body": "Since version 1.1.0, I have problem when quitting ipdb\n# system info:\n\n``` python\nimport IPython; print(IPython.sys_info())\n```\n\n{'codename': 'Work in Progress',\n 'commit_hash': '1afe8a5',\n 'commit_source': 'installation',\n 'default_encoding': 'UTF-8',\n 'ipython_path': '/usr/local/lib/python2.7/dist-packages/IPython',\n 'ipython_version': '2.0.0-dev',\n 'os_name': 'posix',\n 'platform': 'Linux-3.8.0-33-generic-x86_64-with-Ubuntu-13.04-raring',\n 'sys_executable': '/usr/bin/python',\n 'sys_platform': 'linux2',\n 'sys_version': '2.7.4 (default, Sep 26 2013, 03:20:26) \\n[GCC 4.7.3]'}\n# minimal reproducible case:\n\n``` python\nrun -d scripts/ipython_win_post_install.py\n```\n\n**\\* Blank or comment\n**\\* Blank or comment\n**\\* Blank or comment\n**\\* Blank or comment\nNOTE: Enter 'c' at the ipdb>  prompt to continue execution.\n\n> /home/xu/soft/python/ipython/scripts/ipython_win_post_install.py(6)<module>()\n>       5 \n> ----> 6 \"\"\"\n>       7 \n\n``` python\nipdb> q\n```\n\nERROR: An unexpected error occurred while tokenizing input\nThe following traceback may be corrupted or invalid\nThe error message is: ('EOF in multi-line string', (127, 72))\n\nERROR: An unexpected error occurred while tokenizing input\nThe following traceback may be corrupted or invalid\nThe error message is: ('EOF in multi-line string', (127, 72))\n\n---\n\nBdbQuit                                   Traceback (most recent call last)\n/usr/local/lib/python2.7/dist-packages/IPython/utils/py3compat.pyc in execfile(fname, *where)\n    212             else:\n    213                 filename = fname\n--> 214             builtin_mod.execfile(filename, *where)\n    215 \n    216 # Parts below taken from six:\n\n/home/xu/soft/python/ipython/scripts/ipython_win_post_install.py in <module>()\n      4 http://docs.python.org/2/distutils/builtdist.html#the-postinstallation-script\n      5 \n----> 6 \"\"\"\n      7 \n      8 from **future** import print_function\n\n/home/xu/soft/python/ipython/scripts/ipython_win_post_install.py in <module>()\n      4 http://docs.python.org/2/distutils/builtdist.html#the-postinstallation-script\n      5 \n----> 6 \"\"\"\n      7 \n      8 from **future** import print_function\n\n/usr/lib/python2.7/bdb.pyc in trace_dispatch(self, frame, event, arg)\n     47             return # None\n     48         if event == 'line':\n---> 49             return self.dispatch_line(frame)\n     50         if event == 'call':\n     51             return self.dispatch_call(frame, arg)\n\n/usr/lib/python2.7/bdb.pyc in dispatch_line(self, frame)\n     66         if self.stop_here(frame) or self.break_here(frame):\n     67             self.user_line(frame)\n---> 68             if self.quitting: raise BdbQuit\n     69         return self.trace_dispatch\n     70 \n\nBdbQuit: \n", "commits": [{"node_id": "C_kwDOAz-HA9oAKGZjMjM1OTg1NTA4ZDA0MzExOTI0MDViNDZjNmZiZmIyMDkwNjkwNDg", "commit_message": "fix uncaught `BdbQuit` exceptions on ipdb `exit`\n\n- `BdbQuit` is now handled in the top-most scope of `InteractiveShell.run_code`. This ensures that `BdbQuit` is correctly handled but can still do its job of breaking out of all user code/loops/further breakpoint requests. Hopefully will work better than previous attempts, which put the `BdqQuit` handling in `Pdb.set_trace`\n\n- fixes:\n  - jupyterlab/jupyterlab#12501\n\n- refs:\n  - ipython/ipython#876\n  - ipython/ipython#1273\n  - ipython/ipython#4474\n  - ipython/ipython#5306\n  - ipython/ipython#9731\n  - ipython/ipython#9942\n  - ipython/ipython#9950\n  - ipython/ipython#10006\n  - ipython/ipython#12378", "commit_timestamp": "2022-05-03T00:36:53Z", "files": ["IPython/core/debugger.py", "IPython/core/interactiveshell.py"]}], "labels": ["bug"], "created_at": "2013-11-01T10:13:25Z", "closed_at": "2022-05-28T10:27:56Z", "method": ["label"]}
{"issue_number": 4447, "title": "Ipcontroller broken in current HEAD on windows", "body": "I get the below error when running ipcontroller on windows 64 bit, using the latest HEAD. This error does not occur on the 1.1.0 stable release. This may be related to  #4402.\n\n```\nPS Z:\\> ipcontroller\n2013-10-28 09:50:05.732 [IPControllerApp] Using existing profile dir: u'C:\\\\Users\\\\t-aadefa\\\\.ipython\\\\profile_default'\n2013-10-28 09:50:05.759 [IPControllerApp] Hub listening on tcp://127.0.0.1:48991 for registration.\n2013-10-28 09:50:05.763 [IPControllerApp] Hub using DB backend: 'NoDB'\n2013-10-28 09:50:06.017 [IPControllerApp] hub::created hub\n2013-10-28 09:50:06.019 [IPControllerApp] WARNING | Could not identify this machine's IP, assuming 127.0.0.1. You may need to specify '--location=<external_ip_a\nddress>' to help IPython decide when to connect via loopback.\n2013-10-28 09:50:06.020 [IPControllerApp] writing connection info to C:\\Users\\t-aadefa\\.ipython\\profile_default\\security\\ipcontroller-client.json\n2013-10-28 09:50:06.026 [IPControllerApp] WARNING | Could not identify this machine's IP, assuming 127.0.0.1. You may need to specify '--location=<external_ip_a\nddress>' to help IPython decide when to connect via loopback.\n2013-10-28 09:50:06.026 [IPControllerApp] writing connection info to C:\\Users\\t-aadefa\\.ipython\\profile_default\\security\\ipcontroller-engine.json\n2013-10-28 09:50:06.032 [IPControllerApp] task::using Python leastload Task scheduler\n2013-10-28 09:50:06.032 [IPControllerApp] Heartmonitor started\nTraceback (most recent call last):\n  File \"C:\\Python27\\Scripts\\ipcontroller-script.py\", line 9, in <module>\n    load_entry_point('ipython==2.0.0-dev', 'console_scripts', 'ipcontroller')()\n  File \"C:\\Python27\\lib\\site-packages\\ipython-2.0.0_dev-py2.7.egg\\IPython\\parallel\\apps\\ipcontrollerapp.py\", line 543, in launch_new_instance\n    return IPControllerApp.launch_instance(*args, **kwargs)\n  File \"C:\\Python27\\lib\\site-packages\\ipython-2.0.0_dev-py2.7.egg\\IPython\\config\\application.py\", line 543, in launch_instance\n    app.start()\n  File \"C:\\Python27\\lib\\site-packages\\ipython-2.0.0_dev-py2.7.egg\\IPython\\parallel\\apps\\ipcontrollerapp.py\", line 514, in start\n    child.start()\n  File \"C:\\Python27\\lib\\multiprocessing\\process.py\", line 130, in start\n    self._popen = Popen(self)\n  File \"C:\\Python27\\lib\\multiprocessing\\forking.py\", line 277, in __init__\n    dump(process_obj, to_child, HIGHEST_PROTOCOL)\n  File \"C:\\Python27\\lib\\multiprocessing\\forking.py\", line 199, in dump\n    ForkingPickler(file, protocol).dump(obj)\n  File \"C:\\Python27\\lib\\pickle.py\", line 224, in dump\n    self.save(obj)\n  File \"C:\\Python27\\lib\\pickle.py\", line 331, in save\n    self.save_reduce(obj=obj, *rv)\n  File \"C:\\Python27\\lib\\pickle.py\", line 419, in save_reduce\n    save(state)\n  File \"C:\\Python27\\lib\\pickle.py\", line 286, in save\n    f(self, obj) # Call unbound method with explicit self\n  File \"C:\\Python27\\lib\\pickle.py\", line 649, in save_dict\n    self._batch_setitems(obj.iteritems())\n  File \"C:\\Python27\\lib\\pickle.py\", line 681, in _batch_setitems\n    save(v)\n  File \"C:\\Python27\\lib\\pickle.py\", line 286, in save\n    f(self, obj) # Call unbound method with explicit self\n  File \"C:\\Python27\\lib\\pickle.py\", line 649, in save_dict\n    self._batch_setitems(obj.iteritems())\n  File \"C:\\Python27\\lib\\pickle.py\", line 681, in _batch_setitems\n    save(v)\n  File \"C:\\Python27\\lib\\pickle.py\", line 286, in save\n    f(self, obj) # Call unbound method with explicit self\n  File \"C:\\Python27\\lib\\pickle.py\", line 649, in save_dict\n    self._batch_setitems(obj.iteritems())\n  File \"C:\\Python27\\lib\\pickle.py\", line 681, in _batch_setitems\n    save(v)\n  File \"C:\\Python27\\lib\\pickle.py\", line 306, in save\n    rv = reduce(self.proto)\nTypeError: 'LazyConfigValue' object is not callable\n\nIf you suspect this is an IPython bug, please report it at:\n    https://github.com/ipython/ipython/issues\nor send an email to the mailing list at ipython-dev@scipy.org\n\nYou can print a more detailed traceback right now with \"%tb\", or use \"%debug\"\nto interactively debug it.\n\nExtra-detailed tracebacks for bug-reporting purposes can be enabled via:\n    c.Application.verbose_crash=True\n\nPS Z:\\> Traceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Python27\\lib\\multiprocessing\\forking.py\", line 381, in main\n    self = load(from_parent)\n  File \"C:\\Python27\\lib\\pickle.py\", line 1378, in load\n    return Unpickler(file).load()\n  File \"C:\\Python27\\lib\\pickle.py\", line 858, in load\n    dispatch[key](self)\n  File \"C:\\Python27\\lib\\pickle.py\", line 880, in load_eof\n    raise EOFError\nEOFError\n```\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU5NDQ2Ojk1YTE2MzQ3ZThlZjZhMmYxMDNiYjM1NzBlMDg0Y2UxMjg2YjVlODc=", "commit_message": "don't create LazyConfigValue on `__` config names\n\ncloses #4447", "commit_timestamp": "2013-10-31T19:39:33Z", "files": ["IPython/config/loader.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzpmNWZhMGNjNjk2Y2YwYTAwNDQ4MmFhYWU1MjQ1YjdhOWIzMjE4NTJi", "commit_message": "don't create LazyConfigValue on `__` config names\n\ncloses #4447", "commit_timestamp": "2013-10-31T19:39:33Z", "files": ["IPython/config/loader.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmM5ODgzZmVhN2U0YjFmNjVmM2UxMmMzN2E4NTIxMjYyMzQzZmFlZTE=", "commit_message": "Merge pull request #4470 from minrk/pickleconfig\n\nVarious Config object cleanups", "commit_timestamp": "2013-11-04T03:39:55Z", "files": ["IPython/config/loader.py", "IPython/config/tests/test_configurable.py", "IPython/config/tests/test_loader.py", "IPython/nbconvert/exporters/exporter.py", "IPython/nbconvert/exporters/templateexporter.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmM5ODgzZmVhN2U0YjFmNjVmM2UxMmMzN2E4NTIxMjYyMzQzZmFlZTE=", "commit_message": "Merge pull request #4470 from minrk/pickleconfig\n\nVarious Config object cleanups", "commit_timestamp": "2013-11-04T03:39:55Z", "files": ["IPython/config/loader.py", "IPython/config/tests/test_configurable.py", "IPython/config/tests/test_loader.py", "IPython/nbconvert/exporters/exporter.py", "IPython/nbconvert/exporters/templateexporter.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo0NTM4NWQ3M2MxZWM0NWQwMTNmOTI0OTEyZGUzMTcxZWY1MjI1ZjNm", "commit_message": "Merge pull request #4470 from minrk/pickleconfig\n\nVarious Config object cleanups", "commit_timestamp": "2013-11-04T03:39:55Z", "files": ["IPython/config/loader.py", "IPython/config/tests/test_configurable.py", "IPython/config/tests/test_loader.py", "IPython/nbconvert/exporters/exporter.py", "IPython/nbconvert/exporters/templateexporter.py"]}], "labels": ["windows", "parallel"], "created_at": "2013-10-28T10:02:53Z", "closed_at": "2013-11-04T03:39:55Z", "linked_pr_number": [4447], "method": ["regex"]}
{"issue_number": 4361, "title": "Crash Ultratraceback/ session history", "body": "```\nprint(\"\\x\")\n```\n\nIn Notebook make ultratraceback not behave : \n\n```\nTraceback (most recent call last):\n\n  File \"/Users/matthiasbussonnier/ipython/IPython/kernel/zmq/ipkernel.py\", line 378, in execute_request\n    shell.run_cell(code, store_history=store_history, silent=silent)\n\n  File \"/Users/matthiasbussonnier/ipython/IPython/core/interactiveshell.py\", line 2676, in run_cell\n    self.showsyntaxerror()\n\n  File \"/Users/matthiasbussonnier/ipython/IPython/core/interactiveshell.py\", line 1774, in showsyntaxerror\n    stb = self.SyntaxTB.structured_traceback(etype, value, [])\n\n  File \"/Users/matthiasbussonnier/ipython/IPython/core/ultratb.py\", line 1205, in structured_traceback\n    if isinstance(value.filename, py3compat.string_types) \\\n\nAttributeError: 'exceptions.ValueError' object has no attribute 'filename'\n\n\nERROR! Session/line number was not unique in database. History logging moved to new session 13867\n```\n\nOf course not hightlighted, kernel does not dies, but no prompt number returned.\n\n(that's not master as I merged a few branch in it, but it shoudln't have any effect, and I can't test on master now)\n", "commits": [{"node_id": "MDY6Q29tbWl0MTIzNjAwMzpiZGNkM2Y2MTQ2MjMyZjJiZGIxMTQyOGIxNWU1OTMxYjE1YmVmMWQ1", "commit_message": "Add failing test for gh-4361", "commit_timestamp": "2013-10-09T22:52:04Z", "files": ["IPython/core/tests/test_ultratb.py", "IPython/testing/tools.py"]}, {"node_id": "MDY6Q29tbWl0MTIzNjAwMzozZDFhYTE2NzVhODk4MzE4NWEyYjFiYzY0NGVmNzNkZDhmYWUwNTJh", "commit_message": "Don't assume that SyntaxTB is always called with a SyntaxError\n\nCloses gh-4361", "commit_timestamp": "2013-10-09T22:53:52Z", "files": ["IPython/core/ultratb.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjQ0ODFjMzIzZTBkMjYxNjg1YWQzNTBmYzZmNDM3NDk0Yjg4OWFiMTI=", "commit_message": "Merge pull request #4372 from takluyver/i4361\n\nDon't assume that SyntaxTB is always called with a SyntaxError\r\n\r\ncloses #4361", "commit_timestamp": "2013-10-11T13:40:32Z", "files": ["IPython/core/tests/test_ultratb.py", "IPython/core/ultratb.py", "IPython/testing/tools.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzpmZjhiOWIwODlmZjc1YTgwOWEwYTQ3NzYzYTA2Y2E5ODMwMjZjOGIw", "commit_message": "Add failing test for gh-4361", "commit_timestamp": "2013-10-09T22:52:04Z", "files": ["IPython/core/tests/test_ultratb.py", "IPython/testing/tools.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzphMWYzODAxN2Y4OTFlODVkYTY3NWFlNjFmZDIyZjVmZWExZjQ1OTNl", "commit_message": "Don't assume that SyntaxTB is always called with a SyntaxError\n\nCloses gh-4361", "commit_timestamp": "2013-10-09T22:53:52Z", "files": ["IPython/core/ultratb.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo2MmFiOWRiNzY3MjAzYTBkOGQ1MjFjZjZkYTAxMWQyN2FlYWUwOWIz", "commit_message": "Merge pull request #4372 from takluyver/i4361\n\nDon't assume that SyntaxTB is always called with a SyntaxError\r\n\r\ncloses #4361", "commit_timestamp": "2013-10-11T13:40:32Z", "files": ["IPython/core/tests/test_ultratb.py", "IPython/core/ultratb.py", "IPython/testing/tools.py"]}], "labels": ["bug"], "created_at": "2013-10-08T14:14:19Z", "closed_at": "2013-10-11T13:40:32Z", "method": ["label"]}
{"issue_number": 4335, "title": "TestPylabSwitch.test_qt fails", "body": "I see this in 2.7 and 3.3\n\n```\n======================================================================\nFAIL: IPython.core.tests.test_pylabtools.TestPylabSwitch.test_qt\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib/python2.7/dist-packages/nose/case.py\", line 197, in runTest\n    self.test(*self.arg)\n  File \"/home/takluyver/.virtualenvs/ipy-trunk/local/lib/python2.7/site-packages/IPython/core/tests/test_pylabtools.py\", line 96, in test_qt\n    nt.assert_equal(gui, 'qt')\nAssertionError: 'tk' != 'qt'\n    \"'tk' != 'qt'\" = '%s != %s' % (safe_repr('tk'), safe_repr('qt'))\n    \"'tk' != 'qt'\" = self._formatMessage(\"'tk' != 'qt'\", \"'tk' != 'qt'\")\n>>  raise self.failureException(\"'tk' != 'qt'\")\n```\n\nWith Python 2 (but not Python 3), I also see this, potentially related, warning (EDIT: the warning is due to sympy 0.7.2, but it does not appear to be connected to the test failure):\n\n```\n/usr/lib/pymodules/python2.7/matplotlib/__init__.py:1143: UserWarning:  This call to matplotlib.use() has no effect\nbecause the the backend has already been chosen;\nmatplotlib.use() must be called *before* pylab, matplotlib.pyplot,\nor matplotlib.backends is imported for the first time.\n\n  warnings.warn(_use_error_msg)\n```\n", "commits": [{"node_id": "MDY6Q29tbWl0MTIzNjAwMzo0ZDVkYTBhNzBiNmY5YzJhYWI2YWVlMWYxMDQ0NmUxOWZlY2MzYmMz", "commit_message": "test_pylabtools also needs to modify matplotlib.rcParamsOrig\n\ncloses gh-4335", "commit_timestamp": "2013-10-07T22:36:05Z", "files": ["IPython/core/tests/test_pylabtools.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjRkNWRhMGE3MGI2ZjljMmFhYjZhZWUxZjEwNDQ2ZTE5ZmVjYzNiYzM=", "commit_message": "test_pylabtools also needs to modify matplotlib.rcParamsOrig\n\ncloses gh-4335", "commit_timestamp": "2013-10-07T22:36:05Z", "files": ["IPython/core/tests/test_pylabtools.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo1OGFhZDg2MmEwYmUwNzkxNjU1ODI0MGZlOTNiOTkwNGQ3ZGVhNGZj", "commit_message": "test_pylabtools also needs to modify matplotlib.rcParamsOrig\n\ncloses gh-4335", "commit_timestamp": "2013-10-07T22:36:05Z", "files": ["IPython/core/tests/test_pylabtools.py"]}], "labels": ["testing"], "created_at": "2013-10-02T23:22:53Z", "closed_at": "2013-10-07T23:34:29Z", "method": ["regex"]}
{"issue_number": 4334, "title": "NotebookApp.webapp_settings static_url_prefix causes crash", "body": "on master:\n\n```\n{'codename': 'An Afternoon Hack',\n 'commit_hash': 'db5ce0e',\n 'commit_source': 'repository',\n 'default_encoding': 'UTF-8',\n 'ipython_path': '/Users/karissamckelvey/dev/continuum/thirdparty/ipythonprivate/IPython',\n 'ipython_version': '2.0.0-dev',\n 'os_name': 'posix',\n 'platform': 'Darwin-12.3.0-x86_64-i386-64bit',\n 'sys_executable': '/Users/karissamckelvey/anaconda/bin/python',\n 'sys_platform': 'darwin',\n 'sys_version': '2.7.5 |Anaconda 1.7.0 (x86_64)| (default, Jun 28 2013, 22:20:13) \\n[GCC 4.0.1 (Apple Inc. build 5493)]'}\n```\n1. Run `$ ipython notebook --NotebookApp.webapp_settings=\"{'static_url_prefix':'/static/'}\"`\n2. Open up a new notebook \n3. Can't enter commands into the shell. Get the following stack trace:\n\n`````` bash\n2013-10-02 17:44:11.462 [NotebookApp] Using existing profile dir: u'/Users/karissamckelvey/.ipython/profile_default'\n2013-10-02 17:44:11.559 [NotebookApp] Using MathJax from CDN: http://cdn.mathjax.org/mathjax/latest/MathJax.js\n2013-10-02 17:44:11.575 [NotebookApp] The port 8888 is already in use, trying another random port.\n2013-10-02 17:44:11.575 [NotebookApp] Serving notebooks from local directory: /Users/karissamckelvey\n2013-10-02 17:44:11.575 [NotebookApp] The IPython Notebook is running at: http://127.0.0.1:8889/\n2013-10-02 17:44:11.575 [NotebookApp] Use Control-C to stop this server and shut down all kernels (twice to skip confirmation).\n2013-10-02 17:44:15.198 [tornado.application] ERROR | Uncaught exception POST /kernels?notebook=03fb94ab-98f3-4c18-808b-298ffc79a01a (127.0.0.1)\nHTTPRequest(protocol='http', host='127.0.0.1:8889', method='POST', uri='/kernels?notebook=03fb94ab-98f3-4c18-808b-298ffc79a01a', version='HTTP/1.1', remote_ip='127.0.0.1', headers={'Origin': 'http://127.0.0.1:8889', 'Content-Length': '0', 'Accept-Language': 'en-us', 'Accept-Encoding': 'gzip, deflate', 'Host': '127.0.0.1:8889', 'Accept': 'application/json, text/javascript, */*; q=0.01', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_8_3) AppleWebKit/536.28.10 (KHTML, like Gecko) Version/6.0.3 Safari/536.28.10', 'Connection': 'keep-alive', 'X-Requested-With': 'XMLHttpRequest', 'Referer': 'http://127.0.0.1:8889/03fb94ab-98f3-4c18-808b-298ffc79a01a'})\nTraceback (most recent call last):\n  File \"/Users/karissamckelvey/anaconda/python.app/Contents/lib/python2.7/site-packages/tornado/web.py\", line 1141, in _when_complete\n    callback()\n  File \"/Users/karissamckelvey/anaconda/python.app/Contents/lib/python2.7/site-packages/tornado/web.py\", line 1162, in _execute_method\n    self._when_complete(method(*self.path_args, **self.path_kwargs),\n  File \"/Users/karissamckelvey/anaconda/python.app/Contents/lib/python2.7/site-packages/tornado/web.py\", line 2297, in wrapper\n    return method(self, *args, **kwargs)\n  File \"/Users/karissamckelvey/dev/continuum/thirdparty/ipythonprivate/IPython/html/services/kernels/handlers.py\", line 46, in post\n    kernel_id = km.start_kernel(notebook_id, cwd=nbm.notebook_dir)\n  File \"/Users/karissamckelvey/dev/continuum/thirdparty/ipythonprivate/IPython/html/services/kernels/kernelmanager.py\", line 86, in start_kernel\n    kernel_id = super(MappingKernelManager, self).start_kernel(**kwargs)\n  File \"/Users/karissamckelvey/dev/continuum/thirdparty/ipythonprivate/IPython/kernel/multikernelmanager.py\", line 115, in start_kernel\n    km.start_kernel(**kwargs)\n  File \"/Users/karissamckelvey/dev/continuum/thirdparty/ipythonprivate/IPython/kernel/manager.py\", line 201, in start_kernel\n    kernel_cmd = self.format_kernel_cmd(**kw)\n  File \"/Users/karissamckelvey/dev/continuum/thirdparty/ipythonprivate/IPython/kernel/manager.py\", line 154, in format_kernel_cmd\n    return [ c.format(**ns) for c in cmd ]\nKeyError: u\"'static_url_prefix'\"\n2013-10-02 17:44:15.200 [tornado.access] ERROR | 500 POST /kernels?notebook=03fb94ab-98f3-4c18-808b-298ffc79a01a (127.0.0.1) 12.20ms```\n``````\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU5NDQ2Ojg4Yzg4NzUyZjhiOTllYTA5MWQzNmVmZmEzMDI4OGM4ZjA2OGQ1NTA=", "commit_message": "use simple replacement rather than string formatting in format_kernel_cmd\n\ncloses #4334\n\ncandidate for backport", "commit_timestamp": "2013-10-02T23:43:02Z", "files": ["IPython/kernel/manager.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjZlZjgzM2QxODcyMzQzNjI4ZTg3ZGM3YWJkYzczYmQzYzEwN2VkYTQ=", "commit_message": "Merge pull request #4336 from minrk/kernel_cmd_format\n\nuse simple replacement rather than string formatting in format_kernel_cmd\r\n\r\ncloses #4334", "commit_timestamp": "2013-10-03T12:08:46Z", "files": ["IPython/kernel/manager.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjJhNjI3NzY0OTU1YTljNzFhMTgwMzZlN2UxMzA1M2ExMGZkN2UwZmI=", "commit_message": "Backport PR #4336: use simple replacement rather than string formatting in format_kernel_cmd\n\ncloses #4334", "commit_timestamp": "2013-10-06T09:03:25Z", "files": ["IPython/kernel/manager.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzoyZWM5YTVmMDk4NDQwYTJiMDljODFmNmY2MTA1Mjg2MDQyOGRlMWRh", "commit_message": "use simple replacement rather than string formatting in format_kernel_cmd\n\ncloses #4334\n\ncandidate for backport", "commit_timestamp": "2013-10-02T23:43:02Z", "files": ["IPython/kernel/manager.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzphM2JmOTU3MjliNmRmNzFiNDU5ZTgzMjg2YjQwZjY3MWZmYTBhNDhm", "commit_message": "Merge pull request #4336 from minrk/kernel_cmd_format\n\nuse simple replacement rather than string formatting in format_kernel_cmd\r\n\r\ncloses #4334", "commit_timestamp": "2013-10-03T12:08:46Z", "files": ["IPython/kernel/manager.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjZlZjgzM2QxODcyMzQzNjI4ZTg3ZGM3YWJkYzczYmQzYzEwN2VkYTQ=", "commit_message": "Merge pull request #4336 from minrk/kernel_cmd_format\n\nuse simple replacement rather than string formatting in format_kernel_cmd\r\n\r\ncloses #4334", "commit_timestamp": "2013-10-03T12:08:46Z", "files": ["IPython/kernel/manager.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjZlZjgzM2QxODcyMzQzNjI4ZTg3ZGM3YWJkYzczYmQzYzEwN2VkYTQ=", "commit_message": "Merge pull request #4336 from minrk/kernel_cmd_format\n\nuse simple replacement rather than string formatting in format_kernel_cmd\r\n\r\ncloses #4334", "commit_timestamp": "2013-10-03T12:08:46Z", "files": ["IPython/kernel/manager.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjJhNjI3NzY0OTU1YTljNzFhMTgwMzZlN2UxMzA1M2ExMGZkN2UwZmI=", "commit_message": "Backport PR #4336: use simple replacement rather than string formatting in format_kernel_cmd\n\ncloses #4334", "commit_timestamp": "2013-10-06T09:03:25Z", "files": ["IPython/kernel/manager.py"]}, {"node_id": "MDY6Q29tbWl0MjM0Mzk1OTowYTMyZTA1ZWZlM2VmMDI0NTgzMWNhMTVkMzYyZGU5OWZjN2Y5YWY3", "commit_message": "Merge commit 'rel-1.1.0-7-gf5891e9' into debian-1X\n\n* commit 'rel-1.1.0-7-gf5891e9':\n  Backport PR #4346: getpass() on Windows & Python 2 needs bytes prompt\n  Backport PR #4336: use simple replacement rather than string formatting in format_kernel_cmd\n  Backport PR #4316: underscore missing on notebook_p4\n  Backport PR #4257: fix unicode argv parsing", "commit_timestamp": "2013-11-01T19:13:35Z", "files": ["IPython/config/application.py", "IPython/config/tests/test_application.py", "IPython/kernel/connect.py", "IPython/kernel/manager.py"]}, {"node_id": "MDY6Q29tbWl0MjM0Mzk1OTozOGUwNGQwNzQwZmQxYmEyMWRkNzQzYjYyYWZlZmRlNTkzYjU0MjFl", "commit_message": "Merge commit 'rel-1.1.0-7-gf5891e9' into releases\n\n* commit 'rel-1.1.0-7-gf5891e9': (70 commits)\n  Backport PR #4346: getpass() on Windows & Python 2 needs bytes prompt\n  Backport PR #4336: use simple replacement rather than string formatting in format_kernel_cmd\n  Backport PR #4316: underscore missing on notebook_p4\n  Backport PR #4257: fix unicode argv parsing\n  Backport PR #4209: Magic doc fixes\n  Backport PR #4204: remove some extraneous print statements from IPython.parallel\n  back to dev\n  release 1.1.0\n  don't upload to GitHub in release script\n  1.1 backport stats\n  Backport PR #4188: Allow user_ns trait to be None\n  Backport PR #4189: always fire LOCAL_IPS.extend(PUBLIC_IPS)\n  Backport PR #4174: various issues in markdown and rst templates\n  Backport PR #4181: nbconvert: Fix, sphinx template not removing new lines from headers\n  Backport PR #4043: don't 'restore_bytes' in from_JSON\n  Backport PR #4178: add missing data_javascript\n  Backport PR #4136: catch javascript errors in any output\n  Backport PR #4163: Fix for incorrect default encoding on Windows.\n  Backport PR #4171: add nbconvert config file when creating profiles\n  Backport PR #4159: don't split `.cell` and `div.cell` CSS\n  ...", "commit_timestamp": "2014-03-18T03:23:33Z", "files": ["IPython/config/application.py", "IPython/config/tests/test_application.py", "IPython/consoleapp.py", "IPython/core/application.py", "IPython/core/inputtransformer.py", "IPython/core/interactiveshell.py", "IPython/core/magics/execution.py", "IPython/core/profileapp.py", "IPython/core/profiledir.py", "IPython/core/release.py", "IPython/core/shellapp.py", "IPython/core/tests/test_completerlib.py", "IPython/core/tests/test_inputtransformer.py", "IPython/core/tests/test_interactiveshell.py", "IPython/core/tests/test_magic.py", "IPython/core/tests/test_profile.py", "IPython/core/tests/test_prompts.py", "IPython/core/tests/test_ultratb.py", "IPython/extensions/cythonmagic.py", "IPython/extensions/octavemagic.py", "IPython/extensions/rmagic.py", "IPython/extensions/storemagic.py", "IPython/extensions/tests/test_storemagic.py", "IPython/external/mathjax.py", "IPython/html/notebookapp.py", "IPython/html/tests/test_notebookapp.py", "IPython/kernel/client.py", "IPython/kernel/connect.py", "IPython/kernel/manager.py", "IPython/kernel/tests/test_connect.py", "IPython/kernel/tests/test_kernel.py", "IPython/kernel/tests/test_message_spec.py", "IPython/kernel/zmq/heartbeat.py", "IPython/kernel/zmq/ipkernel.py", "IPython/kernel/zmq/kernelapp.py", "IPython/kernel/zmq/serialize.py", "IPython/kernel/zmq/tests/test_start_kernel.py", "IPython/lib/inputhook.py", "IPython/nbconvert/exporters/exporter.py", "IPython/nbconvert/exporters/markdown.py", "IPython/nbconvert/filters/strings.py", "IPython/nbconvert/nbconvertapp.py", "IPython/nbconvert/tests/base.py", "IPython/nbconvert/tests/test_nbconvertapp.py", "IPython/nbconvert/transformers/base.py", "IPython/nbconvert/transformers/coalescestreams.py", "IPython/nbconvert/transformers/sphinx.py", "IPython/nbformat/v3/nbbase.py", "IPython/nbformat/v3/nbjson.py", "IPython/nbformat/v3/nbpy.py", "IPython/nbformat/v3/rwbase.py", "IPython/nbformat/v3/tests/nbexamples.py", "IPython/nbformat/v3/tests/test_json.py", "IPython/nbformat/v3/tests/test_nbbase.py", "IPython/parallel/apps/baseapp.py", "IPython/parallel/client/client.py", "IPython/parallel/client/remotefunction.py", "IPython/parallel/client/view.py", "IPython/parallel/controller/mongodb.py", "IPython/parallel/error.py", "IPython/parallel/tests/__init__.py", "IPython/parallel/tests/test_client.py", "IPython/parallel/tests/test_view.py", "IPython/qt/console/frontend_widget.py", "IPython/qt/console/qtconsoleapp.py", "IPython/qt/console/rich_ipython_widget.py", "IPython/qt/console/tests/test_app.py", "IPython/qt/rich_text.py", "IPython/terminal/console/tests/test_console.py", "IPython/terminal/ipapp.py", "IPython/terminal/tests/test_help.py", "IPython/testing/tools.py", "IPython/utils/encoding.py", "IPython/utils/localinterfaces.py", "IPython/utils/py3compat.py", "IPython/utils/tempdir.py", "IPython/utils/tests/test_path.py", "IPython/utils/text.py", "tools/backport_pr.py", "tools/gh_api.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzphM2JmOTU3MjliNmRmNzFiNDU5ZTgzMjg2YjQwZjY3MWZmYTBhNDhm", "commit_message": "Merge pull request #4336 from minrk/kernel_cmd_format\n\nuse simple replacement rather than string formatting in format_kernel_cmd\r\n\r\ncloses #4334", "commit_timestamp": "2013-10-03T12:08:46Z", "files": ["IPython/kernel/manager.py"]}], "labels": ["bug", "notebook", "kernel"], "created_at": "2013-10-02T22:46:23Z", "closed_at": "2013-10-03T12:08:46Z", "linked_pr_number": [4334], "method": ["label"]}
{"issue_number": 4317, "title": "Relative imports broken in the notebook (Windows)", "body": "It seems like relative imports do not work anymore in my notebooks since 6590fa5cce38f9b5020f219433b6821ba318a533.\nI'm on Windows 8 64 bits, Python 2.7.5.\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU5NDQ2OjVhZWE5NGY5YjJkNDY3YmMxNGY4NTcwNDdiMTU2YzM1NjUyNTY2MjI=", "commit_message": "fix initial sys.path\n\nrecent change caused initial sys.path to lose '' as the first element in the notebook.\n\ncloses #4317", "commit_timestamp": "2013-09-30T22:47:22Z", "files": ["IPython/core/application.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzozY2ZkZDg2MzYwNzA5NGI1MWUxYWI1MmQ0NzRjNmUzMTIxNjlmZmE0", "commit_message": "fix initial sys.path\n\nrecent change caused initial sys.path to lose '' as the first element in the notebook.\n\ncloses #4317", "commit_timestamp": "2013-09-30T22:47:22Z", "files": ["IPython/core/application.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjRkNmFhZDM0MDJhMGY1ZWUwMjM3ZTQ3ZTZlOGRkZTE0ZDhlODc5NGM=", "commit_message": "Merge pull request #4318 from minrk/sys.path\n\nfix initial sys.path", "commit_timestamp": "2013-10-02T16:37:55Z", "files": ["IPython/core/application.py", "IPython/kernel/tests/test_kernel.py", "IPython/kernel/tests/utils.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjRkNmFhZDM0MDJhMGY1ZWUwMjM3ZTQ3ZTZlOGRkZTE0ZDhlODc5NGM=", "commit_message": "Merge pull request #4318 from minrk/sys.path\n\nfix initial sys.path", "commit_timestamp": "2013-10-02T16:37:55Z", "files": ["IPython/core/application.py", "IPython/kernel/tests/test_kernel.py", "IPython/kernel/tests/utils.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzoyODZmNjIxNGJhYjExOGEzMjAyMzU1YjUyNWJkYzI1YTI5MGIwNzQ0", "commit_message": "Merge pull request #4318 from minrk/sys.path\n\nfix initial sys.path", "commit_timestamp": "2013-10-02T16:37:55Z", "files": ["IPython/core/application.py", "IPython/kernel/tests/test_kernel.py", "IPython/kernel/tests/utils.py"]}], "labels": [], "created_at": "2013-09-30T21:31:42Z", "closed_at": "2013-10-02T16:37:55Z", "linked_pr_number": [4317], "method": ["regex"]}
{"issue_number": 4312, "title": "Link broken on ipython-doc stable", "body": "On the page\n\nhttp://ipython.org/ipython-doc/stable/interactive/notebook.html\n\nThe link to \n\nMarkdown Cells example notebook\n\nis broken, it should be\n\nhttp://nbviewer.ipython.org/urls/raw.github.com/ipython/ipython/1.x/examples/notebooks/Part%204%20-%20Markdown%20Cells.ipynb\n", "commits": [{"node_id": "MDY6Q29tbWl0MjM0Mzk1OTowYTMyZTA1ZWZlM2VmMDI0NTgzMWNhMTVkMzYyZGU5OWZjN2Y5YWY3", "commit_message": "Merge commit 'rel-1.1.0-7-gf5891e9' into debian-1X\n\n* commit 'rel-1.1.0-7-gf5891e9':\n  Backport PR #4346: getpass() on Windows & Python 2 needs bytes prompt\n  Backport PR #4336: use simple replacement rather than string formatting in format_kernel_cmd\n  Backport PR #4316: underscore missing on notebook_p4\n  Backport PR #4257: fix unicode argv parsing", "commit_timestamp": "2013-11-01T19:13:35Z", "files": ["IPython/config/application.py", "IPython/config/tests/test_application.py", "IPython/kernel/connect.py", "IPython/kernel/manager.py"]}, {"node_id": "MDY6Q29tbWl0MjM0Mzk1OTozOGUwNGQwNzQwZmQxYmEyMWRkNzQzYjYyYWZlZmRlNTkzYjU0MjFl", "commit_message": "Merge commit 'rel-1.1.0-7-gf5891e9' into releases\n\n* commit 'rel-1.1.0-7-gf5891e9': (70 commits)\n  Backport PR #4346: getpass() on Windows & Python 2 needs bytes prompt\n  Backport PR #4336: use simple replacement rather than string formatting in format_kernel_cmd\n  Backport PR #4316: underscore missing on notebook_p4\n  Backport PR #4257: fix unicode argv parsing\n  Backport PR #4209: Magic doc fixes\n  Backport PR #4204: remove some extraneous print statements from IPython.parallel\n  back to dev\n  release 1.1.0\n  don't upload to GitHub in release script\n  1.1 backport stats\n  Backport PR #4188: Allow user_ns trait to be None\n  Backport PR #4189: always fire LOCAL_IPS.extend(PUBLIC_IPS)\n  Backport PR #4174: various issues in markdown and rst templates\n  Backport PR #4181: nbconvert: Fix, sphinx template not removing new lines from headers\n  Backport PR #4043: don't 'restore_bytes' in from_JSON\n  Backport PR #4178: add missing data_javascript\n  Backport PR #4136: catch javascript errors in any output\n  Backport PR #4163: Fix for incorrect default encoding on Windows.\n  Backport PR #4171: add nbconvert config file when creating profiles\n  Backport PR #4159: don't split `.cell` and `div.cell` CSS\n  ...", "commit_timestamp": "2014-03-18T03:23:33Z", "files": ["IPython/config/application.py", "IPython/config/tests/test_application.py", "IPython/consoleapp.py", "IPython/core/application.py", "IPython/core/inputtransformer.py", "IPython/core/interactiveshell.py", "IPython/core/magics/execution.py", "IPython/core/profileapp.py", "IPython/core/profiledir.py", "IPython/core/release.py", "IPython/core/shellapp.py", "IPython/core/tests/test_completerlib.py", "IPython/core/tests/test_inputtransformer.py", "IPython/core/tests/test_interactiveshell.py", "IPython/core/tests/test_magic.py", "IPython/core/tests/test_profile.py", "IPython/core/tests/test_prompts.py", "IPython/core/tests/test_ultratb.py", "IPython/extensions/cythonmagic.py", "IPython/extensions/octavemagic.py", "IPython/extensions/rmagic.py", "IPython/extensions/storemagic.py", "IPython/extensions/tests/test_storemagic.py", "IPython/external/mathjax.py", "IPython/html/notebookapp.py", "IPython/html/tests/test_notebookapp.py", "IPython/kernel/client.py", "IPython/kernel/connect.py", "IPython/kernel/manager.py", "IPython/kernel/tests/test_connect.py", "IPython/kernel/tests/test_kernel.py", "IPython/kernel/tests/test_message_spec.py", "IPython/kernel/zmq/heartbeat.py", "IPython/kernel/zmq/ipkernel.py", "IPython/kernel/zmq/kernelapp.py", "IPython/kernel/zmq/serialize.py", "IPython/kernel/zmq/tests/test_start_kernel.py", "IPython/lib/inputhook.py", "IPython/nbconvert/exporters/exporter.py", "IPython/nbconvert/exporters/markdown.py", "IPython/nbconvert/filters/strings.py", "IPython/nbconvert/nbconvertapp.py", "IPython/nbconvert/tests/base.py", "IPython/nbconvert/tests/test_nbconvertapp.py", "IPython/nbconvert/transformers/base.py", "IPython/nbconvert/transformers/coalescestreams.py", "IPython/nbconvert/transformers/sphinx.py", "IPython/nbformat/v3/nbbase.py", "IPython/nbformat/v3/nbjson.py", "IPython/nbformat/v3/nbpy.py", "IPython/nbformat/v3/rwbase.py", "IPython/nbformat/v3/tests/nbexamples.py", "IPython/nbformat/v3/tests/test_json.py", "IPython/nbformat/v3/tests/test_nbbase.py", "IPython/parallel/apps/baseapp.py", "IPython/parallel/client/client.py", "IPython/parallel/client/remotefunction.py", "IPython/parallel/client/view.py", "IPython/parallel/controller/mongodb.py", "IPython/parallel/error.py", "IPython/parallel/tests/__init__.py", "IPython/parallel/tests/test_client.py", "IPython/parallel/tests/test_view.py", "IPython/qt/console/frontend_widget.py", "IPython/qt/console/qtconsoleapp.py", "IPython/qt/console/rich_ipython_widget.py", "IPython/qt/console/tests/test_app.py", "IPython/qt/rich_text.py", "IPython/terminal/console/tests/test_console.py", "IPython/terminal/ipapp.py", "IPython/terminal/tests/test_help.py", "IPython/testing/tools.py", "IPython/utils/encoding.py", "IPython/utils/localinterfaces.py", "IPython/utils/py3compat.py", "IPython/utils/tempdir.py", "IPython/utils/tests/test_path.py", "IPython/utils/text.py", "tools/backport_pr.py", "tools/gh_api.py"]}], "labels": [], "created_at": "2013-09-30T17:06:45Z", "closed_at": "2013-09-30T23:58:36Z", "linked_pr_number": [4312], "method": ["regex"]}
{"issue_number": 4308, "title": "Error when use \"ipython notebook\" in win7 64 with python2.7.3 64.", "body": "when i use ipython notebook, it cannot run currently(ipython works well), and shows:\nTraceback (most recent call last):\n  File \"c:\\python27\\Scripts\\ipython-script.py\", line 9, in <module>\n    load_entry_point('ipython==1.1.0', 'console_scripts', 'ipython')()\n  File \"c:\\python27\\lib\\site-packages\\IPython__init__.py\", line 118, in start_\npython\n    return launch_new_instance(argv=argv, *_kwargs)\n  File \"c:\\python27\\lib\\site-packages\\IPython\\config\\application.py\", line 544,\nin launch_instance\n    app.initialize(argv)\n  File \"<string>\", line 2, in initialize\n  File \"c:\\python27\\lib\\site-packages\\IPython\\config\\application.py\", line 89,\nn catch_config_error\n    return method(app, *args, *_kwargs)\n  File \"c:\\python27\\lib\\site-packages\\IPython\\terminal\\ipapp.py\", line 312, in\nnitialize\n    super(TerminalIPythonApp, self).initialize(argv)\n  File \"<string>\", line 2, in initialize\n  File \"c:\\python27\\lib\\site-packages\\IPython\\config\\application.py\", line 89,\nn catch_config_error\n    return method(app, _args, *_kwargs)\n  File \"c:\\python27\\lib\\site-packages\\IPython\\core\\application.py\", line 362, i\n initialize\n    self.parse_command_line(argv)\n  File \"c:\\python27\\lib\\site-packages\\IPython\\terminal\\ipapp.py\", line 307, in\narse_command_line\n    return super(TerminalIPythonApp, self).parse_command_line(argv)\n  File \"<string>\", line 2, in parse_command_line\n  File \"c:\\python27\\lib\\site-packages\\IPython\\config\\application.py\", line 89,\nn catch_config_error\n    return method(app, _args, *_kwargs)\n  File \"c:\\python27\\lib\\site-packages\\IPython\\config\\application.py\", line 474,\nin parse_command_line\n    return self.initialize_subcommand(subc, subargv)\n  File \"<string>\", line 2, in initialize_subcommand\n  File \"c:\\python27\\lib\\site-packages\\IPython\\config\\application.py\", line 89,\nn catch_config_error\n    return method(app, _args, *_kwargs)\n  File \"c:\\python27\\lib\\site-packages\\IPython\\config\\application.py\", line 412,\nin initialize_subcommand\n    self.subapp.initialize(argv)\n  File \"<string>\", line 2, in initialize\n  File \"c:\\python27\\lib\\site-packages\\IPython\\config\\application.py\", line 89,\nn catch_config_error\n    return method(app, _args, *_kwargs)\n  File \"c:\\python27\\lib\\site-packages\\IPython\\html\\notebookapp.py\", line 665, i\n initialize\n    self.init_webapp()\n  File \"c:\\python27\\lib\\site-packages\\IPython\\html\\notebookapp.py\", line 546, i\n init_webapp\n    self.http_server.listen(port, self.ip)\n  File \"c:\\python27\\lib\\site-packages\\tornado\\tcpserver.py\", line 117, in liste\n\n```\nsockets = bind_sockets(port, address=address)\n```\n\n  File \"c:\\python27\\lib\\site-packages\\tornado\\netutil.py\", line 90, in bind_soc\nets\n    sock.bind(sockaddr)\n  File \"c:\\python27\\lib\\socket.py\", line 224, in meth\n    return getattr(self._sock,name)(*args)\nerror: [Errno 10013]\n\nIf you suspect this is an IPython bug, please report it at:\n    https://github.com/ipython/ipython/issues\nor send an email to the mailing list at ipython-dev@scipy.org\n\nI just install ipython with\"pip install ipython\".\n\nIs it a bug or just I do not config it right?\n\nThank you .\n\n---\n\nHave solved it with --port parameter\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU5NDQ2OjMyMDViOTJhMDNmNTJkODAxOTRkOTk5MzFkMDJmOWQ0NzQ2MGM0YTY=", "commit_message": "catch EACCES when binding notebook app\n\ncan come up for low ports on *ix, or user access control restrictions on Windows.\n\ncloses #4308", "commit_timestamp": "2013-09-30T18:20:42Z", "files": ["IPython/html/notebookapp.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmUxZDRhMWQwMTUzZWE0NmQ5NmQxNjk4NzQ5ZDMzODExZjFkOTI0OGM=", "commit_message": "Merge pull request #4314 from minrk/eaccess\n\ncatch EACCES when binding notebook app\r\n\r\ncan come up for low ports on *ix, or user access control restrictions on Windows.\r\n\r\ncloses #4308", "commit_timestamp": "2013-10-02T17:23:11Z", "files": ["IPython/html/notebookapp.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzphYzk1NDc2ZjM5ZTVmODM2ZWVkYWU1MTQ1MzgzYWQzNGM3MDQzMGFj", "commit_message": "catch EACCES when binding notebook app\n\ncan come up for low ports on *ix, or user access control restrictions on Windows.\n\ncloses #4308", "commit_timestamp": "2013-09-30T18:20:42Z", "files": ["IPython/html/notebookapp.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo2OTU4NDY2OTZlZmQyYjVhNGRiMjc1YTkyNTk2Nzc4OGI1Y2FiMTRl", "commit_message": "Merge pull request #4314 from minrk/eaccess\n\ncatch EACCES when binding notebook app\r\n\r\ncan come up for low ports on *ix, or user access control restrictions on Windows.\r\n\r\ncloses #4308", "commit_timestamp": "2013-10-02T17:23:11Z", "files": ["IPython/html/notebookapp.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmUxZDRhMWQwMTUzZWE0NmQ5NmQxNjk4NzQ5ZDMzODExZjFkOTI0OGM=", "commit_message": "Merge pull request #4314 from minrk/eaccess\n\ncatch EACCES when binding notebook app\r\n\r\ncan come up for low ports on *ix, or user access control restrictions on Windows.\r\n\r\ncloses #4308", "commit_timestamp": "2013-10-02T17:23:11Z", "files": ["IPython/html/notebookapp.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmUxZDRhMWQwMTUzZWE0NmQ5NmQxNjk4NzQ5ZDMzODExZjFkOTI0OGM=", "commit_message": "Merge pull request #4314 from minrk/eaccess\n\ncatch EACCES when binding notebook app\r\n\r\ncan come up for low ports on *ix, or user access control restrictions on Windows.\r\n\r\ncloses #4308", "commit_timestamp": "2013-10-02T17:23:11Z", "files": ["IPython/html/notebookapp.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo2OTU4NDY2OTZlZmQyYjVhNGRiMjc1YTkyNTk2Nzc4OGI1Y2FiMTRl", "commit_message": "Merge pull request #4314 from minrk/eaccess\n\ncatch EACCES when binding notebook app\r\n\r\ncan come up for low ports on *ix, or user access control restrictions on Windows.\r\n\r\ncloses #4308", "commit_timestamp": "2013-10-02T17:23:11Z", "files": ["IPython/html/notebookapp.py"]}], "labels": [], "created_at": "2013-09-30T11:12:25Z", "closed_at": "2013-10-02T17:23:11Z", "linked_pr_number": [4308], "method": ["regex"]}
{"issue_number": 4296, "title": "sync_imports() fails in python 3.3", "body": "builtins.**import** no longer seems to use level=-1,\nview.py, line 481:\nif level == -1 and key not in modules:\n\nThis if never get executed and nothing is imported on engines because level defaults to 0 for python 3.3\n\nI changed to:\nif level == 0 and key not in modules:\nWhich works for me, but is probably not a good fix.\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU5NDQ2OjU3YWVmZDAyYjcxMjk5NzJhZDQ4MGUzNzVkMGU0M2ZjNTZhOTY0NDQ=", "commit_message": "adjust default value of level in sync_imports\n\nand value check for <= 0 instead of just -1.\n\nPython 3 no longer allows negative values (relative or absolute),\nand we should have always allowed 0 to work anyway.\n\ncloses #4296", "commit_timestamp": "2013-10-03T04:26:26Z", "files": ["IPython/parallel/client/view.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo2ZjRiNGJkYTJjNmUxNjk3MTI1MDVjMTZjNjRmN2FiMDVmZjM1N2Rl", "commit_message": "adjust default value of level in sync_imports\n\nand value check for <= 0 instead of just -1.\n\nPython 3 no longer allows negative values (relative or absolute),\nand we should have always allowed 0 to work anyway.\n\ncloses #4296", "commit_timestamp": "2013-10-03T04:26:26Z", "files": ["IPython/parallel/client/view.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjA4NTI5NjE1NWE2OTIwMDUxYmIxYTIyMThmNjI5MjgwNTljNzQ0NTE=", "commit_message": "Merge pull request #4338 from minrk/sync_imports\n\nadjust default value of level in sync_imports", "commit_timestamp": "2013-10-03T19:21:38Z", "files": ["IPython/parallel/client/view.py", "IPython/parallel/tests/test_view.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjA4NTI5NjE1NWE2OTIwMDUxYmIxYTIyMThmNjI5MjgwNTljNzQ0NTE=", "commit_message": "Merge pull request #4338 from minrk/sync_imports\n\nadjust default value of level in sync_imports", "commit_timestamp": "2013-10-03T19:21:38Z", "files": ["IPython/parallel/client/view.py", "IPython/parallel/tests/test_view.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo2MGVlOTZiMTE3NmEzNWQxMzA4MGJhMjUwYTU5MzQ1NjExYjZjMmRl", "commit_message": "Merge pull request #4338 from minrk/sync_imports\n\nadjust default value of level in sync_imports", "commit_timestamp": "2013-10-03T19:21:38Z", "files": ["IPython/parallel/client/view.py", "IPython/parallel/tests/test_view.py"]}], "labels": ["bug"], "created_at": "2013-09-29T00:01:07Z", "closed_at": "2013-10-03T19:21:38Z", "linked_pr_number": [4296], "method": ["label", "regex"]}
{"issue_number": 4245, "title": "nbconvert latex: code highlighting causes error", "body": "The latex generated from this notebook fails to compile due to the code highlighing:\nhttp://nbviewer.ipython.org/2f85ddd8d967795dcb0e\n\nand the tex: https://gist.github.com/ihnorton/a86c521d4aa223f9dba9\n\n```\n! LaTeX Error: Environment Shaded undefined.\n\nSee the LaTeX manual or LaTeX Companion for explanation.\nType  H <return>  for immediate help.\n ...                                              \n\nl.237         \\begin{Shaded}\n\n? \n! Emergency stop.\n ...                                              \n\nl.237         \\begin{Shaded}\n```\n\nUbuntu 13.04, IPython 1.1, pandoc 1.10.1\n\nedit: Confirmed in pandoc 1.12.01 on Windows 7\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU4NTE4OjE0NjI1ZGZkZmYwMmI5ZTU3NTg4ODUzYWJhNmM0M2JiZDRhZGY4YjI=", "commit_message": "Merge pull request #4466 from minrk/pandoc-preamble\n\nvarious pandoc latex fixes\r\n\r\n- add missing declarations to latex_base (required for pandoc-highlighted code in markdown)\r\n- fix ansi color in latex, which didn't work in a variety of ways.\r\n\r\ncloses #4245", "commit_timestamp": "2013-11-05T20:30:55Z", "files": ["IPython/nbconvert/filters/ansi.py", "IPython/nbconvert/filters/tests/test_ansi.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzphNjFjMmExYThkYmI0NDk4YzczZTdmOTIyM2NlYjhjMzQxZmYwN2Qx", "commit_message": "Merge pull request #4466 from minrk/pandoc-preamble\n\nvarious pandoc latex fixes\r\n\r\n- add missing declarations to latex_base (required for pandoc-highlighted code in markdown)\r\n- fix ansi color in latex, which didn't work in a variety of ways.\r\n\r\ncloses #4245", "commit_timestamp": "2013-11-05T20:30:55Z", "files": ["IPython/nbconvert/filters/ansi.py", "IPython/nbconvert/filters/tests/test_ansi.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjE0NjI1ZGZkZmYwMmI5ZTU3NTg4ODUzYWJhNmM0M2JiZDRhZGY4YjI=", "commit_message": "Merge pull request #4466 from minrk/pandoc-preamble\n\nvarious pandoc latex fixes\r\n\r\n- add missing declarations to latex_base (required for pandoc-highlighted code in markdown)\r\n- fix ansi color in latex, which didn't work in a variety of ways.\r\n\r\ncloses #4245", "commit_timestamp": "2013-11-05T20:30:55Z", "files": ["IPython/nbconvert/filters/ansi.py", "IPython/nbconvert/filters/tests/test_ansi.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjE0NjI1ZGZkZmYwMmI5ZTU3NTg4ODUzYWJhNmM0M2JiZDRhZGY4YjI=", "commit_message": "Merge pull request #4466 from minrk/pandoc-preamble\n\nvarious pandoc latex fixes\r\n\r\n- add missing declarations to latex_base (required for pandoc-highlighted code in markdown)\r\n- fix ansi color in latex, which didn't work in a variety of ways.\r\n\r\ncloses #4245", "commit_timestamp": "2013-11-05T20:30:55Z", "files": ["IPython/nbconvert/filters/ansi.py", "IPython/nbconvert/filters/tests/test_ansi.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzphNjFjMmExYThkYmI0NDk4YzczZTdmOTIyM2NlYjhjMzQxZmYwN2Qx", "commit_message": "Merge pull request #4466 from minrk/pandoc-preamble\n\nvarious pandoc latex fixes\r\n\r\n- add missing declarations to latex_base (required for pandoc-highlighted code in markdown)\r\n- fix ansi color in latex, which didn't work in a variety of ways.\r\n\r\ncloses #4245", "commit_timestamp": "2013-11-05T20:30:55Z", "files": ["IPython/nbconvert/filters/ansi.py", "IPython/nbconvert/filters/tests/test_ansi.py"]}], "labels": ["bug", "nbconvert"], "created_at": "2013-09-21T04:23:22Z", "closed_at": "2013-11-05T20:30:55Z", "linked_pr_number": [4245], "method": ["label", "regex"]}
{"issue_number": 4243, "title": "Test exclusions not working on Windows", "body": "All the excluded tests currently fail on Windows. I think it's just a regex escaping bug. I'll look at this on Monday.\n\nhttps://jenkins.shiningpanda-ci.com/ipython/job/ipython-win-py27/103/console\n\n(Disabled Windows ShiningPanda tests so we don't get more complainy e-mails on Monday)\n", "commits": [{"node_id": "MDY6Q29tbWl0MTIzNjAwMzo3MWRjZmMxNWIxYzkwYzdkYjQ4NzAzNjhmNTdiNzg5OGZjNDI0ODIy", "commit_message": "Use plain string searching for test exclusions.\n\nCloses gh-4243", "commit_timestamp": "2013-09-23T19:13:48Z", "files": ["IPython/testing/iptest.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjcxZGNmYzE1YjFjOTBjN2RiNDg3MDM2OGY1N2I3ODk4ZmM0MjQ4MjI=", "commit_message": "Use plain string searching for test exclusions.\n\nCloses gh-4243", "commit_timestamp": "2013-09-23T19:13:48Z", "files": ["IPython/testing/iptest.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzpmYjRmZmJhZDBmNzkyMmY0YTU4OWIwMTBlMTQ1M2E2YTI1YWEwZDdm", "commit_message": "Use plain string searching for test exclusions.\n\nCloses gh-4243", "commit_timestamp": "2013-09-23T19:13:48Z", "files": ["IPython/testing/iptest.py"]}], "labels": ["windows", "bug", "testing"], "created_at": "2013-09-21T01:53:11Z", "closed_at": "2013-09-23T21:45:00Z", "method": ["label", "regex"]}
{"issue_number": 4238, "title": "parallel.Client() not using profile that notebook was run with?", "body": "I just updated some code that was using 0.13.1 to 1.1, and I noticed that even though I started the notebooks with a profile, when I did `rc = parallel.Client()` it looked in my default directory for the json connection files not the profile used to start the notebook. I had to specifically pass a profile keyword. Feature or bug?\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU5NDQ2OmYyNTdjNzNhOWM4ZWQ4NjJhYzc0MTNlYTVhYjFlOGMyNGRmNDUyY2M=", "commit_message": "set profile name from profile_dir\n\nin case profile_dir is set directly (e.g. in the notebook)\n\ncloses #4238", "commit_timestamp": "2014-01-26T21:32:54Z", "files": ["IPython/core/application.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjBkMjExZWY2YzViODNhOGM2NDg4NDVjNjhjMTVmNDM5ZTM5MWRiYzA=", "commit_message": "Backport PR #4880: set profile name from profile_dir\n\nin case profile_dir is set directly (e.g. in the notebook)\n\ncloses #4238", "commit_timestamp": "2014-02-04T19:52:04Z", "files": ["IPython/core/application.py"]}, {"node_id": "MDY6Q29tbWl0NDAwNDYyNjo1NzYzMzJkYmZiZWE3ZjYwYmQ0MTM3Y2M1YmE3OWEzODRkYjg2MjUz", "commit_message": "Backport PR #4880: set profile name from profile_dir\n\nin case profile_dir is set directly (e.g. in the notebook)\n\ncloses #4238", "commit_timestamp": "2014-02-18T13:42:40Z", "files": ["IPython/core/application.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo0ZGEyYjA4MGY2MDgxOGE0MjRhODNlNDg5Mjc4NGQ1ZjgxM2IzN2E4", "commit_message": "set profile name from profile_dir\n\nin case profile_dir is set directly (e.g. in the notebook)\n\ncloses #4238", "commit_timestamp": "2014-01-26T21:32:54Z", "files": ["IPython/core/application.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjYzOGRkY2RhNDlhMmU2ZjIxMjY4NmMwOGI2MGIwNzM0MTcxOWRmMDA=", "commit_message": "Merge pull request #4880 from minrk/profile-name\n\nset profile name from profile_dir", "commit_timestamp": "2014-01-29T18:58:13Z", "files": ["IPython/core/application.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjYzOGRkY2RhNDlhMmU2ZjIxMjY4NmMwOGI2MGIwNzM0MTcxOWRmMDA=", "commit_message": "Merge pull request #4880 from minrk/profile-name\n\nset profile name from profile_dir", "commit_timestamp": "2014-01-29T18:58:13Z", "files": ["IPython/core/application.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjBkMjExZWY2YzViODNhOGM2NDg4NDVjNjhjMTVmNDM5ZTM5MWRiYzA=", "commit_message": "Backport PR #4880: set profile name from profile_dir\n\nin case profile_dir is set directly (e.g. in the notebook)\n\ncloses #4238", "commit_timestamp": "2014-02-04T19:52:04Z", "files": ["IPython/core/application.py"]}, {"node_id": "MDY6Q29tbWl0NDAwNDYyNjo1NzYzMzJkYmZiZWE3ZjYwYmQ0MTM3Y2M1YmE3OWEzODRkYjg2MjUz", "commit_message": "Backport PR #4880: set profile name from profile_dir\n\nin case profile_dir is set directly (e.g. in the notebook)\n\ncloses #4238", "commit_timestamp": "2014-02-18T13:42:40Z", "files": ["IPython/core/application.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzpkNjE4ZGM1NDg0YzU3YmFlNjE1YTdjMTQ5MTVkZTBkZTJiOWZmZjQw", "commit_message": "Merge pull request #4880 from minrk/profile-name\n\nset profile name from profile_dir", "commit_timestamp": "2014-01-29T18:58:13Z", "files": ["IPython/core/application.py"]}], "labels": ["parallel"], "created_at": "2013-09-20T14:13:57Z", "closed_at": "2014-01-29T18:58:13Z", "linked_pr_number": [4238], "method": ["regex"]}
{"issue_number": 4203, "title": "remove spurious print statement from parallel annoted functions", "body": "```\nmy_view.map(lambda x : x + 1, range(4))\n```\n\nversus\n\n```\n@my_view.parallel()\ndef testMap(x):\n  return x[0] + 1\n\ntestMap(range(100))\n```\n\nthe second one prints out an annoying\n\n```\nin sync results <function ParallelFunction.__call__ at 0x7fb058110950>\n```\n\nPresumably left over from debugging?\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU5NDQ2OmQwYTdkZmI0ZDlmNTE5N2FkZDY2OTdmMzEyMTgzZDg5YjI4YzdlM2U=", "commit_message": "remove some extraneous print statements from IPython.parallel\n\ncloses #4203\n\nbackport for 1.2", "commit_timestamp": "2013-09-13T22:40:39Z", "files": ["IPython/parallel/client/remotefunction.py", "IPython/parallel/tests/__init__.py", "IPython/parallel/tests/test_client.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjFiMjE2Y2M4OTRmMGY5ZTgxMTcwZjNjMDBjOWY1YjVkOTYyYjdkZWQ=", "commit_message": "Backport PR #4204: remove some extraneous print statements from IPython.parallel\n\ncloses #4203\n\nbackport for 1.2", "commit_timestamp": "2013-09-13T23:49:07Z", "files": ["IPython/parallel/client/remotefunction.py", "IPython/parallel/tests/__init__.py", "IPython/parallel/tests/test_client.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo2ZmI2YWNmMzM3ZTRhNWMyYzYwOWJmYTcwNWJiOGMxODMxMDg0MWJj", "commit_message": "remove some extraneous print statements from IPython.parallel\n\ncloses #4203\n\nbackport for 1.2", "commit_timestamp": "2013-09-13T22:40:39Z", "files": ["IPython/parallel/client/remotefunction.py", "IPython/parallel/tests/__init__.py", "IPython/parallel/tests/test_client.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjBlZmJmNzhiMTY4YjBjM2E0ZjgyMGQ5YzgwMWUyNzQ5ZmVlZDllOTc=", "commit_message": "Merge pull request #4204 from minrk/parallel-print-mybad\n\nremove some extraneous print statements from IPython.parallel", "commit_timestamp": "2013-09-13T23:46:40Z", "files": ["IPython/parallel/client/remotefunction.py", "IPython/parallel/tests/__init__.py", "IPython/parallel/tests/test_client.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjBlZmJmNzhiMTY4YjBjM2E0ZjgyMGQ5YzgwMWUyNzQ5ZmVlZDllOTc=", "commit_message": "Merge pull request #4204 from minrk/parallel-print-mybad\n\nremove some extraneous print statements from IPython.parallel", "commit_timestamp": "2013-09-13T23:46:40Z", "files": ["IPython/parallel/client/remotefunction.py", "IPython/parallel/tests/__init__.py", "IPython/parallel/tests/test_client.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjFiMjE2Y2M4OTRmMGY5ZTgxMTcwZjNjMDBjOWY1YjVkOTYyYjdkZWQ=", "commit_message": "Backport PR #4204: remove some extraneous print statements from IPython.parallel\n\ncloses #4203\n\nbackport for 1.2", "commit_timestamp": "2013-09-13T23:49:07Z", "files": ["IPython/parallel/client/remotefunction.py", "IPython/parallel/tests/__init__.py", "IPython/parallel/tests/test_client.py"]}, {"node_id": "MDY6Q29tbWl0MjM0Mzk1OTpkOTYyNTBkMWI2MDY4MjM4YWQ0NzM2MGMzNzRjNjYzMjA2MmY3OTBj", "commit_message": "Merge commit 'rel-1.1.0-3-gb8b89ca' into debian-1X\n\n* commit 'rel-1.1.0-3-gb8b89ca': (66 commits)\n  Backport PR #4209: Magic doc fixes\n  Backport PR #4204: remove some extraneous print statements from IPython.parallel\n  back to dev\n  release 1.1.0\n  don't upload to GitHub in release script\n  1.1 backport stats\n  Backport PR #4188: Allow user_ns trait to be None\n  Backport PR #4189: always fire LOCAL_IPS.extend(PUBLIC_IPS)\n  Backport PR #4174: various issues in markdown and rst templates\n  Backport PR #4181: nbconvert: Fix, sphinx template not removing new lines from headers\n  Backport PR #4043: don't 'restore_bytes' in from_JSON\n  Backport PR #4178: add missing data_javascript\n  Backport PR #4136: catch javascript errors in any output\n  Backport PR #4163: Fix for incorrect default encoding on Windows.\n  Backport PR #4171: add nbconvert config file when creating profiles\n  Backport PR #4159: don't split `.cell` and `div.cell` CSS\n  Backport PR #4158: generate choices for `--gui` configurable from real mapping\n  Backport PR #4143: update example custom.js\n  Backport PR #4144: help_end transformer shouldn't pick up ? in multiline string\n  Backport PR #4104: Add way to install MathJax to a particular profile\n  ...", "commit_timestamp": "2013-09-19T15:16:16Z", "files": ["IPython/config/application.py", "IPython/config/tests/test_application.py", "IPython/consoleapp.py", "IPython/core/application.py", "IPython/core/inputtransformer.py", "IPython/core/interactiveshell.py", "IPython/core/magics/execution.py", "IPython/core/profileapp.py", "IPython/core/profiledir.py", "IPython/core/release.py", "IPython/core/shellapp.py", "IPython/core/tests/test_completerlib.py", "IPython/core/tests/test_inputtransformer.py", "IPython/core/tests/test_interactiveshell.py", "IPython/core/tests/test_magic.py", "IPython/core/tests/test_profile.py", "IPython/core/tests/test_prompts.py", "IPython/core/tests/test_ultratb.py", "IPython/extensions/cythonmagic.py", "IPython/extensions/octavemagic.py", "IPython/extensions/rmagic.py", "IPython/extensions/storemagic.py", "IPython/extensions/tests/test_storemagic.py", "IPython/external/mathjax.py", "IPython/html/notebookapp.py", "IPython/html/tests/test_notebookapp.py", "IPython/kernel/client.py", "IPython/kernel/connect.py", "IPython/kernel/tests/test_connect.py", "IPython/kernel/tests/test_kernel.py", "IPython/kernel/tests/test_message_spec.py", "IPython/kernel/zmq/heartbeat.py", "IPython/kernel/zmq/ipkernel.py", "IPython/kernel/zmq/kernelapp.py", "IPython/kernel/zmq/serialize.py", "IPython/kernel/zmq/tests/test_start_kernel.py", "IPython/lib/inputhook.py", "IPython/nbconvert/exporters/exporter.py", "IPython/nbconvert/exporters/markdown.py", "IPython/nbconvert/filters/strings.py", "IPython/nbconvert/nbconvertapp.py", "IPython/nbconvert/tests/base.py", "IPython/nbconvert/tests/test_nbconvertapp.py", "IPython/nbconvert/transformers/base.py", "IPython/nbconvert/transformers/coalescestreams.py", "IPython/nbconvert/transformers/sphinx.py", "IPython/nbformat/v3/nbbase.py", "IPython/nbformat/v3/nbjson.py", "IPython/nbformat/v3/nbpy.py", "IPython/nbformat/v3/rwbase.py", "IPython/nbformat/v3/tests/nbexamples.py", "IPython/nbformat/v3/tests/test_json.py", "IPython/nbformat/v3/tests/test_nbbase.py", "IPython/parallel/apps/baseapp.py", "IPython/parallel/client/client.py", "IPython/parallel/client/remotefunction.py", "IPython/parallel/client/view.py", "IPython/parallel/controller/mongodb.py", "IPython/parallel/error.py", "IPython/parallel/tests/__init__.py", "IPython/parallel/tests/test_client.py", "IPython/parallel/tests/test_view.py", "IPython/qt/console/frontend_widget.py", "IPython/qt/console/qtconsoleapp.py", "IPython/qt/console/rich_ipython_widget.py", "IPython/qt/console/tests/test_app.py", "IPython/qt/rich_text.py", "IPython/terminal/console/tests/test_console.py", "IPython/terminal/ipapp.py", "IPython/terminal/tests/test_help.py", "IPython/testing/tools.py", "IPython/utils/encoding.py", "IPython/utils/localinterfaces.py", "IPython/utils/py3compat.py", "IPython/utils/tempdir.py", "IPython/utils/tests/test_path.py", "IPython/utils/text.py", "tools/backport_pr.py", "tools/gh_api.py"]}, {"node_id": "MDY6Q29tbWl0MjM0Mzk1OTozOGUwNGQwNzQwZmQxYmEyMWRkNzQzYjYyYWZlZmRlNTkzYjU0MjFl", "commit_message": "Merge commit 'rel-1.1.0-7-gf5891e9' into releases\n\n* commit 'rel-1.1.0-7-gf5891e9': (70 commits)\n  Backport PR #4346: getpass() on Windows & Python 2 needs bytes prompt\n  Backport PR #4336: use simple replacement rather than string formatting in format_kernel_cmd\n  Backport PR #4316: underscore missing on notebook_p4\n  Backport PR #4257: fix unicode argv parsing\n  Backport PR #4209: Magic doc fixes\n  Backport PR #4204: remove some extraneous print statements from IPython.parallel\n  back to dev\n  release 1.1.0\n  don't upload to GitHub in release script\n  1.1 backport stats\n  Backport PR #4188: Allow user_ns trait to be None\n  Backport PR #4189: always fire LOCAL_IPS.extend(PUBLIC_IPS)\n  Backport PR #4174: various issues in markdown and rst templates\n  Backport PR #4181: nbconvert: Fix, sphinx template not removing new lines from headers\n  Backport PR #4043: don't 'restore_bytes' in from_JSON\n  Backport PR #4178: add missing data_javascript\n  Backport PR #4136: catch javascript errors in any output\n  Backport PR #4163: Fix for incorrect default encoding on Windows.\n  Backport PR #4171: add nbconvert config file when creating profiles\n  Backport PR #4159: don't split `.cell` and `div.cell` CSS\n  ...", "commit_timestamp": "2014-03-18T03:23:33Z", "files": ["IPython/config/application.py", "IPython/config/tests/test_application.py", "IPython/consoleapp.py", "IPython/core/application.py", "IPython/core/inputtransformer.py", "IPython/core/interactiveshell.py", "IPython/core/magics/execution.py", "IPython/core/profileapp.py", "IPython/core/profiledir.py", "IPython/core/release.py", "IPython/core/shellapp.py", "IPython/core/tests/test_completerlib.py", "IPython/core/tests/test_inputtransformer.py", "IPython/core/tests/test_interactiveshell.py", "IPython/core/tests/test_magic.py", "IPython/core/tests/test_profile.py", "IPython/core/tests/test_prompts.py", "IPython/core/tests/test_ultratb.py", "IPython/extensions/cythonmagic.py", "IPython/extensions/octavemagic.py", "IPython/extensions/rmagic.py", "IPython/extensions/storemagic.py", "IPython/extensions/tests/test_storemagic.py", "IPython/external/mathjax.py", "IPython/html/notebookapp.py", "IPython/html/tests/test_notebookapp.py", "IPython/kernel/client.py", "IPython/kernel/connect.py", "IPython/kernel/manager.py", "IPython/kernel/tests/test_connect.py", "IPython/kernel/tests/test_kernel.py", "IPython/kernel/tests/test_message_spec.py", "IPython/kernel/zmq/heartbeat.py", "IPython/kernel/zmq/ipkernel.py", "IPython/kernel/zmq/kernelapp.py", "IPython/kernel/zmq/serialize.py", "IPython/kernel/zmq/tests/test_start_kernel.py", "IPython/lib/inputhook.py", "IPython/nbconvert/exporters/exporter.py", "IPython/nbconvert/exporters/markdown.py", "IPython/nbconvert/filters/strings.py", "IPython/nbconvert/nbconvertapp.py", "IPython/nbconvert/tests/base.py", "IPython/nbconvert/tests/test_nbconvertapp.py", "IPython/nbconvert/transformers/base.py", "IPython/nbconvert/transformers/coalescestreams.py", "IPython/nbconvert/transformers/sphinx.py", "IPython/nbformat/v3/nbbase.py", "IPython/nbformat/v3/nbjson.py", "IPython/nbformat/v3/nbpy.py", "IPython/nbformat/v3/rwbase.py", "IPython/nbformat/v3/tests/nbexamples.py", "IPython/nbformat/v3/tests/test_json.py", "IPython/nbformat/v3/tests/test_nbbase.py", "IPython/parallel/apps/baseapp.py", "IPython/parallel/client/client.py", "IPython/parallel/client/remotefunction.py", "IPython/parallel/client/view.py", "IPython/parallel/controller/mongodb.py", "IPython/parallel/error.py", "IPython/parallel/tests/__init__.py", "IPython/parallel/tests/test_client.py", "IPython/parallel/tests/test_view.py", "IPython/qt/console/frontend_widget.py", "IPython/qt/console/qtconsoleapp.py", "IPython/qt/console/rich_ipython_widget.py", "IPython/qt/console/tests/test_app.py", "IPython/qt/rich_text.py", "IPython/terminal/console/tests/test_console.py", "IPython/terminal/ipapp.py", "IPython/terminal/tests/test_help.py", "IPython/testing/tools.py", "IPython/utils/encoding.py", "IPython/utils/localinterfaces.py", "IPython/utils/py3compat.py", "IPython/utils/tempdir.py", "IPython/utils/tests/test_path.py", "IPython/utils/text.py", "tools/backport_pr.py", "tools/gh_api.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzozNjFhOWU5ZWU5ZjY4NGIxYTE5YTM1OWZlNDcyZjRlMmQ4ZTVjOWI2", "commit_message": "Merge pull request #4204 from minrk/parallel-print-mybad\n\nremove some extraneous print statements from IPython.parallel", "commit_timestamp": "2013-09-13T23:46:40Z", "files": ["IPython/parallel/client/remotefunction.py", "IPython/parallel/tests/__init__.py", "IPython/parallel/tests/test_client.py"]}], "labels": [], "created_at": "2013-09-13T19:58:36Z", "closed_at": "2013-09-13T23:46:40Z", "linked_pr_number": [4203], "method": ["regex"]}
{"issue_number": 4156, "title": "Specifying --gui=tk at the command line", "body": "I'd like to be able to specify `--gui=tk` at the command line.\n\nI'm trying to embed a kernel into my Tkinter app following [the similar Qt example](https://github.com/ipython/ipython/blob/master/examples/lib/internal_ipkernel.py). When I use `kernel.initialise(['python', '--gui=tk'])` I get the error message:\n\n```\nCRITICAL | The 'gui' trait of an IPKernelApp instance must be any of ('qt', 'wx', 'gtk', 'glut', 'pyglet', 'osx') or None, but a value of 'tk' <class 'str'> was specified.\n```\n\nI can't use `--pylab=tk` because I don't want the kernel to try to initialise Matplotlib.\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU5NDQ2OjIwYmFkYThmMmZhM2ZkZDM4N2Y3OTk0NzllYWNiNzE2YzZhNDVkODQ=", "commit_message": "generate choices for `--gui` configurable from real mapping\n\ntypo prevented `--gui tk` from working, even though it is supported.\nShould prevent similar bugs in the future.\n\ncloses #4156\n\nshould be backported to 1.1", "commit_timestamp": "2013-09-01T20:43:36Z", "files": ["IPython/core/shellapp.py", "IPython/lib/inputhook.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjYxN2I3NjkyMGY5Y2ZlY2E4NzZhMjU2NWIzMDA2ZmMyMjczYjE1YjE=", "commit_message": "Merge pull request #4158 from minrk/guitk\n\ngenerate choices for `--gui` configurable from real mapping\r\n\r\ntypo prevented --gui tk from working, even though it is supported.\r\nShould prevent similar bugs in the future.\r\n\r\ncloses #4156", "commit_timestamp": "2013-09-04T15:50:30Z", "files": ["IPython/core/shellapp.py", "IPython/lib/inputhook.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmRhY2UxYzllNWUxNzI3OTc3ZTQ0YjRkMmYyODdmYzc5MWJjNzhmZDM=", "commit_message": "Backport PR #4158: generate choices for `--gui` configurable from real mapping\n\ntypo prevented `--gui tk` from working, even though it is supported. Should\nprevent similar bugs in the future.\n\ncloses #4156\n\nshould be backported to 1.1", "commit_timestamp": "2013-09-04T22:16:57Z", "files": ["IPython/core/shellapp.py", "IPython/lib/inputhook.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo5MDhjZGI3YmNiYTNhMGIwYmMxMmUyNjY2YTM1MWRmOTQ5MTg4MGIy", "commit_message": "generate choices for `--gui` configurable from real mapping\n\ntypo prevented `--gui tk` from working, even though it is supported.\nShould prevent similar bugs in the future.\n\ncloses #4156\n\nshould be backported to 1.1", "commit_timestamp": "2013-09-01T20:43:36Z", "files": ["IPython/core/shellapp.py", "IPython/lib/inputhook.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzpjN2RjNmMyN2JhMDIxMDc2YTM1NzFlMTEzOWZiMTBhYjc5NzQ2Y2Rj", "commit_message": "Merge pull request #4158 from minrk/guitk\n\ngenerate choices for `--gui` configurable from real mapping\r\n\r\ntypo prevented --gui tk from working, even though it is supported.\r\nShould prevent similar bugs in the future.\r\n\r\ncloses #4156", "commit_timestamp": "2013-09-04T15:50:30Z", "files": ["IPython/core/shellapp.py", "IPython/lib/inputhook.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjYxN2I3NjkyMGY5Y2ZlY2E4NzZhMjU2NWIzMDA2ZmMyMjczYjE1YjE=", "commit_message": "Merge pull request #4158 from minrk/guitk\n\ngenerate choices for `--gui` configurable from real mapping\r\n\r\ntypo prevented --gui tk from working, even though it is supported.\r\nShould prevent similar bugs in the future.\r\n\r\ncloses #4156", "commit_timestamp": "2013-09-04T15:50:30Z", "files": ["IPython/core/shellapp.py", "IPython/lib/inputhook.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjYxN2I3NjkyMGY5Y2ZlY2E4NzZhMjU2NWIzMDA2ZmMyMjczYjE1YjE=", "commit_message": "Merge pull request #4158 from minrk/guitk\n\ngenerate choices for `--gui` configurable from real mapping\r\n\r\ntypo prevented --gui tk from working, even though it is supported.\r\nShould prevent similar bugs in the future.\r\n\r\ncloses #4156", "commit_timestamp": "2013-09-04T15:50:30Z", "files": ["IPython/core/shellapp.py", "IPython/lib/inputhook.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmRhY2UxYzllNWUxNzI3OTc3ZTQ0YjRkMmYyODdmYzc5MWJjNzhmZDM=", "commit_message": "Backport PR #4158: generate choices for `--gui` configurable from real mapping\n\ntypo prevented `--gui tk` from working, even though it is supported. Should\nprevent similar bugs in the future.\n\ncloses #4156\n\nshould be backported to 1.1", "commit_timestamp": "2013-09-04T22:16:57Z", "files": ["IPython/core/shellapp.py", "IPython/lib/inputhook.py"]}, {"node_id": "MDY6Q29tbWl0MjM0Mzk1OTpkOTYyNTBkMWI2MDY4MjM4YWQ0NzM2MGMzNzRjNjYzMjA2MmY3OTBj", "commit_message": "Merge commit 'rel-1.1.0-3-gb8b89ca' into debian-1X\n\n* commit 'rel-1.1.0-3-gb8b89ca': (66 commits)\n  Backport PR #4209: Magic doc fixes\n  Backport PR #4204: remove some extraneous print statements from IPython.parallel\n  back to dev\n  release 1.1.0\n  don't upload to GitHub in release script\n  1.1 backport stats\n  Backport PR #4188: Allow user_ns trait to be None\n  Backport PR #4189: always fire LOCAL_IPS.extend(PUBLIC_IPS)\n  Backport PR #4174: various issues in markdown and rst templates\n  Backport PR #4181: nbconvert: Fix, sphinx template not removing new lines from headers\n  Backport PR #4043: don't 'restore_bytes' in from_JSON\n  Backport PR #4178: add missing data_javascript\n  Backport PR #4136: catch javascript errors in any output\n  Backport PR #4163: Fix for incorrect default encoding on Windows.\n  Backport PR #4171: add nbconvert config file when creating profiles\n  Backport PR #4159: don't split `.cell` and `div.cell` CSS\n  Backport PR #4158: generate choices for `--gui` configurable from real mapping\n  Backport PR #4143: update example custom.js\n  Backport PR #4144: help_end transformer shouldn't pick up ? in multiline string\n  Backport PR #4104: Add way to install MathJax to a particular profile\n  ...", "commit_timestamp": "2013-09-19T15:16:16Z", "files": ["IPython/config/application.py", "IPython/config/tests/test_application.py", "IPython/consoleapp.py", "IPython/core/application.py", "IPython/core/inputtransformer.py", "IPython/core/interactiveshell.py", "IPython/core/magics/execution.py", "IPython/core/profileapp.py", "IPython/core/profiledir.py", "IPython/core/release.py", "IPython/core/shellapp.py", "IPython/core/tests/test_completerlib.py", "IPython/core/tests/test_inputtransformer.py", "IPython/core/tests/test_interactiveshell.py", "IPython/core/tests/test_magic.py", "IPython/core/tests/test_profile.py", "IPython/core/tests/test_prompts.py", "IPython/core/tests/test_ultratb.py", "IPython/extensions/cythonmagic.py", "IPython/extensions/octavemagic.py", "IPython/extensions/rmagic.py", "IPython/extensions/storemagic.py", "IPython/extensions/tests/test_storemagic.py", "IPython/external/mathjax.py", "IPython/html/notebookapp.py", "IPython/html/tests/test_notebookapp.py", "IPython/kernel/client.py", "IPython/kernel/connect.py", "IPython/kernel/tests/test_connect.py", "IPython/kernel/tests/test_kernel.py", "IPython/kernel/tests/test_message_spec.py", "IPython/kernel/zmq/heartbeat.py", "IPython/kernel/zmq/ipkernel.py", "IPython/kernel/zmq/kernelapp.py", "IPython/kernel/zmq/serialize.py", "IPython/kernel/zmq/tests/test_start_kernel.py", "IPython/lib/inputhook.py", "IPython/nbconvert/exporters/exporter.py", "IPython/nbconvert/exporters/markdown.py", "IPython/nbconvert/filters/strings.py", "IPython/nbconvert/nbconvertapp.py", "IPython/nbconvert/tests/base.py", "IPython/nbconvert/tests/test_nbconvertapp.py", "IPython/nbconvert/transformers/base.py", "IPython/nbconvert/transformers/coalescestreams.py", "IPython/nbconvert/transformers/sphinx.py", "IPython/nbformat/v3/nbbase.py", "IPython/nbformat/v3/nbjson.py", "IPython/nbformat/v3/nbpy.py", "IPython/nbformat/v3/rwbase.py", "IPython/nbformat/v3/tests/nbexamples.py", "IPython/nbformat/v3/tests/test_json.py", "IPython/nbformat/v3/tests/test_nbbase.py", "IPython/parallel/apps/baseapp.py", "IPython/parallel/client/client.py", "IPython/parallel/client/remotefunction.py", "IPython/parallel/client/view.py", "IPython/parallel/controller/mongodb.py", "IPython/parallel/error.py", "IPython/parallel/tests/__init__.py", "IPython/parallel/tests/test_client.py", "IPython/parallel/tests/test_view.py", "IPython/qt/console/frontend_widget.py", "IPython/qt/console/qtconsoleapp.py", "IPython/qt/console/rich_ipython_widget.py", "IPython/qt/console/tests/test_app.py", "IPython/qt/rich_text.py", "IPython/terminal/console/tests/test_console.py", "IPython/terminal/ipapp.py", "IPython/terminal/tests/test_help.py", "IPython/testing/tools.py", "IPython/utils/encoding.py", "IPython/utils/localinterfaces.py", "IPython/utils/py3compat.py", "IPython/utils/tempdir.py", "IPython/utils/tests/test_path.py", "IPython/utils/text.py", "tools/backport_pr.py", "tools/gh_api.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzpjN2RjNmMyN2JhMDIxMDc2YTM1NzFlMTEzOWZiMTBhYjc5NzQ2Y2Rj", "commit_message": "Merge pull request #4158 from minrk/guitk\n\ngenerate choices for `--gui` configurable from real mapping\r\n\r\ntypo prevented --gui tk from working, even though it is supported.\r\nShould prevent similar bugs in the future.\r\n\r\ncloses #4156", "commit_timestamp": "2013-09-04T15:50:30Z", "files": ["IPython/core/shellapp.py", "IPython/lib/inputhook.py"]}], "labels": ["bug"], "created_at": "2013-09-01T14:27:30Z", "closed_at": "2013-09-04T15:50:30Z", "linked_pr_number": [4156], "method": ["label"]}
{"issue_number": 4134, "title": "multi-line parser fails on ''' in comment, qtconsole and notebook.", "body": "``` python\ndef BSPLINE(p1,p2,p3,p4,divisions, spline_outX, spline_outY):\n    '''Spline to straigh lines convertor, Simon hack from C?\n    '''\n    pass\n\n#~ def store_mask( fname='arrow_mask.png' ):\n    #~ '''Return byte string containing an image.\n    #~ '''\n    #~ mask = Image.open( fname )\n    #~ return bz2.compress( pickle.dumps( list( mask.getdata() )))\n```\n\nProduces:-\n\n``` python\n#~ def store_mask( fname='arrow_mask.png' ):\n    #~ '''Return byte string containing an image.\n\n             ^\nSyntaxError: invalid syntax\n```\n\nApologies for crap markup.\n", "commits": [{"node_id": "MDY6Q29tbWl0MTIzNjAwMzplMTI3YmYyMzM3MzlmNzBiYWZlZWM3OGYyM2UzZDFhZTViYmYxZGJk", "commit_message": "help_end transformer shouldn't pick up ? in multiline string\n\nCloses gh-4134", "commit_timestamp": "2013-08-29T23:38:24Z", "files": ["IPython/core/inputtransformer.py", "IPython/core/tests/test_inputtransformer.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmUxMjdiZjIzMzczOWY3MGJhZmVlYzc4ZjIzZTNkMWFlNWJiZjFkYmQ=", "commit_message": "help_end transformer shouldn't pick up ? in multiline string\n\nCloses gh-4134", "commit_timestamp": "2013-08-29T23:38:24Z", "files": ["IPython/core/inputtransformer.py", "IPython/core/tests/test_inputtransformer.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4Ojk1YTc2OTE1ZDA2YjMyZWZiMmNjYzY3NDJjNTdkNzNjYmVlMzUyNzE=", "commit_message": "Merge pull request #4144 from takluyver/i4134\n\nhelp_end transformer shouldn't pick up ? in multiline string\r\n\r\nThe help_end() transformer was already tokenizing the line to determine whether the ? was in a comment, so I just extended this to check for multi-line strings as well.\r\n\r\nCloses #4134", "commit_timestamp": "2013-09-03T21:57:21Z", "files": ["IPython/core/inputtransformer.py", "IPython/core/tests/test_inputtransformer.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmViNzFiYjRhZDlhMmFhMTE3ZDU0ZTdjZDAwZjFlMTBiMTI0NDMyNDI=", "commit_message": "Backport PR #4144: help_end transformer shouldn't pick up ? in multiline string\n\nThe help_end() transformer was already tokenizing the line to determine whether the ? was in a comment, so I just extended this to check for multi-line strings as well.\n\nPossible for backporting to 1.1, but it's low priority, and this code is fairly sensitive, so it doesn't have to be.\n\nCloses gh-4134", "commit_timestamp": "2013-09-04T22:13:46Z", "files": ["IPython/core/inputtransformer.py", "IPython/core/tests/test_inputtransformer.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzplZDJlZGE4Y2FmMGNhYzY3MTBmNWNiOTZjN2QxOTc1MTdmNTg4ZmZm", "commit_message": "help_end transformer shouldn't pick up ? in multiline string\n\nCloses gh-4134", "commit_timestamp": "2013-08-29T23:38:24Z", "files": ["IPython/core/inputtransformer.py", "IPython/core/tests/test_inputtransformer.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzoxOWRlYzZhZmViOWI5NzQyNDQ2M2NhM2EzZDYwZmFjNDU4MjYyYzRl", "commit_message": "Merge pull request #4144 from takluyver/i4134\n\nhelp_end transformer shouldn't pick up ? in multiline string\r\n\r\nThe help_end() transformer was already tokenizing the line to determine whether the ? was in a comment, so I just extended this to check for multi-line strings as well.\r\n\r\nCloses #4134", "commit_timestamp": "2013-09-03T21:57:21Z", "files": ["IPython/core/inputtransformer.py", "IPython/core/tests/test_inputtransformer.py"]}], "labels": [], "created_at": "2013-08-29T11:08:05Z", "closed_at": "2013-09-03T21:57:22Z", "method": ["regex"]}
{"issue_number": 4127, "title": "autoreload shouldn't rely on .pyc modification times", "body": "This can fail if:\n- Writing .pyc files is disabled, e.g. by setting $PYTHONDONTWRITEBYTECODE.\n- The module has been imported or reloaded by another process before we check it, or explicitly compiled using pycompile.\n\nTo handle this better, autoreload could keep a cache of the modified time of each module, and then check against that rather than the .pyc timestamp.\n", "commits": [{"node_id": "MDY6Q29tbWl0MTIzNjAwMzowZGFiMDMxZDE3Y2E0MDMyNzZlY2Y4ZTVjYmIxYTFlZDEyYmQ0NDVm", "commit_message": "Store timestamps for modules to autoreload\n\nCloses gh-4127\n\nAt present, autoreload compares the timestamps on .py and .pyc files.\nHowever, this can fail in a couple of ways (see gh-4127). With this\nchange, it caches the mtime of the .py file when we loaded it.\n\nSome extra complexity is needed to store the mtime as soon as possible -\nwe scan sys.modules when autoreload is loaded, and register a\npost_execute hook to check for newly imported modules after each cell.", "commit_timestamp": "2014-02-06T01:44:09Z", "files": ["IPython/extensions/autoreload.py", "IPython/extensions/tests/test_autoreload.py"]}, {"node_id": "MDY6Q29tbWl0MTIzNjAwMzozZWM2N2ZjZDE2NzQ3Nzc5NTNjZDBkOWRhY2Y4YjEyY2FkNTYzZGIx", "commit_message": "Store timestamps for modules to autoreload\n\nCloses gh-4127\n\nAt present, autoreload compares the timestamps on .py and .pyc files.\nHowever, this can fail in a couple of ways (see gh-4127). With this\nchange, it caches the mtime of the .py file when we loaded it.\n\nSome extra complexity is needed to store the mtime as soon as possible -\nwe scan sys.modules when autoreload is loaded, and register a\npost_execute hook to check for newly imported modules after each cell.", "commit_timestamp": "2014-03-05T18:33:36Z", "files": ["IPython/extensions/autoreload.py", "IPython/extensions/tests/test_autoreload.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo3MmM4MjM1MmY2ODJkMDg3ZTY2ZDEwMzFiOTIzOTVkNDNjMjhhNGIw", "commit_message": "Store timestamps for modules to autoreload\n\nCloses gh-4127\n\nAt present, autoreload compares the timestamps on .py and .pyc files.\nHowever, this can fail in a couple of ways (see gh-4127). With this\nchange, it caches the mtime of the .py file when we loaded it.\n\nSome extra complexity is needed to store the mtime as soon as possible -\nwe scan sys.modules when autoreload is loaded, and register a\npost_execute hook to check for newly imported modules after each cell.", "commit_timestamp": "2014-03-05T18:33:36Z", "files": ["IPython/extensions/autoreload.py", "IPython/extensions/tests/test_autoreload.py"]}], "labels": ["bug"], "created_at": "2013-08-29T00:02:35Z", "closed_at": "2014-03-05T19:21:52Z", "method": ["label"]}
{"issue_number": 4122, "title": "Nbconvert [windows]: Inconsistent line endings in markdown cells exported to latex ", "body": "I'm getting what looks like inconsistent line endings in the output of markdown cells, which is causing latex to complain about runaway arguments and paragraphs ending early.\n\nThe exact error is:\n\n```\n! Paragraph ended before \\ttl@straight@i was complete\n```\n\nAnd looking at the offending line in the `.tex` file (in emacs):\n\n```\n\\subsection{ Text that doesn't have line breaks in it in the markdown cell^M^M    \n but does seem to have two CRLF's (judging by the ^M's), and a LF here.}\n```\n\nTaking the `^M`'s out will allow pdflatex to produce the output, but there are still ^M's scattered throughout the document. \n\nAs a guess it's that [Pandoc explicitly expects UTF-8](http://johnmacfarlane.net/pandoc/README.html#using-pandoc), and somehow the subprocess is piping in CP-850 or similar windows encoding and pandoc is outputting some combination of the two line endings.\n\nI've tried to recreate the issue just with Pandoc, inputting various encoding schemes but I couldn't recreate it.\n\nAlternatively, it may be the utf-8 encoding casting that occurs in `IPython/nbconvert/utils/pandoc.py` which is adding LF but not removing the CRLFs ( but I'm still not sure why there are any line breaks as the original cell doesn't have them).\n\nSys info.\n\n```\n{'codename': 'An Afternoon Hack',\n 'commit_hash': '02da31c',\n 'commit_source': 'installation',\n 'default_encoding': 'cp850',\n 'ipython_path': 'C:\\\\Python27\\\\lib\\\\site-packages\\\\IPython',\n 'ipython_version': '1.0.0',\n 'os_name': 'nt',\n 'platform': 'Windows-7-6.1.7601-SP1',\n 'sys_executable': 'C:\\\\Python27\\\\python.exe',\n 'sys_platform': 'win32',\n 'sys_version': '2.7.3 |EPD_free 7.3-2 (32-bit)| (default, Apr 12 2012, 14:30:3\n ) [MSC v.1500 32 bit (Intel)]'}\n```\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU5NDQ2OjJjZTJjZTQ4OWY0Mjk1Y2NhZTRlZTc5OGI5NmUwYzBmNzUwMTVmMDY=", "commit_message": "use TextIOWrapper when communicating with pandoc subprocess\n\nuses 'universal-newline' mode, to avoid confusion with CRLF.\n\ncloses #4122", "commit_timestamp": "2013-09-13T23:09:17Z", "files": ["IPython/nbconvert/utils/pandoc.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjVmZTM1ZTY0YjJmZTVmMjNlNmY0ZDRkMjU1YmEwMGRiYTE1ZmViZjU=", "commit_message": "Backport PR #4205: use TextIOWrapper when communicating with pandoc subprocess\n\nuses 'universal-newline' mode, to avoid any confusion with CRLF.\n\ncloses #4122\ncloses #3819\n\nalternative to #4202", "commit_timestamp": "2013-12-24T21:00:29Z", "files": ["IPython/nbconvert/tests/test_nbconvertapp.py", "IPython/nbconvert/utils/pandoc.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo5MTI5Y2RjODg5NTIyNjk3Yjg3M2YyOTkyMzdjYmZlOTY5NmExODAy", "commit_message": "use TextIOWrapper when communicating with pandoc subprocess\n\nuses 'universal-newline' mode, to avoid confusion with CRLF.\n\ncloses #4122", "commit_timestamp": "2013-09-13T23:09:17Z", "files": ["IPython/nbconvert/utils/pandoc.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmE2MjI0ZjJkYzU3MWMzMTAyMTIxOTQ3NzEyMjY5YjNjM2NkZjAyNzk=", "commit_message": "Merge pull request #4205 from minrk/universal-newline-pandoc\n\nuse TextIOWrapper when communicating with pandoc subprocess", "commit_timestamp": "2013-09-14T01:06:06Z", "files": ["IPython/nbconvert/tests/test_nbconvertapp.py", "IPython/nbconvert/utils/pandoc.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmE2MjI0ZjJkYzU3MWMzMTAyMTIxOTQ3NzEyMjY5YjNjM2NkZjAyNzk=", "commit_message": "Merge pull request #4205 from minrk/universal-newline-pandoc\n\nuse TextIOWrapper when communicating with pandoc subprocess", "commit_timestamp": "2013-09-14T01:06:06Z", "files": ["IPython/nbconvert/tests/test_nbconvertapp.py", "IPython/nbconvert/utils/pandoc.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjVmZTM1ZTY0YjJmZTVmMjNlNmY0ZDRkMjU1YmEwMGRiYTE1ZmViZjU=", "commit_message": "Backport PR #4205: use TextIOWrapper when communicating with pandoc subprocess\n\nuses 'universal-newline' mode, to avoid any confusion with CRLF.\n\ncloses #4122\ncloses #3819\n\nalternative to #4202", "commit_timestamp": "2013-12-24T21:00:29Z", "files": ["IPython/nbconvert/tests/test_nbconvertapp.py", "IPython/nbconvert/utils/pandoc.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo2OWVkMTY1NGE2ZDJmM2JiNjUxNDQyMGEzOGRhYjI4YWRlYzZlZjdl", "commit_message": "Merge pull request #4205 from minrk/universal-newline-pandoc\n\nuse TextIOWrapper when communicating with pandoc subprocess", "commit_timestamp": "2013-09-14T01:06:06Z", "files": ["IPython/nbconvert/tests/test_nbconvertapp.py", "IPython/nbconvert/utils/pandoc.py"]}], "labels": ["windows", "bug", "nbconvert"], "created_at": "2013-08-28T05:13:45Z", "closed_at": "2013-09-14T01:06:06Z", "linked_pr_number": [4122], "method": ["label"]}
{"issue_number": 4103, "title": "Wrong default argument of DirectView.clear", "body": "DirectView.clear\nin\nparallel/client/view.py\nline 800\nseems to have the wrong default-argument for _block_:\ndef clear(self, targets=None, block=False)\n\nIt should probably be None instead of False.\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU5NDQ2OjM2NzBhZTdlNzNjMGY1MzgyZGM0ZjkxZTk2M2QxZGVhM2E0OWY1ZmQ=", "commit_message": "fix a couple of default block values\n\nshould be None\n\ncloses #4103\n\nshould be backported to 1.1", "commit_timestamp": "2013-08-24T07:15:19Z", "files": ["IPython/parallel/client/view.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjNkMmY5ZDNlMzVmZGE1ZTBlMDA5MzdkNTNhZTg4NWViY2E4NzYxNTM=", "commit_message": "Backport PR #4106: fix a couple of default block values\n\nshould be None\n\ncloses #4103\n\nshould be backported to 1.1", "commit_timestamp": "2013-08-27T18:01:42Z", "files": ["IPython/parallel/client/view.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzphNGJkODAyMThmZjNkYTdmOGEwNzdiZWE5OGI4ODM2ODFlOGYyNGM3", "commit_message": "fix a couple of default block values\n\nshould be None\n\ncloses #4103\n\nshould be backported to 1.1", "commit_timestamp": "2013-08-24T07:15:19Z", "files": ["IPython/parallel/client/view.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmJmMWJiY2I5YzEwMjk4NDc0OTBhNDc4NTU1NDUyYjEwYjBkNGE4YWM=", "commit_message": "Merge pull request #4106 from minrk/clear-block\n\nfix a couple of default block values", "commit_timestamp": "2013-08-27T17:56:01Z", "files": ["IPython/parallel/client/view.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmJmMWJiY2I5YzEwMjk4NDc0OTBhNDc4NTU1NDUyYjEwYjBkNGE4YWM=", "commit_message": "Merge pull request #4106 from minrk/clear-block\n\nfix a couple of default block values", "commit_timestamp": "2013-08-27T17:56:01Z", "files": ["IPython/parallel/client/view.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjNkMmY5ZDNlMzVmZGE1ZTBlMDA5MzdkNTNhZTg4NWViY2E4NzYxNTM=", "commit_message": "Backport PR #4106: fix a couple of default block values\n\nshould be None\n\ncloses #4103\n\nshould be backported to 1.1", "commit_timestamp": "2013-08-27T18:01:42Z", "files": ["IPython/parallel/client/view.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzpjOTQ3M2IwMzU5NzYzOGFmODViZDdmZWI1ZGI3YTNhY2QyMmQ1MmI0", "commit_message": "Merge pull request #4106 from minrk/clear-block\n\nfix a couple of default block values", "commit_timestamp": "2013-08-27T17:56:01Z", "files": ["IPython/parallel/client/view.py"]}], "labels": ["bug", "parallel"], "created_at": "2013-08-24T03:20:12Z", "closed_at": "2013-08-27T17:56:01Z", "linked_pr_number": [4103], "method": ["label"]}
{"issue_number": 4100, "title": "parallel.client.client references undefined error.EngineError", "body": "parallel/client/client.py, line 712 tries to instantiate the undefined class error.EngineError\nIt seems to me that it should be defined in parallel/error.py\nI'm using IPython 1.0.0\nIn the current master trunk, error.EngineError is referenced on line 718, and is still undefined.\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU5NDQ2OjhiZTdiODY3YmU0NDQxOGNiM2FiYWIwNmMwZDFkMGQwY2Y0MjM5MmY=", "commit_message": "restore accidentally removed EngineError\n\nin cleanup PR #3527, I removed one too many exception classes.\n\nI acked IPython to confirm that I didn't miss any more.\n\ncloses #4100\n\nshould be backported to 1.1.", "commit_timestamp": "2013-08-23T17:46:25Z", "files": ["IPython/parallel/error.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjI3ZjM2NmFiNzY5MDUxZjEzOWZhYjk5Y2YzN2YwZTliZDBmMzllMDY=", "commit_message": "Merge pull request #4101 from minrk/engineerror\n\nrestore accidentally removed EngineError\r\n\r\ncloses #4100", "commit_timestamp": "2013-08-25T12:10:08Z", "files": ["IPython/parallel/error.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjI3MWI0ZGJkYjY0M2ZhMGZjOWE3NDhmYjk0NjAwODcxZmYyMzAxMzk=", "commit_message": "Backport PR #4101: restore accidentally removed EngineError\n\nin cleanup PR #3527, I removed one too many exception classes.\n\nI acked IPython to check that I didn't miss any more.\n\ncloses #4100\n\nshould be backported to 1.1.", "commit_timestamp": "2013-08-27T21:25:32Z", "files": ["IPython/parallel/error.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo4ZjE1ZjRmYjUzNmY1NTRjNWIwYmYxYWNiMjg0ODgyZDFkMzI2MDRj", "commit_message": "restore accidentally removed EngineError\n\nin cleanup PR #3527, I removed one too many exception classes.\n\nI acked IPython to confirm that I didn't miss any more.\n\ncloses #4100\n\nshould be backported to 1.1.", "commit_timestamp": "2013-08-23T17:46:25Z", "files": ["IPython/parallel/error.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo2YTg3OTg3M2U5NzNlYjQxNTE2YWRkNTZhMzY0MzAwNjVjYjljNDVi", "commit_message": "Merge pull request #4101 from minrk/engineerror\n\nrestore accidentally removed EngineError\r\n\r\ncloses #4100", "commit_timestamp": "2013-08-25T12:10:08Z", "files": ["IPython/parallel/error.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjI3ZjM2NmFiNzY5MDUxZjEzOWZhYjk5Y2YzN2YwZTliZDBmMzllMDY=", "commit_message": "Merge pull request #4101 from minrk/engineerror\n\nrestore accidentally removed EngineError\r\n\r\ncloses #4100", "commit_timestamp": "2013-08-25T12:10:08Z", "files": ["IPython/parallel/error.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjI3ZjM2NmFiNzY5MDUxZjEzOWZhYjk5Y2YzN2YwZTliZDBmMzllMDY=", "commit_message": "Merge pull request #4101 from minrk/engineerror\n\nrestore accidentally removed EngineError\r\n\r\ncloses #4100", "commit_timestamp": "2013-08-25T12:10:08Z", "files": ["IPython/parallel/error.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjI3MWI0ZGJkYjY0M2ZhMGZjOWE3NDhmYjk0NjAwODcxZmYyMzAxMzk=", "commit_message": "Backport PR #4101: restore accidentally removed EngineError\n\nin cleanup PR #3527, I removed one too many exception classes.\n\nI acked IPython to check that I didn't miss any more.\n\ncloses #4100\n\nshould be backported to 1.1.", "commit_timestamp": "2013-08-27T21:25:32Z", "files": ["IPython/parallel/error.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo2YTg3OTg3M2U5NzNlYjQxNTE2YWRkNTZhMzY0MzAwNjVjYjljNDVi", "commit_message": "Merge pull request #4101 from minrk/engineerror\n\nrestore accidentally removed EngineError\r\n\r\ncloses #4100", "commit_timestamp": "2013-08-25T12:10:08Z", "files": ["IPython/parallel/error.py"]}], "labels": ["bug", "parallel"], "created_at": "2013-08-23T16:59:51Z", "closed_at": "2013-08-25T12:10:08Z", "linked_pr_number": [4100], "method": ["label"]}
{"issue_number": 4078, "title": "StoreMagic.autorestore not working in 1.0.0", "body": "Since upgrading Ipython to version 1.0.0, the variables I have in `%store` don't seem to be loaded on startup, and have to be refreshed manually using `%store -r`.\n\nMy `ipython_config.py` file contains the line:\n\n```\nc.StoreMagic.autorestore = True\n```\n\nbut this doesn't seem to have any effect.\n\nMy version info is:\n\n```\n{'codename': 'An Afternoon Hack',\n 'commit_hash': '02da31c',\n 'commit_source': 'installation',\n  'default_encoding': 'cp1252',\n  'ipython_path': 'C:\\\\Anaconda\\\\lib\\\\site-packages\\\\IPython',\n  'ipython_version': '1.0.0',\n  'os_name': 'nt',\n  'platform': 'Windows-7-6.1.7601-SP1',\n  'sys_executable': 'C:\\\\Anaconda\\\\pythonw.exe',\n  'sys_platform': 'win32',\n  'sys_version': '2.7.5 |Anaconda 1.6.2 (32-bit)| (default, Jul  1 2013, 12:41:55) [MSC v.1500 32 bit (Intel)]'}\n```\n", "commits": [{"node_id": "MDY6Q29tbWl0MTIzNjAwMzoxNTFiNGZmM2IxZWM4MzY0ODRjNGU4NDg0OWFhYjRmNDFlNzg1YTg0", "commit_message": "Restore autorestore option for storemagic.\n\nIt is now StoreMagics.autorestore rather than StoreMagic.autorestore\n(note the extra s).\n\nCloses gh-4078", "commit_timestamp": "2013-08-29T19:28:48Z", "files": ["IPython/extensions/storemagic.py", "IPython/terminal/ipapp.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjE1MWI0ZmYzYjFlYzgzNjQ4NGM0ZTg0ODQ5YWFiNGY0MWU3ODVhODQ=", "commit_message": "Restore autorestore option for storemagic.\n\nIt is now StoreMagics.autorestore rather than StoreMagic.autorestore\n(note the extra s).\n\nCloses gh-4078", "commit_timestamp": "2013-08-29T19:28:48Z", "files": ["IPython/extensions/storemagic.py", "IPython/terminal/ipapp.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjkxZWUyYjJmMTA1ZWUxYmRhMzY2OWJlNDhlYTc2NmY4ODlkMWE0MTM=", "commit_message": "Merge pull request #4137 from takluyver/restore-autorestore\n\nRestore autorestore option for storemagic\r\n\r\nIt is now StoreMagics.autorestore rather than StoreMagic.autorestore (note the extra s).\r\n\r\nCloses #4078", "commit_timestamp": "2013-08-29T21:58:34Z", "files": ["IPython/extensions/storemagic.py", "IPython/extensions/tests/test_storemagic.py", "IPython/terminal/ipapp.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmQ4OGY1ZjNhOTQ2MzYxN2YzNGVmMWIzMTM4YWE0Y2I3NTFiYWNjOWQ=", "commit_message": "Backport PR #4137: Restore autorestore option for storemagic\n\nIt is now StoreMagics.autorestore rather than StoreMagic.autorestore (note the extra s).\n\nCloses #4078", "commit_timestamp": "2013-08-29T21:59:35Z", "files": ["IPython/extensions/storemagic.py", "IPython/extensions/tests/test_storemagic.py", "IPython/terminal/ipapp.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzpiMjNmZDEyNDU5NWQxYzAyZGU3ZTQ0NzQ5ZjQ0NWQyMjEwNjgwZDgz", "commit_message": "Restore autorestore option for storemagic.\n\nIt is now StoreMagics.autorestore rather than StoreMagic.autorestore\n(note the extra s).\n\nCloses gh-4078", "commit_timestamp": "2013-08-29T19:28:48Z", "files": ["IPython/extensions/storemagic.py", "IPython/terminal/ipapp.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzpiN2EyMDIxY2Q2MjBmMjRjYTZmNGE0NTU2ZDJkZjQwYTdmZjZmMDYy", "commit_message": "Merge pull request #4137 from takluyver/restore-autorestore\n\nRestore autorestore option for storemagic\r\n\r\nIt is now StoreMagics.autorestore rather than StoreMagic.autorestore (note the extra s).\r\n\r\nCloses #4078", "commit_timestamp": "2013-08-29T21:58:34Z", "files": ["IPython/extensions/storemagic.py", "IPython/extensions/tests/test_storemagic.py", "IPython/terminal/ipapp.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjkxZWUyYjJmMTA1ZWUxYmRhMzY2OWJlNDhlYTc2NmY4ODlkMWE0MTM=", "commit_message": "Merge pull request #4137 from takluyver/restore-autorestore\n\nRestore autorestore option for storemagic\r\n\r\nIt is now StoreMagics.autorestore rather than StoreMagic.autorestore (note the extra s).\r\n\r\nCloses #4078", "commit_timestamp": "2013-08-29T21:58:34Z", "files": ["IPython/extensions/storemagic.py", "IPython/extensions/tests/test_storemagic.py", "IPython/terminal/ipapp.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjkxZWUyYjJmMTA1ZWUxYmRhMzY2OWJlNDhlYTc2NmY4ODlkMWE0MTM=", "commit_message": "Merge pull request #4137 from takluyver/restore-autorestore\n\nRestore autorestore option for storemagic\r\n\r\nIt is now StoreMagics.autorestore rather than StoreMagic.autorestore (note the extra s).\r\n\r\nCloses #4078", "commit_timestamp": "2013-08-29T21:58:34Z", "files": ["IPython/extensions/storemagic.py", "IPython/extensions/tests/test_storemagic.py", "IPython/terminal/ipapp.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmQ4OGY1ZjNhOTQ2MzYxN2YzNGVmMWIzMTM4YWE0Y2I3NTFiYWNjOWQ=", "commit_message": "Backport PR #4137: Restore autorestore option for storemagic\n\nIt is now StoreMagics.autorestore rather than StoreMagic.autorestore (note the extra s).\n\nCloses #4078", "commit_timestamp": "2013-08-29T21:59:35Z", "files": ["IPython/extensions/storemagic.py", "IPython/extensions/tests/test_storemagic.py", "IPython/terminal/ipapp.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzpiN2EyMDIxY2Q2MjBmMjRjYTZmNGE0NTU2ZDJkZjQwYTdmZjZmMDYy", "commit_message": "Merge pull request #4137 from takluyver/restore-autorestore\n\nRestore autorestore option for storemagic\r\n\r\nIt is now StoreMagics.autorestore rather than StoreMagic.autorestore (note the extra s).\r\n\r\nCloses #4078", "commit_timestamp": "2013-08-29T21:58:34Z", "files": ["IPython/extensions/storemagic.py", "IPython/extensions/tests/test_storemagic.py", "IPython/terminal/ipapp.py"]}], "labels": ["bug", "regression"], "created_at": "2013-08-21T05:52:41Z", "closed_at": "2013-08-29T21:58:35Z", "linked_pr_number": [4078], "method": ["label", "regex"]}
{"issue_number": 4059, "title": "Issues with Ellipsis literal in Python 3", "body": "There seem to be some differences between the way the Ellipsis literal (`...`) from Python 3 is handled in python vs. ipython:\n\n``` py\n>>> ...\nEllipsis\n>>> ....__class__\n<class 'ellipsis'>\n```\n\n``` py\nIn [1]: ...\n\nIn [2]: ....__class__\n  File \"<ipython-input-2-f022736bb488>\", line 1\n    .__class__\n    ^\nSyntaxError: invalid syntax\n```\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU5NDQ2OjI1MGMyYmQ5NGQ2MzMyMmU1ODNlMGRiZmJmNDFiMTRmMTI5ZDMyMGQ=", "commit_message": "only strip continuation prompts if regular prompts seen first\n\nshould be discussed before merge (ping @takluyver),\nas it is a significant and sensitive change.\n\nI'm also not sure that it's the right fix, but worth a try.\n\ncloses #4059", "commit_timestamp": "2013-08-19T05:53:36Z", "files": ["IPython/core/inputtransformer.py", "IPython/core/tests/test_inputtransformer.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjM1MjFjOTMyZGIxOGU4NzY2NWQ1NmRjMGQyNWE2YjE4MTgyZTRlYWM=", "commit_message": "Backport PR #4060: only strip continuation prompts if regular prompts seen first\n\nshould be discussed before merge (ping @takluyver), as it is a significant and sensitive change.\n\nI'm also not sure that it's the right fix, but worth a try.\n\ncloses #4059", "commit_timestamp": "2013-08-29T18:58:56Z", "files": ["IPython/core/inputtransformer.py", "IPython/core/tests/test_inputtransformer.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzozOGQwZDc3ZDI4NzI4ZmZmY2E2MWE1NDM0Yzg4YjNkYzk2YTJiYTll", "commit_message": "only strip continuation prompts if regular prompts seen first\n\nshould be discussed before merge (ping @takluyver),\nas it is a significant and sensitive change.\n\nI'm also not sure that it's the right fix, but worth a try.\n\ncloses #4059", "commit_timestamp": "2013-08-19T05:53:36Z", "files": ["IPython/core/inputtransformer.py", "IPython/core/tests/test_inputtransformer.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjExYmFiZGYxOGYxOTkzNjJmNWYwZjE5OGVlNTY0MzU2MWZlODVkN2M=", "commit_message": "Merge pull request #4060 from minrk/multiprompt\n\nonly strip continuation prompts if regular prompts seen first", "commit_timestamp": "2013-08-29T18:56:50Z", "files": ["IPython/core/inputtransformer.py", "IPython/core/tests/test_inputtransformer.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjExYmFiZGYxOGYxOTkzNjJmNWYwZjE5OGVlNTY0MzU2MWZlODVkN2M=", "commit_message": "Merge pull request #4060 from minrk/multiprompt\n\nonly strip continuation prompts if regular prompts seen first", "commit_timestamp": "2013-08-29T18:56:50Z", "files": ["IPython/core/inputtransformer.py", "IPython/core/tests/test_inputtransformer.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjM1MjFjOTMyZGIxOGU4NzY2NWQ1NmRjMGQyNWE2YjE4MTgyZTRlYWM=", "commit_message": "Backport PR #4060: only strip continuation prompts if regular prompts seen first\n\nshould be discussed before merge (ping @takluyver), as it is a significant and sensitive change.\n\nI'm also not sure that it's the right fix, but worth a try.\n\ncloses #4059", "commit_timestamp": "2013-08-29T18:58:56Z", "files": ["IPython/core/inputtransformer.py", "IPython/core/tests/test_inputtransformer.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzplNDIxNmQwMDgxMzYwNmY2NWYzY2JjZTUxMzBjZjcyMTlmOWQwNTc5", "commit_message": "Merge pull request #4060 from minrk/multiprompt\n\nonly strip continuation prompts if regular prompts seen first", "commit_timestamp": "2013-08-29T18:56:50Z", "files": ["IPython/core/inputtransformer.py", "IPython/core/tests/test_inputtransformer.py"]}], "labels": ["bug"], "created_at": "2013-08-19T05:22:25Z", "closed_at": "2013-08-29T18:56:50Z", "linked_pr_number": [4059], "method": ["label"]}
{"issue_number": 4024, "title": "nbconvert markdown issues", "body": "Markdown converter is set to show html output as the richest repr, but does not show it. and add extra $$ around latex one.\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU4NTE4OjhjODhhZWM2MTc5MzVkMmI0ZjczOTkzM2Q5NzcwODYwMWZmZDcwYjQ=", "commit_message": "Merge pull request #4174 from minrk/markup-templates\n\nvarious issues in markdown and rst templates\r\n\r\n- remove prompts from default output\r\n- add missing HTML block\r\n- remove double-wrapping of latex\r\n- use plain-markdown indentation for code blocks (could use GFM ``` ` ` `python```)\r\n- images didn't work in either one at all\r\n- markdown extracts output\r\n\r\ncloses #4024", "commit_timestamp": "2013-09-09T00:16:55Z", "files": ["IPython/nbconvert/exporters/exporter.py", "IPython/nbconvert/exporters/markdown.py", "IPython/nbconvert/filters/strings.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmZkNmQ0ODRmNjJmMTRhYTVlZmFhMTI1MWFhNjQyMDkwYTY1MzI5MDY=", "commit_message": "Backport PR #4174: various issues in markdown and rst templates\n\n- remove prompts from default output\n- add missing HTML block\n- remove double-wrapping of latex\n- use plain-markdown indentation for code blocks (could use GFM ``` ` ` `python```)\n- images didn't work in either one at all\n- markdown extracts output\n\ncloses #4024\n\ncandidate for backport to 1.1", "commit_timestamp": "2013-09-09T01:14:33Z", "files": ["IPython/nbconvert/exporters/exporter.py", "IPython/nbconvert/exporters/markdown.py", "IPython/nbconvert/filters/strings.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo2OGYwMzdmZmVjNjA2NzFkNTA5MDhjMTZiNWMwMGEzMjgwZjViMzI0", "commit_message": "Merge pull request #4174 from minrk/markup-templates\n\nvarious issues in markdown and rst templates\r\n\r\n- remove prompts from default output\r\n- add missing HTML block\r\n- remove double-wrapping of latex\r\n- use plain-markdown indentation for code blocks (could use GFM ``` ` ` `python```)\r\n- images didn't work in either one at all\r\n- markdown extracts output\r\n\r\ncloses #4024", "commit_timestamp": "2013-09-09T00:16:55Z", "files": ["IPython/nbconvert/exporters/exporter.py", "IPython/nbconvert/exporters/markdown.py", "IPython/nbconvert/filters/strings.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjhjODhhZWM2MTc5MzVkMmI0ZjczOTkzM2Q5NzcwODYwMWZmZDcwYjQ=", "commit_message": "Merge pull request #4174 from minrk/markup-templates\n\nvarious issues in markdown and rst templates\r\n\r\n- remove prompts from default output\r\n- add missing HTML block\r\n- remove double-wrapping of latex\r\n- use plain-markdown indentation for code blocks (could use GFM ``` ` ` `python```)\r\n- images didn't work in either one at all\r\n- markdown extracts output\r\n\r\ncloses #4024", "commit_timestamp": "2013-09-09T00:16:55Z", "files": ["IPython/nbconvert/exporters/exporter.py", "IPython/nbconvert/exporters/markdown.py", "IPython/nbconvert/filters/strings.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjhjODhhZWM2MTc5MzVkMmI0ZjczOTkzM2Q5NzcwODYwMWZmZDcwYjQ=", "commit_message": "Merge pull request #4174 from minrk/markup-templates\n\nvarious issues in markdown and rst templates\r\n\r\n- remove prompts from default output\r\n- add missing HTML block\r\n- remove double-wrapping of latex\r\n- use plain-markdown indentation for code blocks (could use GFM ``` ` ` `python```)\r\n- images didn't work in either one at all\r\n- markdown extracts output\r\n\r\ncloses #4024", "commit_timestamp": "2013-09-09T00:16:55Z", "files": ["IPython/nbconvert/exporters/exporter.py", "IPython/nbconvert/exporters/markdown.py", "IPython/nbconvert/filters/strings.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmZkNmQ0ODRmNjJmMTRhYTVlZmFhMTI1MWFhNjQyMDkwYTY1MzI5MDY=", "commit_message": "Backport PR #4174: various issues in markdown and rst templates\n\n- remove prompts from default output\n- add missing HTML block\n- remove double-wrapping of latex\n- use plain-markdown indentation for code blocks (could use GFM ``` ` ` `python```)\n- images didn't work in either one at all\n- markdown extracts output\n\ncloses #4024\n\ncandidate for backport to 1.1", "commit_timestamp": "2013-09-09T01:14:33Z", "files": ["IPython/nbconvert/exporters/exporter.py", "IPython/nbconvert/exporters/markdown.py", "IPython/nbconvert/filters/strings.py"]}, {"node_id": "MDY6Q29tbWl0MjM0Mzk1OTpkOTYyNTBkMWI2MDY4MjM4YWQ0NzM2MGMzNzRjNjYzMjA2MmY3OTBj", "commit_message": "Merge commit 'rel-1.1.0-3-gb8b89ca' into debian-1X\n\n* commit 'rel-1.1.0-3-gb8b89ca': (66 commits)\n  Backport PR #4209: Magic doc fixes\n  Backport PR #4204: remove some extraneous print statements from IPython.parallel\n  back to dev\n  release 1.1.0\n  don't upload to GitHub in release script\n  1.1 backport stats\n  Backport PR #4188: Allow user_ns trait to be None\n  Backport PR #4189: always fire LOCAL_IPS.extend(PUBLIC_IPS)\n  Backport PR #4174: various issues in markdown and rst templates\n  Backport PR #4181: nbconvert: Fix, sphinx template not removing new lines from headers\n  Backport PR #4043: don't 'restore_bytes' in from_JSON\n  Backport PR #4178: add missing data_javascript\n  Backport PR #4136: catch javascript errors in any output\n  Backport PR #4163: Fix for incorrect default encoding on Windows.\n  Backport PR #4171: add nbconvert config file when creating profiles\n  Backport PR #4159: don't split `.cell` and `div.cell` CSS\n  Backport PR #4158: generate choices for `--gui` configurable from real mapping\n  Backport PR #4143: update example custom.js\n  Backport PR #4144: help_end transformer shouldn't pick up ? in multiline string\n  Backport PR #4104: Add way to install MathJax to a particular profile\n  ...", "commit_timestamp": "2013-09-19T15:16:16Z", "files": ["IPython/config/application.py", "IPython/config/tests/test_application.py", "IPython/consoleapp.py", "IPython/core/application.py", "IPython/core/inputtransformer.py", "IPython/core/interactiveshell.py", "IPython/core/magics/execution.py", "IPython/core/profileapp.py", "IPython/core/profiledir.py", "IPython/core/release.py", "IPython/core/shellapp.py", "IPython/core/tests/test_completerlib.py", "IPython/core/tests/test_inputtransformer.py", "IPython/core/tests/test_interactiveshell.py", "IPython/core/tests/test_magic.py", "IPython/core/tests/test_profile.py", "IPython/core/tests/test_prompts.py", "IPython/core/tests/test_ultratb.py", "IPython/extensions/cythonmagic.py", "IPython/extensions/octavemagic.py", "IPython/extensions/rmagic.py", "IPython/extensions/storemagic.py", "IPython/extensions/tests/test_storemagic.py", "IPython/external/mathjax.py", "IPython/html/notebookapp.py", "IPython/html/tests/test_notebookapp.py", "IPython/kernel/client.py", "IPython/kernel/connect.py", "IPython/kernel/tests/test_connect.py", "IPython/kernel/tests/test_kernel.py", "IPython/kernel/tests/test_message_spec.py", "IPython/kernel/zmq/heartbeat.py", "IPython/kernel/zmq/ipkernel.py", "IPython/kernel/zmq/kernelapp.py", "IPython/kernel/zmq/serialize.py", "IPython/kernel/zmq/tests/test_start_kernel.py", "IPython/lib/inputhook.py", "IPython/nbconvert/exporters/exporter.py", "IPython/nbconvert/exporters/markdown.py", "IPython/nbconvert/filters/strings.py", "IPython/nbconvert/nbconvertapp.py", "IPython/nbconvert/tests/base.py", "IPython/nbconvert/tests/test_nbconvertapp.py", "IPython/nbconvert/transformers/base.py", "IPython/nbconvert/transformers/coalescestreams.py", "IPython/nbconvert/transformers/sphinx.py", "IPython/nbformat/v3/nbbase.py", "IPython/nbformat/v3/nbjson.py", "IPython/nbformat/v3/nbpy.py", "IPython/nbformat/v3/rwbase.py", "IPython/nbformat/v3/tests/nbexamples.py", "IPython/nbformat/v3/tests/test_json.py", "IPython/nbformat/v3/tests/test_nbbase.py", "IPython/parallel/apps/baseapp.py", "IPython/parallel/client/client.py", "IPython/parallel/client/remotefunction.py", "IPython/parallel/client/view.py", "IPython/parallel/controller/mongodb.py", "IPython/parallel/error.py", "IPython/parallel/tests/__init__.py", "IPython/parallel/tests/test_client.py", "IPython/parallel/tests/test_view.py", "IPython/qt/console/frontend_widget.py", "IPython/qt/console/qtconsoleapp.py", "IPython/qt/console/rich_ipython_widget.py", "IPython/qt/console/tests/test_app.py", "IPython/qt/rich_text.py", "IPython/terminal/console/tests/test_console.py", "IPython/terminal/ipapp.py", "IPython/terminal/tests/test_help.py", "IPython/testing/tools.py", "IPython/utils/encoding.py", "IPython/utils/localinterfaces.py", "IPython/utils/py3compat.py", "IPython/utils/tempdir.py", "IPython/utils/tests/test_path.py", "IPython/utils/text.py", "tools/backport_pr.py", "tools/gh_api.py"]}, {"node_id": "MDY6Q29tbWl0MjM0Mzk1OTozOGUwNGQwNzQwZmQxYmEyMWRkNzQzYjYyYWZlZmRlNTkzYjU0MjFl", "commit_message": "Merge commit 'rel-1.1.0-7-gf5891e9' into releases\n\n* commit 'rel-1.1.0-7-gf5891e9': (70 commits)\n  Backport PR #4346: getpass() on Windows & Python 2 needs bytes prompt\n  Backport PR #4336: use simple replacement rather than string formatting in format_kernel_cmd\n  Backport PR #4316: underscore missing on notebook_p4\n  Backport PR #4257: fix unicode argv parsing\n  Backport PR #4209: Magic doc fixes\n  Backport PR #4204: remove some extraneous print statements from IPython.parallel\n  back to dev\n  release 1.1.0\n  don't upload to GitHub in release script\n  1.1 backport stats\n  Backport PR #4188: Allow user_ns trait to be None\n  Backport PR #4189: always fire LOCAL_IPS.extend(PUBLIC_IPS)\n  Backport PR #4174: various issues in markdown and rst templates\n  Backport PR #4181: nbconvert: Fix, sphinx template not removing new lines from headers\n  Backport PR #4043: don't 'restore_bytes' in from_JSON\n  Backport PR #4178: add missing data_javascript\n  Backport PR #4136: catch javascript errors in any output\n  Backport PR #4163: Fix for incorrect default encoding on Windows.\n  Backport PR #4171: add nbconvert config file when creating profiles\n  Backport PR #4159: don't split `.cell` and `div.cell` CSS\n  ...", "commit_timestamp": "2014-03-18T03:23:33Z", "files": ["IPython/config/application.py", "IPython/config/tests/test_application.py", "IPython/consoleapp.py", "IPython/core/application.py", "IPython/core/inputtransformer.py", "IPython/core/interactiveshell.py", "IPython/core/magics/execution.py", "IPython/core/profileapp.py", "IPython/core/profiledir.py", "IPython/core/release.py", "IPython/core/shellapp.py", "IPython/core/tests/test_completerlib.py", "IPython/core/tests/test_inputtransformer.py", "IPython/core/tests/test_interactiveshell.py", "IPython/core/tests/test_magic.py", "IPython/core/tests/test_profile.py", "IPython/core/tests/test_prompts.py", "IPython/core/tests/test_ultratb.py", "IPython/extensions/cythonmagic.py", "IPython/extensions/octavemagic.py", "IPython/extensions/rmagic.py", "IPython/extensions/storemagic.py", "IPython/extensions/tests/test_storemagic.py", "IPython/external/mathjax.py", "IPython/html/notebookapp.py", "IPython/html/tests/test_notebookapp.py", "IPython/kernel/client.py", "IPython/kernel/connect.py", "IPython/kernel/manager.py", "IPython/kernel/tests/test_connect.py", "IPython/kernel/tests/test_kernel.py", "IPython/kernel/tests/test_message_spec.py", "IPython/kernel/zmq/heartbeat.py", "IPython/kernel/zmq/ipkernel.py", "IPython/kernel/zmq/kernelapp.py", "IPython/kernel/zmq/serialize.py", "IPython/kernel/zmq/tests/test_start_kernel.py", "IPython/lib/inputhook.py", "IPython/nbconvert/exporters/exporter.py", "IPython/nbconvert/exporters/markdown.py", "IPython/nbconvert/filters/strings.py", "IPython/nbconvert/nbconvertapp.py", "IPython/nbconvert/tests/base.py", "IPython/nbconvert/tests/test_nbconvertapp.py", "IPython/nbconvert/transformers/base.py", "IPython/nbconvert/transformers/coalescestreams.py", "IPython/nbconvert/transformers/sphinx.py", "IPython/nbformat/v3/nbbase.py", "IPython/nbformat/v3/nbjson.py", "IPython/nbformat/v3/nbpy.py", "IPython/nbformat/v3/rwbase.py", "IPython/nbformat/v3/tests/nbexamples.py", "IPython/nbformat/v3/tests/test_json.py", "IPython/nbformat/v3/tests/test_nbbase.py", "IPython/parallel/apps/baseapp.py", "IPython/parallel/client/client.py", "IPython/parallel/client/remotefunction.py", "IPython/parallel/client/view.py", "IPython/parallel/controller/mongodb.py", "IPython/parallel/error.py", "IPython/parallel/tests/__init__.py", "IPython/parallel/tests/test_client.py", "IPython/parallel/tests/test_view.py", "IPython/qt/console/frontend_widget.py", "IPython/qt/console/qtconsoleapp.py", "IPython/qt/console/rich_ipython_widget.py", "IPython/qt/console/tests/test_app.py", "IPython/qt/rich_text.py", "IPython/terminal/console/tests/test_console.py", "IPython/terminal/ipapp.py", "IPython/terminal/tests/test_help.py", "IPython/testing/tools.py", "IPython/utils/encoding.py", "IPython/utils/localinterfaces.py", "IPython/utils/py3compat.py", "IPython/utils/tempdir.py", "IPython/utils/tests/test_path.py", "IPython/utils/text.py", "tools/backport_pr.py", "tools/gh_api.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo2OGYwMzdmZmVjNjA2NzFkNTA5MDhjMTZiNWMwMGEzMjgwZjViMzI0", "commit_message": "Merge pull request #4174 from minrk/markup-templates\n\nvarious issues in markdown and rst templates\r\n\r\n- remove prompts from default output\r\n- add missing HTML block\r\n- remove double-wrapping of latex\r\n- use plain-markdown indentation for code blocks (could use GFM ``` ` ` `python```)\r\n- images didn't work in either one at all\r\n- markdown extracts output\r\n\r\ncloses #4024", "commit_timestamp": "2013-09-09T00:16:55Z", "files": ["IPython/nbconvert/exporters/exporter.py", "IPython/nbconvert/exporters/markdown.py", "IPython/nbconvert/filters/strings.py"]}], "labels": ["bug", "nbconvert"], "created_at": "2013-08-14T08:17:34Z", "closed_at": "2013-09-09T00:16:55Z", "linked_pr_number": [4024], "method": ["label"]}
{"issue_number": 4020, "title": "IPython parallel map fails on numpy arrays", "body": "The following fails:\n\n``` python\nimport pandas as pd\nimport numpy as np\n\nfrom IPython.parallel import Client\nc = Client()\nv = c[:]\n\nv.map_sync(lambda x: x, np.arange(101))\n```\n\nwith the error\n\n```\n---------------------------------------------------------------------------\nValueError                                Traceback (most recent call last)\n<ipython-input-6-71ded66ea5e0> in <module>()\n----> 1 X, Y, index = get_XY(indicators, ticker='DIA', balance=False)\n\n/Users/samuelainsworth/Development/Finance Research/suspicious_classifier.py in get_XY(indicators, ticker, lamb, balance, verbose)\n    154     ### Buys\n    155     # Collect features for all buys and associate with dates\n--> 156     buy_features = zip(buys, v.map_sync(collect_features, buys))\n    157 \n    158     # drop examples where we don't features\n\n/usr/local/lib/python2.7/site-packages/IPython/parallel/client/view.pyc in map_sync(self, f, *sequences, **kwargs)\n    365             raise TypeError(\"map_sync doesn't take a `block` keyword argument.\")\n    366         kwargs['block'] = True\n--> 367         return self.map(f,*sequences,**kwargs)\n    368 \n    369     def imap(self, f, *sequences, **kwargs):\n\n/usr/local/lib/python2.7/site-packages/IPython/parallel/client/view.pyc in map(self, f, *sequences, **kwargs)\n\n/usr/local/lib/python2.7/site-packages/IPython/parallel/client/view.pyc in sync_results(f, self, *args, **kwargs)\n     61     self._in_sync_results = True\n     62     try:\n---> 63         ret = f(self, *args, **kwargs)\n     64     finally:\n     65         self._in_sync_results = False\n\n/usr/local/lib/python2.7/site-packages/IPython/parallel/client/view.pyc in map(self, f, *sequences, **kwargs)\n    613         assert len(sequences) > 0, \"must have some sequences to map onto!\"\n    614         pf = ParallelFunction(self, f, block=block, **kwargs)\n--> 615         return pf.map(*sequences)\n    616 \n    617     @sync_results\n\n/usr/local/lib/python2.7/site-packages/IPython/parallel/client/remotefunction.pyc in map(self, *sequences)\n    275         self._mapping = True\n    276         try:\n--> 277             ret = self(*sequences)\n    278         finally:\n    279             self._mapping = False\n\n/usr/local/lib/python2.7/site-packages/IPython/parallel/client/remotefunction.pyc in __call__(self, *sequences)\n\n/usr/local/lib/python2.7/site-packages/IPython/parallel/client/remotefunction.pyc in sync_view_results(f, self, *args, **kwargs)\n     89     view = self.view\n     90     if view._in_sync_results:\n---> 91         return f(self, *args, **kwargs)\n     92     print 'in sync results', f\n     93     view._in_sync_results = True\n\n/usr/local/lib/python2.7/site-packages/IPython/parallel/client/remotefunction.pyc in __call__(self, *sequences)\n    233                 part = self.mapObject.getPartition(seq, index, nparts, maxlen)\n    234                 args.append(part)\n--> 235             if not any(args):\n    236                 continue\n    237 \n\nValueError: The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()\n```\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU4NTE4OjA0YWE0NTI0NmFhNTgyMTRiMTk4NmM5ZmFjZWRhNTU4ZWU5MjE2Y2Q=", "commit_message": "Merge pull request #4021 from samuela/master\n\nFix parallel.client.View map() on numpy arrays\r\n\r\ncloses #4020", "commit_timestamp": "2013-08-15T04:13:34Z", "files": ["IPython/parallel/client/remotefunction.py", "IPython/parallel/tests/test_view.py"]}, {"node_id": "MDY6Q29tbWl0OTc3NTQwOmZmZWQyMmMxMjQ1YTA4NGU3YmYzMmFkZWZlYWZjNGVkODdiNTk4MWE=", "commit_message": "Backport PR #4021: Fix parallel.client.View map() on numpy arrays\n\nResolves https://github.com/ipython/ipython/issues/4020.", "commit_timestamp": "2013-08-16T17:36:55Z", "files": ["IPython/parallel/client/remotefunction.py", "IPython/parallel/tests/test_view.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzphZjY4NjJmNGE2OWYzZDdiNzY4NWVmOTFhNjBhMjg3YjI4YzFkNWVh", "commit_message": "Merge pull request #4021 from samuela/master\n\nFix parallel.client.View map() on numpy arrays\r\n\r\ncloses #4020", "commit_timestamp": "2013-08-15T04:13:34Z", "files": ["IPython/parallel/client/remotefunction.py", "IPython/parallel/tests/test_view.py"]}], "labels": ["parallel"], "created_at": "2013-08-14T03:23:14Z", "closed_at": "2013-08-15T04:13:35Z", "method": ["regex"]}
{"issue_number": 4013, "title": "Iptest fails in dual python installation", "body": "I have both Python 2.7.5 and Python 3.3.2 installed. My default is Python 3.3.2, i.e. the command python is linked to python3. Also /Library/Frameworks/Python.framework/Versions/3.3/bin is before /Library/Frameworks/Python.framework/Versions/2.7/bin in my PATH. I have ipython installed in both. iptest3 runs with all tests passing. However iptest (in 2.7) fails in the IPython.lib test. The failure is on the print statements. It looks like the test is run with python3 (aka python) instead of the python 2.7 to which the package belongs.\n\nSys info:\n\npython2 -c \"import IPython; print(IPython.sys_info())\"{'codename': 'An Afternoon Hack', 'commit_hash': '02da31c',\n 'commit_source': 'installation',\n 'default_encoding': 'UTF-8',\n 'ipython_path': '/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/IPython',\n 'ipython_version': '1.0.0',\n 'os_name': 'posix',\n 'platform': 'Darwin-10.8.0-i386-64bit',\n 'sys_executable': '/Library/Frameworks/Python.framework/Versions/2.7/Resources/Python.app/Contents/MacOS/Python',\n 'sys_platform': 'darwin',\n 'sys_version': '2.7.5 (v2.7.5:ab05e7dd2788, May 13 2013, 13:18:45) \\n[GCC 4.2.1 (Apple Inc. build 5666) (dot 3)]'}\n", "commits": [{"node_id": "MDY6Q29tbWl0MTIzNjAwMzpjOTRkZWE4NzcyY2U1ODFmMmZjNjU3NzQ1MWQ0OTdhNjE3YjM1ZWNm", "commit_message": "irunner use python -m IPython to launch subprocess with matching interpreter\n\nCloses gh-4013", "commit_timestamp": "2013-08-13T18:56:12Z", "files": ["IPython/lib/irunner.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmM5NGRlYTg3NzJjZTU4MWYyZmM2NTc3NDUxZDQ5N2E2MTdiMzVlY2Y=", "commit_message": "irunner use python -m IPython to launch subprocess with matching interpreter\n\nCloses gh-4013", "commit_timestamp": "2013-08-13T18:56:12Z", "files": ["IPython/lib/irunner.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo0MTkzMDhkNmY1N2E5NjhiOGZmNGFkNzkwMGIzODg3YzM5YTgyZWE2", "commit_message": "irunner use python -m IPython to launch subprocess with matching interpreter\n\nCloses gh-4013", "commit_timestamp": "2013-08-13T18:56:12Z", "files": ["IPython/lib/irunner.py"]}], "labels": ["testing"], "created_at": "2013-08-13T16:13:58Z", "closed_at": "2013-08-15T22:47:02Z", "method": ["regex"]}
{"issue_number": 4006, "title": "iptest IPython broken", "body": "I just noticed this while working with @Zsailer : running `iptest` works, but running `iptest IPython` I get a bunch of failures.\n", "commits": [{"node_id": "MDY6Q29tbWl0MTIzNjAwMzoxMjI5NDk3OGI1ODBhMjM0M2RkYzZjOTk1NTI4ZTFjYjdhM2YyZDIx", "commit_message": "Prevent 'iptest IPython' from trying to run.\n\nCloses gh-4006", "commit_timestamp": "2014-02-04T01:56:22Z", "files": ["IPython/testing/iptestcontroller.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzpmNDM5ZmViZDEyYWQ2NDczZTQzOWQ4YjE5MzEwNDhmNjY4YTNhNzY3", "commit_message": "Prevent 'iptest IPython' from trying to run.\n\nCloses gh-4006", "commit_timestamp": "2014-02-04T01:56:22Z", "files": ["IPython/testing/iptestcontroller.py"]}], "labels": ["bug", "testing"], "created_at": "2013-08-13T09:03:09Z", "closed_at": "2014-02-04T23:03:10Z", "method": ["label", "regex"]}
{"issue_number": 4005, "title": "IPython.start_kernel doesn't work.", "body": "According to the documentation it should launch a normal IPython kernel instance but it fails with an ImportError:\n\n``` Python\nIn [24]: IPython.start_kernel()\n---------------------------------------------------------------------------\nImportError                               Traceback (most recent call last)\n<ipython-input-24-3a50fd41fe8b> in <module>()\n----> 1 IPython.start_kernel()\n\n/usr/local/lib/python2.7/site-packages/IPython/__init__.pyc in start_kernel(argv, **kwargs)\n    141         such as `config`.\n    142     \"\"\"\n--> 143     from IPython.kernel.zmq.kernelapp import launch_new_instance\n    144     return launch_new_instance(argv=argv, **kwargs)\n    145 \n\nImportError: cannot import name launch_new_instance\n```\n\nI guess `IPython.kernel.zmq.kernelapp` module is missing something like\n\n```\nlaunch_new_instance = IPKernelApp.launch_instance\n```\n", "commits": [{"node_id": "MDY6Q29tbWl0MTIzNjAwMzo3MGQ2YmVmNWI1Y2I4MzExZWNkMDRkMGExMjYzODUyZGZjNjJmZDg2", "commit_message": "Fix IPython.start_kernel()\n\nCloses gh-4005", "commit_timestamp": "2013-08-13T18:02:34Z", "files": ["IPython/kernel/zmq/kernelapp.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjcwZDZiZWY1YjVjYjgzMTFlY2QwNGQwYTEyNjM4NTJkZmM2MmZkODY=", "commit_message": "Fix IPython.start_kernel()\n\nCloses gh-4005", "commit_timestamp": "2013-08-13T18:02:34Z", "files": ["IPython/kernel/zmq/kernelapp.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmQzZTJmNzMyMGUwMTgyMTJlZjQ5NjZjNjkzOTQxY2E1YTliZWQ5MzM=", "commit_message": "Merge pull request #4016 from takluyver/IPython-start-funcs\n\nFix IPython.start_* functions\r\n\r\nstart_kernel() didn't work at all (#4005), and I found while investigating that passing user_ns to either start_ipython() or start_kernel() had no effect, because the Application wasn't passing it on to the Shell.\r\n\r\nThis is a simple fix for the most pressing issues. We should think about any other parameters that we want to be passed through from our top level API, e.g. possibly user_module.\r\n\r\ncloses #4005", "commit_timestamp": "2013-08-15T04:20:37Z", "files": ["IPython/core/shellapp.py", "IPython/kernel/zmq/kernelapp.py", "IPython/kernel/zmq/tests/test_start_kernel.py", "IPython/terminal/ipapp.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmRkYTYzMzBhYTgzYTIwMGU4OTYzYWE0MzM2YzBjNTkxMjgyMTU4MTI=", "commit_message": "Backport PR #4016: fix IPython.start_* functions.\n\nSee gh-4005", "commit_timestamp": "2013-08-15T19:48:28Z", "files": ["IPython/core/shellapp.py", "IPython/kernel/zmq/kernelapp.py", "IPython/kernel/zmq/tests/test_start_kernel.py", "IPython/terminal/ipapp.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzoxNGZlNjRjMGFmZTBmNmM5Y2IzYTVkN2VjNTZjNzRkNDQyZTNmNjhl", "commit_message": "Fix IPython.start_kernel()\n\nCloses gh-4005", "commit_timestamp": "2013-08-13T18:02:34Z", "files": ["IPython/kernel/zmq/kernelapp.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzoxOTBjZjEyYjZmMWFiMWJiODY3NmRlYTY5ZDI2M2EzODk5M2IxOTBk", "commit_message": "Merge pull request #4016 from takluyver/IPython-start-funcs\n\nFix IPython.start_* functions\r\n\r\nstart_kernel() didn't work at all (#4005), and I found while investigating that passing user_ns to either start_ipython() or start_kernel() had no effect, because the Application wasn't passing it on to the Shell.\r\n\r\nThis is a simple fix for the most pressing issues. We should think about any other parameters that we want to be passed through from our top level API, e.g. possibly user_module.\r\n\r\ncloses #4005", "commit_timestamp": "2013-08-15T04:20:37Z", "files": ["IPython/core/shellapp.py", "IPython/kernel/zmq/kernelapp.py", "IPython/kernel/zmq/tests/test_start_kernel.py", "IPython/terminal/ipapp.py"]}], "labels": ["important", "bug"], "created_at": "2013-08-13T06:38:03Z", "closed_at": "2013-08-15T04:20:38Z", "method": ["label", "regex"]}
{"issue_number": 3990, "title": "Buitlin `input` doesn't work over zmq", "body": "Typing into any client with a remote kernel:\n\n``` python\ninput('a')\n```\n\nproduces\n\n``` python\n---------------------------------------------------------------------------\nEOFError                                  Traceback (most recent call last)\n<ipython-input-3-138401a29eba> in <module>()\n----> 1 input('a')\n\nEOFError: EOF when reading a line\n\na\n```\n\nThis should be a simple matter of handling `input` calls just like we do `raw_input`, since in the end they are both doing the same `stdin.read()`.\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU5NDQ2OmEyNTUxZGRjZTY4YzMyMDk1OGU4NzVmN2RmZmI1ZGI5OGI1YjgzYTA=", "commit_message": "support `input` in Python 2 kernels\n\ninput is just `eval(raw_input(\u2026))`\n\ncloses #3990", "commit_timestamp": "2013-08-27T23:01:25Z", "files": ["IPython/kernel/zmq/ipkernel.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmJlMTNlNjg2MmI5OTNlZWE0OGEwZWFiMDU2YzA3YWE1MzEyMzQzZWM=", "commit_message": "Backport PR #4120: support `input` in Python 2 kernels\n\ninput is just `eval(raw_input(\u2026))`\n\ncloses #3990", "commit_timestamp": "2013-08-29T21:47:34Z", "files": ["IPython/kernel/tests/test_kernel.py", "IPython/kernel/zmq/ipkernel.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzpjNTQ5NjdjMWY4NmJkOTkwOGQ2MzM3MDNjNGI1YzRhNjJhMWUzYjQ5", "commit_message": "support `input` in Python 2 kernels\n\ninput is just `eval(raw_input(\u2026))`\n\ncloses #3990", "commit_timestamp": "2013-08-27T23:01:25Z", "files": ["IPython/kernel/zmq/ipkernel.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmY4N2Y5ODNhZDg4Y2QwN2U4YjIxYjM5YWRhOTYzNWUxNGVhMWM4ZmU=", "commit_message": "Merge pull request #4120 from minrk/input-py2\n\nsupport `input` in Python 2 kernels", "commit_timestamp": "2013-08-29T21:33:32Z", "files": ["IPython/kernel/tests/test_kernel.py", "IPython/kernel/zmq/ipkernel.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmY4N2Y5ODNhZDg4Y2QwN2U4YjIxYjM5YWRhOTYzNWUxNGVhMWM4ZmU=", "commit_message": "Merge pull request #4120 from minrk/input-py2\n\nsupport `input` in Python 2 kernels", "commit_timestamp": "2013-08-29T21:33:32Z", "files": ["IPython/kernel/tests/test_kernel.py", "IPython/kernel/zmq/ipkernel.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmJlMTNlNjg2MmI5OTNlZWE0OGEwZWFiMDU2YzA3YWE1MzEyMzQzZWM=", "commit_message": "Backport PR #4120: support `input` in Python 2 kernels\n\ninput is just `eval(raw_input(\u2026))`\n\ncloses #3990", "commit_timestamp": "2013-08-29T21:47:34Z", "files": ["IPython/kernel/tests/test_kernel.py", "IPython/kernel/zmq/ipkernel.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo5Mzg2MjM0N2VmMTQ0OWMzNzg4MzZjNmRkZjQyMjU0NmMxNTdhMzkx", "commit_message": "Merge pull request #4120 from minrk/input-py2\n\nsupport `input` in Python 2 kernels", "commit_timestamp": "2013-08-29T21:33:32Z", "files": ["IPython/kernel/tests/test_kernel.py", "IPython/kernel/zmq/ipkernel.py"]}], "labels": ["kernel"], "created_at": "2013-08-11T07:15:56Z", "closed_at": "2013-08-29T21:33:32Z", "linked_pr_number": [3990], "method": ["regex"]}
{"issue_number": 3977, "title": "unable to complete remote connections for two-process ", "body": "steps to reproduce:\n\n```\nipython console --ip=0\n```\n\nand then, try to connect to it from another window:\n\n```\nipython console --exiting\n```\n\nand it will stall. If you don't specify --ip, everything works, because the local code goes through a slightly different code path. Just opening this now so @minrk has a thing to reference as he submits the fix\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU5NDQ2OjhiNmE4NzdmMjA4Mjc2YzA5YWJlMzJkOGE0OTEwMmNiNWIyMDY0NzY=", "commit_message": "test some connection file utilities\n\nincludes regression test for #3977 and some basic coverage for a few utilities.", "commit_timestamp": "2013-08-10T05:26:23Z", "files": ["IPython/kernel/tests/test_connect.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjFiZDZkNGMxYzk4ZWZkMDUwMGVjYmE5ZGYyZmFhNGYzOTEwNDQ2NzM=", "commit_message": "Merge pull request #3978 from minrk/existing_ip\n\nfix `--existing` with non-localhost IP\r\n\r\ncloses #3977", "commit_timestamp": "2013-08-10T17:01:36Z", "files": ["IPython/consoleapp.py", "IPython/kernel/client.py", "IPython/kernel/tests/test_connect.py", "IPython/qt/console/qtconsoleapp.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4Ojg5NzgyODA3MWFjN2ZlZDc1ZjZiMGYxMzY2NWEyMmVmNzNmNzU3MWY=", "commit_message": "Backport PR #3978: fix `--existing` with non-localhost IP\n\nthere's still some cleanup to do with duplicate code in ConsoleApp that should be invoked from ConnectionFileMixin, but this fixes the bug.\n\ncloses #3977", "commit_timestamp": "2013-08-10T17:03:10Z", "files": ["IPython/consoleapp.py", "IPython/kernel/client.py", "IPython/qt/console/qtconsoleapp.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzplNzk0ODFlNDY5YzJmNDIyNmEwM2I4ZDc5NzhlOGE1ZDFiNDRmNDE3", "commit_message": "test some connection file utilities\n\nincludes regression test for #3977 and some basic coverage for a few utilities.", "commit_timestamp": "2013-08-10T05:26:23Z", "files": ["IPython/kernel/tests/test_connect.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzozNTQ4MjNiMjEwYWE2ZjUyYWIxMWYxNmVlYWJjMjczYzZiMTlmNjVl", "commit_message": "Merge pull request #3978 from minrk/existing_ip\n\nfix `--existing` with non-localhost IP\r\n\r\ncloses #3977", "commit_timestamp": "2013-08-10T17:01:36Z", "files": ["IPython/consoleapp.py", "IPython/kernel/client.py", "IPython/kernel/tests/test_connect.py", "IPython/qt/console/qtconsoleapp.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjFiZDZkNGMxYzk4ZWZkMDUwMGVjYmE5ZGYyZmFhNGYzOTEwNDQ2NzM=", "commit_message": "Merge pull request #3978 from minrk/existing_ip\n\nfix `--existing` with non-localhost IP\r\n\r\ncloses #3977", "commit_timestamp": "2013-08-10T17:01:36Z", "files": ["IPython/consoleapp.py", "IPython/kernel/client.py", "IPython/kernel/tests/test_connect.py", "IPython/qt/console/qtconsoleapp.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjFiZDZkNGMxYzk4ZWZkMDUwMGVjYmE5ZGYyZmFhNGYzOTEwNDQ2NzM=", "commit_message": "Merge pull request #3978 from minrk/existing_ip\n\nfix `--existing` with non-localhost IP\r\n\r\ncloses #3977", "commit_timestamp": "2013-08-10T17:01:36Z", "files": ["IPython/consoleapp.py", "IPython/kernel/client.py", "IPython/kernel/tests/test_connect.py", "IPython/qt/console/qtconsoleapp.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4Ojg5NzgyODA3MWFjN2ZlZDc1ZjZiMGYxMzY2NWEyMmVmNzNmNzU3MWY=", "commit_message": "Backport PR #3978: fix `--existing` with non-localhost IP\n\nthere's still some cleanup to do with duplicate code in ConsoleApp that should be invoked from ConnectionFileMixin, but this fixes the bug.\n\ncloses #3977", "commit_timestamp": "2013-08-10T17:03:10Z", "files": ["IPython/consoleapp.py", "IPython/kernel/client.py", "IPython/qt/console/qtconsoleapp.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzozNTQ4MjNiMjEwYWE2ZjUyYWIxMWYxNmVlYWJjMjczYzZiMTlmNjVl", "commit_message": "Merge pull request #3978 from minrk/existing_ip\n\nfix `--existing` with non-localhost IP\r\n\r\ncloses #3977", "commit_timestamp": "2013-08-10T17:01:36Z", "files": ["IPython/consoleapp.py", "IPython/kernel/client.py", "IPython/kernel/tests/test_connect.py", "IPython/qt/console/qtconsoleapp.py"]}], "labels": [], "created_at": "2013-08-09T22:07:07Z", "closed_at": "2013-08-10T17:01:36Z", "linked_pr_number": [3977], "method": ["regex"]}
{"issue_number": 3968, "title": "TypeError: super() argument 1 must be type, not classobj (Python 2.6.6)", "body": "When starting the ipython notebook I get the following error\n\n```\nTraceback (most recent call last):\n  File \"/usr/lib64/python2.6/logging/__init__.py\", line 776, in emit\n    msg = self.format(record)\n  File \"/usr/lib64/python2.6/logging/__init__.py\", line 654, in format\n    return fmt.format(record)\n  File \"/usr2/gager/usr/lib/python2.6/site-packages/ipython-1.0.0-py2.6.egg/IPython/config/application.py\", line 119, in format\n    return super(LevelFormatter, self).format(record)\nTypeError: super() argument 1 must be type, not classobj\nTraceback (most recent call last):\n  File \"/usr/lib64/python2.6/logging/__init__.py\", line 776, in emit\n    msg = self.format(record)\n  File \"/usr/lib64/python2.6/logging/__init__.py\", line 654, in format\n    return fmt.format(record)\n  File \"/usr2/gager/usr/lib/python2.6/site-packages/ipython-1.0.0-py2.6.egg/IPython/config/application.py\", line 119, in format\n    return super(LevelFormatter, self).format(record)\nTypeError: super() argument 1 must be type, not classobj\nTraceback (most recent call last):\n  File \"/usr/lib64/python2.6/logging/__init__.py\", line 776, in emit\n    msg = self.format(record)\n  File \"/usr/lib64/python2.6/logging/__init__.py\", line 654, in format\n    return fmt.format(record)\n  File \"/usr2/gager/usr/lib/python2.6/site-packages/ipython-1.0.0-py2.6.egg/IPython/config/application.py\", line 119, in format\n    return super(LevelFormatter, self).format(record)\nTypeError: super() argument 1 must be type, not classobj\nTraceback (most recent call last):\n  File \"/usr/lib64/python2.6/logging/__init__.py\", line 776, in emit\n    msg = self.format(record)\n  File \"/usr/lib64/python2.6/logging/__init__.py\", line 654, in format\n    return fmt.format(record)\n  File \"/usr2/gager/usr/lib/python2.6/site-packages/ipython-1.0.0-py2.6.egg/IPython/config/application.py\", line 119, in format\n    return super(LevelFormatter, self).format(record)\nTypeError: super() argument 1 must be type, not classobj\nTraceback (most recent call last):\n  File \"/usr/lib64/python2.6/logging/__init__.py\", line 776, in emit\n    msg = self.format(record)\n  File \"/usr/lib64/python2.6/logging/__init__.py\", line 654, in format\n    return fmt.format(record)\n  File \"/usr2/gager/usr/lib/python2.6/site-packages/ipython-1.0.0-py2.6.egg/IPython/config/application.py\", line 119, in format\n    return super(LevelFormatter, self).format(record)\nTypeError: super() argument 1 must be type, not classobj\n```\n\nstrangely enough the notebook works and can be used, however nbconvert does not produce any output and cannot be used. The IPython terminal does not invoke this error.\n\nLooks like it is related to LevelFormatter.\n\nSystem info:\n{'codename': 'An Afternoon Hack',\n 'commit_hash': '02da31c',\n 'commit_source': 'installation',\n 'default_encoding': 'UTF-8',\n 'ipython_path': '/usr2/gager/usr/lib/python2.6/site-packages/ipython-1.0.0-py2.6.egg/IPython',\n 'ipython_version': '1.0.0',\n 'os_name': 'posix',\n 'platform': 'Linux-2.6.32-358.2.1.el6.x86_64-x86_64-with-redhat-6.4-Carbon',\n 'sys_executable': '/usr/bin/python',\n 'sys_platform': 'linux2',\n 'sys_version': '2.6.6 (r266:84292, Feb 21 2013, 19:26:11) \\n[GCC 4.4.7 20120313 (Red Hat 4.4.7-3)]'}\n\nUpdate: \nI forgot to mention that using a VM (Ubuntu 12.04) and Python 2.7.3 this error does not appear!\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU5NDQ2OmNkMDJhNGVjZmRhYWE0NzRkZDljNzIyYTc5ZTEzYzAyOTVjOTc0NWU=", "commit_message": "logging.Formatter is not new-style in 2.6\n\nso we can't use super.\n\ncloses #3968", "commit_timestamp": "2013-08-09T16:37:57Z", "files": ["IPython/config/application.py"]}, {"node_id": "MDY6Q29tbWl0NjU5NDQ2OmRiNmM0MWIxOGRiN2E5YTk3OGYyNmE5NGIxMmY4NmQ1NzdkZjQzMmM=", "commit_message": "logging.Formatter is not new-style in 2.6\n\nso we can't use super.\n\ncloses #3968", "commit_timestamp": "2013-08-09T18:06:03Z", "files": ["IPython/config/application.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmY5MDQ2Yzg5MGJkZGU2NjY1N2Y2MDc0OTI4MDQ0OTI1ZDIxZWE3Yzg=", "commit_message": "Backport PR #3973: logging.Formatter is not new-style in 2.6\n\nso we can't use super.\n\ncloses #3968", "commit_timestamp": "2013-08-09T19:49:33Z", "files": ["IPython/config/application.py", "IPython/config/tests/test_application.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzowYTNmMjAzYjMxNDM4OTljNGNiY2UwMDkwYmE2ZDg2ZGY5ODU3OWFm", "commit_message": "logging.Formatter is not new-style in 2.6\n\nso we can't use super.\n\ncloses #3968", "commit_timestamp": "2013-08-09T16:37:57Z", "files": ["IPython/config/application.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmI1ZWRhZmU0NDM5ZTg4OWE0YTAzYTA1MzdlMDQ1ZjlkNWFiZjU2YmM=", "commit_message": "Merge pull request #3973 from minrk/26nosuper\n\nlogging.Formatter is not new-style in 2.6\r\n\r\nadd workaround and regression test", "commit_timestamp": "2013-08-09T19:48:47Z", "files": ["IPython/config/application.py", "IPython/config/tests/test_application.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmI1ZWRhZmU0NDM5ZTg4OWE0YTAzYTA1MzdlMDQ1ZjlkNWFiZjU2YmM=", "commit_message": "Merge pull request #3973 from minrk/26nosuper\n\nlogging.Formatter is not new-style in 2.6\r\n\r\nadd workaround and regression test", "commit_timestamp": "2013-08-09T19:48:47Z", "files": ["IPython/config/application.py", "IPython/config/tests/test_application.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmY5MDQ2Yzg5MGJkZGU2NjY1N2Y2MDc0OTI4MDQ0OTI1ZDIxZWE3Yzg=", "commit_message": "Backport PR #3973: logging.Formatter is not new-style in 2.6\n\nso we can't use super.\n\ncloses #3968", "commit_timestamp": "2013-08-09T19:49:33Z", "files": ["IPython/config/application.py", "IPython/config/tests/test_application.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo1ZmM2MjBiN2Q0YTllN2Q4OTY3ZGYwZGU0ODZkMTRlOTcyYmY1YWYy", "commit_message": "Merge pull request #3973 from minrk/26nosuper\n\nlogging.Formatter is not new-style in 2.6\r\n\r\nadd workaround and regression test", "commit_timestamp": "2013-08-09T19:48:47Z", "files": ["IPython/config/application.py", "IPython/config/tests/test_application.py"]}], "labels": ["bug"], "created_at": "2013-08-09T09:54:17Z", "closed_at": "2013-08-09T19:48:47Z", "linked_pr_number": [3968], "method": ["label"]}
{"issue_number": 3897, "title": "under Windows, \"ipython3 nbconvert \"C:/blabla/first_try.ipynb\" --to latex --post PDF\" POST processing action fails because of a bad parameter", "body": "Hello,\n\nThe \"one single step\" option to create a \".pdf\" from a .ipynb\" fails on my windows python3 pc \n\nNbconvert  apparently  tries compile \".TEX\"  result with \n\n\"pdflatex .\\first_try.tex\" \n\n==> It generates a bad behaviour of pdflatex, which picks \"pdfTex\" option instead of \"PdfLatex\".\n\nThe working option, on my Windows PC  and when I do it by hand, is not to put the \".\\\" \n\n\"pdflatex first_try.tex\" \n\nUPDATE : replacing \".\\\" per \"./\" seems also to be a solution.\n\"pdflatex ./first_try.tex\" \n\nHint to  the problem comes from here \nhttp://tex.stackexchange.com/questions/78178/miktex-how-to-run-pdflatex-from-cmd-prompt-on-windows-7-compared-to-windows-xp \n\nDetails below.\n\nSheers\n\n*\\* instruction *\\* \nipython3 nbconvert \"C:/blabla/first_try.ipynb\" --to latex --post PDF\"\n\n**\\* (start of the output ) ***\nC:\\Users\\parent\\Desktop\\winpython\\WinPython-32bit-3.3.2.1rc1\\python-3.3.2>ipytho\nn3 nbconvert \"C:/blabla//first_try.ipynb\" --to latex --po\nst PDF\n[NbConvertApp] Using existing profile dir: 'C:\\Users\\parent\\Desktop\\winpytho\nn\\WinPython-32bit-3.3.2.1rc1\\settings\\.ipython\\profile_default'\n[NbConvertApp] Converting notebook C:/blabla/first_try.ipynb to latex\n[NbConvertApp] Support files will be in first_try_files\\\n[NbConvertApp] Loaded template latex_article.tplx\n[NbConvertApp] Writing 53680 bytes to .\\first_try.tex\n[NbConvertApp] Building PDF: `pdflatex .\\first_try.tex`\nThis is pdfTeX, Version 3.1415926-2.4-1.40.13 (TeX Live 2012/W32TeX)\n restricted \\write18 enabled.\nentering extended mode\n! Undefined control sequence.\n<_> .\\first\n           _try.tex\n?\n*_\\* (end of the output ) ***\n", "commits": [{"node_id": "MDY6Q29tbWl0NzUzNzY4OjFiM2FjZGUyN2M0ZDI1OTUxY2ZkZmZmODM3MTQxZjhmOGUzYjY3OWU=", "commit_message": "don't force . relative path, fix #3897\n\nAs per #3897, .\\filename is not recognized by pdflatex.", "commit_timestamp": "2013-08-05T00:35:46Z", "files": ["IPython/nbconvert/writers/files.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjFiM2FjZGUyN2M0ZDI1OTUxY2ZkZmZmODM3MTQxZjhmOGUzYjY3OWU=", "commit_message": "don't force . relative path, fix #3897\n\nAs per #3897, .\\filename is not recognized by pdflatex.", "commit_timestamp": "2013-08-05T00:35:46Z", "files": ["IPython/nbconvert/writers/files.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmE4ODM4Mjg1YWQ0NDQzMWE3ZDZlZTI2ODZhZTZiM2Q4N2NiMzBkNDU=", "commit_message": "Merge pull request #3901 from ivanov/fix-3897\n\ndon't force . relative path, fix #3897", "commit_timestamp": "2013-08-05T16:54:58Z", "files": ["IPython/nbconvert/writers/files.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo5M2E3YzYwNzJiNzllZTA0Nzk2NGNjNzI3MDdjMTNjMTg5NzFiMWQy", "commit_message": "don't force . relative path, fix #3897\n\nAs per #3897, .\\filename is not recognized by pdflatex.", "commit_timestamp": "2013-08-05T00:35:46Z", "files": ["IPython/nbconvert/writers/files.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo3NjlkYjk2NTVmNDAwZTdhOGQyYWFjMThjNGE1N2VhN2M4ZGUzOTU2", "commit_message": "Merge pull request #3901 from ivanov/fix-3897\n\ndon't force . relative path, fix #3897", "commit_timestamp": "2013-08-05T16:54:58Z", "files": ["IPython/nbconvert/writers/files.py"]}], "labels": [], "created_at": "2013-08-04T18:33:03Z", "closed_at": "2013-08-05T16:54:59Z", "method": ["regex"]}
{"issue_number": 3889, "title": "test_qt fails due to assertion error 'qt4' != 'qt'", "body": "I used MacPorts to setup my IPython environment, so I used the command port install qt4-mac to install qt.\n\n``` no-highlight\niptest.py IPython.core\n..................................................................................................................................................................................................S.........S...............................................................................................................................................F...................................\n======================================================================\nFAIL: IPython.core.tests.test_pylabtools.TestPylabSwitch.test_qt\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/opt/local/Library/Frameworks/Python.framework/Versions/3.3/lib/python3.3/site-packages/nose/case.py\", line 198, in runTest\n    self.test(*self.arg)\n  File \"/opt/local/Library/Frameworks/Python.framework/Versions/3.3/lib/python3.3/site-packages/IPython/core/tests/test_pylabtools.py\", line 98, in test_qt\n    nt.assert_equal(gui, 'qt')\nnose.proxy.AssertionError: 'qt4' != 'qt'\n- qt4\n?   -\n+ qt\n\n    \"\"\"Fail immediately, with the given message.\"\"\"\n>>  raise self.failureException(\"'qt4' != 'qt'\\n- qt4\\n?   -\\n+ qt\\n\")\n\n\n----------------------------------------------------------------------\nRan 384 tests in 16.873s\n\nFAILED (SKIP=2, failures=1)\n```\n\n``` no-highlight\n**********************************************************************\nTest suite completed for system with the following information:\n{'codename': 'An Afternoon Hack',\n 'commit_hash': 'ad1b59c',\n 'commit_source': 'installation',\n 'default_encoding': 'UTF-8',\n 'ipython_path': '/opt/local/Library/Frameworks/Python.framework/Versions/3.3/lib/python3.3/site-packages/IPython',\n 'ipython_version': '1.0.0-rc1',\n 'os_name': 'posix',\n 'platform': 'Darwin-11.4.2-x86_64-i386-64bit',\n 'sys_executable': '/opt/local/bin/python',\n 'sys_platform': 'darwin',\n 'sys_version': '3.3.2 (default, May 21 2013, 11:50:39) \\n[GCC 4.2.1 Compatible Apple Clang 4.1 ((tags/Apple/clang-421.11.66))]'}\n\nTools and libraries available at test time:\n   curses jinja2 matplotlib numpy pexpect pygments qt sphinx sqlite3 tornado zmq\n\nTools and libraries NOT available at test time:\n   azure cython oct2py pymongo rpy2 wx wx.aui\n\nRan 14 test groups in 137.774s\n\nStatus:\nERROR - 1 out of 14 test groups failed.\n```\n", "commits": [{"node_id": "MDY6Q29tbWl0NzUzNzY4OmI5MDM5ZWNiNGM3NDc2NjAzMTM3MjJmNzEwZjgxNDBlNTQwMzkwYzg=", "commit_message": "fix #3889", "commit_timestamp": "2013-08-04T00:16:10Z", "files": ["IPython/core/pylabtools.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmMyY2FiZDA5OWU2MzM0YzdiNDUyYTYzYWJmNzA2MTgzODg3NGQyOWI=", "commit_message": "Merge pull request #3891 from ivanov/fix-3889\n\nfix #3889", "commit_timestamp": "2013-08-04T14:22:20Z", "files": ["IPython/core/pylabtools.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo1MDgyY2NlYWUwZjdkNTFjMmUzOGE2NzYwZmM3ZWI2NzU5YTdhNmZj", "commit_message": "fix #3889", "commit_timestamp": "2013-08-04T00:16:10Z", "files": ["IPython/core/pylabtools.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo3NDU4NjZjZjZiYzM5Njg0Y2UzM2ZlYjdiZGJjMjMwNmM1NzFlODk4", "commit_message": "Merge pull request #3891 from ivanov/fix-3889\n\nfix #3889", "commit_timestamp": "2013-08-04T14:22:20Z", "files": ["IPython/core/pylabtools.py"]}], "labels": [], "created_at": "2013-08-03T22:57:25Z", "closed_at": "2013-08-04T01:02:19Z", "method": ["regex"]}
{"issue_number": 3881, "title": "Temporary Working Directory Test Fails", "body": "Just ran iptest and a failure occurred in the IPython.utils test suite.\n\n```\nFAIL: IPython.utils.tests.test_tempdir.test_temporary_working_directory\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/Users/kyle/.virtualenvs/rc1/lib/python2.7/site-packages/nose/case.py\", line 197, in runTest\n    self.test(*self.arg)\n  File \"/Users/kyle/.virtualenvs/rc1/lib/python2.7/site-packages/IPython/utils/tests/test_tempdir.py\", line 26, in test_temporary_working_directory\n    assert os.path.abspath(os.curdir) == dir\nAssertionError:\n    assert <module 'os' from '/Users/kyle/.virtualenvs/rc1/lib/python2.7/os.pyc'>.path.exists('/var/folders/ps/1dvr90bd6p3blnyrnpyxnryhv45qg1/T/tmp3a9THt')\n>>  assert <module 'os' from '/Users/kyle/.virtualenvs/rc1/lib/python2.7/os.pyc'>.path.abspath(<module 'os' from '/Users/kyle/.virtualenvs/rc1/lib/python2.7/os.pyc'>.curdir) == '/var/folders/ps/1dvr90bd6p3blnyrnpyxnryhv45qg1/T/tmp3a9THt'\n```\n\nSystem information:\n\nTest suite completed for system with the following information:\n{'codename': 'An Afternoon Hack',\n 'commit_hash': 'ad1b59c',\n 'commit_source': 'installation',\n 'default_encoding': 'UTF-8',\n 'ipython_path': '/Users/kyle/.virtualenvs/rc1/lib/python2.7/site-packages/IPython',\n 'ipython_version': '1.0.0-rc1',\n 'os_name': 'posix',\n 'platform': 'Darwin-12.4.0-x86_64-i386-64bit',\n 'sys_executable': '/Users/kyle/.virtualenvs/rc1/bin/python',\n 'sys_platform': 'darwin',\n 'sys_version': '2.7.5 (default, Aug  1 2013, 12:53:40) \\n[GCC 4.2.1 Compatible Apple LLVM 4.2 (clang-425.0.24)]'}\n\nTools and libraries available at test time:\n   curses jinja2 pexpect sqlite3 tornado zmq\n\nTools and libraries NOT available at test time:\n   azure cython matplotlib numpy oct2py pygments pymongo qt rpy2 sphinx wx wx.aui\n", "commits": [{"node_id": "MDY6Q29tbWl0NzUzNzY4OjI0MTZlMGVlOWI2ZTk2ODQxYmYzMDFhYmIxMmIyNjNmNDM1NDI4ZTM=", "commit_message": "quick fix for #3881", "commit_timestamp": "2013-08-03T04:25:42Z", "files": ["IPython/utils/tests/test_tempdir.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzowNzA0ZGQ0MTdkMTQzMzg4MDJiOTVhNmIyYjJkYzRkNGU5YTU0ZDBl", "commit_message": "quick fix for #3881", "commit_timestamp": "2013-08-03T04:25:42Z", "files": ["IPython/utils/tests/test_tempdir.py"]}], "labels": ["bug", "testing"], "created_at": "2013-08-03T02:30:43Z", "closed_at": "2013-08-04T14:26:29Z", "method": ["label", "regex"]}
{"issue_number": 3837, "title": "Cannot set custom mathjax url, crash notebook server.", "body": "Basically the mathjax path traits is trying to be set before soem other traits that need to be initialised first...\n\n```\n$ ipython notebook --NotebookApp.mathjax_url='foo'\nTraceback (most recent call last):\n  File \"/usr/local/share/python/ipython\", line 9, in <module>\n    load_entry_point('ipython==1.0.dev', 'console_scripts', 'ipython')()\n  File \"/Users/bussonniermatthias/ipython/IPython/__init__.py\", line 118, in start_ipython\n    return launch_new_instance(argv=argv, **kwargs)\n  File \"/Users/bussonniermatthias/ipython/IPython/config/application.py\", line 538, in launch_instance\n    app.initialize(argv)\n  File \"<string>\", line 2, in initialize\n  File \"/Users/bussonniermatthias/ipython/IPython/config/application.py\", line 89, in catch_config_error\n    return method(app, *args, **kwargs)\n  File \"/Users/bussonniermatthias/ipython/IPython/terminal/ipapp.py\", line 316, in initialize\n    super(TerminalIPythonApp, self).initialize(argv)\n  File \"<string>\", line 2, in initialize\n  File \"/Users/bussonniermatthias/ipython/IPython/config/application.py\", line 89, in catch_config_error\n    return method(app, *args, **kwargs)\n  File \"/Users/bussonniermatthias/ipython/IPython/core/application.py\", line 347, in initialize\n    self.parse_command_line(argv)\n  File \"/Users/bussonniermatthias/ipython/IPython/terminal/ipapp.py\", line 311, in parse_command_line\n    return super(TerminalIPythonApp, self).parse_command_line(argv)\n  File \"<string>\", line 2, in parse_command_line\n  File \"/Users/bussonniermatthias/ipython/IPython/config/application.py\", line 89, in catch_config_error\n    return method(app, *args, **kwargs)\n  File \"/Users/bussonniermatthias/ipython/IPython/config/application.py\", line 468, in parse_command_line\n    return self.initialize_subcommand(subc, subargv)\n  File \"<string>\", line 2, in initialize_subcommand\n  File \"/Users/bussonniermatthias/ipython/IPython/config/application.py\", line 89, in catch_config_error\n    return method(app, *args, **kwargs)\n  File \"/Users/bussonniermatthias/ipython/IPython/config/application.py\", line 407, in initialize_subcommand\n    self.subapp.initialize(argv)\n  File \"<string>\", line 2, in initialize\n  File \"/Users/bussonniermatthias/ipython/IPython/config/application.py\", line 89, in catch_config_error\n    return method(app, *args, **kwargs)\n  File \"/Users/bussonniermatthias/ipython/IPython/html/notebookapp.py\", line 661, in initialize\n    super(NotebookApp, self).initialize(argv)\n  File \"<string>\", line 2, in initialize\n  File \"/Users/bussonniermatthias/ipython/IPython/config/application.py\", line 89, in catch_config_error\n    return method(app, *args, **kwargs)\n  File \"/Users/bussonniermatthias/ipython/IPython/core/application.py\", line 347, in initialize\n    self.parse_command_line(argv)\n  File \"/Users/bussonniermatthias/ipython/IPython/html/notebookapp.py\", line 478, in parse_command_line\n    super(NotebookApp, self).parse_command_line(argv)\n  File \"<string>\", line 2, in parse_command_line\n  File \"/Users/bussonniermatthias/ipython/IPython/config/application.py\", line 89, in catch_config_error\n    return method(app, *args, **kwargs)\n  File \"/Users/bussonniermatthias/ipython/IPython/config/application.py\", line 493, in parse_command_line\n    self.update_config(config)\n  File \"/Users/bussonniermatthias/ipython/IPython/config/application.py\", line 392, in update_config\n    self.config = newconfig\n  File \"/Users/bussonniermatthias/ipython/IPython/utils/traitlets.py\", line 319, in __set__\n    obj._notify_trait(self.name, old_value, new_value)\n  File \"/Users/bussonniermatthias/ipython/IPython/utils/traitlets.py\", line 470, in _notify_trait\n    c(name, old_value, new_value)\n  File \"/Users/bussonniermatthias/ipython/IPython/config/application.py\", line 241, in _config_changed\n    SingletonConfigurable._config_changed(self, name, old, new)\n  File \"/Users/bussonniermatthias/ipython/IPython/config/configurable.py\", line 171, in _config_changed\n    self._load_config(new, traits=traits, section_names=section_names)\n  File \"/Users/bussonniermatthias/ipython/IPython/config/configurable.py\", line 155, in _load_config\n    setattr(self, name, deepcopy(config_value))\n  File \"/Users/bussonniermatthias/ipython/IPython/utils/traitlets.py\", line 316, in __set__\n    old_value = self.__get__(obj)\n  File \"/Users/bussonniermatthias/ipython/IPython/utils/traitlets.py\", line 297, in __get__\n    value = obj._trait_dyn_inits[self.name](obj)\n  File \"/Users/bussonniermatthias/ipython/IPython/html/notebookapp.py\", line 446, in _mathjax_url_default\n    mathjax = filefind(os.path.join('mathjax', 'MathJax.js'), self.static_file_path)\n  File \"/Users/bussonniermatthias/ipython/IPython/html/notebookapp.py\", line 434, in static_file_path\n    return self.extra_static_paths + [DEFAULT_STATIC_FILES_PATH]\n  File \"/Users/bussonniermatthias/ipython/IPython/utils/traitlets.py\", line 297, in __get__\n    value = obj._trait_dyn_inits[self.name](obj)\n  File \"/Users/bussonniermatthias/ipython/IPython/html/notebookapp.py\", line 429, in _extra_static_paths_default\n    return [os.path.join(self.profile_dir.location, 'static')]\n```\n", "commits": [{"node_id": "MDY6Q29tbWl0MjM0NDA3Mzo5MWQ2Njc0ZDNiZjUyMWViMTg3N2Y3NmY0YTAyMmM1MzMxMTM5MGMw", "commit_message": "Fix set custom mathjax url in config/commandline\n\nfixes #3837", "commit_timestamp": "2013-07-30T09:22:48Z", "files": ["IPython/html/notebookapp.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmYwNjcwNTJiZWZjYzQ1ZGU3YzM2NjAzNzA4MTRkZmNmNTM4Y2Y0NTc=", "commit_message": "Merge pull request #3840 from minrk/never-no-profile\n\nprevent profile_dir from being undefined\r\n\r\ncan happen when other traits are configured that depend on profile_dir, e.g. NotebookApp.extra_static_paths.\r\n\r\nThis ensures that init_profile_dir fires prior to any reference to the profile directory.\r\n\r\ncloses #3837", "commit_timestamp": "2013-07-31T20:38:41Z", "files": ["IPython/core/application.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzplOGFkYTY3OGFmMDAwYzk2ODVhNzJkN2ZjZjhmYjJiZjgzZDg1MmYz", "commit_message": "Merge pull request #3840 from minrk/never-no-profile\n\nprevent profile_dir from being undefined\r\n\r\ncan happen when other traits are configured that depend on profile_dir, e.g. NotebookApp.extra_static_paths.\r\n\r\nThis ensures that init_profile_dir fires prior to any reference to the profile directory.\r\n\r\ncloses #3837", "commit_timestamp": "2013-07-31T20:38:41Z", "files": ["IPython/core/application.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmYwNjcwNTJiZWZjYzQ1ZGU3YzM2NjAzNzA4MTRkZmNmNTM4Y2Y0NTc=", "commit_message": "Merge pull request #3840 from minrk/never-no-profile\n\nprevent profile_dir from being undefined\r\n\r\ncan happen when other traits are configured that depend on profile_dir, e.g. NotebookApp.extra_static_paths.\r\n\r\nThis ensures that init_profile_dir fires prior to any reference to the profile directory.\r\n\r\ncloses #3837", "commit_timestamp": "2013-07-31T20:38:41Z", "files": ["IPython/core/application.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmYwNjcwNTJiZWZjYzQ1ZGU3YzM2NjAzNzA4MTRkZmNmNTM4Y2Y0NTc=", "commit_message": "Merge pull request #3840 from minrk/never-no-profile\n\nprevent profile_dir from being undefined\r\n\r\ncan happen when other traits are configured that depend on profile_dir, e.g. NotebookApp.extra_static_paths.\r\n\r\nThis ensures that init_profile_dir fires prior to any reference to the profile directory.\r\n\r\ncloses #3837", "commit_timestamp": "2013-07-31T20:38:41Z", "files": ["IPython/core/application.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzplOGFkYTY3OGFmMDAwYzk2ODVhNzJkN2ZjZjhmYjJiZjgzZDg1MmYz", "commit_message": "Merge pull request #3840 from minrk/never-no-profile\n\nprevent profile_dir from being undefined\r\n\r\ncan happen when other traits are configured that depend on profile_dir, e.g. NotebookApp.extra_static_paths.\r\n\r\nThis ensures that init_profile_dir fires prior to any reference to the profile directory.\r\n\r\ncloses #3837", "commit_timestamp": "2013-07-31T20:38:41Z", "files": ["IPython/core/application.py"]}], "labels": ["bug", "notebook"], "created_at": "2013-07-30T08:46:57Z", "closed_at": "2013-07-31T20:38:42Z", "linked_pr_number": [3837], "method": ["label"]}
{"issue_number": 3807, "title": "qtconsole ipython 0.13.2 - html/xhtml export fails", "body": "Hi,\nI'm having problems trying to export qtconsole sessions to html/xhtml on my linux box(Macbook Pro). I'm running python 3.3.2.\nThe html export fails with:\n\n```\n'Traceback (most recent call last):\n  File \"/usr/lib/python3.3/site-packages/IPython/frontend/qt/console/rich_ipython_widget.py\", line 71, in export_html\n    super(RichIPythonWidget, self).export_html()\n  File \"/usr/lib/python3.3/site-packages/IPython/frontend/qt/console/console_widget.py\", line 615, in export_html\n    self._html_exporter.export()\n  File \"/usr/lib/python3.3/site-packages/IPython/frontend/qt/rich_text.py\", line 80, in export\n    if inline is None and IMG_RE.search(html):\nTypeError: can't use a string pattern on a bytes-like object'\n```\n\nThe xhtml export fails with :\n'Type string doesn't support the buffer API'\nAm I doing something wrong?\n\nCheers\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU5NDQ2OjhjZjE0YjdlNzA1NWI2NzVmOWYyNDE1MjIxYzZhNzAyMTNlMzg4ZWY=", "commit_message": "use unicode for HTML export\n\nnot utf8-encoded bytes\n\nshould close #3807", "commit_timestamp": "2013-08-19T14:05:26Z", "files": ["IPython/qt/rich_text.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmMzNzMzOGZmOWQzMmQ1NjA3NzVhMWUyMmJlYjMwZjgyODE1ODI0NDY=", "commit_message": "Backport PR #4054: use unicode for HTML export\n\nnot utf8-encoded bytes\n\nshould close #3807", "commit_timestamp": "2013-08-27T21:33:52Z", "files": ["IPython/qt/console/rich_ipython_widget.py", "IPython/qt/rich_text.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo4MWMwNTdjNDBhZjU5ZjUzYjcwZjBiNWI0YTAyNDZhOGIyOTBjNDVm", "commit_message": "use unicode for HTML export\n\nnot utf8-encoded bytes\n\nshould close #3807", "commit_timestamp": "2013-08-19T14:05:26Z", "files": ["IPython/qt/rich_text.py"]}], "labels": ["unicode", "qtconsole"], "created_at": "2013-07-27T03:43:17Z", "closed_at": "2013-08-27T17:59:38Z", "method": ["regex"]}
{"issue_number": 3786, "title": "Zmq errors appearing with `Ctrl-C` in console/qtconsole", "body": "When using either the qt or terminal consoles (both zmq-based), if we try to interrupt an ipdb session with `Ctrl-C`, a zmq error propagates all the way to the user:\n\n```\nipdb> ---------------------------------------------------------------------------\nKeyboardInterrupt                         Traceback (most recent call last)\n<ipython-input-2-51af4340c641> in <module>()\n----> 1 get_ipython().magic(u'debug ')\n\n/home/fperez/usr/lib/python2.7/site-packages/IPython/core/interactiveshell.pyc in magic(self, arg_s)\n   2158         magic_name, _, magic_arg_s = arg_s.partition(' ')\n   2159         magic_name = magic_name.lstrip(prefilter.ESC_MAGIC)\n-> 2160         return self.run_line_magic(magic_name, magic_arg_s)\n   2161 \n   2162     #-------------------------------------------------------------------------\n\n/home/fperez/usr/lib/python2.7/site-packages/IPython/core/interactiveshell.pyc in run_line_magic(self, magic_name, line)\n   2079                 kwargs['local_ns'] = sys._getframe(stack_depth).f_locals\n   2080             with self.builtin_trap:\n-> 2081                 result = fn(*args,**kwargs)\n   2082             return result\n   2083 \n\n/home/fperez/usr/lib/python2.7/site-packages/IPython/core/magics/execution.pyc in debug(self, line, cell)\n\n/home/fperez/usr/lib/python2.7/site-packages/IPython/core/magic.pyc in <lambda>(f, *a, **k)\n    189     # but it's overkill for just that one bit of state.\n    190     def magic_deco(arg):\n--> 191         call = lambda f, *a, **k: f(*a, **k)\n    192 \n    193         if callable(arg):\n\n/home/fperez/usr/lib/python2.7/site-packages/IPython/core/magics/execution.pyc in debug(self, line, cell)\n    331 \n    332         if not (args.breakpoint or args.statement or cell):\n--> 333             self._debug_post_mortem()\n    334         else:\n    335             code = \"\\n\".join(args.statement)\n\n/home/fperez/usr/lib/python2.7/site-packages/IPython/core/magics/execution.pyc in _debug_post_mortem(self)\n    339 \n    340     def _debug_post_mortem(self):\n--> 341         self.shell.debugger(force=True)\n    342 \n    343     def _debug_exec(self, code, breakpoint):\n\n/home/fperez/usr/lib/python2.7/site-packages/IPython/core/interactiveshell.pyc in debugger(self, force)\n    920 \n    921         with self.readline_no_record:\n--> 922             pm()\n    923 \n    924     #-------------------------------------------------------------------------\n\n/home/fperez/usr/lib/python2.7/site-packages/IPython/core/interactiveshell.pyc in <lambda>()\n    917         else:\n    918             # fallback to our internal debugger\n--> 919             pm = lambda : self.InteractiveTB.debugger(force=True)\n    920 \n    921         with self.readline_no_record:\n\n/home/fperez/usr/lib/python2.7/site-packages/IPython/core/ultratb.pyc in debugger(self, force)\n   1007                     etb = etb.tb_next\n   1008                 self.pdb.botframe = etb.tb_frame\n-> 1009                 self.pdb.interaction(self.tb.tb_frame, self.tb)\n   1010 \n   1011         if hasattr(self,'tb'):\n\n/home/fperez/usr/lib/python2.7/site-packages/IPython/core/debugger.pyc in interaction(self, frame, traceback)\n    264     def interaction(self, frame, traceback):\n    265         self.shell.set_completer_frame(frame)\n--> 266         OldPdb.interaction(self, frame, traceback)\n    267 \n    268     def new_do_up(self, arg):\n\n/usr/lib/python2.7/pdb.pyc in interaction(self, frame, traceback)\n    208         self.setup(frame, traceback)\n    209         self.print_stack_entry(self.stack[self.curindex])\n--> 210         self.cmdloop()\n    211         self.forget()\n    212 \n\n/usr/lib/python2.7/cmd.pyc in cmdloop(self, intro)\n    128                     if self.use_rawinput:\n    129                         try:\n--> 130                             line = raw_input(self.prompt)\n    131                         except EOFError:\n    132                             line = 'EOF'\n\n/home/fperez/usr/lib/python2.7/site-packages/IPython/kernel/zmq/ipkernel.pyc in <lambda>(prompt)\n    352         # raw_input in the user namespace.\n    353         if content.get('allow_stdin', False):\n--> 354             raw_input = lambda prompt='': self._raw_input(prompt, ident, parent)\n    355         else:\n    356             raw_input = lambda prompt='' : self._no_raw_input()\n\n/home/fperez/usr/lib/python2.7/site-packages/IPython/kernel/zmq/ipkernel.pyc in _raw_input(self, prompt, ident, parent)\n    764         while True:\n    765             try:\n--> 766                 ident, reply = self.session.recv(self.stdin_socket, 0)\n    767             except Exception:\n    768                 self.log.warn(\"Invalid Message:\", exc_info=True)\n\n/home/fperez/usr/lib/python2.7/site-packages/IPython/kernel/zmq/session.pyc in recv(self, socket, mode, content, copy)\n    655             socket = socket.socket\n    656         try:\n--> 657             msg_list = socket.recv_multipart(mode, copy=copy)\n    658         except zmq.ZMQError as e:\n    659             if e.errno == zmq.EAGAIN:\n\n/usr/lib/python2.7/dist-packages/zmq/core/pysocket.pyc in recv_multipart(self, flags, copy, track)\n    208 \n    209     \"\"\"\n--> 210     parts = [self.recv(flags, copy=copy, track=track)]\n    211     # have first part already, only loop while more to receive\n    212     while self.getsockopt(zmq.RCVMORE):\n\n/usr/lib/python2.7/dist-packages/zmq/core/socket.so in zmq.core.socket.Socket.recv (zmq/core/socket.c:5643)()\n\n/usr/lib/python2.7/dist-packages/zmq/core/socket.so in zmq.core.socket.Socket.recv (zmq/core/socket.c:5465)()\n\n/usr/lib/python2.7/dist-packages/zmq/core/socket.so in zmq.core.socket._recv_copy (zmq/core/socket.c:1688)()\n\n/usr/lib/python2.7/dist-packages/zmq/core/error.so in zmq.core.error.ZMQError.__init__ (zmq/core/error.c:1059)()\n\nKeyboardInterrupt: \n```\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU5NDQ2OjY5NTIwNmViZTgxMzA3ZjhjZDMwY2VhOWEzNmU4NjQ2MDRkODNmMzA=", "commit_message": "re-raise KeyboardInterrupt in raw_input\n\nshortens traceback when KeyboardInterrupt is caught deep within zmq.\n\ncloses #3786", "commit_timestamp": "2013-07-26T00:26:16Z", "files": ["IPython/kernel/zmq/ipkernel.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjIwMDBlNDE3MTU3NGMwNTdkNWQ4YjU3MWRhY2IwNTJjZGYxNzY1ZDQ=", "commit_message": "Merge pull request #3787 from minrk/raw_input_sigint\n\nre-raise KeyboardInterrupt in raw_input\r\n\r\ncloses #3786", "commit_timestamp": "2013-07-27T00:38:53Z", "files": ["IPython/core/debugger.py", "IPython/kernel/zmq/ipkernel.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzpiMDYwZjYwZGY2Mzk2MzdiZTMxZThkNDE2YjhiNWNkN2UwZGM1NjZm", "commit_message": "re-raise KeyboardInterrupt in raw_input\n\nshortens traceback when KeyboardInterrupt is caught deep within zmq.\n\ncloses #3786", "commit_timestamp": "2013-07-26T00:26:16Z", "files": ["IPython/kernel/zmq/ipkernel.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo1OGJkYmU2NjBhOGFlNWYyZmY0MGZjZjQ2YzVmNTA0NmM5YTEyMzRi", "commit_message": "Merge pull request #3787 from minrk/raw_input_sigint\n\nre-raise KeyboardInterrupt in raw_input\r\n\r\ncloses #3786", "commit_timestamp": "2013-07-27T00:38:53Z", "files": ["IPython/core/debugger.py", "IPython/kernel/zmq/ipkernel.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjIwMDBlNDE3MTU3NGMwNTdkNWQ4YjU3MWRhY2IwNTJjZGYxNzY1ZDQ=", "commit_message": "Merge pull request #3787 from minrk/raw_input_sigint\n\nre-raise KeyboardInterrupt in raw_input\r\n\r\ncloses #3786", "commit_timestamp": "2013-07-27T00:38:53Z", "files": ["IPython/core/debugger.py", "IPython/kernel/zmq/ipkernel.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjIwMDBlNDE3MTU3NGMwNTdkNWQ4YjU3MWRhY2IwNTJjZGYxNzY1ZDQ=", "commit_message": "Merge pull request #3787 from minrk/raw_input_sigint\n\nre-raise KeyboardInterrupt in raw_input\r\n\r\ncloses #3786", "commit_timestamp": "2013-07-27T00:38:53Z", "files": ["IPython/core/debugger.py", "IPython/kernel/zmq/ipkernel.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo1OGJkYmU2NjBhOGFlNWYyZmY0MGZjZjQ2YzVmNTA0NmM5YTEyMzRi", "commit_message": "Merge pull request #3787 from minrk/raw_input_sigint\n\nre-raise KeyboardInterrupt in raw_input\r\n\r\ncloses #3786", "commit_timestamp": "2013-07-27T00:38:53Z", "files": ["IPython/core/debugger.py", "IPython/kernel/zmq/ipkernel.py"]}], "labels": ["qtconsole", "bug", "zmq-console"], "created_at": "2013-07-26T00:05:27Z", "closed_at": "2013-07-27T00:38:53Z", "linked_pr_number": [3786], "method": ["label", "regex"]}
{"issue_number": 3785, "title": "ipdb completely broken in Qt console", "body": "When starting the debugger via `%debug` in the Qt console, no valid command works:\n\n```\nipdb> l\n*** SyntaxError: invalid syntax (<stdin>, line 1)\n```\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU5NDQ2OjMyMzU2ZjUzNjM2ODg5ZTQ4Yjg3MjU3NmViOTE2NTI3M2I1YjgzMjM=", "commit_message": "fix raw_input in qtconsole\n\nadds a flush, whose absence produced mis-measured prompts,\nincluding the prompt in the raw_input reply.\n\ncloses #3785", "commit_timestamp": "2013-07-26T00:59:26Z", "files": ["IPython/qt/console/console_widget.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo0MTFiYzVmMmEyZmJhOWVmYTExMjAxOTBjYWZmMjFlNDc2Yzg0YmRi", "commit_message": "fix raw_input in qtconsole\n\nadds a flush, whose absence produced mis-measured prompts,\nincluding the prompt in the raw_input reply.\n\ncloses #3785", "commit_timestamp": "2013-07-26T00:59:26Z", "files": ["IPython/qt/console/console_widget.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmE1YTUyZTkzYWVkZWFiMDYwZjFiNGNkZGU3OGYzMDg4MmRjNDcwOWI=", "commit_message": "Merge pull request #3789 from minrk/qt-raw-input\n\nfix raw_input in qtconsole", "commit_timestamp": "2013-07-26T17:06:21Z", "files": ["IPython/qt/console/console_widget.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmE1YTUyZTkzYWVkZWFiMDYwZjFiNGNkZGU3OGYzMDg4MmRjNDcwOWI=", "commit_message": "Merge pull request #3789 from minrk/qt-raw-input\n\nfix raw_input in qtconsole", "commit_timestamp": "2013-07-26T17:06:21Z", "files": ["IPython/qt/console/console_widget.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo1M2Y2OTdlNDI3ZWM5ZjhiZjJhYzk0OTI3NjM0NjI1OTdhOGQ5M2Y0", "commit_message": "Merge pull request #3789 from minrk/qt-raw-input\n\nfix raw_input in qtconsole", "commit_timestamp": "2013-07-26T17:06:21Z", "files": ["IPython/qt/console/console_widget.py"]}], "labels": ["important", "qtconsole", "bug"], "created_at": "2013-07-26T00:02:39Z", "closed_at": "2013-07-26T17:06:21Z", "linked_pr_number": [3785], "method": ["label", "regex"]}
{"issue_number": 3774, "title": "Notebooks with spaces in their names breaks nbconvert latex graphics", "body": "If a notebook has spaces in its name (e.g., \"GPS and Wifi.ipynb\") , then the images saved in nbconvert/build also have spaces (e.g., \"GPS and Wifi_9_1.png\").  When converted to latex the name with spaces is included in the latex with \\includegraphics (e.g., \\includegraphics[max size={0.7\\textwidth}{0.9\\textheight}]{GPS and Wifi_9_1.png}).  However \\includegraphics cannot cope with spaces in filenames.  \n\nI can't easily find where the filenames are generated and so can't provide a patch; sorry.\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU4NTE4OjFjZDg1YzM3MjRhNzA1Y2I0MjgzZGNmMjQxNjUzZjFlYWRlNWMxMmI=", "commit_message": "Merge pull request #3913 from ivanov/alt-fix-3774\n\nuse grffile to support spaces in notebook names\r\n\r\ncloses #3774\r\ncloses #3898", "commit_timestamp": "2013-08-06T19:34:16Z", "files": ["IPython/nbconvert/tests/test_nbconvertapp.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzpiYzI1OWJmYWRhNjM4ODJlNmIzMWE0OWUyNDcxMTJlNDk4Y2Q0MDYx", "commit_message": "Merge pull request #3913 from ivanov/alt-fix-3774\n\nuse grffile to support spaces in notebook names\r\n\r\ncloses #3774\r\ncloses #3898", "commit_timestamp": "2013-08-06T19:34:16Z", "files": ["IPython/nbconvert/tests/test_nbconvertapp.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjFjZDg1YzM3MjRhNzA1Y2I0MjgzZGNmMjQxNjUzZjFlYWRlNWMxMmI=", "commit_message": "Merge pull request #3913 from ivanov/alt-fix-3774\n\nuse grffile to support spaces in notebook names\r\n\r\ncloses #3774\r\ncloses #3898", "commit_timestamp": "2013-08-06T19:34:16Z", "files": ["IPython/nbconvert/tests/test_nbconvertapp.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjFjZDg1YzM3MjRhNzA1Y2I0MjgzZGNmMjQxNjUzZjFlYWRlNWMxMmI=", "commit_message": "Merge pull request #3913 from ivanov/alt-fix-3774\n\nuse grffile to support spaces in notebook names\r\n\r\ncloses #3774\r\ncloses #3898", "commit_timestamp": "2013-08-06T19:34:16Z", "files": ["IPython/nbconvert/tests/test_nbconvertapp.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzpiYzI1OWJmYWRhNjM4ODJlNmIzMWE0OWUyNDcxMTJlNDk4Y2Q0MDYx", "commit_message": "Merge pull request #3913 from ivanov/alt-fix-3774\n\nuse grffile to support spaces in notebook names\r\n\r\ncloses #3774\r\ncloses #3898", "commit_timestamp": "2013-08-06T19:34:16Z", "files": ["IPython/nbconvert/tests/test_nbconvertapp.py"]}], "labels": ["bug", "nbconvert"], "created_at": "2013-07-25T16:02:30Z", "closed_at": "2013-08-06T19:34:17Z", "linked_pr_number": [3774], "method": ["label"]}
{"issue_number": 3730, "title": "nbconvert: unhelpful error when pandoc isn't installed", "body": "When running `ipy nbconvert foo.ipynb` without pandoc installed, the exception is:\n\n```\n  File \"/Users/wolever/code/sandbox/env/sandbox/lib/python2.7/site-packages/IPython/nbconvert/filters/markdown.py\", line 50, in markdown2latex\n    return pandoc(source, 'markdown', 'latex')\n  File \"/Users/wolever/code/sandbox/env/sandbox/lib/python2.7/site-packages/IPython/nbconvert/utils/pandoc.py\", line 51, in pandoc\n    stdin=subprocess.PIPE, stdout=subprocess.PIPE\n  File \"/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/subprocess.py\", line 679, in __init__\n    errread, errwrite)\n  File \"/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/subprocess.py\", line 1228, in _execute_child\n    raise child_exception\nOSError: [Errno 2] No such file or directory\n\nIf you suspect this is an IPython bug, please report it at:\n    https://github.com/ipython/ipython/issues\nor send an email to the mailing list at ipython-dev@scipy.org\n\nYou can print a more detailed traceback right now with \"%tb\", or use \"%debug\"\nto interactively debug it.\n\nExtra-detailed tracebacks for bug-reporting purposes can be enabled via:\n    c.Application.verbose_crash=True\n```\n\nIt would be useful if that included some hint that the error was being caused by the lack of pandoc.\n", "commits": [{"node_id": "MDY6Q29tbWl0NzUzNzY4OjY2ZDRjMDUzYjE5ZmNlYWE1ZGVhNjA1MWM3YzliYWNiNWQwOTBiNWY=", "commit_message": "Nicer message when pandoc is missing, closes #3730", "commit_timestamp": "2013-07-23T01:12:32Z", "files": ["IPython/nbconvert/utils/pandoc.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjY2ZDRjMDUzYjE5ZmNlYWE1ZGVhNjA1MWM3YzliYWNiNWQwOTBiNWY=", "commit_message": "Nicer message when pandoc is missing, closes #3730", "commit_timestamp": "2013-07-23T01:12:32Z", "files": ["IPython/nbconvert/utils/pandoc.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjUzZTBkOGI2MDZhMjA5OWNjNWFhYzY5YTViNWViMzI5NjNlZGVkNWI=", "commit_message": "Merge pull request #3733 from ivanov/pandoc-missing\n\nNicer message when pandoc is missing, closes #3730", "commit_timestamp": "2013-07-23T05:04:00Z", "files": ["IPython/nbconvert/utils/pandoc.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzpkYTMyMzg3NGM5MWM4YzJiMGMxMmVjMmE3MmJhYmE1NzE4ZDlmOGI2", "commit_message": "Nicer message when pandoc is missing, closes #3730", "commit_timestamp": "2013-07-23T01:12:32Z", "files": ["IPython/nbconvert/utils/pandoc.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo3MTljN2I1YmJmNmE3MzFmYTZkMWJhNDQ2YWVjYjAwMTcyNjI4Zjc0", "commit_message": "Merge pull request #3733 from ivanov/pandoc-missing\n\nNicer message when pandoc is missing, closes #3730", "commit_timestamp": "2013-07-23T05:04:00Z", "files": ["IPython/nbconvert/utils/pandoc.py"]}], "labels": [], "created_at": "2013-07-23T00:48:35Z", "closed_at": "2013-07-23T05:04:01Z", "method": ["regex"]}
{"issue_number": 3719, "title": "Bad strftime format, for windows, in nbconvert exporter ", "body": "%-d is not a valid strftime format on windows.\n\n```\nC:\\Users\\jorgenst\\notebooks> ipython nbconvert --format=basic_html .\\Simple_pylab.ipynb\nTraceback (most recent call last):\n  File \"c:\\Python27\\Scripts\\ipython-script.py\", line 8, in <module>\n    load_entry_point('ipython==1.0dev', 'console_scripts', 'ipython')()\n  File \"c:\\python27\\lib\\site-packages\\ipython-1.0dev-py2.7.egg\\IPython\\__init__.py\", line 118, in start_ipython\n    return launch_new_instance(argv=argv, **kwargs)\n  File \"c:\\python27\\lib\\site-packages\\ipython-1.0dev-py2.7.egg\\IPython\\config\\application.py\", line 539, in launch_instance\n    app.start()\n  File \"c:\\python27\\lib\\site-packages\\ipython-1.0dev-py2.7.egg\\IPython\\terminal\\ipapp.py\", line 362, in start\n    return self.subapp.start()\n  File \"c:\\python27\\lib\\site-packages\\ipython-1.0dev-py2.7.egg\\IPython\\nbconvert\\nbconvertapp.py\", line 176, in start\n    self.convert_notebooks()\n  File \"c:\\python27\\lib\\site-packages\\ipython-1.0dev-py2.7.egg\\IPython\\nbconvert\\nbconvertapp.py\", line 197, in convert_notebooks\n    config=self.config)\n  File \"c:\\python27\\lib\\site-packages\\ipython-1.0dev-py2.7.egg\\IPython\\nbconvert\\exporters\\export.py\", line 61, in decorator\n    return f(*args, **kwargs)\n  File \"c:\\python27\\lib\\site-packages\\ipython-1.0dev-py2.7.egg\\IPython\\nbconvert\\exporters\\export.py\", line 214, in export_by_name\n    return globals()[function_name](nb, **kw)\n  File \"c:\\python27\\lib\\site-packages\\ipython-1.0dev-py2.7.egg\\IPython\\nbconvert\\exporters\\export.py\", line 61, in decorator\n    return f(*args, **kwargs)\n  File \"c:\\python27\\lib\\site-packages\\ipython-1.0dev-py2.7.egg\\IPython\\nbconvert\\exporters\\export.py\", line 149, in export_basic_html\n    return export(BasicHTMLExporter, nb, **kw)\n  File \"c:\\python27\\lib\\site-packages\\ipython-1.0dev-py2.7.egg\\IPython\\nbconvert\\exporters\\export.py\", line 61, in decorator\n    return f(*args, **kwargs)\n  File \"c:\\python27\\lib\\site-packages\\ipython-1.0dev-py2.7.egg\\IPython\\nbconvert\\exporters\\export.py\", line 122, in export\n    output, resources = exporter_instance.from_filename(nb, resources)\n  File \"c:\\python27\\lib\\site-packages\\ipython-1.0dev-py2.7.egg\\IPython\\nbconvert\\exporters\\exporter.py\", line 218, in from_filename\n    resources['metadata']['modified_date'] = modified_date.strftime(\"%B %-d, %Y\")\nValueError: Invalid format string\n\nIf you suspect this is an IPython bug, please report it at:\n    https://github.com/ipython/ipython/issues\nor send an email to the mailing list at ipython-dev@scipy.org\n\nYou can print a more detailed traceback right now with \"%tb\", or use \"%debug\"\nto interactively debug it.\n\nExtra-detailed tracebacks for bug-reporting purposes can be enabled via:\n    c.Application.verbose_crash=True\n```\n", "commits": [{"node_id": "MDY6Q29tbWl0MTUwNzk1NzoxY2FlNWM1Njc5N2UzYjNlYTA4ODIzNmYzYzE2NzIxMGMwNWQ0Mjlj", "commit_message": "Fix for #3719\n\n%-d is not a valid strftime format on windows.", "commit_timestamp": "2013-07-22T07:17:43Z", "files": ["IPython/nbconvert/exporters/exporter.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjhkMGE2YjcwMWJiYTVlN2UxMDQzY2ZkZDJkZTY5YWUyYmEwNzQ1NmQ=", "commit_message": "Merge pull request #3720 from jstenar/nbconvert-datefmt\n\nfix platform-dependent datefmt\r\n\r\ncloses #3719", "commit_timestamp": "2013-07-27T00:46:10Z", "files": ["IPython/nbconvert/exporters/exporter.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzpjNTU0YWJkODAzZjIxMjAxNTEwNzdkZGY5MDM0Mzk2ZjI3NjQ1ODBm", "commit_message": "Fix for #3719\n\n%-d is not a valid strftime format on windows.", "commit_timestamp": "2013-07-22T07:17:43Z", "files": ["IPython/nbconvert/exporters/exporter.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo1ZWI1ZGJhMGU3ZGRhNTQ5NjZkMTkyNDY0OTk2ZTQwNjZiZWNjNmNi", "commit_message": "Merge pull request #3720 from jstenar/nbconvert-datefmt\n\nfix platform-dependent datefmt\r\n\r\ncloses #3719", "commit_timestamp": "2013-07-27T00:46:10Z", "files": ["IPython/nbconvert/exporters/exporter.py"]}], "labels": ["windows", "bug", "nbconvert"], "created_at": "2013-07-22T07:16:50Z", "closed_at": "2013-07-27T00:46:11Z", "method": ["label", "regex"]}
{"issue_number": 3684, "title": "bad message when %pylab fails due import *other* than matplotlib", "body": "this is just to capture an issue that was sent to IPython-User by \n@michaelaye:\n\n> I know you guys are busy getting a release on 1.0 done, so here's some \n> feedback trying to use git master:\n> \n> In version\n> rel-0.13-3590-gadb77e3\n> matplotlib is not found, even so it is importable, so when using pylab \n> mode I get an error message:\n> \n> Python 2.7.3 |EPD 7.3-2 (64-bit)| (default, Apr 12 2012, 11:14:05)\n> Type \"copyright\", \"credits\" or \"license\" for more information.\n> \n> IPython 1.0.dev -- An enhanced Interactive Python.\n> ?         -> Introduction and overview of IPython's features.\n> %quickref -> Quick reference.\n> help      -> Python's own help system.\n> object?   -> Details about 'object', use 'object??' for extra details.\n> \n> In [1]: import matplotlib\n> \n> In [2]: pylab\n> ERROR: pylab mode doesn't work as matplotlib could not be found.\n> Is it installed on the system?\n> \n> And since version ((rel-0.13-3681-g123ae5a)) up to now I get an import \n> error for the sip module (using --pylab=qt)\n> \n> ImportError: No module named sip\n> \n> Michael\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU4NTE4OjY1OWYzNWMzZGRmMTIyYzkyYWNhNDRhN2QxM2Y4OTJmZjYyMGIxYTM=", "commit_message": "Merge pull request #3683 from minrk/matplotlib_magic\n\nuse `%matplotlib` in example notebooks\r\n\r\n- removes any mention of `%pylab` in our examples\r\n- adds `--matplotlib` command-line flag, mapping to the new\r\n- adds `Populated namespace` message to %pylab output, at the request of @fperez.\r\n- fix unicode bug in SVG, discovered during testing\r\n\r\ncloses #3680\r\ncloses #3684", "commit_timestamp": "2013-07-20T01:01:12Z", "files": ["IPython/core/display.py", "IPython/core/magics/pylab.py", "IPython/core/shellapp.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzpjMmIwMTUyZTdiZTA3MDlkNTFjMzIwZjcxNjJiZGQzNmVhODI3Zjhi", "commit_message": "Merge pull request #3683 from minrk/matplotlib_magic\n\nuse `%matplotlib` in example notebooks\r\n\r\n- removes any mention of `%pylab` in our examples\r\n- adds `--matplotlib` command-line flag, mapping to the new\r\n- adds `Populated namespace` message to %pylab output, at the request of @fperez.\r\n- fix unicode bug in SVG, discovered during testing\r\n\r\ncloses #3680\r\ncloses #3684", "commit_timestamp": "2013-07-20T01:01:12Z", "files": ["IPython/core/display.py", "IPython/core/magics/pylab.py", "IPython/core/shellapp.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjY1OWYzNWMzZGRmMTIyYzkyYWNhNDRhN2QxM2Y4OTJmZjYyMGIxYTM=", "commit_message": "Merge pull request #3683 from minrk/matplotlib_magic\n\nuse `%matplotlib` in example notebooks\r\n\r\n- removes any mention of `%pylab` in our examples\r\n- adds `--matplotlib` command-line flag, mapping to the new\r\n- adds `Populated namespace` message to %pylab output, at the request of @fperez.\r\n- fix unicode bug in SVG, discovered during testing\r\n\r\ncloses #3680\r\ncloses #3684", "commit_timestamp": "2013-07-20T01:01:12Z", "files": ["IPython/core/display.py", "IPython/core/magics/pylab.py", "IPython/core/shellapp.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjY1OWYzNWMzZGRmMTIyYzkyYWNhNDRhN2QxM2Y4OTJmZjYyMGIxYTM=", "commit_message": "Merge pull request #3683 from minrk/matplotlib_magic\n\nuse `%matplotlib` in example notebooks\r\n\r\n- removes any mention of `%pylab` in our examples\r\n- adds `--matplotlib` command-line flag, mapping to the new\r\n- adds `Populated namespace` message to %pylab output, at the request of @fperez.\r\n- fix unicode bug in SVG, discovered during testing\r\n\r\ncloses #3680\r\ncloses #3684", "commit_timestamp": "2013-07-20T01:01:12Z", "files": ["IPython/core/display.py", "IPython/core/magics/pylab.py", "IPython/core/shellapp.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzpjMmIwMTUyZTdiZTA3MDlkNTFjMzIwZjcxNjJiZGQzNmVhODI3Zjhi", "commit_message": "Merge pull request #3683 from minrk/matplotlib_magic\n\nuse `%matplotlib` in example notebooks\r\n\r\n- removes any mention of `%pylab` in our examples\r\n- adds `--matplotlib` command-line flag, mapping to the new\r\n- adds `Populated namespace` message to %pylab output, at the request of @fperez.\r\n- fix unicode bug in SVG, discovered during testing\r\n\r\ncloses #3680\r\ncloses #3684", "commit_timestamp": "2013-07-20T01:01:12Z", "files": ["IPython/core/display.py", "IPython/core/magics/pylab.py", "IPython/core/shellapp.py"]}], "labels": ["needs-info"], "created_at": "2013-07-18T20:46:28Z", "closed_at": "2013-07-18T22:15:06Z", "linked_pr_number": [3684], "method": ["regex"]}
{"issue_number": 3668, "title": "AttributeError: 'BlockingKernelClient' object has no attribute 'started_channels'", "body": "I have an app that is centered around IPython running in qt (https://github.com/neuropy/neuropy/blob/master/neuropy/main.py). Yesterday I updated IPython from git, and have had to change a few things since the refactoring about 3 months ago, which split a kernel client off of the kernel manager (see #3011). In the process, I came across the error in the title. This error only happens when I try to create a normal two-process app, but not when creating an inprocess app, ie, it happens with QtKernelManager, but not with QtInProcessKernelManager. I think a BlockingKernelClient happens to be the default for QtKernelClient, which may be due to #3222. Not sure how to fix this in IPython, but to get around it, I set the client_factory to QtKernelClient, and then calling QtKernelManager.client() works fine. My minimalist example is in this gist: https://gist.github.com/mspacek/6018206\n\nCan this be fixed so that setting up the 2-process app doesn't require the extra step of changing the client_factory?\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU5NDQ2OjE3YTU3MDk5NWJkOWU1ZmM0ZDVhMzU5MGYxY2YxZjQ1YjI1OWQwZjU=", "commit_message": "set default client_class for QtKernelManager\n\ncloses #3668", "commit_timestamp": "2013-07-17T17:25:21Z", "files": ["IPython/qt/manager.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjVlYTVlZDE0Mzc0NDAyMmE0MTBmMjU2OTU3MmE2MTg5NmY5NjM3ZDY=", "commit_message": "Merge pull request #3669 from minrk/qtclient\n\nset default client_class for QtKernelManager\r\n\r\ncloses #3668", "commit_timestamp": "2013-07-17T19:53:03Z", "files": ["IPython/qt/manager.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo5MWNlZjRjYTY4YjBiMTI5MmQyOGVjYWMyZDhmNmZhZjVkZTA1YTgx", "commit_message": "set default client_class for QtKernelManager\n\ncloses #3668", "commit_timestamp": "2013-07-17T17:25:21Z", "files": ["IPython/qt/manager.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzozNDFlNTg0MmM2ZjgzMDYwOTZlMmJkYTE1NDRkM2JlMWQ4YmRhODQx", "commit_message": "Merge pull request #3669 from minrk/qtclient\n\nset default client_class for QtKernelManager\r\n\r\ncloses #3668", "commit_timestamp": "2013-07-17T19:53:03Z", "files": ["IPython/qt/manager.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjVlYTVlZDE0Mzc0NDAyMmE0MTBmMjU2OTU3MmE2MTg5NmY5NjM3ZDY=", "commit_message": "Merge pull request #3669 from minrk/qtclient\n\nset default client_class for QtKernelManager\r\n\r\ncloses #3668", "commit_timestamp": "2013-07-17T19:53:03Z", "files": ["IPython/qt/manager.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjVlYTVlZDE0Mzc0NDAyMmE0MTBmMjU2OTU3MmE2MTg5NmY5NjM3ZDY=", "commit_message": "Merge pull request #3669 from minrk/qtclient\n\nset default client_class for QtKernelManager\r\n\r\ncloses #3668", "commit_timestamp": "2013-07-17T19:53:03Z", "files": ["IPython/qt/manager.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzozNDFlNTg0MmM2ZjgzMDYwOTZlMmJkYTE1NDRkM2JlMWQ4YmRhODQx", "commit_message": "Merge pull request #3669 from minrk/qtclient\n\nset default client_class for QtKernelManager\r\n\r\ncloses #3668", "commit_timestamp": "2013-07-17T19:53:03Z", "files": ["IPython/qt/manager.py"]}], "labels": ["qtconsole", "bug"], "created_at": "2013-07-17T07:51:48Z", "closed_at": "2013-07-17T19:53:03Z", "linked_pr_number": [3668], "method": ["label"]}
{"issue_number": 3604, "title": "MathJax rendering problem in `%%latex` cell", "body": "The following screenshot shows the rendered output of one of our example notebooks.  The odd thing is that it works fine when the `nabla` comes back through a `Latex` display object.  See our example notebook \"Part 5 - Rich Display System\" for the examples.\n\n![screen shot 2013-07-10 at 3 47 21 pm](https://f.cloud.github.com/assets/27600/778514/c6980318-e9b2-11e2-85f2-c8b26c9925e5.png)\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU5NDQ2OjA5NDM0MGFjN2M1ODg5MGUwMGFlNzJiNWRiZGZkZWY2YWJjYjBjMmI=", "commit_message": "push cell magic to the head of the transformer line\n\nI'm not 100% sure this is the right fix (ping @takluyver for review),\nsince it is unclear what the physical/logical distinction is,\n\nbut this does allow the cell magic transform to preempt all other transforms.\n\ncloses #3604", "commit_timestamp": "2013-07-17T17:28:05Z", "files": ["IPython/core/inputsplitter.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzplNTE2NTllOTZlZDJkNjEzMmRkMWM4OWI0NzEwMzAwYjk0OTVkNWQy", "commit_message": "push cell magic to the head of the transformer line\n\nI'm not 100% sure this is the right fix (ping @takluyver for review),\nsince it is unclear what the physical/logical distinction is,\n\nbut this does allow the cell magic transform to preempt all other transforms.\n\ncloses #3604", "commit_timestamp": "2013-07-17T17:28:05Z", "files": ["IPython/core/inputsplitter.py"]}], "labels": ["bug", "notebook"], "created_at": "2013-07-10T22:49:39Z", "closed_at": "2013-07-17T21:02:47Z", "method": ["label"]}
{"issue_number": 3544, "title": "IPython.lib test failure on Windows", "body": "I think this might have been something I did. It probably just needs a skip_win32 decorator.\n\n```\n======================================================================\nERROR: IPython.lib.tests.test_imports.test_import_irunner\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"S:\\Users\\slave\\Jenkins\\shiningpanda\\jobs\\d5f643a2\\virtualenvs\\ff035a1d\\lib\\site-packages\\nose\\case.py\", line 197, in runTest\n    self.test(*self.arg)\n  File \"S:\\Users\\slave\\Jenkins\\shiningpanda\\jobs\\d5f643a2\\virtualenvs\\ff035a1d\\lib\\site-packages\\ipython-1.0.dev-py2.7.egg\\IPython\\lib\\tests\\test_imports.py\", line 13, in test_import_irunner\n    from IPython.lib import irunner\n  File \"S:\\Users\\slave\\Jenkins\\shiningpanda\\jobs\\d5f643a2\\virtualenvs\\ff035a1d\\lib\\site-packages\\ipython-1.0.dev-py2.7.egg\\IPython\\lib\\irunner.py\", line 39, in <module>\n    from IPython.external import pexpect\n  File \"S:\\Users\\slave\\Jenkins\\shiningpanda\\jobs\\d5f643a2\\virtualenvs\\ff035a1d\\lib\\site-packages\\ipython-1.0.dev-py2.7.egg\\IPython\\external\\pexpect\\__init__.py\", line 5, in <module>\n    from _pexpect import *\n  File \"S:\\Users\\slave\\Jenkins\\shiningpanda\\jobs\\d5f643a2\\virtualenvs\\ff035a1d\\lib\\site-packages\\ipython-1.0.dev-py2.7.egg\\IPython\\external\\pexpect\\_pexpect.py\", line 86, in <module>\n    support it. Pexpect is intended for UNIX-like operating systems.\"\"\")\nImportError: No module named resource\n\nA critical module was not found. Probably this operating system does not\nsupport it. Pexpect is intended for UNIX-like operating systems.\n```\n", "commits": [{"node_id": "MDY6Q29tbWl0MTIzNjAwMzoyOTFmYWRlNjAxNWMzMDA1ZjBjNWI4Y2ZkNzBiMzIyZTZmNDJhMmI4", "commit_message": "Skip import irunner test on Windows.\n\nCloses gh-3544", "commit_timestamp": "2013-07-07T10:56:47Z", "files": ["IPython/lib/tests/test_imports.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjAyYjE2NTRhNmE1YzMxYjFmZDQwMmYwOTY5OTg4NWU3M2VmNzBiMDg=", "commit_message": "Merge pull request #3572 from takluyver/win-skip-irunner\n\nSkip import irunner test on Windows.\r\n\r\nCloses #3544", "commit_timestamp": "2013-07-07T17:28:04Z", "files": ["IPython/lib/tests/test_imports.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzowY2IxYTE4MTk4MGZjMGQ5ZjEzN2E0NjBjMjdkNDI4MTE4NDcwYTJh", "commit_message": "Skip import irunner test on Windows.\n\nCloses gh-3544", "commit_timestamp": "2013-07-07T10:56:47Z", "files": ["IPython/lib/tests/test_imports.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo4ZWY0YTE5M2E5MGI0MjQxNTNiYjMyODRhMWU1YTlhYTQwMDU4NTJl", "commit_message": "Merge pull request #3572 from takluyver/win-skip-irunner\n\nSkip import irunner test on Windows.\r\n\r\nCloses #3544", "commit_timestamp": "2013-07-07T17:28:04Z", "files": ["IPython/lib/tests/test_imports.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjAyYjE2NTRhNmE1YzMxYjFmZDQwMmYwOTY5OTg4NWU3M2VmNzBiMDg=", "commit_message": "Merge pull request #3572 from takluyver/win-skip-irunner\n\nSkip import irunner test on Windows.\r\n\r\nCloses #3544", "commit_timestamp": "2013-07-07T17:28:04Z", "files": ["IPython/lib/tests/test_imports.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjAyYjE2NTRhNmE1YzMxYjFmZDQwMmYwOTY5OTg4NWU3M2VmNzBiMDg=", "commit_message": "Merge pull request #3572 from takluyver/win-skip-irunner\n\nSkip import irunner test on Windows.\r\n\r\nCloses #3544", "commit_timestamp": "2013-07-07T17:28:04Z", "files": ["IPython/lib/tests/test_imports.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo4ZWY0YTE5M2E5MGI0MjQxNTNiYjMyODRhMWU1YTlhYTQwMDU4NTJl", "commit_message": "Merge pull request #3572 from takluyver/win-skip-irunner\n\nSkip import irunner test on Windows.\r\n\r\nCloses #3544", "commit_timestamp": "2013-07-07T17:28:04Z", "files": ["IPython/lib/tests/test_imports.py"]}], "labels": ["windows", "bug", "testing"], "created_at": "2013-07-05T11:51:05Z", "closed_at": "2013-07-07T17:28:05Z", "linked_pr_number": [3544], "method": ["label"]}
{"issue_number": 3517, "title": "documentation build broken in head", "body": "commit 0c0c1a161c84109 broke the documentation build:\n\n```\nHOME=$PWD/build PYTHONPATH=$PWD make -C docs html\n...\n  File \"/usr/lib/python2.7/dist-packages/sphinx/util/__init__.py\", line 201, in get_module_source\n    loader = getattr(mod, '__loader__', None)\n  File \"/home/jtaylor/Packages/ipython/ipython/IPython/frontend.py\", line 68, in __getattr__\n    raise ImportError('No module named %s' % obj)\nImportError: No module named __loader__\n```\n", "commits": [{"node_id": "MDY6Q29tbWl0MTIzNjAwMzowOWQyYWI1YmFhNGQ3OGViZGU4MjgyMjlhNDM3OTcyMTA1MDgwNzJi", "commit_message": "Exclude frontend shim from docs build\n\nCloses gh-3517", "commit_timestamp": "2013-07-03T11:33:00Z", "files": ["docs/autogen_api.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjY3MjgwMDI1YmU5MjFhYTExOGQxYjk4NjgyYzE2Njk5NTYzNzAzNmY=", "commit_message": "Merge pull request #3523 from takluyver/docs-exclude-frontend\n\nExclude frontend shim from docs build\r\n\r\nCloses #3517\r\n\r\nThe API doc writer has separate exclude patterns for modules and packages, so frontend needed to be listed in the modules exclusions.", "commit_timestamp": "2013-07-03T17:13:19Z", "files": ["docs/autogen_api.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzozNTY3MDY3MWI2YmY3YmI2YmQxYjcxZDEyODZiODhjMDc4M2I3N2E3", "commit_message": "Exclude frontend shim from docs build\n\nCloses gh-3517", "commit_timestamp": "2013-07-03T11:33:00Z", "files": ["docs/autogen_api.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzoxNTExZGE3MjhiMGZmODAzNjI2MTdmNGIyM2Q1YWMwNmI4ZjZiOWVk", "commit_message": "Merge pull request #3523 from takluyver/docs-exclude-frontend\n\nExclude frontend shim from docs build\r\n\r\nCloses #3517\r\n\r\nThe API doc writer has separate exclude patterns for modules and packages, so frontend needed to be listed in the modules exclusions.", "commit_timestamp": "2013-07-03T17:13:19Z", "files": ["docs/autogen_api.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjY3MjgwMDI1YmU5MjFhYTExOGQxYjk4NjgyYzE2Njk5NTYzNzAzNmY=", "commit_message": "Merge pull request #3523 from takluyver/docs-exclude-frontend\n\nExclude frontend shim from docs build\r\n\r\nCloses #3517\r\n\r\nThe API doc writer has separate exclude patterns for modules and packages, so frontend needed to be listed in the modules exclusions.", "commit_timestamp": "2013-07-03T17:13:19Z", "files": ["docs/autogen_api.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjY3MjgwMDI1YmU5MjFhYTExOGQxYjk4NjgyYzE2Njk5NTYzNzAzNmY=", "commit_message": "Merge pull request #3523 from takluyver/docs-exclude-frontend\n\nExclude frontend shim from docs build\r\n\r\nCloses #3517\r\n\r\nThe API doc writer has separate exclude patterns for modules and packages, so frontend needed to be listed in the modules exclusions.", "commit_timestamp": "2013-07-03T17:13:19Z", "files": ["docs/autogen_api.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzoxNTExZGE3MjhiMGZmODAzNjI2MTdmNGIyM2Q1YWMwNmI4ZjZiOWVk", "commit_message": "Merge pull request #3523 from takluyver/docs-exclude-frontend\n\nExclude frontend shim from docs build\r\n\r\nCloses #3517\r\n\r\nThe API doc writer has separate exclude patterns for modules and packages, so frontend needed to be listed in the modules exclusions.", "commit_timestamp": "2013-07-03T17:13:19Z", "files": ["docs/autogen_api.py"]}], "labels": [], "created_at": "2013-07-02T20:44:42Z", "closed_at": "2013-07-03T17:13:20Z", "linked_pr_number": [3517], "method": ["regex"]}
{"issue_number": 3502, "title": "Notebook broken in master", "body": "I am seeing the following when a notebook is opened (also see a WebSocket can't connect in the browser):\n\n```\nERROR:root:Uncaught exception in /kernels/3c8b14ec-662f-4360-bc2a-4706c67f8513/shell\nTraceback (most recent call last):\n  File \"/Library/Frameworks/EPD64.framework/Versions/7.3/lib/python2.7/site-packages/tornado/websocket.py\", line 254, in wrapper\n    return callback(*args, **kwargs)\n  File \"/Users/bgranger/Documents/Computing/IPython/code/ipython/IPython/html/base/zmqhandlers.py\", line 87, in open\n    self.session = Session(parent=self)\n  File \"/Users/bgranger/Documents/Computing/IPython/code/ipython/IPython/kernel/zmq/session.py\", line 395, in __init__\n    super(Session, self).__init__(**kwargs)\n  File \"/Users/bgranger/Documents/Computing/IPython/code/ipython/IPython/config/configurable.py\", line 88, in __init__\n    self.parent = parent\n  File \"/Users/bgranger/Documents/Computing/IPython/code/ipython/IPython/utils/traitlets.py\", line 315, in __set__\n    new_value = self._validate(obj, value)\n  File \"/Users/bgranger/Documents/Computing/IPython/code/ipython/IPython/utils/traitlets.py\", line 323, in _validate\n    return self.validate(obj, value)\n  File \"/Users/bgranger/Documents/Computing/IPython/code/ipython/IPython/utils/traitlets.py\", line 809, in validate\n    self.error(obj, value)\n  File \"/Users/bgranger/Documents/Computing/IPython/code/ipython/IPython/utils/traitlets.py\", line 646, in error\n    raise TraitError(e)\nTraitError: The 'parent' trait of a Session instance must be a Configurable or None, but a value of class 'IPython.html.services.kernels.handlers.ShellHandler' (i.e. <IPython.html.services.kernels.handlers.ShellHandler object at 0x1088c0950>) was specified.\nERROR:root:Uncaught exception, closing connection.\nTraceback (most recent call last):\n  File \"/Library/Frameworks/EPD64.framework/Versions/7.3/lib/python2.7/site-packages/tornado/iostream.py\", line 304, in wrapper\n    callback(*args)\n  File \"/Library/Frameworks/EPD64.framework/Versions/7.3/lib/python2.7/site-packages/tornado/httpserver.py\", line 250, in _on_headers\n    self.request_callback(self._request)\n  File \"/Library/Frameworks/EPD64.framework/Versions/7.3/lib/python2.7/site-packages/tornado/web.py\", line 1362, in __call__\n    handler._execute(transforms, *args, **kwargs)\n  File \"/Library/Frameworks/EPD64.framework/Versions/7.3/lib/python2.7/site-packages/tornado/websocket.py\", line 120, in _execute\n    self.ws_connection.accept_connection()\n  File \"/Library/Frameworks/EPD64.framework/Versions/7.3/lib/python2.7/site-packages/tornado/websocket.py\", line 454, in accept_connection\n    self._accept_connection()\n  File \"/Library/Frameworks/EPD64.framework/Versions/7.3/lib/python2.7/site-packages/tornado/websocket.py\", line 496, in _accept_connection\n    self._receive_frame()\n  File \"/Library/Frameworks/EPD64.framework/Versions/7.3/lib/python2.7/site-packages/tornado/websocket.py\", line 525, in _receive_frame\n    self.stream.read_bytes(2, self._on_frame_start)\n  File \"/Library/Frameworks/EPD64.framework/Versions/7.3/lib/python2.7/site-packages/tornado/iostream.py\", line 180, in read_bytes\n    self._check_closed()\n  File \"/Library/Frameworks/EPD64.framework/Versions/7.3/lib/python2.7/site-packages/tornado/iostream.py\", line 535, in _check_closed\n    raise IOError(\"Stream is closed\")\nIOError: Stream is closed\nERROR:root:Exception in callback <zmq.eventloop.stack_context._StackContextWrapper object at 0x108671890>\nTraceback (most recent call last):\n  File \"/Library/Frameworks/EPD64.framework/Versions/7.3/lib/python2.7/site-packages/zmq/eventloop/ioloop.py\", line 418, in _run_callback\n    callback()\n  File \"/Library/Frameworks/EPD64.framework/Versions/7.3/lib/python2.7/site-packages/tornado/iostream.py\", line 304, in wrapper\n    callback(*args)\n  File \"/Library/Frameworks/EPD64.framework/Versions/7.3/lib/python2.7/site-packages/tornado/httpserver.py\", line 250, in _on_headers\n    self.request_callback(self._request)\n  File \"/Library/Frameworks/EPD64.framework/Versions/7.3/lib/python2.7/site-packages/tornado/web.py\", line 1362, in __call__\n    handler._execute(transforms, *args, **kwargs)\n  File \"/Library/Frameworks/EPD64.framework/Versions/7.3/lib/python2.7/site-packages/tornado/websocket.py\", line 120, in _execute\n    self.ws_connection.accept_connection()\n  File \"/Library/Frameworks/EPD64.framework/Versions/7.3/lib/python2.7/site-packages/tornado/websocket.py\", line 454, in accept_connection\n    self._accept_connection()\n  File \"/Library/Frameworks/EPD64.framework/Versions/7.3/lib/python2.7/site-packages/tornado/websocket.py\", line 496, in _accept_connection\n    self._receive_frame()\n  File \"/Library/Frameworks/EPD64.framework/Versions/7.3/lib/python2.7/site-packages/tornado/websocket.py\", line 525, in _receive_frame\n    self.stream.read_bytes(2, self._on_frame_start)\n  File \"/Library/Frameworks/EPD64.framework/Versions/7.3/lib/python2.7/site-packages/tornado/iostream.py\", line 180, in read_bytes\n    self._check_closed()\n  File \"/Library/Frameworks/EPD64.framework/Versions/7.3/lib/python2.7/site-packages/tornado/iostream.py\", line 535, in _check_closed\n    raise IOError(\"Stream is closed\")\nIOError: Stream is closed\nERROR:root:Uncaught exception in /kernels/3c8b14ec-662f-4360-bc2a-4706c67f8513/stdin\nTraceback (most recent call last):\n  File \"/Library/Frameworks/EPD64.framework/Versions/7.3/lib/python2.7/site-packages/tornado/websocket.py\", line 254, in wrapper\n    return callback(*args, **kwargs)\n  File \"/Users/bgranger/Documents/Computing/IPython/code/ipython/IPython/html/base/zmqhandlers.py\", line 87, in open\n    self.session = Session(parent=self)\n  File \"/Users/bgranger/Documents/Computing/IPython/code/ipython/IPython/kernel/zmq/session.py\", line 395, in __init__\n    super(Session, self).__init__(**kwargs)\n  File \"/Users/bgranger/Documents/Computing/IPython/code/ipython/IPython/config/configurable.py\", line 88, in __init__\n    self.parent = parent\n  File \"/Users/bgranger/Documents/Computing/IPython/code/ipython/IPython/utils/traitlets.py\", line 315, in __set__\n    new_value = self._validate(obj, value)\n  File \"/Users/bgranger/Documents/Computing/IPython/code/ipython/IPython/utils/traitlets.py\", line 323, in _validate\n    return self.validate(obj, value)\n  File \"/Users/bgranger/Documents/Computing/IPython/code/ipython/IPython/utils/traitlets.py\", line 809, in validate\n    self.error(obj, value)\n  File \"/Users/bgranger/Documents/Computing/IPython/code/ipython/IPython/utils/traitlets.py\", line 646, in error\n    raise TraitError(e)\nTraitError: The 'parent' trait of a Session instance must be a Configurable or None, but a value of class 'IPython.html.services.kernels.handlers.StdinHandler' (i.e. <IPython.html.services.kernels.handlers.StdinHandler object at 0x1085d7510>) was specified.\nERROR:root:Uncaught exception, closing connection.\nTraceback (most recent call last):\n  File \"/Library/Frameworks/EPD64.framework/Versions/7.3/lib/python2.7/site-packages/tornado/iostream.py\", line 304, in wrapper\n    callback(*args)\n  File \"/Library/Frameworks/EPD64.framework/Versions/7.3/lib/python2.7/site-packages/tornado/httpserver.py\", line 250, in _on_headers\n    self.request_callback(self._request)\n  File \"/Library/Frameworks/EPD64.framework/Versions/7.3/lib/python2.7/site-packages/tornado/web.py\", line 1362, in __call__\n    handler._execute(transforms, *args, **kwargs)\n  File \"/Library/Frameworks/EPD64.framework/Versions/7.3/lib/python2.7/site-packages/tornado/websocket.py\", line 120, in _execute\n    self.ws_connection.accept_connection()\n  File \"/Library/Frameworks/EPD64.framework/Versions/7.3/lib/python2.7/site-packages/tornado/websocket.py\", line 454, in accept_connection\n    self._accept_connection()\n  File \"/Library/Frameworks/EPD64.framework/Versions/7.3/lib/python2.7/site-packages/tornado/websocket.py\", line 496, in _accept_connection\n    self._receive_frame()\n  File \"/Library/Frameworks/EPD64.framework/Versions/7.3/lib/python2.7/site-packages/tornado/websocket.py\", line 525, in _receive_frame\n    self.stream.read_bytes(2, self._on_frame_start)\n  File \"/Library/Frameworks/EPD64.framework/Versions/7.3/lib/python2.7/site-packages/tornado/iostream.py\", line 180, in read_bytes\n    self._check_closed()\n  File \"/Library/Frameworks/EPD64.framework/Versions/7.3/lib/python2.7/site-packages/tornado/iostream.py\", line 535, in _check_closed\n    raise IOError(\"Stream is closed\")\nIOError: Stream is closed\nERROR:root:Exception in callback <zmq.eventloop.stack_context._StackContextWrapper object at 0x108671890>\nTraceback (most recent call last):\n  File \"/Library/Frameworks/EPD64.framework/Versions/7.3/lib/python2.7/site-packages/zmq/eventloop/ioloop.py\", line 418, in _run_callback\n    callback()\n  File \"/Library/Frameworks/EPD64.framework/Versions/7.3/lib/python2.7/site-packages/tornado/iostream.py\", line 304, in wrapper\n    callback(*args)\n  File \"/Library/Frameworks/EPD64.framework/Versions/7.3/lib/python2.7/site-packages/tornado/httpserver.py\", line 250, in _on_headers\n    self.request_callback(self._request)\n  File \"/Library/Frameworks/EPD64.framework/Versions/7.3/lib/python2.7/site-packages/tornado/web.py\", line 1362, in __call__\n    handler._execute(transforms, *args, **kwargs)\n  File \"/Library/Frameworks/EPD64.framework/Versions/7.3/lib/python2.7/site-packages/tornado/websocket.py\", line 120, in _execute\n    self.ws_connection.accept_connection()\n  File \"/Library/Frameworks/EPD64.framework/Versions/7.3/lib/python2.7/site-packages/tornado/websocket.py\", line 454, in accept_connection\n    self._accept_connection()\n  File \"/Library/Frameworks/EPD64.framework/Versions/7.3/lib/python2.7/site-packages/tornado/websocket.py\", line 496, in _accept_connection\n    self._receive_frame()\n  File \"/Library/Frameworks/EPD64.framework/Versions/7.3/lib/python2.7/site-packages/tornado/websocket.py\", line 525, in _receive_frame\n    self.stream.read_bytes(2, self._on_frame_start)\n  File \"/Library/Frameworks/EPD64.framework/Versions/7.3/lib/python2.7/site-packages/tornado/iostream.py\", line 180, in read_bytes\n    self._check_closed()\n  File \"/Library/Frameworks/EPD64.framework/Versions/7.3/lib/python2.7/site-packages/tornado/iostream.py\", line 535, in _check_closed\n    raise IOError(\"Stream is closed\")\nIOError: Stream is closed\n```\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU5NDQ2OmYxNGUwZmI0OGE4MTFlZDYyNTA0ZTQwOWZiNTdlMjRkN2NhZTYxODc=", "commit_message": "don't use parent=self in handlers\n\nhandlers aren't configurable, so shouldn't be passed as parent.\n\ncloses #3502", "commit_timestamp": "2013-07-01T17:55:48Z", "files": ["IPython/html/base/zmqhandlers.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4Ojk0YjUwMzg2YTU1ODEwZjkyYzBlODU4NjkzMTI2MGZjOTUyZDc5NzU=", "commit_message": "Merge pull request #3504 from minrk/fixsession\n\ndon't use parent=self in handlers\r\n\r\nhandlers aren't configurable, so shouldn't be passed as parent.\r\n\r\ncloses #3502", "commit_timestamp": "2013-07-01T18:11:22Z", "files": ["IPython/html/base/zmqhandlers.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo2NWVmYTA4ZGVmOGUzMzEyZGFjMjA4NGY1YzcwZWNiNTQwMGI1YjY0", "commit_message": "don't use parent=self in handlers\n\nhandlers aren't configurable, so shouldn't be passed as parent.\n\ncloses #3502", "commit_timestamp": "2013-07-01T17:55:48Z", "files": ["IPython/html/base/zmqhandlers.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo4MTI4MDY4MTdlMmU4NGM2Yjc2YWYyZjdhODFhOTI0NmI5NmJjNDI5", "commit_message": "Merge pull request #3504 from minrk/fixsession\n\ndon't use parent=self in handlers\r\n\r\nhandlers aren't configurable, so shouldn't be passed as parent.\r\n\r\ncloses #3502", "commit_timestamp": "2013-07-01T18:11:22Z", "files": ["IPython/html/base/zmqhandlers.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4Ojk0YjUwMzg2YTU1ODEwZjkyYzBlODU4NjkzMTI2MGZjOTUyZDc5NzU=", "commit_message": "Merge pull request #3504 from minrk/fixsession\n\ndon't use parent=self in handlers\r\n\r\nhandlers aren't configurable, so shouldn't be passed as parent.\r\n\r\ncloses #3502", "commit_timestamp": "2013-07-01T18:11:22Z", "files": ["IPython/html/base/zmqhandlers.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4Ojk0YjUwMzg2YTU1ODEwZjkyYzBlODU4NjkzMTI2MGZjOTUyZDc5NzU=", "commit_message": "Merge pull request #3504 from minrk/fixsession\n\ndon't use parent=self in handlers\r\n\r\nhandlers aren't configurable, so shouldn't be passed as parent.\r\n\r\ncloses #3502", "commit_timestamp": "2013-07-01T18:11:22Z", "files": ["IPython/html/base/zmqhandlers.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo4MTI4MDY4MTdlMmU4NGM2Yjc2YWYyZjdhODFhOTI0NmI5NmJjNDI5", "commit_message": "Merge pull request #3504 from minrk/fixsession\n\ndon't use parent=self in handlers\r\n\r\nhandlers aren't configurable, so shouldn't be passed as parent.\r\n\r\ncloses #3502", "commit_timestamp": "2013-07-01T18:11:22Z", "files": ["IPython/html/base/zmqhandlers.py"]}], "labels": ["bug", "notebook"], "created_at": "2013-07-01T05:18:49Z", "closed_at": "2013-07-01T18:11:23Z", "linked_pr_number": [3502], "method": ["label", "regex"]}
{"issue_number": 3494, "title": "input() in notebook doesn't work in Python 3", "body": "raw_input() in Python 2 brings up a text box, which returns when I hit enter. `input()` in Python 3 leaves the kernel waiting for a ZeroMQ reply, but doesn't show me the UI for the input line. When I interrupt the kernel, I get this traceback:\n\n```\n---------------------------------------------------------------------------\nKeyboardInterrupt                         Traceback (most recent call last)\n<ipython-input-1-9b8a430d8199> in <module>()\n----> 1 a = input()\n\n/home/thomas/Code/virtualenvs/ipy-3/lib/python3.3/site-packages/ipython-1.0.dev-py3.3.egg/IPython/kernel/zmq/ipkernel.py in <lambda>(prompt)\n    353         # raw_input in the user namespace.\n    354         if content.get('allow_stdin', False):\n--> 355             raw_input = lambda prompt='': self._raw_input(prompt, ident, parent)\n    356         else:\n    357             raw_input = lambda prompt='' : self._no_raw_input()\n\n/home/thomas/Code/virtualenvs/ipy-3/lib/python3.3/site-packages/ipython-1.0.dev-py3.3.egg/IPython/kernel/zmq/ipkernel.py in _raw_input(self, prompt, ident, parent)\n    765         while True:\n    766             try:\n--> 767                 ident, reply = self.session.recv(self.stdin_socket, 0)\n    768             except Exception:\n    769                 self.log.warn(\"Invalid Message:\", exc_info=True)\n\n/home/thomas/Code/virtualenvs/ipy-3/lib/python3.3/site-packages/ipython-1.0.dev-py3.3.egg/IPython/kernel/zmq/session.py in recv(self, socket, mode, content, copy)\n    657             socket = socket.socket\n    658         try:\n--> 659             msg_list = socket.recv_multipart(mode, copy=copy)\n    660         except zmq.ZMQError as e:\n    661             if e.errno == zmq.EAGAIN:\n\n/usr/lib/python3/dist-packages/zmq/core/pysocket.py in recv_multipart(self, flags, copy, track)\n    208 \n    209     \"\"\"\n--> 210     parts = [self.recv(flags, copy=copy, track=track)]\n    211     # have first part already, only loop while more to receive\n    212     while self.getsockopt(zmq.RCVMORE):\n\n/usr/lib/python3/dist-packages/zmq/core/socket.cpython-33m-i386-linux-gnu.so in zmq.core.socket.Socket.recv (zmq/core/socket.c:5643)()\n\n/usr/lib/python3/dist-packages/zmq/core/socket.cpython-33m-i386-linux-gnu.so in zmq.core.socket.Socket.recv (zmq/core/socket.c:5465)()\n\n/usr/lib/python3/dist-packages/zmq/core/socket.cpython-33m-i386-linux-gnu.so in zmq.core.socket._recv_copy (zmq/core/socket.c:1688)()\n\n/usr/lib/python3/dist-packages/zmq/core/error.cpython-33m-i386-linux-gnu.so in zmq.core.error.ZMQError.__init__ (zmq/core/error.c:1059)()\n\nKeyboardInterrupt: \n```\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU5NDQ2OmM2MGE5MWQ0MDNjOTE2ZmExNTcwOTAxNDc5ZmNhZmQ3ZDFlMzczNTk=", "commit_message": "fix some unicode in zmqhandlers\n\nprevented session identity from being set properly,\nwhich in turn prevented stdin from working in the notebook in Python 3.\n\ncloses #3494", "commit_timestamp": "2013-07-13T01:47:56Z", "files": ["IPython/html/base/zmqhandlers.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjYyYzBmNmRiNDlkOWEyYjRjNmUzMDM4ZTFkMmRlZDM3YzlmZDM1MmQ=", "commit_message": "Merge pull request #3624 from minrk/argunicode\n\nfix some unicode in zmqhandlers\r\n\r\nPrevented session identity from being set properly, which in turn prevented stdin from working in the notebook in Python 3.\r\n\r\ncloses #3494", "commit_timestamp": "2013-07-14T18:19:57Z", "files": ["IPython/html/base/zmqhandlers.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzpkNGFiODI2YzEzZTQxNWY5YTk3ZDFjYzFkM2VkNGM2NTYxN2VmNTRl", "commit_message": "fix some unicode in zmqhandlers\n\nprevented session identity from being set properly,\nwhich in turn prevented stdin from working in the notebook in Python 3.\n\ncloses #3494", "commit_timestamp": "2013-07-13T01:47:56Z", "files": ["IPython/html/base/zmqhandlers.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo3ZmVjMDcyYWRjNDJiNDAyMGQyNWU3NWMxNTU3NjIzYjZmNmE5YmZi", "commit_message": "Merge pull request #3624 from minrk/argunicode\n\nfix some unicode in zmqhandlers\r\n\r\nPrevented session identity from being set properly, which in turn prevented stdin from working in the notebook in Python 3.\r\n\r\ncloses #3494", "commit_timestamp": "2013-07-14T18:19:57Z", "files": ["IPython/html/base/zmqhandlers.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjYyYzBmNmRiNDlkOWEyYjRjNmUzMDM4ZTFkMmRlZDM3YzlmZDM1MmQ=", "commit_message": "Merge pull request #3624 from minrk/argunicode\n\nfix some unicode in zmqhandlers\r\n\r\nPrevented session identity from being set properly, which in turn prevented stdin from working in the notebook in Python 3.\r\n\r\ncloses #3494", "commit_timestamp": "2013-07-14T18:19:57Z", "files": ["IPython/html/base/zmqhandlers.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjYyYzBmNmRiNDlkOWEyYjRjNmUzMDM4ZTFkMmRlZDM3YzlmZDM1MmQ=", "commit_message": "Merge pull request #3624 from minrk/argunicode\n\nfix some unicode in zmqhandlers\r\n\r\nPrevented session identity from being set properly, which in turn prevented stdin from working in the notebook in Python 3.\r\n\r\ncloses #3494", "commit_timestamp": "2013-07-14T18:19:57Z", "files": ["IPython/html/base/zmqhandlers.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo3ZmVjMDcyYWRjNDJiNDAyMGQyNWU3NWMxNTU3NjIzYjZmNmE5YmZi", "commit_message": "Merge pull request #3624 from minrk/argunicode\n\nfix some unicode in zmqhandlers\r\n\r\nPrevented session identity from being set properly, which in turn prevented stdin from working in the notebook in Python 3.\r\n\r\ncloses #3494", "commit_timestamp": "2013-07-14T18:19:57Z", "files": ["IPython/html/base/zmqhandlers.py"]}], "labels": ["bug"], "created_at": "2013-06-29T22:40:57Z", "closed_at": "2013-07-14T18:19:57Z", "linked_pr_number": [3494], "method": ["label", "regex"]}
{"issue_number": 3480, "title": "Testing fails because iptest.py cannot be found", "body": "When trying to run the tests using the command\n\n```\n$ python -c \"import IPython; IPython.test()\"\n```\n\nas suggested in the [documentation](http://ipython.org/ipython-doc/stable/development/testing.html#for-the-impatient-running-the-tests) I get the following errors:\n\n```\n**********************************************************************\nIPython test group: IPython.config\n/usr/bin/python: can't open file 'IPython/testing/iptest.py': [Errno 2] No such file or directory\n**********************************************************************\nIPython test group: IPython.core\n/usr/bin/python: can't open file 'IPython/testing/iptest.py': [Errno 2] No such file or directory\n...\n```\n\nand all the tests fail.\n\nReplacing [line 384 of iptest.py](https://github.com/ipython/ipython/blob/58fc464b96eafe88795e60f6ef8b134dda7efa52/IPython/testing/iptest.py#L384) with the following\n\n```\nsubp = subprocess.Popen([\"python\", \"-c\", \"import os; print os.getcwd()\"], env=env)\n```\n\nand rerunning the tests reveals that python starts in the <code>/tmp</code> directory which explains why <code>IPython/testing/iptest.py</code> is not found, although it is not clear why it happens.\n\nI am using the latest version of IPython from the repository and Python 2.7.4 on Ubuntu 13.04.\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU4NTE4OjYyMjIzNDg5YmFlMTk1ZjE4ZjE1MTViMDQ1N2E3Yjk3Njk2NmFiMjU=", "commit_message": "Merge pull request #3482 from vitaut/master\n\nUse an absolute path to iptest, closes #3480", "commit_timestamp": "2013-06-29T17:14:27Z", "files": ["IPython/testing/iptest.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo4MTlkNTAxNDkyYmY1NTk1MzA4YjlhZjkyNjNhOTkzYzQyNTc1Zjgy", "commit_message": "Merge pull request #3482 from vitaut/master\n\nUse an absolute path to iptest, closes #3480", "commit_timestamp": "2013-06-29T17:14:27Z", "files": ["IPython/testing/iptest.py"]}], "labels": [], "created_at": "2013-06-29T14:01:09Z", "closed_at": "2013-06-29T17:14:28Z", "method": ["regex"]}
{"issue_number": 3474, "title": "unexpected keyword argument to remove_kernel", "body": "Another minor error we ran into while debugging, when a kernel crashed:\n\n```\nTraceback (most recent call last):\n  File \"/usr/local/lib/python2.7/dist-packages/IPython/kernel/restarter.py\", line 85, in _fire_callbacks\n    callback()\n  File \"/usr/local/lib/python2.7/dist-packages/IPython/frontend/html/notebook/services/kernels/kernelmanager.py\", line 92, in <lambda>\n    lambda : self._handle_kernel_died(kernel_id),\n  File \"/usr/local/lib/python2.7/dist-packages/IPython/frontend/html/notebook/services/kernels/kernelmanager.py\", line 71, in _handle_kernel_died\n    self.remove_kernel(kernel_id, now=True)\nTypeError: remove_kernel() got an unexpected keyword argument 'now'\n```\n", "commits": [{"node_id": "MDY6Q29tbWl0MTIzNjAwMzoxOWY1YTIzNTBjMmQwYjc5M2QzMTQ0ZTZkMGYxYWI4MjVkNWE5NTUy", "commit_message": "Remove unexpected keyword parameter to remove_kernel\n\nCloses gh-3474", "commit_timestamp": "2013-06-29T22:01:34Z", "files": ["IPython/html/services/kernels/kernelmanager.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjNkYzA0ZjhlMDRmNGUzMjhhNDVlOGMwNWRkNjQ1NzQ5MGRhZTQwYzk=", "commit_message": "Merge pull request #3491 from takluyver/notebook-kernel-died\n\nRemove unexpected keyword parameter to remove_kernel\r\n\r\nnow is a relic from before cleaning up the kernel manager / restart logic\r\n\r\ncloses #3474", "commit_timestamp": "2013-06-29T22:16:46Z", "files": ["IPython/html/services/kernels/kernelmanager.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzpjM2VlMzUwMzU0ZjhiNmM2ODk5N2QxNTY1OGMyYmE1NTViNDQzNjMz", "commit_message": "Remove unexpected keyword parameter to remove_kernel\n\nCloses gh-3474", "commit_timestamp": "2013-06-29T22:01:34Z", "files": ["IPython/html/services/kernels/kernelmanager.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo4MWYwOWMxYzhmMzc5Zjk0MTg0NmRiNGZkZDE5ODZjNjI4Y2Q2NGMx", "commit_message": "Merge pull request #3491 from takluyver/notebook-kernel-died\n\nRemove unexpected keyword parameter to remove_kernel\r\n\r\nnow is a relic from before cleaning up the kernel manager / restart logic\r\n\r\ncloses #3474", "commit_timestamp": "2013-06-29T22:16:46Z", "files": ["IPython/html/services/kernels/kernelmanager.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjNkYzA0ZjhlMDRmNGUzMjhhNDVlOGMwNWRkNjQ1NzQ5MGRhZTQwYzk=", "commit_message": "Merge pull request #3491 from takluyver/notebook-kernel-died\n\nRemove unexpected keyword parameter to remove_kernel\r\n\r\nnow is a relic from before cleaning up the kernel manager / restart logic\r\n\r\ncloses #3474", "commit_timestamp": "2013-06-29T22:16:46Z", "files": ["IPython/html/services/kernels/kernelmanager.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjNkYzA0ZjhlMDRmNGUzMjhhNDVlOGMwNWRkNjQ1NzQ5MGRhZTQwYzk=", "commit_message": "Merge pull request #3491 from takluyver/notebook-kernel-died\n\nRemove unexpected keyword parameter to remove_kernel\r\n\r\nnow is a relic from before cleaning up the kernel manager / restart logic\r\n\r\ncloses #3474", "commit_timestamp": "2013-06-29T22:16:46Z", "files": ["IPython/html/services/kernels/kernelmanager.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo4MWYwOWMxYzhmMzc5Zjk0MTg0NmRiNGZkZDE5ODZjNjI4Y2Q2NGMx", "commit_message": "Merge pull request #3491 from takluyver/notebook-kernel-died\n\nRemove unexpected keyword parameter to remove_kernel\r\n\r\nnow is a relic from before cleaning up the kernel manager / restart logic\r\n\r\ncloses #3474", "commit_timestamp": "2013-06-29T22:16:46Z", "files": ["IPython/html/services/kernels/kernelmanager.py"]}], "labels": ["bug"], "created_at": "2013-06-27T01:15:20Z", "closed_at": "2013-06-29T22:16:46Z", "linked_pr_number": [3474], "method": ["label", "regex"]}
{"issue_number": 3473, "title": "Config not passed down to subcommands", "body": "Debugging a complex issue at Scipy, we ran into the fact that config manually passed in to `TerminalIPythonApp` doesn't get passed down to subcommands. The use case was overriding KernelManager.kernel_cmd to start notebook kernels in a Python interpreter running under Mono.\n\nAdding a `config=self.config` to [this call](https://github.com/ipython/ipython/blob/master/IPython/config/application.py#L398) solved it for us - is that the right way to do it?\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU5NDQ2OjQwMjc0NWExMDA1MDNjYzFjMDEzN2RmMDE3NjM5Y2Y3YjZjNGY3NWQ=", "commit_message": "pass config to subapps\n\ncloses #3473", "commit_timestamp": "2013-06-27T16:43:47Z", "files": ["IPython/config/application.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzpkMGEwZmI5NWI3YjUwNTVjN2Q1NDc3ZjQ2MTI4ODcxZGY4NTBjNTJm", "commit_message": "pass config to subapps\n\ncloses #3473", "commit_timestamp": "2013-06-27T16:43:47Z", "files": ["IPython/config/application.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmU0MmQ5ZjdjODIwM2MzYWU1ODhlMTU0ZTg1NjNjMDliZTc0YjZlZjI=", "commit_message": "Merge pull request #3477 from minrk/subappconfig\n\npass config to subapps", "commit_timestamp": "2013-06-27T22:44:53Z", "files": ["IPython/config/application.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmU0MmQ5ZjdjODIwM2MzYWU1ODhlMTU0ZTg1NjNjMDliZTc0YjZlZjI=", "commit_message": "Merge pull request #3477 from minrk/subappconfig\n\npass config to subapps", "commit_timestamp": "2013-06-27T22:44:53Z", "files": ["IPython/config/application.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzpkYTVmMjkwZDQ3NzExNTIxZjNhZjFiODRlZmE0MjVlZGEzNzkxZWM2", "commit_message": "Merge pull request #3477 from minrk/subappconfig\n\npass config to subapps", "commit_timestamp": "2013-06-27T22:44:53Z", "files": ["IPython/config/application.py"]}], "labels": [], "created_at": "2013-06-26T23:07:26Z", "closed_at": "2013-06-27T22:44:53Z", "linked_pr_number": [3473], "method": ["regex"]}
{"issue_number": 3467, "title": "%magic doesn't work", "body": "```\nIn [48]: %magic\n---------------------------------------------------------------------------\nAttributeError                            Traceback (most recent call last)\n<ipython-input-48-99e14b2858dd> in <module>()\n----> 1 get_ipython().magic(u'magic')\n\n/Users/aaronmeurer/Documents/ipython/IPython/core/interactiveshell.pyc in magic(self, arg_s)\n   2180         magic_name, _, magic_arg_s = arg_s.partition(' ')\n   2181         magic_name = magic_name.lstrip(prefilter.ESC_MAGIC)\n-> 2182         return self.run_line_magic(magic_name, magic_arg_s)\n   2183\n   2184     #-------------------------------------------------------------------------\n\n/Users/aaronmeurer/Documents/ipython/IPython/core/interactiveshell.pyc in run_line_magic(self, magic_name, line)\n   2101                 kwargs['local_ns'] = sys._getframe(stack_depth).f_locals\n   2102             with self.builtin_trap:\n-> 2103                 result = fn(*args,**kwargs)\n   2104             return result\n   2105\n\n/Users/aaronmeurer/Documents/ipython/IPython/core/magics/basic.pyc in magic(self, parameter_s)\n\n/Users/aaronmeurer/Documents/ipython/IPython/core/magic.pyc in <lambda>(f, *a, **k)\n    190     # but it's overkill for just that one bit of state.\n    191     def magic_deco(arg):\n--> 192         call = lambda f, *a, **k: f(*a, **k)\n    193\n    194         if callable(arg):\n\n/Users/aaronmeurer/Documents/ipython/IPython/core/magics/basic.pyc in magic(self, parameter_s)\n    272        magic_docs,\n    273        \"Summary of magic functions (from %slsmagic):\" % magic_escapes['line'],\n--> 274        self._lsmagic(),\n    275        ]\n    276         page.page('\\n'.join(out))\n\nAttributeError: 'BasicMagics' object has no attribute '_lsmagic'\n```\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU5NDQ2OjZiYWZkNzE1Y2VkNWQ5MDQwMTFiMjMxYjZiZDhkMzQ1MDM0MmQ0Zjk=", "commit_message": "fix `%magic` output\n\ncall lsmagic without underscore\n\ncloses #3467", "commit_timestamp": "2013-06-25T21:44:24Z", "files": ["IPython/core/magics/basic.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo3NjIzZTc3ZWU3ZDY4NzliNzY0YjFlMDI3ZWRhNmM1NDU5Njc2ZDFh", "commit_message": "fix `%magic` output\n\ncall lsmagic without underscore\n\ncloses #3467", "commit_timestamp": "2013-06-25T21:44:24Z", "files": ["IPython/core/magics/basic.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmM1NDUwMGExZTcwNDFjZjZhMzE2ZmUwYjY5NjA2MDI0NTQxZmE0OWM=", "commit_message": "Merge pull request #3468 from minrk/lsmagic\n\nfix `%magic` output", "commit_timestamp": "2013-07-01T04:29:10Z", "files": ["IPython/core/magics/basic.py", "IPython/core/tests/test_magic.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmM1NDUwMGExZTcwNDFjZjZhMzE2ZmUwYjY5NjA2MDI0NTQxZmE0OWM=", "commit_message": "Merge pull request #3468 from minrk/lsmagic\n\nfix `%magic` output", "commit_timestamp": "2013-07-01T04:29:10Z", "files": ["IPython/core/magics/basic.py", "IPython/core/tests/test_magic.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo4YzhhZTdiNjczMDdjNDc0MGEwZDViMDFkMTVmNjYyZWQzMDAzOGM0", "commit_message": "Merge pull request #3468 from minrk/lsmagic\n\nfix `%magic` output", "commit_timestamp": "2013-07-01T04:29:10Z", "files": ["IPython/core/magics/basic.py", "IPython/core/tests/test_magic.py"]}], "labels": [], "created_at": "2013-06-25T19:14:25Z", "closed_at": "2013-07-01T04:29:10Z", "linked_pr_number": [3467], "method": ["regex"]}
{"issue_number": 3462, "title": "Setting log_format in config file results in error (and no format changes)", "body": "Setting c.NotebookApp.log_format results in an error. The culprit is line 168 in config/application.py:\n\n``` python\n_log_formatter = LevelFormatter(new, datefmt=self._log_datefmt)\n```\n\nWhich should be:\n\n``` python\n_log_formatter = LevelFormatter(new, datefmt=self.log_datefmt)\n```\n\nwith no underscore before \"log_datefmt.\"\n", "commits": [{"node_id": "MDY6Q29tbWl0NzUzNzY4OjIyMjM2YmFhMDc0NGNhZjhjZDg4OGQ0OTkzOTFmYmFhZmZkYzExMTA=", "commit_message": "fix typo, closes #3462\n\nThanks to github user @gaulinmp for submitting a bug report and the\nsuggested fix.", "commit_timestamp": "2013-06-24T21:57:44Z", "files": ["IPython/config/application.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjIyMjM2YmFhMDc0NGNhZjhjZDg4OGQ0OTkzOTFmYmFhZmZkYzExMTA=", "commit_message": "fix typo, closes #3462\n\nThanks to github user @gaulinmp for submitting a bug report and the\nsuggested fix.", "commit_timestamp": "2013-06-24T21:57:44Z", "files": ["IPython/config/application.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmVhZTBiM2FkYThiNTg5MjkxY2QyYjNhODZhM2MwNTc3YTY2ODYwNGM=", "commit_message": "Merge pull request #3463 from ivanov/fix-3462\n\nfix typo, closes #3462\r\n\r\nThanks to github user @gaulinmp for submitting a bug report and the\r\nsuggested fix.", "commit_timestamp": "2013-06-26T21:56:18Z", "files": ["IPython/config/application.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo0Mzg1MTA0OGRjMGY2MTVmN2MyOGViOGU0NzEwNzA1OTU5ZGI0MDM4", "commit_message": "fix typo, closes #3462\n\nThanks to github user @gaulinmp for submitting a bug report and the\nsuggested fix.", "commit_timestamp": "2013-06-24T21:57:44Z", "files": ["IPython/config/application.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo3ZDQwNjNmYTJmNTdhODE0Mzk4Y2YxYTg3YjQxZWQ2OWYxNjU5YjFm", "commit_message": "Merge pull request #3463 from ivanov/fix-3462\n\nfix typo, closes #3462\r\n\r\nThanks to github user @gaulinmp for submitting a bug report and the\r\nsuggested fix.", "commit_timestamp": "2013-06-26T21:56:18Z", "files": ["IPython/config/application.py"]}], "labels": ["bug"], "created_at": "2013-06-24T21:53:10Z", "closed_at": "2013-06-26T21:56:19Z", "method": ["label"]}
{"issue_number": 3424, "title": "ipcluster --version", "body": "Display:\n\n```\n0.0\n```\n\nWhile ipengine and ipcontroller display the right version (0.13.2 and master).\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU5NDQ2OjlkYzZkYThjMjMwZDFkYjRkMTBlMjExYWZmMWUzOTBjZWVmMDY1ZTg=", "commit_message": "base IPClusterApp inherits from BaseIPythonApp\n\ncloses #3424", "commit_timestamp": "2013-06-13T15:25:43Z", "files": ["IPython/parallel/apps/ipclusterapp.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzpjMDY4ZmQ2M2YyMzc2MDFhMDY2MDI0MzZlNDNhMmU3MTllOWI2NDYw", "commit_message": "base IPClusterApp inherits from BaseIPythonApp\n\ncloses #3424", "commit_timestamp": "2013-06-13T15:25:43Z", "files": ["IPython/parallel/apps/ipclusterapp.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjAwNDBjNDg4OGRhY2M0OTFmMzk4OTdiNzUwYWVhMzU3NzY3MzU0ZjM=", "commit_message": "Merge pull request #3425 from minrk/clusterv\n\nbase IPClusterApp inherits from BaseIPythonApp", "commit_timestamp": "2013-06-15T22:03:08Z", "files": ["IPython/parallel/apps/ipclusterapp.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjAwNDBjNDg4OGRhY2M0OTFmMzk4OTdiNzUwYWVhMzU3NzY3MzU0ZjM=", "commit_message": "Merge pull request #3425 from minrk/clusterv\n\nbase IPClusterApp inherits from BaseIPythonApp", "commit_timestamp": "2013-06-15T22:03:08Z", "files": ["IPython/parallel/apps/ipclusterapp.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzpmOWY0OGQwZGUzMWNhNjUwMDJjZTI5Y2QwN2Y2Zjk3MDY1NTU2ZDEz", "commit_message": "Merge pull request #3425 from minrk/clusterv\n\nbase IPClusterApp inherits from BaseIPythonApp", "commit_timestamp": "2013-06-15T22:03:08Z", "files": ["IPython/parallel/apps/ipclusterapp.py"]}], "labels": ["bug", "parallel"], "created_at": "2013-06-13T08:52:51Z", "closed_at": "2013-06-15T22:03:08Z", "linked_pr_number": [3424], "method": ["label"]}
{"issue_number": 3386, "title": "Magic %paste not working in Python 3.3.2. TypeError: Type str doesn't support the buffer API", "body": "ipython3 version: 0.13.2\npython3 version: 3.3.2\nOS: Mac OS X 10.8.3\n\n```\nIn [1]: %paste\n---------------------------------------------------------------------------\nTypeError                                 Traceback (most recent call last)\n<ipython-input-1-86b9186405a3> in <module>()\n----> 1 get_ipython().magic('paste')\n\n/usr/local/lib/python3.3/site-packages/IPython/core/interactiveshell.py in magic(self, arg_s)\n   2135         magic_name, _, magic_arg_s = arg_s.partition(' ')\n   2136         magic_name = magic_name.lstrip(prefilter.ESC_MAGIC)\n-> 2137         return self.run_line_magic(magic_name, magic_arg_s)\n   2138\n   2139     #-------------------------------------------------------------------------\n\n/usr/local/lib/python3.3/site-packages/IPython/core/interactiveshell.py in run_line_magic(self, magic_name, line)\n   2061                 args.append(sys._getframe(stack_depth).f_locals)\n   2062             with self.builtin_trap:\n-> 2063                 result = fn(*args)\n   2064             return result\n   2065\n\n/usr/local/lib/python3.3/site-packages/IPython/frontend/terminal/interactiveshell.py in paste(self, parameter_s)\n\n/usr/local/lib/python3.3/site-packages/IPython/core/magic.py in <lambda>(f, *a, **k)\n    190     # but it's overkill for just that one bit of state.\n    191     def magic_deco(arg):\n--> 192         call = lambda f, *a, **k: f(*a, **k)\n    193\n    194         if isinstance(arg, collections.Callable):\n\n/usr/local/lib/python3.3/site-packages/IPython/frontend/terminal/interactiveshell.py in paste(self, parameter_s)\n    282         if 'q' not in opts:\n    283             write = self.shell.write\n--> 284             write(self.shell.pycolorize(block))\n    285             if not block.endswith('\\n'):\n    286                 write('\\n')\n\n/usr/local/lib/python3.3/site-packages/IPython/core/interactiveshell.py in <lambda>(src)\n    575         # Python source parser/formatter for syntax highlighting\n    576         pyformat = PyColorize.Parser().format\n--> 577         self.pycolorize = lambda src: pyformat(src,'str',self.colors)\n    578\n    579     def init_pushd_popd_magic(self):\n\n/usr/local/lib/python3.3/site-packages/IPython/utils/PyColorize.py in format(self, raw, out, scheme)\n    127\n    128     def format(self, raw, out = None, scheme = ''):\n--> 129         return self.format2(raw, out, scheme)[0]\n    130\n    131     def format2(self, raw, out = None, scheme = ''):\n\n/usr/local/lib/python3.3/site-packages/IPython/utils/PyColorize.py in format2(self, raw, out, scheme)\n    174         lines_append = self.lines.append\n    175         while 1:\n--> 176             pos = raw_find('\\n', pos) + 1\n    177             if not pos: break\n    178             lines_append(pos)\n\nTypeError: Type str doesn't support the buffer API\n```\n", "commits": [{"node_id": "MDY6Q29tbWl0MTIzNjAwMzo0MTRhODhkYzU2NjI2ZjBlZGY5YTE4MWRmODFjNDhlMzNjOGFiNjMy", "commit_message": "Better clipboard handling, esp. with pywin32\n\nEnsure that we get unicode from the clipboard when using pywin32.\nCloses gh-3386\n\nAlso catches the empty clipboard case and displays a short error\nmessage, instead of a huge traceback.", "commit_timestamp": "2013-10-30T00:40:52Z", "files": ["IPython/lib/clipboard.py", "IPython/terminal/interactiveshell.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzpmMWZhZjUwMjUwNjBiMjcxNjEzNjY5MDIzMDk2YTMwNGZiZTNhNjkz", "commit_message": "Better clipboard handling, esp. with pywin32\n\nEnsure that we get unicode from the clipboard when using pywin32.\nCloses gh-3386\n\nAlso catches the empty clipboard case and displays a short error\nmessage, instead of a huge traceback.", "commit_timestamp": "2013-10-30T00:40:52Z", "files": ["IPython/lib/clipboard.py", "IPython/terminal/interactiveshell.py"]}], "labels": ["bug"], "created_at": "2013-05-30T10:13:34Z", "closed_at": "2013-11-06T13:12:00Z", "method": ["label", "regex"]}
{"issue_number": 3385, "title": "setup.py failure on Python 3", "body": "#3340 causes more of the codebase to be imported from setup.py. Anything that's imported at that stage must be valid Python 3 syntax, because 2to3 hasn't run at that point.\n\nSpecifically, it now tries to load `IPython.utils.path`, which pulls in the config system, more of utils, pexpect, etc. and `IPython.frontend.html.notebook`, which is probably going to bring in most of the rest of the codebase.\n\nUnless we're going to bite the bullet and do a full source port straight away, we need a better way to determine whether setup.py is running for a package manager.\n\n```\nTraceback (most recent call last):\n  File \"setup.py\", line 145, in <module>\n    require_clean_submodules()\n  File \"setup.py\", line 129, in require_clean_submodules\n    status = check_submodule_status(here)\n  File \"IPython/utils/submodule.py\", line 64, in check_submodule_status\n    if is_package():\n  File \"IPython/utils/submodule.py\", line 46, in is_package\n    from IPython.utils.path import get_ipython_package_dir\n  File \"/home/slave/jenkins/workspace/ipython-multi/91fd20c6/IPython/__init__.py\", line 43, in <module>\n    from .config.loader import Config\n  File \"/home/slave/jenkins/workspace/ipython-multi/91fd20c6/IPython/config/__init__.py\", line 16, in <module>\n    from .application import *\n  File \"/home/slave/jenkins/workspace/ipython-multi/91fd20c6/IPython/config/application.py\", line 283\n    print os.linesep.join(lines)\n           ^\nSyntaxError: invalid syntax\n```\n", "commits": [{"node_id": "MDY6Q29tbWl0MTIzNjAwMzozYzRkODE5ZGNiYTFlYWRiNDE4NDRlNWRkZmE1MDk0ZjdjMGNlNTEz", "commit_message": "Make submodule checks work under Python 3.\n\nCloses gh-3385", "commit_timestamp": "2013-05-30T10:17:51Z", "files": ["IPython/utils/submodule.py", "setup.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjNjNGQ4MTlkY2JhMWVhZGI0MTg0NGU1ZGRmYTUwOTRmN2MwY2U1MTM=", "commit_message": "Make submodule checks work under Python 3.\n\nCloses gh-3385", "commit_timestamp": "2013-05-30T10:17:51Z", "files": ["IPython/utils/submodule.py", "setup.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzplZTM1YTZmZTZlMTkyNjMwYzQzM2M4NzEwYzlkYjU4NTEzZWU1ZmMx", "commit_message": "Make submodule checks work under Python 3.\n\nCloses gh-3385", "commit_timestamp": "2013-05-30T10:17:51Z", "files": ["IPython/utils/submodule.py", "setup.py"]}], "labels": ["important", "bug", "regression"], "created_at": "2013-05-30T09:58:13Z", "closed_at": "2013-05-30T18:52:52Z", "method": ["label"]}
{"issue_number": 3376, "title": "Setting `__module__` to None breaks pretty printing", "body": "```\nIn [1]: class Test: pass\n\nIn [2]: Test.__module__ = None\n\nIn [4]: Test\nOut[4]: ---------------------------------------------------------------------------\nTypeError                                 Traceback (most recent call last)\n<ipython-input-4-2205e48de5f9> in <module>()\n----> 1 Test\n\n/Users/aaronmeurer/Documents/ipython/IPython/core/displayhook.pyc in __call__(self, result)\n    236             self.start_displayhook()\n    237             self.write_output_prompt()\n--> 238             format_dict = self.compute_format_data(result)\n    239             self.write_format_data(format_dict)\n    240             self.update_user_ns(result)\n\n/Users/aaronmeurer/Documents/ipython/IPython/core/displayhook.pyc in compute_format_data(self, result)\n    148             MIME type representation of the object.\n    149         \"\"\"\n--> 150         return self.shell.display_formatter.format(result)\n    151\n    152     def write_format_data(self, format_dict):\n\n/Users/aaronmeurer/Documents/ipython/IPython/core/formatters.pyc in format(self, obj, include, exclude)\n    124                     continue\n    125             try:\n--> 126                 data = formatter(obj)\n    127             except:\n    128                 # FIXME: log the exception\n\n/Users/aaronmeurer/Documents/ipython/IPython/core/formatters.pyc in __call__(self, obj)\n    445                 type_pprinters=self.type_printers,\n    446                 deferred_pprinters=self.deferred_printers)\n--> 447             printer.pretty(obj)\n    448             printer.flush()\n    449             return stream.getvalue()\n\n/Users/aaronmeurer/Documents/ipython/IPython/lib/pretty.pyc in pretty(self, obj)\n    343                 if cls in self.type_pprinters:\n    344                     # printer registered in self.type_pprinters\n--> 345                     return self.type_pprinters[cls](obj, self, cycle)\n    346                 else:\n    347                     # deferred printer\n\n/Users/aaronmeurer/Documents/ipython/IPython/lib/pretty.pyc in _type_pprint(obj, p, cycle)\n    612         name = obj.__name__\n    613     else:\n--> 614         name = mod + '.' + obj.__name__\n    615     p.text(name)\n    616\n\nTypeError: unsupported operand type(s) for +: 'NoneType' and 'str'\n```\n\nSetting `__module__` to None is a way to make pickling work for dynamically defined classes in certain cases (see for example https://code.google.com/p/sympy/issues/detail?id=1198).  The `whichmodule` function in the pickling module does a custom search for the module if `__module__` is set to None. \n", "commits": [{"node_id": "MDY6Q29tbWl0NjU5NDQ2OmU5OTVjZGUzOTk1MjMwZjc5Mzg2MTg0N2I3MTEyZjZiN2QwMjU4YWE=", "commit_message": "allow class.__module__ to be None\n\ncloses #3376", "commit_timestamp": "2013-05-29T02:59:25Z", "files": ["IPython/lib/pretty.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzpmYmNjNTQyNTgzODMyYTA3NjI2MzRmYzQwYmU0NzY3ZWM5ZjA1MzU0", "commit_message": "allow class.__module__ to be None\n\ncloses #3376", "commit_timestamp": "2013-05-29T02:59:25Z", "files": ["IPython/lib/pretty.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjFmYzg0YjMyMDVlYzlhNjE2OGFjMDFiOGI0N2IwNmMwMjdkYWY2MjI=", "commit_message": "Merge pull request #3377 from minrk/nonemod\n\nallow class.__module__ to be None", "commit_timestamp": "2013-05-29T22:55:09Z", "files": ["IPython/lib/pretty.py", "IPython/lib/tests/test_pretty.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjFmYzg0YjMyMDVlYzlhNjE2OGFjMDFiOGI0N2IwNmMwMjdkYWY2MjI=", "commit_message": "Merge pull request #3377 from minrk/nonemod\n\nallow class.__module__ to be None", "commit_timestamp": "2013-05-29T22:55:09Z", "files": ["IPython/lib/pretty.py", "IPython/lib/tests/test_pretty.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzpjNTRiNzNkYjM1NmY3NmIzYWQ5ODFlZmJlZmU2OWRjNmM3MDkzNTFl", "commit_message": "Merge pull request #3377 from minrk/nonemod\n\nallow class.__module__ to be None", "commit_timestamp": "2013-05-29T22:55:09Z", "files": ["IPython/lib/pretty.py", "IPython/lib/tests/test_pretty.py"]}], "labels": ["bug"], "created_at": "2013-05-29T02:39:19Z", "closed_at": "2013-05-29T22:55:09Z", "linked_pr_number": [3376], "method": ["label"]}
{"issue_number": 3326, "title": "python3.3: Type error when launching SGE cluster in IPython notebook", "body": "IPython13.2: Launching a cluster configured for SGE use caused a type error stating that you cannot apply a regular expression to a byte sequence (that apparently was the result of some shell level command). Unfortunately, the exact message got lost.\nWorkaround: Change ib/python3.3/site-packages/ipython-0.13.2-py3.3.egg/IPython/parallel/apps/launcher.py a follows:\n\ndef parse_job_id(self, output):\n        \"\"\"Take the output of the submit command and return the job id.\"\"\"\n       output=output.decode('UTF8')\n...\n\nI guess that python3.3 issues like these lurk in many places where the result of a shell command (usually a byte string) is combined somehow with a python3.3 (unicode) string.\nGeorg\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU5NDQ2OmY2NjU3Y2I0N2YyZjRkODlhNWE0YjZhZDQ2NGQ5YmNmYTM1ZTkzY2Q=", "commit_message": "decode subprocess output in launchers\n\ncloses #3326", "commit_timestamp": "2013-05-16T16:22:21Z", "files": ["IPython/parallel/apps/launcher.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjQ4MzEzYzI0ZjNmNmIzMDAxZjYwZjEyZWQ4ZThhNTc0YWNkOGQwZWQ=", "commit_message": "Merge pull request #3328 from minrk/launcherbytes\n\ndecode subprocess output in launchers\r\n\r\ncloses #3326", "commit_timestamp": "2013-05-29T22:50:11Z", "files": ["IPython/parallel/apps/launcher.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzplOTFiYTk3MTcwZDgwOTE4MDYxOGM3ZGJmMDgxMjk4ZWQyZjk1ZmU1", "commit_message": "decode subprocess output in launchers\n\ncloses #3326", "commit_timestamp": "2013-05-16T16:22:21Z", "files": ["IPython/parallel/apps/launcher.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo0Y2VkYTdmNjUxNWM2NGRjMDBmMTI4M2FlZjY2MTQxNDkyYWUyMTMx", "commit_message": "Merge pull request #3328 from minrk/launcherbytes\n\ndecode subprocess output in launchers\r\n\r\ncloses #3326", "commit_timestamp": "2013-05-29T22:50:11Z", "files": ["IPython/parallel/apps/launcher.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjQ4MzEzYzI0ZjNmNmIzMDAxZjYwZjEyZWQ4ZThhNTc0YWNkOGQwZWQ=", "commit_message": "Merge pull request #3328 from minrk/launcherbytes\n\ndecode subprocess output in launchers\r\n\r\ncloses #3326", "commit_timestamp": "2013-05-29T22:50:11Z", "files": ["IPython/parallel/apps/launcher.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjQ4MzEzYzI0ZjNmNmIzMDAxZjYwZjEyZWQ4ZThhNTc0YWNkOGQwZWQ=", "commit_message": "Merge pull request #3328 from minrk/launcherbytes\n\ndecode subprocess output in launchers\r\n\r\ncloses #3326", "commit_timestamp": "2013-05-29T22:50:11Z", "files": ["IPython/parallel/apps/launcher.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo0Y2VkYTdmNjUxNWM2NGRjMDBmMTI4M2FlZjY2MTQxNDkyYWUyMTMx", "commit_message": "Merge pull request #3328 from minrk/launcherbytes\n\ndecode subprocess output in launchers\r\n\r\ncloses #3326", "commit_timestamp": "2013-05-29T22:50:11Z", "files": ["IPython/parallel/apps/launcher.py"]}], "labels": ["unicode", "bug", "parallel"], "created_at": "2013-05-16T09:23:04Z", "closed_at": "2013-05-23T11:06:54Z", "linked_pr_number": [3326], "method": ["label"]}
{"issue_number": 3316, "title": "find_cmd test failure on Windows", "body": "I think this is caused by #3301. The [Windows implementation of find_cmd](https://github.com/ipython/ipython/blob/master/IPython/utils/_process_win32.py#L74) expects a command name without an extension, but the test now uses 'python.exe'.\n\nI think that 'python.exe' is a valid command on Windows, so I think we should modify `find_cmd` to allow passing a command with an extension. Alternatively, we could modify the test to strip the extension.\n\n```\n======================================================================\nERROR: Make sure we find sys.exectable for python.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"S:\\Users\\slave\\Jenkins\\shiningpanda\\jobs\\d5f643a2\\virtualenvs\\ff035a1d\\lib\\site-packages\\nose\\case.py\", line 197, in runTest\n    self.test(*self.arg)\n  File \"S:\\Users\\slave\\Jenkins\\shiningpanda\\jobs\\d5f643a2\\virtualenvs\\ff035a1d\\lib\\site-packages\\ipython-1.0.dev-py2.7.egg\\IPython\\utils\\tests\\test_process.py\", line 36, in test_find_cmd_python\n    nt.assert_equal(find_cmd(python), sys.executable)\n  File \"S:\\Users\\slave\\Jenkins\\shiningpanda\\jobs\\d5f643a2\\virtualenvs\\ff035a1d\\lib\\site-packages\\ipython-1.0.dev-py2.7.egg\\IPython\\utils\\process.py\", line 67, in find_cmd\n    raise FindCmdError('command could not be found: %s' % cmd)\nFindCmdError: command could not be found: python.exe\n```\n", "commits": [{"node_id": "MDY6Q29tbWl0MTIzNjAwMzpmMzlkZjViZmRmODA3MTQwMzkxZDYxYTNkYjUyZGY1YTY2ZDViODc1", "commit_message": "Allow filename with extension in find_cmd in Windows.\n\ncloses gh-3316 (hopefully)", "commit_timestamp": "2013-05-18T10:52:29Z", "files": ["IPython/utils/_process_win32.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4Ojg0ZThiYjA4M2Q5MDc3ZWYwMDBmODNmY2E1ZWY5Mjk4NDQxNGUzMjI=", "commit_message": "Merge pull request #3338 from takluyver/i3316\n\ncloses #3316\r\n\r\nAccording to [documentation here](http://docs.activestate.com/activepython/2.4/pywin32/win32api__SearchPath_meth.html),\r\nSearchPath takes an optional third parameter for the extension,\r\nwhich is only added if the filename doesn't have an extension.", "commit_timestamp": "2013-07-15T17:59:55Z", "files": ["IPython/utils/_process_win32.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzozMDY5NDczOGZmNTY1ZmI2OWY5MjBhYmI5YmUzOGQ3NWRlZmY3ODU1", "commit_message": "Allow filename with extension in find_cmd in Windows.\n\ncloses gh-3316 (hopefully)", "commit_timestamp": "2013-05-18T10:52:29Z", "files": ["IPython/utils/_process_win32.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo3MjZhY2IzMjIzNTRhNGFkMzAzZjZmMmJiNjljM2Y2MjA5Y2M1ZWFi", "commit_message": "Merge pull request #3338 from takluyver/i3316\n\ncloses #3316\r\n\r\nAccording to [documentation here](http://docs.activestate.com/activepython/2.4/pywin32/win32api__SearchPath_meth.html),\r\nSearchPath takes an optional third parameter for the extension,\r\nwhich is only added if the filename doesn't have an extension.", "commit_timestamp": "2013-07-15T17:59:55Z", "files": ["IPython/utils/_process_win32.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4Ojg0ZThiYjA4M2Q5MDc3ZWYwMDBmODNmY2E1ZWY5Mjk4NDQxNGUzMjI=", "commit_message": "Merge pull request #3338 from takluyver/i3316\n\ncloses #3316\r\n\r\nAccording to [documentation here](http://docs.activestate.com/activepython/2.4/pywin32/win32api__SearchPath_meth.html),\r\nSearchPath takes an optional third parameter for the extension,\r\nwhich is only added if the filename doesn't have an extension.", "commit_timestamp": "2013-07-15T17:59:55Z", "files": ["IPython/utils/_process_win32.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4Ojg0ZThiYjA4M2Q5MDc3ZWYwMDBmODNmY2E1ZWY5Mjk4NDQxNGUzMjI=", "commit_message": "Merge pull request #3338 from takluyver/i3316\n\ncloses #3316\r\n\r\nAccording to [documentation here](http://docs.activestate.com/activepython/2.4/pywin32/win32api__SearchPath_meth.html),\r\nSearchPath takes an optional third parameter for the extension,\r\nwhich is only added if the filename doesn't have an extension.", "commit_timestamp": "2013-07-15T17:59:55Z", "files": ["IPython/utils/_process_win32.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo3MjZhY2IzMjIzNTRhNGFkMzAzZjZmMmJiNjljM2Y2MjA5Y2M1ZWFi", "commit_message": "Merge pull request #3338 from takluyver/i3316\n\ncloses #3316\r\n\r\nAccording to [documentation here](http://docs.activestate.com/activepython/2.4/pywin32/win32api__SearchPath_meth.html),\r\nSearchPath takes an optional third parameter for the extension,\r\nwhich is only added if the filename doesn't have an extension.", "commit_timestamp": "2013-07-15T17:59:55Z", "files": ["IPython/utils/_process_win32.py"]}], "labels": ["windows", "bug", "regression"], "created_at": "2013-05-14T12:08:02Z", "closed_at": "2013-07-15T17:59:55Z", "linked_pr_number": [3316], "method": ["label"]}
{"issue_number": 3280, "title": "IPython.utils.process.getoutput returns stderr", "body": "the doc of IPython.utils.process.getoutput says is returns stdout, but it returns stderr too.\nTo reproduce fix the broken testcase due to multiple definition:\n\n```\n--- a/IPython/utils/tests/test_process.py\n+++ b/IPython/utils/tests/test_process.py\n@@ -125,7 +125,7 @@ def test_getoutput_quoted2(self):\n         out = getoutput(\"python -c 'print (\\\"1\\\")'\")\n         self.assertEqual(out.strip(), '1')\n\n-    def test_getoutput(self):\n+    def test_getoutput_error(self):\n```\n\nand get:\n\n```\nFAIL: test_getoutput\n\nself.assertEqual(out, 'on stdout')\nAssertionError: 'on stdouton stderr' != 'on stdout'\n- on stdouton stderr\n+ on stdout\n```\n", "commits": [{"node_id": "MDY6Q29tbWl0MjA2NTk3MTo1MzUyMTk0NTJkZmQ2OGJkYTcyNzI5MWE0NTg3N2MwZDNiODQ3NWMz", "commit_message": "fix documentation and test of getoutput\n\nit returns both stdout and stderr\ncloses gh-3280", "commit_timestamp": "2013-05-10T14:03:08Z", "files": ["IPython/utils/_process_common.py", "IPython/utils/tests/test_process.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjUzNTIxOTQ1MmRmZDY4YmRhNzI3MjkxYTQ1ODc3YzBkM2I4NDc1YzM=", "commit_message": "fix documentation and test of getoutput\n\nit returns both stdout and stderr\ncloses gh-3280", "commit_timestamp": "2013-05-10T14:03:08Z", "files": ["IPython/utils/_process_common.py", "IPython/utils/tests/test_process.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzoyOGU1ZmM0NTY5MGM1MmJkMjIzYmE1ZGQ3MjM2MjA2YmRhMzE2ZjIw", "commit_message": "fix documentation and test of getoutput\n\nit returns both stdout and stderr\ncloses gh-3280", "commit_timestamp": "2013-05-10T14:03:08Z", "files": ["IPython/utils/_process_common.py", "IPython/utils/tests/test_process.py"]}], "labels": ["bug"], "created_at": "2013-05-05T16:11:36Z", "closed_at": "2013-05-10T15:17:20Z", "method": ["label", "regex"]}
{"issue_number": 3257, "title": "setup.py not finding submodules", "body": "Looks like the submodule is in `.../components`, but it's checking for `.../external`.\n\n```\n$ python setup.py install\nupdating git submodules\nSubmodule 'components' (git://github.com/ipython/ipython-components.git) registered for path 'IPython/frontend/html/notebook/static/components'\nCloning into 'IPython/frontend/html/notebook/static/components'...\nremote: Counting objects: 886, done.\nremote: Compressing objects: 100% (766/766), done.\nremote: Total 886 (delta 76), reused 872 (delta 62)\nReceiving objects: 100% (886/886), 1.42 MiB | 678 KiB/s, done.\nResolving deltas: 100% (76/76), done.\nSubmodule path 'IPython/frontend/html/notebook/static/components': checked out 'f7467391a9f9d4868f0bbf0d088fd572625862a4'\n============================================================================\nBUILDING IPYTHON\n                python: 2.7.4 (default, Apr 19 2013, 18:32:33)  [GCC 4.7.3]\n              platform: linux2\n\nOPTIONAL DEPENDENCIES\n                sphinx: 1.2b1\n              pygments: 1.6\n                  nose: 1.1.2\n               pexpect: 2.4\n                 pyzmq: 2.2.0.1\n              readline: yes\nrunning install\nrunning build\nrunning build_py\nsubmodules missing! Run `setup.py submodule` and try again\n\n$ python setup.py submodule\nupdating git submodules\n============================================================================\nBUILDING IPYTHON\n                python: 2.7.4 (default, Apr 19 2013, 18:32:33)  [GCC 4.7.3]\n              platform: linux2\n\nOPTIONAL DEPENDENCIES\n                sphinx: 1.2b1\n              pygments: 1.6\n                  nose: 1.1.2\n               pexpect: 2.4\n                 pyzmq: 2.2.0.1\n              readline: yes\nrunning submodule\ngit submodule init\ngit submodule update --recursive\nsubmodules could not be checked out\n```\n", "commits": [{"node_id": "MDY6Q29tbWl0MTIzNjAwMzphMThlMDEzZjNlZTQ0YjVhMjFlZmE3NjYzMWVkNjhiYTJlYmY5YjM3", "commit_message": "Fix for checking submodules location\n\nCloses gh-3257", "commit_timestamp": "2013-05-02T12:47:18Z", "files": ["setupbase.py"]}, {"node_id": "MDY6Q29tbWl0NjU5NDQ2OjFjZTlmYmM0NWQzM2M5ZjBkNWVlZThjNjg3Njc1NmVhMDFiMDczZGQ=", "commit_message": "fix `setup.py submodule`\n\ncloses #3257", "commit_timestamp": "2013-05-02T15:54:11Z", "files": ["setupbase.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmExOGUwMTNmM2VlNDRiNWEyMWVmYTc2NjMxZWQ2OGJhMmViZjliMzc=", "commit_message": "Fix for checking submodules location\n\nCloses gh-3257", "commit_timestamp": "2013-05-02T12:47:18Z", "files": ["setupbase.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzpkMWVhMjBmMDA5OWI4ZDM3ODExMDcyZjU2ODcxYmFhYmRhNTY1MmYx", "commit_message": "Fix for checking submodules location\n\nCloses gh-3257", "commit_timestamp": "2013-05-02T12:47:18Z", "files": ["setupbase.py"]}], "labels": ["important", "bug", "notebook", "regression"], "created_at": "2013-05-02T12:43:29Z", "closed_at": "2013-05-02T15:55:39Z", "method": ["label"]}
{"issue_number": 3248, "title": "Cell magics broken in Qt console", "body": "(From Dave Hirschfield on the mailing list)\n\nNo combination of enter, shift-enter or even ctrl-enter will seem to exit a\ncell magic in the qtconsole with the latest ipython.\n\nIs anyone else seeing this behaviour?\n\n```\nIn [15]: print sys_info()\n{'commit_hash': 'ddc8bac',\n 'commit_source': 'repository',\n 'default_encoding': 'cp1252',\n 'ipython_path': 'c:\\\\dev\\\\code\\\\ipython\\\\IPython',\n 'ipython_version': '1.0.dev',\n 'os_name': 'nt',\n 'platform': 'Windows-7-6.1.7601-SP1',\n 'sys_executable': 'C:\\\\dev\\\\bin\\\\Python27\\\\python.exe',\n 'sys_platform': 'win32',\n 'sys_version': '2.7.2 (default, Jun 12 2011, 15:08:59) [MSC v.1500 32 bit\n(Intel)]'}\n\nIn [16]: %%timeit\n    ...: x = 10\n    ...: y = 2*x\n    ...:\n    ...:\n    ...:\n    ...:  <======= Can't get it to exit!?!\n```\n", "commits": [{"node_id": "MDY6Q29tbWl0MTIzNjAwMzo5NGYxYzljN2E4NmUwNjczNjQxNjQ0MDc2Y2E3ZjBkMzQ1MGQyMmRm", "commit_message": "Make line_input_checker=True the default for InputSplitter.\n\nThe Qt console needs to use it in line_input_checker mode, but can't specify\narguments in case it's using the InputSplitter base class.\n\nCloses gh-3248", "commit_timestamp": "2013-05-01T22:09:22Z", "files": ["IPython/core/inputsplitter.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4Ojk0ZjFjOWM3YTg2ZTA2NzM2NDE2NDQwNzZjYTdmMGQzNDUwZDIyZGY=", "commit_message": "Make line_input_checker=True the default for InputSplitter.\n\nThe Qt console needs to use it in line_input_checker mode, but can't specify\narguments in case it's using the InputSplitter base class.\n\nCloses gh-3248", "commit_timestamp": "2013-05-01T22:09:22Z", "files": ["IPython/core/inputsplitter.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzphZWNlYTUzNTgyNjQ0NjZkOGU5ZGUzNGVkNmY3MjRjZTIzNGRjMTc1", "commit_message": "Make line_input_checker=True the default for InputSplitter.\n\nThe Qt console needs to use it in line_input_checker mode, but can't specify\narguments in case it's using the InputSplitter base class.\n\nCloses gh-3248", "commit_timestamp": "2013-05-01T22:09:22Z", "files": ["IPython/core/inputsplitter.py"]}], "labels": ["important", "qtconsole"], "created_at": "2013-05-01T11:42:24Z", "closed_at": "2013-05-01T22:33:17Z", "method": ["regex"]}
{"issue_number": 3246, "title": "%paste regression with blank lines", "body": "I just update to master at 55129be.\n\nI'm able to reproduce with the following code\n\n```\ndef other_func(f):\n    return f\n\ndef some_other_func(f):\n    return f\n\ndef func(foo):\n    foo = some_other_func(foo)\n\n    C = some_other_func(foo)\n    # have a blank line\n    C = other_func(C)\n    return foo\n```\n\nCopy and %paste it into the terminal\n\n```\n## -- End pasted text --\n---------------------------------------------------------------------------\nNameError                                 Traceback (most recent call last)\n<ipython-input-1-f582da7d368d> in <module>()\n     11 \n     12 \n---> 13 C = some_other_func(foo)\n     14 # have a blank line\n     15 C = other_func(C)\n\nNameError: name 'foo' is not defined  \n```\n\nThen if I do\n\n```\nfoo = None\n%paste\n```\n\nI get \n\n```\n---------------------------------------------------------------------------\nNameError                                 Traceback (most recent call last)\n<ipython-input-1-f582da7d368d> in <module>()\n     11 \n     12 \n---> 13 C = some_other_func(foo)\n     14 # have a blank line\n     15 C = other_func(C)\n\nNameError: name 'foo' is not defined\n\n## -- End pasted text --\n---> NameError(Traceback (most recent call last))\n---> NameError(: name 'foo' is not defined  )\n  File \"<ipython-input-8-595d0b69a1da>\", line 2\n    ---------------------------------------------------------------------------\n                                                                               ^\nSyntaxError: invalid syntax\n```\n\nThough if I remove the comment line and define at the prompt `foo=1` I get a return outside of function\n\n```\n[3]: paste\ndef other_func(f):\n    return f\n\ndef some_other_func(f):\n    return f\n\ndef func(foo):\n    foo = some_other_func(foo)\n\n    C = some_other_func(foo)\n    C = other_func(C)\n    return foo\n\n## -- End pasted text --\n  File \"<ipython-input-3-77617947b1c7>\", line 15\n    return foo\nSyntaxError: 'return' outside function\n```\n", "commits": [{"node_id": "MDY6Q29tbWl0MTIzNjAwMzo2NTIxYzYzZTUwZGM5MjJmM2FmZWQ1ZjU3MWQwMzkwZTRjYjFkMTk3", "commit_message": "Failing test for gh-3246", "commit_timestamp": "2013-05-25T17:27:03Z", "files": ["IPython/frontend/terminal/tests/test_interactivshell.py"]}, {"node_id": "MDY6Q29tbWl0MTIzNjAwMzo1Y2Y5ODkxM2Y0YjJjZjMwNDE0NjRiY2VlMGFmMGE1ZDQ2MjFjMjZl", "commit_message": "Use new input transformation API in %paste\n\nCloses gh-3246", "commit_timestamp": "2013-05-25T17:28:33Z", "files": ["IPython/frontend/terminal/interactiveshell.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo5OWNjZDE2MDkwYTZhOWVlNTg5NGI2OTZiMWVmODc1MmY1OWFlZjIy", "commit_message": "Failing test for gh-3246", "commit_timestamp": "2013-05-25T17:27:03Z", "files": ["IPython/frontend/terminal/tests/test_interactivshell.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzpmZmIyOTExNjVlOWE2YjlkMmQ5Nzc2NmU2NzI1YTYyNDYxMDYxNGQ5", "commit_message": "Use new input transformation API in %paste\n\nCloses gh-3246", "commit_timestamp": "2013-05-25T17:28:33Z", "files": ["IPython/frontend/terminal/interactiveshell.py"]}], "labels": ["bug", "regression"], "created_at": "2013-04-30T19:31:05Z", "closed_at": "2013-06-06T09:20:22Z", "method": ["label", "regex"]}
{"issue_number": 3245, "title": "SyntaxError: encoding declaration in Unicode string", "body": "```\nIn [1]: # -*- coding: utf-8 -*-\n  File \"<ipython-input-1-df4697b9472e>\", line unknown\nSyntaxError: encoding declaration in Unicode string\n```\n\nIn regular Python\n\n``` py\n>>> # -*- coding: utf-8 -*-\n...\n>>>\n```\n\nThis came up `%paste`ing an example from http://numba.pydata.org/numba-doc/dev/examples.html#id1.\n\nThis seems related to #1103. \n", "commits": [{"node_id": "MDY6Q29tbWl0NjU5NDQ2OmFjZGI4YjBiMDgwNTdhYjQxMzUxODA2YWVmOWJkOGE5YjY0OTFkNjM=", "commit_message": "add strip_encoding_cookie transformer\n\ncloses #3245", "commit_timestamp": "2013-07-16T23:12:44Z", "files": ["IPython/core/inputsplitter.py", "IPython/core/inputtransformer.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmY1NWFhOGZjZDUwZDYyNmVlZDYyZWUyNjRmYTMxZGNmOTAzODhhMDA=", "commit_message": "Merge pull request #3662 from minrk/coding_transform\n\nadd strip_encoding_cookie transformer\r\n\r\nstrips # coding: utf-8 comments from input, which can cause SyntaxErrors\r\n\r\ncloses #3245", "commit_timestamp": "2013-07-17T17:27:12Z", "files": ["IPython/core/inputsplitter.py", "IPython/core/inputtransformer.py", "IPython/core/magics/code.py", "IPython/core/tests/test_inputtransformer.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzoxZTU4NzQ4MTM3NjZhMmViM2Q0ODQ4YTZkNjRiODVkMTNhM2IwODM0", "commit_message": "add strip_encoding_cookie transformer\n\ncloses #3245", "commit_timestamp": "2013-07-16T23:12:44Z", "files": ["IPython/core/inputsplitter.py", "IPython/core/inputtransformer.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzpiZDFkYjcxZDBmNjMyMGU2YTRiMDg0MWFlZjExOTI4YjgyNjVhOTA2", "commit_message": "Merge pull request #3662 from minrk/coding_transform\n\nadd strip_encoding_cookie transformer\r\n\r\nstrips # coding: utf-8 comments from input, which can cause SyntaxErrors\r\n\r\ncloses #3245", "commit_timestamp": "2013-07-17T17:27:12Z", "files": ["IPython/core/inputsplitter.py", "IPython/core/inputtransformer.py", "IPython/core/magics/code.py", "IPython/core/tests/test_inputtransformer.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmY1NWFhOGZjZDUwZDYyNmVlZDYyZWUyNjRmYTMxZGNmOTAzODhhMDA=", "commit_message": "Merge pull request #3662 from minrk/coding_transform\n\nadd strip_encoding_cookie transformer\r\n\r\nstrips # coding: utf-8 comments from input, which can cause SyntaxErrors\r\n\r\ncloses #3245", "commit_timestamp": "2013-07-17T17:27:12Z", "files": ["IPython/core/inputsplitter.py", "IPython/core/inputtransformer.py", "IPython/core/magics/code.py", "IPython/core/tests/test_inputtransformer.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmY1NWFhOGZjZDUwZDYyNmVlZDYyZWUyNjRmYTMxZGNmOTAzODhhMDA=", "commit_message": "Merge pull request #3662 from minrk/coding_transform\n\nadd strip_encoding_cookie transformer\r\n\r\nstrips # coding: utf-8 comments from input, which can cause SyntaxErrors\r\n\r\ncloses #3245", "commit_timestamp": "2013-07-17T17:27:12Z", "files": ["IPython/core/inputsplitter.py", "IPython/core/inputtransformer.py", "IPython/core/magics/code.py", "IPython/core/tests/test_inputtransformer.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzpiZDFkYjcxZDBmNjMyMGU2YTRiMDg0MWFlZjExOTI4YjgyNjVhOTA2", "commit_message": "Merge pull request #3662 from minrk/coding_transform\n\nadd strip_encoding_cookie transformer\r\n\r\nstrips # coding: utf-8 comments from input, which can cause SyntaxErrors\r\n\r\ncloses #3245", "commit_timestamp": "2013-07-17T17:27:12Z", "files": ["IPython/core/inputsplitter.py", "IPython/core/inputtransformer.py", "IPython/core/magics/code.py", "IPython/core/tests/test_inputtransformer.py"]}], "labels": ["unicode", "bug"], "created_at": "2013-04-30T17:27:44Z", "closed_at": "2013-07-17T17:27:12Z", "linked_pr_number": [3245], "method": ["label"]}
{"issue_number": 3236, "title": "cannot set TerminalIPythonApp.log_format", "body": "Setting the log_format of IPython's application is without effect. \n\nin ipython_config.py:\n\n``` python\nc = get_config()\nc.TerminalIPythonApp.log_format = '[%(name)s] %(levelname)s: %(message)s'\n```\n\nmakes nothing since there's nothing to handle change of log_format. log_format is marked as configurable, so this is a bug.\n\nHere is a patch:\n\n```\ndiff --git a/IPython/config/application.py b/IPython/config/application.py\nindex f9e94ee..354b6bb 100644\n--- a/IPython/config/application.py\n+++ b/IPython/config/application.py\n@@ -136,6 +136,13 @@\n     log_format = Unicode(\"[%(name)s] %(message)s\", config=True,\n         help=\"The Logging format template\",\n     )\n+    def _log_format_changed(self, name, old, new):\n+        \"\"\"Adjust the log format\"\"\"\n+        _handler = self.log.handlers[0]\n+        _formatter = logging.Formatter(new)\n+        _handler.setFormatter(_formatter)\n+        self.log_format = new\n+\n     log = Instance(logging.Logger)\n     def _log_default(self):\n     \"\"\"Start logging for this application.\n```\n", "commits": [{"node_id": "MDY6Q29tbWl0OTc2Njc3MjoyYzg5Yzg3YWQ4M2VjYmJiNjFlN2ViZDBkNWQyOGYyNGVmMDYyNmIx", "commit_message": "Make changes of Application.log_format effective (#3236) \n\nSigned-off-by: Boris de Laage <boris.delaage@synchrotron-soleil.fr>", "commit_timestamp": "2013-04-30T08:46:08Z", "files": ["IPython/config/application.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4Ojg5YWJjYTdkZTFjOThhM2E4NGIwMGI4YjAxY2Y2NzA2ODg2NjNhNDE=", "commit_message": "Merge pull request #3242 from babouaya/master\n\nMake changes of Application.log_format effective\r\n\r\ncloses #3236", "commit_timestamp": "2013-04-30T19:22:58Z", "files": ["IPython/config/application.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo5YzczYzgwYjg1M2NhMGMzMTIxNzg4ZDgzNWJhMDYwZTZjMWVhZjU1", "commit_message": "Make changes of Application.log_format effective (#3236) \n\nSigned-off-by: Boris de Laage <boris.delaage@synchrotron-soleil.fr>", "commit_timestamp": "2013-04-30T08:46:08Z", "files": ["IPython/config/application.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzoyYWUwN2E0ODU5OTE0ZDJkNDJiNmNiZmNjNDNlMWY0MmQzZjMzOGJm", "commit_message": "Merge pull request #3242 from babouaya/master\n\nMake changes of Application.log_format effective\r\n\r\ncloses #3236", "commit_timestamp": "2013-04-30T19:22:58Z", "files": ["IPython/config/application.py"]}], "labels": ["bug"], "created_at": "2013-04-29T14:48:23Z", "closed_at": "2013-04-30T19:22:59Z", "method": ["label", "regex"]}
{"issue_number": 3206, "title": "Copy/Paste Regression in QtConsole", "body": "As discussed on list:\n\nhttp://article.gmane.org/gmane.comp.python.ipython.devel/10253\n\nCopy/Paste no longer seems to be correctly stripping continuation prompts.\n", "commits": [{"node_id": "MDY6Q29tbWl0MTIzNjAwMzplM2RmNDBjZmIzMTc2MjBhNmRmOWI3MjA5NTYwMDU1MTkxY2NlNzBj", "commit_message": "Strip prompts even if the prompt isn't present on the first line.\n\nUsers (including me) often copy and paste examples from just after the first\nprompt. This checks for prompts in the first two lines of a block, but if they\naren't found there, it will ignore prompt-like prefixes in later lines, to\nminimise interference with multi-line strings etc.\n\nCloses gh-3206", "commit_timestamp": "2013-05-15T21:35:45Z", "files": ["IPython/core/inputtransformer.py", "IPython/core/tests/test_inputtransformer.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmUzZGY0MGNmYjMxNzYyMGE2ZGY5YjcyMDk1NjAwNTUxOTFjY2U3MGM=", "commit_message": "Strip prompts even if the prompt isn't present on the first line.\n\nUsers (including me) often copy and paste examples from just after the first\nprompt. This checks for prompts in the first two lines of a block, but if they\naren't found there, it will ignore prompt-like prefixes in later lines, to\nminimise interference with multi-line strings etc.\n\nCloses gh-3206", "commit_timestamp": "2013-05-15T21:35:45Z", "files": ["IPython/core/inputtransformer.py", "IPython/core/tests/test_inputtransformer.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjY4OWQ3YmZjMDJjNjdmNDI5ZWViYmViOGU0MzUxNTEyYTU2ZjliNjI=", "commit_message": "Merge pull request #3323 from takluyver/strip-prompts\n\nStrip prompts even if the prompt isn't present on the first line.\r\n\r\nUsers (including me) often copy and paste examples from just after the first prompt. This checks for prompts in the first two lines of a block, but if they aren't found there, it will ignore prompt-like prefixes in later lines, to minimise interference with multi-line strings etc.\r\n\r\nThis fixes both incoming copies (transformed before running code) and outgoing (copied from the Qt console).\r\n\r\nCloses #3206", "commit_timestamp": "2013-05-18T18:07:38Z", "files": ["IPython/core/inputtransformer.py", "IPython/core/tests/test_inputtransformer.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzoyZWJjYjdjMzQ1ZTU5OGVkZmI3ZGUxYTlhNmFlNjMwMGY5ZTdjOThi", "commit_message": "Strip prompts even if the prompt isn't present on the first line.\n\nUsers (including me) often copy and paste examples from just after the first\nprompt. This checks for prompts in the first two lines of a block, but if they\naren't found there, it will ignore prompt-like prefixes in later lines, to\nminimise interference with multi-line strings etc.\n\nCloses gh-3206", "commit_timestamp": "2013-05-15T21:35:45Z", "files": ["IPython/core/inputtransformer.py", "IPython/core/tests/test_inputtransformer.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzozNTgwZDUyMTVkYjMxMDU4YTQ2YzliZDA0NDUxMDUyNjQzZTFjMWY5", "commit_message": "Merge pull request #3323 from takluyver/strip-prompts\n\nStrip prompts even if the prompt isn't present on the first line.\r\n\r\nUsers (including me) often copy and paste examples from just after the first prompt. This checks for prompts in the first two lines of a block, but if they aren't found there, it will ignore prompt-like prefixes in later lines, to minimise interference with multi-line strings etc.\r\n\r\nThis fixes both incoming copies (transformed before running code) and outgoing (copied from the Qt console).\r\n\r\nCloses #3206", "commit_timestamp": "2013-05-18T18:07:38Z", "files": ["IPython/core/inputtransformer.py", "IPython/core/tests/test_inputtransformer.py"]}], "labels": ["qtconsole", "bug", "regression"], "created_at": "2013-04-22T15:11:12Z", "closed_at": "2013-05-18T18:07:38Z", "method": ["label"]}
{"issue_number": 3178, "title": "cell magics do not work with empty lines after #2447", "body": "a file cell magic looking like this:\n\n```\n%%file /tmp/test.py\nline1\n\nline3\n```\n\nwill give an error with the current 1.0dev git head but it worked fine with 0.13.2\n\n```\nNameError: line3 does not exist\n```\n\nremoving the empty line avoids the issue, but that is not really acceptable for readability\n\nAlso the docstring says for the notebook -f is implied but it does not say what -f does.\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU5NDQ2OjRiOWQ3ZjUyOTVjODc4ODM4MzFmZjRmYjY3NGYyM2MzZmUzYmI5YTk=", "commit_message": "clarify %%file docstring\n\nthere was a leftover mention of `-f`, which doesn't actually exist.\n\nsee #3178", "commit_timestamp": "2013-04-15T20:32:46Z", "files": ["IPython/core/magics/osm.py"]}, {"node_id": "MDY6Q29tbWl0MTIzNjAwMzowMTRkN2NhN2M2Y2JhZDQ2MjYxYzlkZjg2YWE1ZTA0Y2RkZGY5MTdi", "commit_message": "Separate InteractiveShell.input_splitter into two instances.\n\n* input_splitter is used to detect when a cell is complete\n* input_transformer_manager transforms completed cells\n\nCloses gh-3178", "commit_timestamp": "2013-04-20T10:33:34Z", "files": ["IPython/core/interactiveshell.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjAxNGQ3Y2E3YzZjYmFkNDYyNjFjOWRmODZhYTVlMDRjZGRkZjkxN2I=", "commit_message": "Separate InteractiveShell.input_splitter into two instances.\n\n* input_splitter is used to detect when a cell is complete\n* input_transformer_manager transforms completed cells\n\nCloses gh-3178", "commit_timestamp": "2013-04-20T10:33:34Z", "files": ["IPython/core/interactiveshell.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjQxMGRmOTY0YjA5YjVjYTZkZjE1MTFhOTJlYzJjYjc2MjNhMDRmOGY=", "commit_message": "Merge pull request #3203 from takluyver/cell-magics-wholecell\n\nSeparate InputSplitter for transforming whole cells\r\n\r\nThis allows cell magics to include blank lines once again (closes #3178).\r\n\r\nInteractiveShell now has two input splitters:\r\n\r\n- `input_splitter` is used to determine when a block of input is complete, so you can use a cell magic in the terminal by leaving a blank line at the end.\r\n- `input_transformer_manager` is used to transform whole cells, so cell magics affect the whole of their cell.\r\n\r\nI removed the similar concept of 'input modes' for InputSplitter, because it was bound to get conflated, and it made the code rather hard to follow.", "commit_timestamp": "2013-04-21T18:04:27Z", "files": ["IPython/core/inputsplitter.py", "IPython/core/inputtransformer.py", "IPython/core/interactiveshell.py", "IPython/core/tests/test_inputsplitter.py", "IPython/core/tests/test_inputtransformer.py", "IPython/frontend/qt/console/frontend_widget.py", "IPython/frontend/terminal/interactiveshell.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo3YjE4OTBhOGM1ZWU3ZTkzZTBhOTljNjZiZGY4MzNiMmRhZGUwOTE0", "commit_message": "clarify %%file docstring\n\nthere was a leftover mention of `-f`, which doesn't actually exist.\n\nsee #3178", "commit_timestamp": "2013-04-15T20:32:46Z", "files": ["IPython/core/magics/osm.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzpmZjBmODliMmFmYTU3NjY5NWQwY2M4OGRiNGQ1MTM3ZWMyMTdiNjQ4", "commit_message": "Separate InteractiveShell.input_splitter into two instances.\n\n* input_splitter is used to detect when a cell is complete\n* input_transformer_manager transforms completed cells\n\nCloses gh-3178", "commit_timestamp": "2013-04-20T10:33:34Z", "files": ["IPython/core/interactiveshell.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzoyNTc5MjhhMGE2NzdkY2FiNThjNTRjNGU1N2E0MWNlYWQzZTgzNWU4", "commit_message": "Merge pull request #3203 from takluyver/cell-magics-wholecell\n\nSeparate InputSplitter for transforming whole cells\r\n\r\nThis allows cell magics to include blank lines once again (closes #3178).\r\n\r\nInteractiveShell now has two input splitters:\r\n\r\n- `input_splitter` is used to determine when a block of input is complete, so you can use a cell magic in the terminal by leaving a blank line at the end.\r\n- `input_transformer_manager` is used to transform whole cells, so cell magics affect the whole of their cell.\r\n\r\nI removed the similar concept of 'input modes' for InputSplitter, because it was bound to get conflated, and it made the code rather hard to follow.", "commit_timestamp": "2013-04-21T18:04:27Z", "files": ["IPython/core/inputsplitter.py", "IPython/core/inputtransformer.py", "IPython/core/interactiveshell.py", "IPython/core/tests/test_inputsplitter.py", "IPython/core/tests/test_inputtransformer.py", "IPython/frontend/qt/console/frontend_widget.py", "IPython/frontend/terminal/interactiveshell.py"]}], "labels": ["important", "bug", "regression"], "created_at": "2013-04-15T12:31:25Z", "closed_at": "2013-04-21T18:04:29Z", "method": ["label"]}
{"issue_number": 3128, "title": "qtconsole hangs on importing pylab (using X forwarding)", "body": "I can use ipython from the console successfully with pylab (I am using x forwarding)\n\nI'm also running qtconsole with PyQt but when i run %pylab the console hangs\nwith : \n\nFile \"/home/danderson/.local/lib/python2.7/sitepackages/IPython/frontend/qt/console/frontend_widget.py\", line 59, in highlightBlock\nsuper(FrontendHighlighter, self).highlightBlock(string)\n  File \"/home/danderson/.local/lib/python2.7/site-packages/IPython/frontend/qt/console/pygments_highlighter.py\", line 107, in highlightBlock\n    self._lexer._saved_state_stack = prev_data.syntax_stack\nAttributeError: 'QTextBlockUserData' object has no attribute 'syntax_stack'\n\nIf you suspect this is an IPython bug, please report it at:\n    https://github.com/ipython/ipython/issues\nor send an email to the mailing list at ipython-dev@scipy.org\n\nYou can print a more detailed traceback right now with \"%tb\", or use \"%debug\"\nto interactively debug it.\n\nExtra-detailed tracebacks for bug-reporting purposes can be enabled via:\n    c.Application.verbose_crash=True\n\nTraceback (most recent call last):\n  File \"/home/danderson/.local/lib/python2.7/site-packages/IPython/frontend/qt/console/frontend_widget.py\", line 59, in highlightBlock\n    super(FrontendHighlighter, self).highlightBlock(string)\n  File \"/home/danderson/.local/lib/python2.7/site-packages/IPython/frontend/qt/console/pygments_highlighter.py\", line 107, in highlightBlock\n    self._lexer._saved_state_stack = prev_data.syntax_stack\nAttributeError: 'QTextBlockUserData' object has no attribute 'syntax_stack'\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU5NDQ2OmZjZmM5MzUzNDE3YmQ4OGY5YTExOGVlNmFkNzdjMDkzZjYxNDg4NmI=", "commit_message": "check prev_data.syntax_stack attribute before reading it\n\nrather than just checking whether prev_data is non-None.\n\ncloses #3128", "commit_timestamp": "2013-04-15T20:50:07Z", "files": ["IPython/frontend/qt/console/pygments_highlighter.py"]}], "labels": ["needs-info"], "created_at": "2013-04-03T11:17:05Z", "closed_at": "2013-04-25T21:07:18Z", "method": ["regex"]}
{"issue_number": 3124, "title": "Long multiline strings in Notebook", "body": "I have a long (~500 line) multiline string I've pasted into a Notebook code cell. When I try to execute the cell the the in/out number area turns into `[*]` but it never actually sends the data to the kernel. The app remains responsive; I can go down to the next cell and write/run code, but the multiline string never makes it to the kernel.\n\nIf I paste the same thing into terminal IPython it works fine. I'm using the trunk development IPython installed just now.\n\nHere's the string:\n\n``` python\ndata = \"\"\"-999.         0.18       0.2        0.3        0.4        0.5        0.6        0.7        0.8        0.9        1.         1.1    ]\n [   0.025      0.17       0.1725     0.18       0.19       0.19       0.185      0.1675     0.1475     0.1375     0.105      0.05   ]\n [   0.02525    0.1717     0.17422    0.1818     0.1919     0.1919     0.18685    0.16918    0.14897    0.13887    0.10605    0.0505 ]\n [   0.0255     0.17342    0.17597    0.18362    0.19382    0.19382    0.18872    0.17087    0.15046    0.14026    0.10711    0.05101]\n [   0.02576    0.17515    0.17773    0.18545    0.19576    0.19576    0.19061    0.17258    0.15197    0.14167    0.10818    0.05152]\n [   0.02602    0.1769     0.1795     0.18731    0.19771    0.19771    0.19251    0.1743     0.15349    0.14308    0.10926    0.05203]\n [   0.02628    0.17867    0.1813     0.18918    0.19969    0.19969    0.19444    0.17604    0.15502    0.14451    0.11036    0.05255]\n [   0.02654    0.18046    0.18311    0.19107    0.20169    0.20169    0.19638    0.1778     0.15657    0.14596    0.11146    0.05308]\n [   0.0268     0.18226    0.18494    0.19298    0.20371    0.20371    0.19835    0.17958    0.15814    0.14742    0.11257    0.05361]\n [   0.02707    0.18409    0.18679    0.19491    0.20574    0.20574    0.20033    0.18138    0.15972    0.14889    0.1137     0.05414]\n [   0.02734    0.18593    0.18866    0.19686    0.2078     0.2078     0.20233    0.18319    0.16132    0.15038    0.11484    0.05468]\n [   0.02762    0.18779    0.19055    0.19883    0.20988    0.20988    0.20436    0.18502    0.16293    0.15189    0.11599    0.05523]\n [   0.02789    0.18966    0.19245    0.20082    0.21198    0.21198    0.2064     0.18687    0.16456    0.1534     0.11715    0.05578]\n [   0.02817    0.19156    0.19438    0.20283    0.2141     0.2141     0.20846    0.18874    0.16621    0.15494    0.11832    0.05634]\n [   0.02845    0.19348    0.19632    0.20486    0.21624    0.21624    0.21055    0.19063    0.16787    0.15649    0.1195     0.0569 ]\n [   0.02874    0.19541    0.19828    0.20691    0.2184     0.2184     0.21265    0.19254    0.16955    0.15805    0.12069    0.05747]\n [   0.02902    0.19736    0.20027    0.20897    0.22058    0.22058    0.21478    0.19446    0.17124    0.15963    0.1219     0.05805]\n [   0.02931    0.19934    0.20227    0.21106    0.22279    0.22279    0.21693    0.19641    0.17296    0.16123    0.12312    0.05863]\n [   0.02961    0.20133    0.20429    0.21317    0.22502    0.22502    0.2191     0.19837    0.17468    0.16284    0.12435    0.05922]\n [   0.0299     0.20335    0.20634    0.21531    0.22727    0.22727    0.22129    0.20035    0.17643    0.16447    0.1256     0.05981]\n [   0.0302     0.20538    0.2084     0.21746    0.22954    0.22954    0.2235     0.20236    0.1782     0.16611    0.12685    0.06041]\n [   0.0305     0.20743    0.21048    0.21963    0.23184    0.23184    0.22574    0.20438    0.17998    0.16778    0.12812    0.06101]\n [   0.03081    0.20951    0.21259    0.22183    0.23415    0.23415    0.22799    0.20643    0.18178    0.16945    0.1294     0.06162]\n [   0.03112    0.2116     0.21471    0.22405    0.2365     0.2365     0.23027    0.20849    0.1836     0.17115    0.1307     0.06224]\n [   0.03143    0.21372    0.21686    0.22629    0.23886    0.23886    0.23258    0.21057    0.18543    0.17286    0.132      0.06286]\n [   0.03174    0.21585    0.21903    0.22855    0.24125    0.24125    0.2349     0.21268    0.18729    0.17459    0.13332    0.06349]\n [   0.03206    0.21801    0.22122    0.23084    0.24366    0.24366    0.23725    0.21481    0.18916    0.17633    0.13466    0.06412]\n [   0.03238    0.22019    0.22343    0.23315    0.2461     0.2461     0.23962    0.21696    0.19105    0.1781     0.136      0.06476]\n [   0.03271    0.2224     0.22567    0.23548    0.24856    0.24856    0.24202    0.21912    0.19296    0.17988    0.13736    0.06541]\n [   0.03303    0.22462    0.22792    0.23783    0.25105    0.25105    0.24444    0.22132    0.19489    0.18168    0.13874    0.06606]\n [   0.03336    0.22687    0.2302     0.24021    0.25356    0.25356    0.24688    0.22353    0.19684    0.18349    0.14012    0.06673]\n [   0.0337     0.22913    0.2325     0.24261    0.25609    0.25609    0.24935    0.22576    0.19881    0.18533    0.14152    0.06739]\n [   0.03403    0.23143    0.23483    0.24504    0.25865    0.25865    0.25185    0.22802    0.2008     0.18718    0.14294    0.06807]\n [   0.03437    0.23374    0.23718    0.24749    0.26124    0.26124    0.25436    0.2303     0.2028     0.18905    0.14437    0.06875]\n [   0.03472    0.23608    0.23955    0.24996    0.26385    0.26385    0.25691    0.23261    0.20483    0.19094    0.14581    0.06943]\n [   0.03506    0.23844    0.24194    0.25246    0.26649    0.26649    0.25948    0.23493    0.20688    0.19285    0.14727    0.07013]\n [   0.03542    0.24082    0.24436    0.25499    0.26915    0.26915    0.26207    0.23728    0.20895    0.19478    0.14874    0.07083]\n [   0.03577    0.24323    0.24681    0.25754    0.27185    0.27185    0.26469    0.23965    0.21104    0.19673    0.15023    0.07154]\n [   0.03613    0.24566    0.24928    0.26011    0.27456    0.27456    0.26734    0.24205    0.21315    0.1987     0.15173    0.07225]\n [   0.03649    0.24812    0.25177    0.26271    0.27731    0.27731    0.27001    0.24447    0.21528    0.20068    0.15325    0.07298]\n [   0.03685    0.2506     0.25429    0.26534    0.28008    0.28008    0.27271    0.24692    0.21743    0.20269    0.15478    0.07371]\n [   0.03722    0.25311    0.25683    0.268      0.28288    0.28288    0.27544    0.24938    0.21961    0.20472    0.15633    0.07444]\n [   0.03759    0.25564    0.2594     0.27068    0.28571    0.28571    0.27819    0.25188    0.2218     0.20677    0.15789    0.07519]\n [   0.03797    0.25819    0.26199    0.27338    0.28857    0.28857    0.28098    0.2544     0.22402    0.20883    0.15947    0.07594]\n [   0.03835    0.26078    0.26461    0.27612    0.29146    0.29146    0.28379    0.25694    0.22626    0.21092    0.16107    0.0767 ]\n [   0.03873    0.26338    0.26726    0.27888    0.29437    0.29437    0.28662    0.25951    0.22852    0.21303    0.16268    0.07747]\n [   0.03912    0.26602    0.26993    0.28167    0.29731    0.29731    0.28949    0.26211    0.23081    0.21516    0.16431    0.07824]\n [   0.03951    0.26868    0.27263    0.28448    0.30029    0.30029    0.29238    0.26473    0.23312    0.21731    0.16595    0.07902]\n [   0.03991    0.27136    0.27536    0.28733    0.30329    0.30329    0.29531    0.26737    0.23545    0.21949    0.16761    0.07981]\n [   0.04031    0.27408    0.27811    0.2902     0.30632    0.30632    0.29826    0.27005    0.2378     0.22168    0.16928    0.08061]\n [   0.04071    0.27682    0.28089    0.2931     0.30939    0.30939    0.30124    0.27275    0.24018    0.2239     0.17098    0.08142]\n [   0.04112    0.27959    0.2837     0.29603    0.31248    0.31248    0.30426    0.27548    0.24258    0.22614    0.17269    0.08223]\n [   0.04153    0.28238    0.28654    0.29899    0.3156     0.3156     0.3073     0.27823    0.24501    0.2284     0.17441    0.08305]\n [   0.04194    0.28521    0.2894     0.30198    0.31876    0.31876    0.31037    0.28101    0.24746    0.23068    0.17616    0.08388]\n [   0.04236    0.28806    0.2923     0.305      0.32195    0.32195    0.31348    0.28382    0.24993    0.23299    0.17792    0.08472]\n [   0.04279    0.29094    0.29522    0.30805    0.32517    0.32517    0.31661    0.28666    0.25243    0.23532    0.1797     0.08557]\n [   0.04321    0.29385    0.29817    0.31113    0.32842    0.32842    0.31978    0.28953    0.25496    0.23767    0.1815     0.08643]\n [   0.04365    0.29679    0.30115    0.31425    0.3317     0.3317     0.32297    0.29242    0.25751    0.24005    0.18331    0.08729]\n [   0.04408    0.29976    0.30416    0.31739    0.33502    0.33502    0.3262     0.29535    0.26008    0.24245    0.18514    0.08816]\n [   0.04452    0.30275    0.30721    0.32056    0.33837    0.33837    0.32947    0.2983     0.26268    0.24487    0.18699    0.08905]\n [   0.04497    0.30578    0.31028    0.32377    0.34175    0.34175    0.33276    0.30128    0.26531    0.24732    0.18886    0.08994]\n [   0.04542    0.30884    0.31338    0.32701    0.34517    0.34517    0.33609    0.3043     0.26796    0.2498     0.19075    0.09083]\n [   0.04587    0.31193    0.31651    0.33028    0.34862    0.34862    0.33945    0.30734    0.27064    0.25229    0.19266    0.09174]\n [   0.04633    0.31505    0.31968    0.33358    0.35211    0.35211    0.34284    0.31041    0.27335    0.25482    0.19459    0.09266]\n [   0.04679    0.3182     0.32288    0.33691    0.35563    0.35563    0.34627    0.31352    0.27608    0.25736    0.19653    0.09359]\n [   0.04726    0.32138    0.3261     0.34028    0.35919    0.35919    0.34974    0.31665    0.27884    0.25994    0.1985     0.09452]\n [   0.04773    0.32459    0.32937    0.34369    0.36278    0.36278    0.35323    0.31982    0.28163    0.26254    0.20048    0.09547]\n [   0.04821    0.32784    0.33266    0.34712    0.36641    0.36641    0.35677    0.32302    0.28445    0.26516    0.20249    0.09642]\n [   0.04869    0.33112    0.33599    0.35059    0.37007    0.37007    0.36033    0.32625    0.28729    0.26781    0.20451    0.09739]\n [   0.04918    0.33443    0.33935    0.3541     0.37377    0.37377    0.36394    0.32951    0.29017    0.27049    0.20656    0.09836]\n [   0.04967    0.33777    0.34274    0.35764    0.37751    0.37751    0.36758    0.3328     0.29307    0.2732     0.20862    0.09934]\n [   0.05017    0.34115    0.34617    0.36122    0.38129    0.38129    0.37125    0.33613    0.296      0.27593    0.21071    0.10034]\n [   0.05067    0.34456    0.34963    0.36483    0.3851     0.3851     0.37496    0.33949    0.29896    0.27869    0.21282    0.10134]\n [   0.05118    0.34801    0.35312    0.36848    0.38895    0.38895    0.37871    0.34289    0.30195    0.28148    0.21495    0.10235]\n [   0.05169    0.35149    0.35666    0.37216    0.39284    0.39284    0.3825     0.34632    0.30497    0.28429    0.21709    0.10338]\n [   0.05221    0.355      0.36022    0.37588    0.39677    0.39677    0.38633    0.34978    0.30802    0.28713    0.21927    0.10441]\n [   0.05273    0.35855    0.36382    0.37964    0.40073    0.40073    0.39019    0.35328    0.3111     0.29001    0.22146    0.10546]\n [   0.05326    0.36214    0.36746    0.38344    0.40474    0.40474    0.39409    0.35681    0.31421    0.29291    0.22367    0.10651]\n [   0.05379    0.36576    0.37114    0.38727    0.40879    0.40879    0.39803    0.36038    0.31735    0.29583    0.22591    0.10758]\n [   0.05433    0.36942    0.37485    0.39115    0.41288    0.41288    0.40201    0.36398    0.32052    0.29879    0.22817    0.10865]\n [   0.05487    0.37311    0.3786     0.39506    0.41701    0.41701    0.40603    0.36762    0.32373    0.30178    0.23045    0.10974]\n [   0.05542    0.37684    0.38238    0.39901    0.42118    0.42118    0.41009    0.3713     0.32697    0.3048     0.23276    0.11084]\n [   0.05597    0.38061    0.38621    0.403      0.42539    0.42539    0.41419    0.37501    0.33024    0.30785    0.23508    0.11194]\n [   0.05653    0.38442    0.39007    0.40703    0.42964    0.42964    0.41834    0.37876    0.33354    0.31092    0.23743    0.11306]\n [   0.0571     0.38826    0.39397    0.4111     0.43394    0.43394    0.42252    0.38255    0.33687    0.31403    0.23981    0.11419]\n [   0.05767    0.39214    0.39791    0.41521    0.43828    0.43828    0.42674    0.38638    0.34024    0.31717    0.24221    0.11534]\n [   0.05824    0.39606    0.40189    0.41936    0.44266    0.44266    0.43101    0.39024    0.34364    0.32035    0.24463    0.11649]\n [   0.05883    0.40002    0.40591    0.42356    0.44709    0.44709    0.43532    0.39414    0.34708    0.32355    0.24707    0.11765]\n [   0.05942    0.40403    0.40997    0.42779    0.45156    0.45156    0.43967    0.39808    0.35055    0.32679    0.24954    0.11883]\n [   0.06001    0.40807    0.41407    0.43207    0.45607    0.45607    0.44407    0.40206    0.35406    0.33005    0.25204    0.12002]\n [   0.06061    0.41215    0.41821    0.43639    0.46063    0.46063    0.44851    0.40609    0.3576     0.33335    0.25456    0.12122]\n [   0.06122    0.41627    0.42239    0.44075    0.46524    0.46524    0.453      0.41015    0.36117    0.33669    0.25711    0.12243]\n [   0.06183    0.42043    0.42661    0.44516    0.46989    0.46989    0.45753    0.41425    0.36479    0.34005    0.25968    0.12366]\n [   0.06245    0.42463    0.43088    0.44961    0.47459    0.47459    0.4621     0.41839    0.36843    0.34345    0.26227    0.12489]\n [   0.06307    0.42888    0.43519    0.45411    0.47934    0.47934    0.46672    0.42257    0.37212    0.34689    0.2649     0.12614]\n [   0.0637     0.43317    0.43954    0.45865    0.48413    0.48413    0.47139    0.4268     0.37584    0.35036    0.26755    0.1274 ]\n [   0.06434    0.4375     0.44394    0.46324    0.48897    0.48897    0.4761     0.43107    0.3796     0.35386    0.27022    0.12868]\n [   0.06498    0.44188    0.44837    0.46787    0.49386    0.49386    0.48087    0.43538    0.38339    0.3574     0.27292    0.12996]\n [   0.06563    0.4463     0.45286    0.47255    0.4988     0.4988     0.48567    0.43973    0.38723    0.36097    0.27565    0.13126]\n [   0.06629    0.45076    0.45739    0.47727    0.50379    0.50379    0.49053    0.44413    0.3911     0.36458    0.27841    0.13258]\n [   0.06695    0.45527    0.46196    0.48205    0.50883    0.50883    0.49544    0.44857    0.39501    0.36823    0.28119    0.1339 ]\n [   0.06762    0.45982    0.46658    0.48687    0.51391    0.51391    0.50039    0.45306    0.39896    0.37191    0.28401    0.13524]\n [   0.0683     0.46442    0.47125    0.49174    0.51905    0.51905    0.50539    0.45759    0.40295    0.37563    0.28685    0.13659]\n [   0.06898    0.46906    0.47596    0.49665    0.52424    0.52424    0.51045    0.46216    0.40698    0.37939    0.28971    0.13796]\n [   0.06967    0.47375    0.48072    0.50162    0.52949    0.52949    0.51555    0.46678    0.41105    0.38318    0.29261    0.13934]\n [   0.07037    0.47849    0.48553    0.50664    0.53478    0.53478    0.52071    0.47145    0.41516    0.38701    0.29554    0.14073]\n [   0.07107    0.48327    0.49038    0.5117     0.54013    0.54013    0.52592    0.47617    0.41931    0.39088    0.29849    0.14214]\n [   0.07178    0.48811    0.49528    0.51682    0.54553    0.54553    0.53117    0.48093    0.4235     0.39479    0.30148    0.14356]\n [   0.0725     0.49299    0.50024    0.52199    0.55099    0.55099    0.53649    0.48574    0.42774    0.39874    0.30449    0.145  ]\n [   0.07322    0.49792    0.50524    0.52721    0.5565     0.5565     0.54185    0.4906     0.43202    0.40273    0.30754    0.14645]\n [   0.07396    0.5029     0.51029    0.53248    0.56206    0.56206    0.54727    0.4955     0.43634    0.40675    0.31061    0.14791]\n [   0.07469    0.50793    0.5154     0.5378     0.56768    0.56768    0.55274    0.50046    0.4407     0.41082    0.31372    0.14939]\n [   0.07544    0.513      0.52055    0.54318    0.57336    0.57336    0.55827    0.50546    0.44511    0.41493    0.31686    0.15088]\n [   0.0762     0.51813    0.52575    0.54861    0.57909    0.57909    0.56385    0.51052    0.44956    0.41908    0.32002    0.15239]\n [   0.07696    0.52332    0.53101    0.5541     0.58488    0.58488    0.56949    0.51562    0.45405    0.42327    0.32322    0.15392]\n [   0.07773    0.52855    0.53632    0.55964    0.59073    0.59073    0.57519    0.52078    0.45859    0.4275     0.32646    0.15546]\n [   0.07851    0.53383    0.54169    0.56524    0.59664    0.59664    0.58094    0.52598    0.46318    0.43178    0.32972    0.15701]\n [   0.07929    0.53917    0.5471     0.57089    0.60261    0.60261    0.58675    0.53124    0.46781    0.4361     0.33302    0.15858]\n [   0.08008    0.54456    0.55257    0.5766     0.60863    0.60863    0.59261    0.53656    0.47249    0.44046    0.33635    0.16017]\n [   0.08088    0.55001    0.5581     0.58236    0.61472    0.61472    0.59854    0.54192    0.47722    0.44486    0.33971    0.16177]\n [   0.08169    0.55551    0.56368    0.58819    0.62086    0.62086    0.60453    0.54734    0.48199    0.44931    0.34311    0.16339]\n [   0.08251    0.56107    0.56932    0.59407    0.62707    0.62707    0.61057    0.55281    0.48681    0.4538     0.34654    0.16502]\n [   0.08333    0.56668    0.57501    0.60001    0.63334    0.63334    0.61668    0.55834    0.49168    0.45834    0.35001    0.16667]\n [   0.08417    0.57234    0.58076    0.60601    0.63968    0.63968    0.62284    0.56393    0.49659    0.46292    0.35351    0.16834]\n [   0.08501    0.57807    0.58657    0.61207    0.64607    0.64607    0.62907    0.56957    0.50156    0.46755    0.35704    0.17002]\n [   0.08586    0.58385    0.59243    0.61819    0.65254    0.65254    0.63536    0.57526    0.50657    0.47223    0.36061    0.17172]\n [   0.08672    0.58969    0.59836    0.62437    0.65906    0.65906    0.64172    0.58101    0.51164    0.47695    0.36422    0.17344]\n [   0.08759    0.59558    0.60434    0.63062    0.66565    0.66565    0.64813    0.58682    0.51676    0.48172    0.36786    0.17517]\n [   0.08846    0.60154    0.61038    0.63692    0.67231    0.67231    0.65462    0.59269    0.52192    0.48654    0.37154    0.17692]\n [   0.08935    0.60755    0.61649    0.64329    0.67903    0.67903    0.66116    0.59862    0.52714    0.4914     0.37525    0.17869]\n [   0.09024    0.61363    0.62265    0.64973    0.68582    0.68582    0.66777    0.60461    0.53241    0.49632    0.37901    0.18048]\n [   0.09114    0.61977    0.62888    0.65622    0.69268    0.69268    0.67445    0.61065    0.53774    0.50128    0.3828     0.18228]\n [   0.09205    0.62596    0.63517    0.66278    0.69961    0.69961    0.6812     0.61676    0.54312    0.50629    0.38662    0.18411]\n [   0.09297    0.63222    0.64152    0.66941    0.7066     0.7066     0.68801    0.62293    0.54855    0.51136    0.39049    0.18595]\n [   0.0939     0.63855    0.64794    0.67611    0.71367    0.71367    0.69489    0.62915    0.55403    0.51647    0.3944     0.18781]\n [   0.09484    0.64493    0.65441    0.68287    0.7208     0.7208     0.70184    0.63545    0.55957    0.52164    0.39834    0.18969]\n [   0.09579    0.65138    0.66096    0.6897     0.72801    0.72801    0.70885    0.6418     0.56517    0.52685    0.40232    0.19158]\n [   0.09675    0.65789    0.66757    0.69659    0.73529    0.73529    0.71594    0.64822    0.57082    0.53212    0.40635    0.1935 ]\n [   0.09772    0.66447    0.67424    0.70356    0.74265    0.74265    0.7231     0.6547     0.57653    0.53744    0.41041    0.19543]\n [   0.09869    0.67112    0.68099    0.71059    0.75007    0.75007    0.73033    0.66125    0.58229    0.54282    0.41451    0.19739]\n [   0.09968    0.67783    0.6878     0.7177     0.75757    0.75757    0.73764    0.66786    0.58812    0.54824    0.41866    0.19936]\n [   0.10068    0.68047    0.69054    0.72075    0.76068    0.76061    0.74075    0.67095    0.59122    0.55122    0.42102    0.20081]\n [   0.10168    0.68118    0.69135    0.72185    0.76168    0.76152    0.74185    0.67236    0.59303    0.55303    0.42253    0.20202]\n [   0.1027     0.68189    0.69216    0.72297    0.7627     0.76243    0.74297    0.67378    0.59486    0.55486    0.42405    0.20324]\n [   0.10373    0.68261    0.69298    0.7241     0.76373    0.76336    0.7441     0.67522    0.59671    0.55671    0.42559    0.20447]\n [   0.10477    0.68334    0.69381    0.72524    0.76477    0.76429    0.74524    0.67667    0.59858    0.55858    0.42715    0.20572]\n [   0.10581    0.68407    0.69465    0.72639    0.76581    0.76523    0.74639    0.67814    0.60046    0.56046    0.42872    0.20698]\n [   0.10687    0.68481    0.6955     0.72756    0.76687    0.76618    0.74756    0.67962    0.60237    0.56237    0.43031    0.20825]\n [   0.10794    0.68556    0.69635    0.72873    0.76794    0.76715    0.74873    0.68112    0.60429    0.56429    0.43191    0.20953]\n [   0.10902    0.68631    0.69722    0.72992    0.76902    0.76812    0.74992    0.68263    0.60623    0.56623    0.43353    0.21082]\n [   0.11011    0.68708    0.69809    0.73112    0.77011    0.7691     0.75112    0.68415    0.6082     0.5682     0.43516    0.21213]\n [   0.11121    0.68785    0.69897    0.73233    0.77121    0.77009    0.75233    0.68569    0.61018    0.57018    0.43682    0.21345]\n [   0.11232    0.68863    0.69986    0.73355    0.77232    0.77109    0.75355    0.68725    0.61218    0.57218    0.43848    0.21479]\n [   0.11345    0.68941    0.70076    0.73479    0.77345    0.7721     0.75479    0.68882    0.6142     0.5742     0.44017    0.21614]\n [   0.11458    0.69021    0.70166    0.73604    0.77458    0.77312    0.75604    0.69041    0.61624    0.57624    0.44187    0.2175 ]\n [   0.11573    0.69101    0.70258    0.7373     0.77573    0.77415    0.7573     0.69202    0.61831    0.57831    0.44359    0.21887]\n [   0.11688    0.69182    0.70351    0.73857    0.77688    0.7752     0.75857    0.69364    0.62039    0.58039    0.44533    0.22026]\n [   0.11805    0.69264    0.70444    0.73986    0.77805    0.77625    0.75986    0.69527    0.62249    0.58249    0.44708    0.22166]\n [   0.11923    0.69346    0.70539    0.74116    0.77923    0.77731    0.76116    0.69693    0.62462    0.58462    0.44885    0.22308]\n [   0.12043    0.6943     0.70634    0.74247    0.78043    0.77838    0.76247    0.6986     0.62677    0.58677    0.45064    0.22451]\n [   0.12163    0.69514    0.7073     0.74379    0.78163    0.77947    0.76379    0.70028    0.62893    0.58893    0.45244    0.22596]\n [   0.12285    0.69599    0.70828    0.74513    0.78285    0.78056    0.76513    0.70198    0.63112    0.59112    0.45427    0.22741]\n [   0.12407    0.69685    0.70926    0.74648    0.78407    0.78167    0.76648    0.7037     0.63333    0.59333    0.45611    0.22889]\n [   0.12531    0.69772    0.71025    0.74785    0.78531    0.78278    0.76785    0.70544    0.63557    0.59557    0.45797    0.23038]\n [   0.12657    0.6986     0.71125    0.74922    0.78657    0.78391    0.76922    0.7072     0.63782    0.59782    0.45985    0.23188]\n [   0.12783    0.69948    0.71227    0.75062    0.78783    0.78505    0.77062    0.70897    0.6401     0.6001     0.46175    0.2334 ]\n [   0.12911    0.70038    0.71329    0.75202    0.78911    0.7862     0.77202    0.71076    0.6424     0.6024     0.46367    0.23493]\n [   0.1304     0.70128    0.71432    0.75344    0.7904     0.78736    0.77344    0.71256    0.64473    0.60473    0.4656     0.23648]\n [   0.13171    0.7022     0.71537    0.75488    0.79171    0.78854    0.77488    0.71439    0.64707    0.60707    0.46756    0.23805]\n [   0.13302    0.70312    0.71642    0.75633    0.79302    0.78972    0.77633    0.71623    0.64944    0.60944    0.46954    0.23963]\n [   0.13435    0.70405    0.71748    0.75779    0.79435    0.79092    0.77779    0.7181     0.65184    0.61184    0.47153    0.24123]\n [   0.1357     0.70499    0.71856    0.75927    0.7957     0.79213    0.77927    0.71998    0.65426    0.61426    0.47355    0.24284]\n [   0.13706    0.70594    0.71964    0.76076    0.79706    0.79335    0.78076    0.72188    0.6567     0.6167     0.47558    0.24447]\n [   0.13843    0.7069     0.72074    0.76227    0.79843    0.79458    0.78227    0.7238     0.65917    0.61917    0.47764    0.24611]\n [   0.13981    0.70787    0.72185    0.76379    0.79981    0.79583    0.78379    0.72573    0.66166    0.62166    0.47971    0.24777]\n [   0.14121    0.70885    0.72297    0.76533    0.80121    0.79709    0.78533    0.72769    0.66417    0.62417    0.48181    0.24945]\n [   0.14262    0.70983    0.7241     0.76688    0.80262    0.79836    0.78688    0.72967    0.66672    0.62672    0.48393    0.25114]\n [   0.14405    0.71083    0.72524    0.76845    0.80405    0.79964    0.78845    0.73166    0.66928    0.62928    0.48607    0.25286]\n [   0.14549    0.71184    0.72639    0.77004    0.80549    0.80094    0.79004    0.73368    0.67188    0.63188    0.48823    0.25458]\n [   0.14694    0.71286    0.72755    0.77164    0.80694    0.80225    0.79164    0.73572    0.67449    0.63449    0.49041    0.25633]\n [   0.14841    0.71389    0.72873    0.77325    0.80841    0.80357    0.79325    0.73778    0.67714    0.63714    0.49262    0.25809]\n [   0.1499     0.71493    0.72992    0.77488    0.8099     0.80491    0.79488    0.73985    0.67981    0.63981    0.49484    0.25987]\n [   0.15139    0.71598    0.73112    0.77653    0.81139    0.80625    0.79653    0.74195    0.68251    0.64251    0.49709    0.26167]\n [   0.15291    0.71704    0.73233    0.7782     0.81291    0.80762    0.7982     0.74407    0.68523    0.64523    0.49936    0.26349]\n [   0.15444    0.71811    0.73355    0.77988    0.81444    0.80899    0.79988    0.74621    0.68799    0.64799    0.50166    0.26532]\n [   0.15598    0.71919    0.73479    0.78158    0.81598    0.81038    0.80158    0.74837    0.69077    0.65077    0.50397    0.26718]\n [   0.15754    0.72028    0.73603    0.7833     0.81754    0.81179    0.8033     0.75056    0.69357    0.65357    0.50631    0.26905]\n [   0.15912    0.72138    0.73729    0.78503    0.81912    0.8132     0.80503    0.75276    0.69641    0.65641    0.50867    0.27094]\n [   0.16071    0.7225     0.73857    0.78678    0.82071    0.81464    0.80678    0.75499    0.69927    0.65927    0.51106    0.27285]\n [   0.16231    0.72362    0.73985    0.78855    0.82231    0.81608    0.80855    0.75724    0.70217    0.66217    0.51347    0.27478]\n [   0.16394    0.72476    0.74115    0.79033    0.82394    0.81754    0.81033    0.75951    0.70509    0.66509    0.51591    0.27673]\n [   0.16558    0.7259     0.74246    0.79214    0.82558    0.81902    0.81214    0.76181    0.70804    0.66804    0.51837    0.27869]\n [   0.16723    0.72706    0.74379    0.79396    0.82723    0.82051    0.81396    0.76413    0.71102    0.67102    0.52085    0.28068]\n [   0.16891    0.72823    0.74512    0.7958     0.82891    0.82201    0.8158     0.76647    0.71403    0.67403    0.52336    0.28269]\n [   0.17059    0.72942    0.74648    0.79765    0.83059    0.82354    0.81765    0.76883    0.71707    0.67707    0.52589    0.28471]\n [   0.1723     0.73061    0.74784    0.79953    0.8323     0.82507    0.81953    0.77122    0.72014    0.68014    0.52845    0.28676]\n [   0.17402    0.73182    0.74922    0.80143    0.83402    0.82662    0.82143    0.77363    0.72324    0.68324    0.53104    0.28883]\n [   0.17576    0.73303    0.75061    0.80334    0.83576    0.82819    0.82334    0.77607    0.72637    0.68637    0.53365    0.29092]\n [   0.17752    0.73426    0.75202    0.80527    0.83752    0.82977    0.82527    0.77853    0.72954    0.68954    0.53628    0.29303]\n [   0.1793     0.73551    0.75344    0.80723    0.8393     0.83137    0.82723    0.78102    0.73273    0.69273    0.53894    0.29516]\n [   0.18109    0.73676    0.75487    0.8092     0.84109    0.83298    0.8292     0.78353    0.73596    0.69596    0.54163    0.29731]\n [   0.1829     0.73803    0.75632    0.81119    0.8429     0.83461    0.83119    0.78606    0.73922    0.69922    0.54435    0.29948]\n [   0.18473    0.73931    0.75778    0.8132     0.84473    0.83626    0.8332     0.78862    0.74251    0.70251    0.54709    0.30168]\n [   0.18658    0.7406     0.75926    0.81523    0.84658    0.83792    0.83523    0.79121    0.74584    0.70584    0.54987    0.30389]\n [   0.18844    0.74191    0.76075    0.81729    0.84844    0.8396     0.83729    0.79382    0.7492     0.7092     0.55266    0.30613]\n [   0.19033    0.74323    0.76226    0.81936    0.85033    0.84129    0.83936    0.79646    0.75259    0.71259    0.55549    0.30839]\n [   0.19223    0.74456    0.76378    0.82145    0.85223    0.84301    0.84145    0.79912    0.75601    0.71601    0.55835    0.31068]\n [   0.19415    0.74591    0.76532    0.82357    0.85415    0.84474    0.84357    0.80181    0.75947    0.71947    0.56123    0.31298]\n [   0.19609    0.74727    0.76688    0.8257     0.85609    0.84648    0.8457     0.80453    0.76297    0.72297    0.56414    0.31531]\n [   0.19805    0.74864    0.76844    0.82786    0.85805    0.84825    0.84786    0.80728    0.7665     0.7265     0.56708    0.31767]\n [   0.20004    0.75002    0.77001    0.83001    0.86001    0.85001    0.85002    0.81002    0.77001    0.73001    0.57001    0.32002]\n [   0.20204    0.75102    0.77081    0.83061    0.86041    0.85081    0.85102    0.81102    0.77081    0.73061    0.57081    0.32143]\n [   0.20406    0.75203    0.77162    0.83122    0.86081    0.85162    0.85203    0.81203    0.77162    0.73122    0.57162    0.32284]\n [   0.2061     0.75305    0.77244    0.83183    0.86122    0.85244    0.85305    0.81305    0.77244    0.73183    0.57244    0.32427]\n [   0.20816    0.75408    0.77326    0.83245    0.86163    0.85326    0.85408    0.81408    0.77326    0.73245    0.57326    0.32571]\n [   0.21024    0.75512    0.7741     0.83307    0.86205    0.8541     0.85512    0.81512    0.7741     0.73307    0.5741     0.32717]\n [   0.21234    0.75617    0.77494    0.8337     0.86247    0.85494    0.85617    0.81617    0.77494    0.7337     0.57494    0.32864]\n [   0.21447    0.75723    0.77579    0.83434    0.86289    0.85579    0.85723    0.81723    0.77579    0.73434    0.57579    0.33013]\n [   0.21661    0.7583     0.77664    0.83498    0.86332    0.85664    0.8583     0.8183     0.77664    0.73498    0.57664    0.33163]\n [   0.21878    0.75939    0.77751    0.83563    0.86376    0.85751    0.85939    0.81939    0.77751    0.73563    0.57751    0.33314]\n [   0.22096    0.76048    0.77839    0.83629    0.86419    0.85839    0.86048    0.82048    0.77839    0.73629    0.57839    0.33467]\n [   0.22317    0.76159    0.77927    0.83695    0.86463    0.85927    0.86159    0.82159    0.77927    0.73695    0.57927    0.33622]\n [   0.22541    0.7627     0.78016    0.83762    0.86508    0.86016    0.8627     0.8227     0.78016    0.73762    0.58016    0.33778]\n [   0.22766    0.76383    0.78106    0.8383     0.86553    0.86106    0.86383    0.82383    0.78106    0.7383     0.58106    0.33936]\n [   0.22994    0.76497    0.78197    0.83898    0.86599    0.86197    0.86497    0.82497    0.78197    0.73898    0.58197    0.34095]\n [   0.23224    0.76612    0.78289    0.83967    0.86645    0.86289    0.86612    0.82612    0.78289    0.73967    0.58289    0.34256]\n [   0.23456    0.76728    0.78382    0.84037    0.86691    0.86382    0.86728    0.82728    0.78382    0.74037    0.58382    0.34419]\n [   0.2369     0.76845    0.78476    0.84107    0.86738    0.86476    0.86845    0.82845    0.78476    0.74107    0.58476    0.34583]\n [   0.23927    0.76964    0.78571    0.84178    0.86785    0.86571    0.86964    0.82964    0.78571    0.74178    0.58571    0.34749]\n [   0.24166    0.77083    0.78667    0.8425     0.86833    0.86667    0.87083    0.83083    0.78667    0.7425     0.58667    0.34917]\n [   0.24408    0.77204    0.78763    0.84322    0.86882    0.86763    0.87204    0.83204    0.78763    0.74322    0.58763    0.35086]\n [   0.24652    0.77326    0.78861    0.84396    0.8693     0.86861    0.87326    0.83326    0.78861    0.74396    0.58861    0.35257]\n [   0.24899    0.77449    0.78959    0.8447     0.8698     0.86959    0.87449    0.83449    0.78959    0.7447     0.58959    0.35429]\n [   0.25148    0.77574    0.79059    0.84544    0.8703     0.87059    0.87574    0.83574    0.79059    0.74544    0.59059    0.35603]\n [   0.25399    0.777      0.7916     0.8462     0.8708     0.8716     0.877      0.837      0.7916     0.7462     0.5916     0.35779]\n [   0.25653    0.77827    0.79261    0.84696    0.87131    0.87261    0.87827    0.83827    0.79261    0.74696    0.59261    0.35957]\n [   0.2591     0.77955    0.79364    0.84773    0.87182    0.87364    0.87955    0.83955    0.79364    0.74773    0.59364    0.36137]\n [   0.26169    0.78084    0.79468    0.84851    0.87234    0.87468    0.88084    0.84084    0.79468    0.74851    0.59468    0.36318]\n [   0.26431    0.78215    0.79572    0.84929    0.87286    0.87572    0.88215    0.84215    0.79572    0.74929    0.59572    0.36501]\n [   0.26695    0.78347    0.79678    0.85008    0.87339    0.87678    0.88347    0.84347    0.79678    0.75008    0.59678    0.36686]\n [   0.26962    0.78481    0.79785    0.85089    0.87392    0.87785    0.88481    0.84481    0.79785    0.75089    0.59785    0.36873]\n [   0.27231    0.78616    0.79893    0.85169    0.87446    0.87893    0.88616    0.84616    0.79893    0.75169    0.59893    0.37062]\n [   0.27504    0.78752    0.80001    0.85251    0.87501    0.88001    0.88752    0.84752    0.80001    0.75251    0.60001    0.37253]\n [   0.27779    0.78889    0.80111    0.85334    0.87556    0.88111    0.88889    0.84889    0.80111    0.75334    0.60111    0.37445]\n [   0.28057    0.79028    0.80223    0.85417    0.87611    0.88223    0.89028    0.85028    0.80223    0.75417    0.60223    0.3764 ]\n [   0.28337    0.79169    0.80335    0.85501    0.87667    0.88335    0.89169    0.85169    0.80335    0.75501    0.60335    0.37836]\n [   0.2862     0.7931     0.80448    0.85586    0.87724    0.88448    0.8931     0.8531     0.80448    0.75586    0.60448    0.38034]\n [   0.28907    0.79453    0.80563    0.85672    0.87781    0.88563    0.89453    0.85453    0.80563    0.75672    0.60563    0.38235]\n [   0.29196    0.79598    0.80678    0.85759    0.87839    0.88678    0.89598    0.85598    0.80678    0.75759    0.60678    0.38437]\n [   0.29488    0.79744    0.80795    0.85846    0.87898    0.88795    0.89744    0.85744    0.80795    0.75846    0.60795    0.38641]\n [   0.29783    0.79891    0.80913    0.85935    0.87957    0.88913    0.89891    0.85891    0.80913    0.75935    0.60913    0.38848]\n [   0.3008     0.80024    0.81024    0.86016    0.88016    0.89016    0.90008    0.86016    0.81024    0.76024    0.61024    0.39032]\n [   0.30381    0.80114    0.81114    0.86076    0.88076    0.89076    0.90038    0.86076    0.81114    0.76114    0.61114    0.39152]\n [   0.30685    0.80206    0.81206    0.86137    0.88137    0.89137    0.90069    0.86137    0.81206    0.76206    0.61206    0.39274]\n [   0.30992    0.80298    0.81298    0.86198    0.88198    0.89198    0.90099    0.86198    0.81298    0.76298    0.61298    0.39397]\n [   0.31302    0.80391    0.81391    0.8626     0.8826     0.8926     0.9013     0.8626     0.81391    0.76391    0.61391    0.39521]\n [   0.31615    0.80484    0.81484    0.86323    0.88323    0.89323    0.90161    0.86323    0.81484    0.76484    0.61484    0.39646]\n [   0.31931    0.80579    0.81579    0.86386    0.88386    0.89386    0.90193    0.86386    0.81579    0.76579    0.61579    0.39772]\n [   0.3225     0.80675    0.81675    0.8645     0.8845     0.8945     0.90225    0.8645     0.81675    0.76675    0.61675    0.399  ]\n [   0.32573    0.80772    0.81772    0.86515    0.88515    0.89515    0.90257    0.86515    0.81772    0.76772    0.61772    0.40029]\n [   0.32898    0.8087     0.8187     0.8658     0.8858     0.8958     0.9029     0.8658     0.8187     0.7687     0.6187     0.40159]\n [   0.33227    0.80968    0.81968    0.86645    0.88645    0.89645    0.90323    0.86645    0.81968    0.76968    0.61968    0.40291]\n [   0.3356     0.81068    0.82068    0.86712    0.88712    0.89712    0.90356    0.86712    0.82068    0.77068    0.62068    0.40424]\n [   0.33895    0.81169    0.82169    0.86779    0.88779    0.89779    0.9039     0.86779    0.82169    0.77169    0.62169    0.40558]\n [   0.34234    0.8127     0.8227     0.86847    0.88847    0.89847    0.90423    0.86847    0.8227     0.7727     0.6227     0.40694]\n [   0.34577    0.81373    0.82373    0.86915    0.88915    0.89915    0.90458    0.86915    0.82373    0.77373    0.62373    0.40831]\n [   0.34922    0.81477    0.82477    0.86984    0.88984    0.89984    0.90492    0.86984    0.82477    0.77477    0.62477    0.40969]\n [   0.35272    0.81581    0.82581    0.87054    0.89054    0.90054    0.90527    0.87054    0.82581    0.77581    0.62581    0.41109]\n [   0.35624    0.81687    0.82687    0.87125    0.89125    0.90125    0.90562    0.87125    0.82687    0.77687    0.62687    0.4125 ]\n [   0.35981    0.81794    0.82794    0.87196    0.89196    0.90196    0.90598    0.87196    0.82794    0.77794    0.62794    0.41392]\n [   0.3634     0.81902    0.82902    0.87268    0.89268    0.90268    0.90634    0.87268    0.82902    0.77902    0.62902    0.41536]\n [   0.36704    0.82011    0.83011    0.87341    0.89341    0.90341    0.9067     0.87341    0.83011    0.78011    0.63011    0.41682]\n [   0.37071    0.82121    0.83121    0.87414    0.89414    0.90414    0.90707    0.87414    0.83121    0.78121    0.63121    0.41828]\n [   0.37442    0.82232    0.83232    0.87488    0.89488    0.90488    0.90744    0.87488    0.83232    0.78232    0.63232    0.41977]\n [   0.37816    0.82345    0.83345    0.87563    0.89563    0.90563    0.90782    0.87563    0.83345    0.78345    0.63345    0.42126]\n [   0.38194    0.82458    0.83458    0.87639    0.89639    0.90639    0.90819    0.87639    0.83458    0.78458    0.63458    0.42278]\n [   0.38576    0.82573    0.83573    0.87715    0.89715    0.90715    0.90858    0.87715    0.83573    0.78573    0.63573    0.4243 ]\n [   0.38962    0.82689    0.83689    0.87792    0.89792    0.90792    0.90896    0.87792    0.83689    0.78689    0.63689    0.42585]\n [   0.39351    0.82805    0.83805    0.8787     0.8987     0.9087     0.90935    0.8787     0.83805    0.78805    0.63805    0.42741]\n [   0.39745    0.82923    0.83923    0.87949    0.89949    0.90949    0.90974    0.87949    0.83923    0.78923    0.63923    0.42898]\n [   0.40142    0.83043    0.84028    0.88028    0.90014    0.91014    0.91014    0.88014    0.84014    0.79014    0.64043    0.43071]\n [   0.40544    0.83163    0.84109    0.88109    0.90054    0.91054    0.91054    0.88054    0.84054    0.79054    0.64163    0.43272]\n [   0.40949    0.83285    0.8419     0.8819     0.90095    0.91095    0.91095    0.88095    0.84095    0.79095    0.64285    0.43475]\n [   0.41359    0.83408    0.84272    0.88272    0.90136    0.91136    0.91136    0.88136    0.84136    0.79136    0.64408    0.43679]\n [   0.41772    0.83532    0.84354    0.88354    0.90177    0.91177    0.91177    0.88177    0.84177    0.79177    0.64532    0.43886]\n [   0.4219     0.83657    0.84438    0.88438    0.90219    0.91219    0.91219    0.88219    0.84219    0.79219    0.64657    0.44095]\n [   0.42612    0.83784    0.84522    0.88522    0.90261    0.91261    0.91261    0.88261    0.84261    0.79261    0.64784    0.44306]\n [   0.43038    0.83911    0.84608    0.88608    0.90304    0.91304    0.91304    0.88304    0.84304    0.79304    0.64911    0.44519]\n [   0.43468    0.84041    0.84694    0.88694    0.90347    0.91347    0.91347    0.88347    0.84347    0.79347    0.65041    0.44734]\n [   0.43903    0.84171    0.84781    0.88781    0.9039     0.9139     0.9139     0.8839     0.8439     0.7939     0.65171    0.44952]\n [   0.44342    0.84303    0.84868    0.88868    0.90434    0.91434    0.91434    0.88434    0.84434    0.79434    0.65303    0.45171]\n [   0.44786    0.84436    0.84957    0.88957    0.90479    0.91479    0.91479    0.88479    0.84479    0.79479    0.65436    0.45393]\n [   0.45233    0.8457     0.85047    0.89047    0.90523    0.91523    0.91523    0.88523    0.84523    0.79523    0.6557     0.45617]\n [   0.45686    0.84706    0.85137    0.89137    0.90569    0.91569    0.91569    0.88569    0.84569    0.79569    0.65706    0.45843]\n [   0.46143    0.84843    0.85229    0.89229    0.90614    0.91614    0.91614    0.88614    0.84614    0.79614    0.65843    0.46071]\n [   0.46604    0.84981    0.85321    0.89321    0.9066     0.9166     0.9166     0.8866     0.8466     0.7966     0.65981    0.46302]\n [   0.4707     0.85121    0.85414    0.89414    0.90707    0.91707    0.91707    0.88707    0.84707    0.79707    0.66121    0.46535]\n [   0.47541    0.85262    0.85508    0.89508    0.90754    0.91754    0.91754    0.88754    0.84754    0.79754    0.66262    0.4677 ]\n [   0.48016    0.85405    0.85603    0.89603    0.90802    0.91802    0.91802    0.88802    0.84802    0.79802    0.66405    0.47008]\n [   0.48496    0.85549    0.85699    0.89699    0.9085     0.9185     0.9185     0.8885     0.8485     0.7985     0.66549    0.47248]\n [   0.48981    0.85694    0.85796    0.89796    0.90898    0.91898    0.91898    0.88898    0.84898    0.79898    0.66694    0.47491]\n [   0.49471    0.85841    0.85894    0.89894    0.90947    0.91947    0.91947    0.88947    0.84947    0.79947    0.66841    0.47736]\n [   0.49966    0.8599     0.85993    0.89993    0.90997    0.91997    0.91997    0.88997    0.84997    0.79997    0.6699     0.47983]\n [   0.50466    0.86093    0.8614     0.90047    0.91047    0.92047    0.92047    0.89047    0.85047    0.80047    0.67093    0.4814 ]\n [   0.5097     0.86194    0.86291    0.90097    0.91097    0.92097    0.92097    0.89097    0.85097    0.80097    0.67194    0.48291]\n [   0.5148     0.86296    0.86444    0.90148    0.91148    0.92148    0.92148    0.89148    0.85148    0.80148    0.67296    0.48444]\n [   0.51995    0.86399    0.86598    0.90199    0.91199    0.92199    0.92199    0.89199    0.85199    0.80199    0.67399    0.48598]\n [   0.52515    0.86503    0.86754    0.90251    0.91251    0.92251    0.92251    0.89251    0.85251    0.80251    0.67503    0.48754]\n [   0.5304     0.86608    0.86912    0.90304    0.91304    0.92304    0.92304    0.89304    0.85304    0.80304    0.67608    0.48912]\n [   0.5357     0.86714    0.87071    0.90357    0.91357    0.92357    0.92357    0.89357    0.85357    0.80357    0.67714    0.49071]\n [   0.54106    0.86821    0.87232    0.90411    0.91411    0.92411    0.92411    0.89411    0.85411    0.80411    0.67821    0.49232]\n [   0.54647    0.86929    0.87394    0.90465    0.91465    0.92465    0.92465    0.89465    0.85465    0.80465    0.67929    0.49394]\n [   0.55193    0.87039    0.87558    0.90519    0.91519    0.92519    0.92519    0.89519    0.85519    0.80519    0.68039    0.49558]\n [   0.55745    0.87149    0.87724    0.90575    0.91575    0.92575    0.92575    0.89575    0.85575    0.80575    0.68149    0.49724]\n [   0.56303    0.87261    0.87891    0.9063     0.9163     0.9263     0.9263     0.8963     0.8563     0.8063     0.68261    0.49891]\n [   0.56866    0.87373    0.8806     0.90687    0.91687    0.92687    0.92687    0.89687    0.85687    0.80687    0.68373    0.5006 ]\n [   0.57434    0.87487    0.8823     0.90743    0.91743    0.92743    0.92743    0.89743    0.85743    0.80743    0.68487    0.5023 ]\n [   0.58009    0.87602    0.88403    0.90801    0.91801    0.92801    0.92801    0.89801    0.85801    0.80801    0.68602    0.50403]\n [   0.58589    0.87718    0.88577    0.90859    0.91859    0.92859    0.92859    0.89859    0.85859    0.80859    0.68718    0.50577]\n [   0.59175    0.87835    0.88752    0.90917    0.91917    0.92917    0.92917    0.89917    0.85917    0.80917    0.68835    0.50752]\n [   0.59767    0.87953    0.8893     0.90977    0.91977    0.92977    0.92977    0.89977    0.85977    0.80977    0.68953    0.5093 ]\n [   0.60364    0.88109    0.89073    0.91036    0.92036    0.93018    0.93027    0.90036    0.86036    0.81055    0.69073    0.51091]\n [   0.60968    0.8829     0.89194    0.91097    0.92097    0.93048    0.93073    0.90097    0.86097    0.81145    0.69194    0.51242]\n [   0.61578    0.88473    0.89316    0.91158    0.92158    0.93079    0.93118    0.90158    0.86158    0.81237    0.69316    0.51394]\n [   0.62193    0.88658    0.89439    0.91219    0.92219    0.9311     0.93164    0.90219    0.86219    0.81329    0.69439    0.51548]\n [   0.62815    0.88845    0.89563    0.91282    0.92282    0.93141    0.93211    0.90282    0.86282    0.81422    0.69563    0.51704]\n [   0.63443    0.89033    0.89689    0.91344    0.92344    0.93172    0.93258    0.90344    0.86344    0.81517    0.69689    0.51861]\n [   0.64078    0.89223    0.89816    0.91408    0.92408    0.93204    0.93306    0.90408    0.86408    0.81612    0.69816    0.52019]\n [   0.64719    0.89416    0.89944    0.91472    0.92472    0.93236    0.93354    0.90472    0.86472    0.81708    0.69944    0.5218 ]\n [   0.65366    0.8961     0.90073    0.91537    0.92537    0.93268    0.93402    0.90537    0.86537    0.81805    0.70073    0.52341]\n [   0.66019    0.89806    0.90204    0.91602    0.92602    0.93301    0.93451    0.90602    0.86602    0.81903    0.70204    0.52505]\n [   0.6668     0.90004    0.90336    0.91668    0.92668    0.93334    0.93501    0.90668    0.86668    0.82002    0.70336    0.5267 ]\n [   0.67346    0.90204    0.90469    0.91735    0.92735    0.93367    0.93551    0.90735    0.86735    0.82102    0.70469    0.52837]\n [   0.6802     0.90406    0.90604    0.91802    0.92802    0.93401    0.93601    0.90802    0.86802    0.82203    0.70604    0.53005]\n [   0.687      0.9061     0.9074     0.9187     0.9287     0.93435    0.93653    0.9087     0.8687     0.82305    0.7074     0.53175]\n [   0.69387    0.90816    0.90877    0.91939    0.92939    0.93469    0.93704    0.90939    0.86939    0.82408    0.70877    0.53347]\n [   0.70081    0.91024    0.91016    0.92008    0.93008    0.93504    0.93756    0.91008    0.87008    0.82512    0.71016    0.5352 ]\n [   0.70782    0.91235    0.91156    0.92078    0.93078    0.93539    0.93809    0.91078    0.87078    0.82617    0.71156    0.53695]\n [   0.7149     0.91447    0.91298    0.92149    0.93149    0.93574    0.93862    0.91149    0.87149    0.82723    0.71298    0.53872]\n [   0.72205    0.91661    0.91441    0.9222     0.9322     0.9361     0.93915    0.9122     0.8722     0.82831    0.71441    0.54051]\n [   0.72927    0.91878    0.91585    0.92293    0.93293    0.93646    0.93969    0.91293    0.87293    0.82939    0.71585    0.54232]\n [   0.73656    0.92097    0.91731    0.92366    0.93366    0.93683    0.94024    0.91366    0.87366    0.83048    0.71731    0.54414]\n [   0.74392    0.92318    0.91878    0.92439    0.93439    0.9372     0.94079    0.91439    0.87439    0.83159    0.71878    0.54598]\n [   0.75136    0.92541    0.92027    0.92514    0.93514    0.93757    0.94135    0.91514    0.87514    0.8327     0.72027    0.54784]\n [   0.75888    0.92766    0.92178    0.92589    0.93589    0.93794    0.94192    0.91589    0.87589    0.83383    0.72178    0.54972]\n [   0.76647    0.92994    0.92329    0.92665    0.93665    0.93832    0.94248    0.91665    0.87665    0.83497    0.72329    0.55162]\n [   0.77413    0.93224    0.92483    0.92741    0.93741    0.93871    0.94306    0.91741    0.87741    0.83612    0.72483    0.55353]\n [   0.78187    0.93456    0.92637    0.92819    0.93819    0.93909    0.94364    0.91819    0.87819    0.83728    0.72637    0.55547]\n [   0.78969    0.93691    0.92794    0.92897    0.93897    0.93948    0.94423    0.91897    0.87897    0.83845    0.72794    0.55742]\n [   0.79759    0.93928    0.92952    0.92976    0.93976    0.93988    0.94482    0.91976    0.87976    0.83964    0.72952    0.5594 ]\n [   0.80556    0.94056    0.93083    0.93056    0.94028    0.94028    0.94525    0.92028    0.88056    0.84056    0.73083    0.56139]\n [   0.81362    0.94136    0.93204    0.93136    0.94068    0.94068    0.94561    0.92068    0.88136    0.84136    0.73204    0.5634 ]\n [   0.82175    0.94218    0.93326    0.93218    0.94109    0.94109    0.94598    0.92109    0.88218    0.84218    0.73326    0.56544]\n [   0.82997    0.943      0.9345     0.933      0.9415     0.9415     0.94635    0.9215     0.883      0.843      0.7345     0.56749]\n [   0.83827    0.94383    0.93574    0.93383    0.94191    0.94191    0.94672    0.92191    0.88383    0.84383    0.73574    0.56957]\n [   0.84665    0.94467    0.937      0.93467    0.94233    0.94233    0.9471     0.92233    0.88467    0.84467    0.737      0.57166]\n [   0.85512    0.94551    0.93827    0.93551    0.94276    0.94276    0.94748    0.92276    0.88551    0.84551    0.73827    0.57378]\n [   0.86367    0.94637    0.93955    0.93637    0.94318    0.94318    0.94787    0.92318    0.88637    0.84637    0.73955    0.57592]\n [   0.87231    0.94723    0.94085    0.93723    0.94362    0.94362    0.94825    0.92362    0.88723    0.84723    0.74085    0.57808]\n [   0.88103    0.9481     0.94215    0.9381     0.94405    0.94405    0.94865    0.92405    0.8881     0.8481     0.74215    0.58026]\n [   0.88984    0.94898    0.94348    0.93898    0.94449    0.94449    0.94904    0.92449    0.88898    0.84898    0.74348    0.58246]\n [   0.89874    0.94987    0.94481    0.93987    0.94494    0.94494    0.94944    0.92494    0.88987    0.84987    0.74481    0.58469]\n [   0.90773    0.95077    0.94616    0.94077    0.94539    0.94539    0.94985    0.92539    0.89077    0.85077    0.74616    0.58693]\n [   0.91681    0.95168    0.94752    0.94168    0.94584    0.94584    0.95026    0.92584    0.89168    0.85168    0.74752    0.5892 ]\n [   0.92597    0.9526     0.9489     0.9426     0.9463     0.9463     0.95067    0.9263     0.8926     0.8526     0.7489     0.59149]\n [   0.93523    0.95352    0.95029    0.94352    0.94676    0.94676    0.95109    0.92676    0.89352    0.85352    0.75029    0.59381]\n [   0.94459    0.95446    0.95169    0.94446    0.94723    0.94723    0.95151    0.92723    0.89446    0.85446    0.75169    0.59615]\n [   0.95403    0.9554     0.9531     0.9454     0.9477     0.9477     0.95193    0.9277     0.8954     0.8554     0.7531     0.59851]\n [   0.96357    0.95636    0.95454    0.94636    0.94818    0.94818    0.95236    0.92818    0.89636    0.85636    0.75454    0.60089]\n [   0.97321    0.95732    0.95598    0.94732    0.94866    0.94866    0.95279    0.92866    0.89732    0.85732    0.75598    0.6033 ]\n [   0.98294    0.95829    0.95744    0.94829    0.94915    0.94915    0.95323    0.92915    0.89829    0.85829    0.75744    0.60573]\n [   0.99277    0.95928    0.95892    0.94928    0.94964    0.94964    0.95367    0.92964    0.89928    0.85928    0.75892    0.60819]\n [   1.0027     0.96011    0.96011    0.95016    0.95011    0.95011    0.95409    0.93011    0.90016    0.86016    0.76032    0.61054]\n [   1.01272    0.96051    0.96051    0.95076    0.95051    0.95051    0.95441    0.93051    0.90076    0.86076    0.76153    0.61254]\n [   1.02285    0.96091    0.96091    0.95137    0.95091    0.95091    0.95473    0.93091    0.90137    0.86137    0.76274    0.61457]\n [   1.03308    0.96132    0.96132    0.95198    0.95132    0.95132    0.95506    0.93132    0.90198    0.86198    0.76397    0.61662]\n [   1.04341    0.96174    0.96174    0.9526     0.95174    0.95174    0.95539    0.93174    0.9026     0.8626     0.76521    0.61868]\n [   1.05384    0.96215    0.96215    0.95323    0.95215    0.95215    0.95572    0.93215    0.90323    0.86323    0.76646    0.62077]\n [   1.06438    0.96258    0.96258    0.95386    0.95258    0.95258    0.95606    0.93258    0.90386    0.86386    0.76773    0.62288]\n [   1.07503    0.963      0.963      0.9545     0.953      0.953      0.9564     0.933      0.9045     0.8645     0.769      0.62501]\n [   1.08578    0.96343    0.96343    0.95515    0.95343    0.95343    0.95674    0.93343    0.90515    0.86515    0.77029    0.62716]\n [   1.09663    0.96387    0.96387    0.9558     0.95387    0.95387    0.95709    0.93387    0.9058     0.8658     0.7716     0.62933]\n [   1.1076     0.9643     0.9643     0.95646    0.9543     0.9543     0.95744    0.9343     0.90646    0.86646    0.77291    0.63152]\n [   1.11868    0.96475    0.96475    0.95712    0.95475    0.95475    0.9578     0.93475    0.90712    0.86712    0.77424    0.63374]\n [   1.12986    0.96519    0.96519    0.95779    0.95519    0.95519    0.95816    0.93519    0.90779    0.86779    0.77558    0.63597]\n [   1.14116    0.96565    0.96565    0.95847    0.95565    0.95565    0.95852    0.93565    0.90847    0.86847    0.77694    0.63823]\n [   1.15257    0.9661     0.9661     0.95915    0.9561     0.9561     0.95888    0.9361     0.90915    0.86915    0.77831    0.64051]\n [   1.1641     0.96656    0.96656    0.95985    0.95656    0.95656    0.95925    0.93656    0.90985    0.86985    0.77969    0.64282]\n [   1.17574    0.96703    0.96703    0.96054    0.95703    0.95703    0.95962    0.93703    0.91054    0.87054    0.78109    0.64515]\n [   1.1875     0.9675     0.9675     0.96125    0.9575     0.9575     0.96       0.9375     0.91125    0.87125    0.7825     0.6475 ]\n [   1.19937    0.96797    0.96797    0.96196    0.95797    0.95797    0.96038    0.93797    0.91196    0.87196    0.78392    0.64987]\n [   1.21137    0.96845    0.96845    0.96268    0.95845    0.95845    0.96076    0.93845    0.91268    0.87268    0.78536    0.65227]\n [   1.22348    0.96894    0.96894    0.96341    0.95894    0.95894    0.96115    0.93894    0.91341    0.87341    0.78682    0.6547 ]\n [   1.23572    0.96943    0.96943    0.96414    0.95943    0.95943    0.96154    0.93943    0.91414    0.87414    0.78829    0.65714]\n [   1.24807    0.96992    0.96992    0.96488    0.95992    0.95992    0.96194    0.93992    0.91488    0.87488    0.78977    0.65961]\n [   1.26055    0.97042    0.97042    0.96563    0.96042    0.96042    0.96234    0.94042    0.91563    0.87563    0.79127    0.66211]\n [   1.27316    0.97093    0.97093    0.96639    0.96093    0.96093    0.96274    0.94093    0.91639    0.87639    0.79278    0.66463]\n [   1.28589    0.97144    0.97144    0.96715    0.96144    0.96144    0.96315    0.94144    0.91715    0.87715    0.79431    0.66718]\n [   1.29875    0.97195    0.97195    0.96792    0.96195    0.96195    0.96356    0.94195    0.91792    0.87792    0.79585    0.66975]\n [   1.31174    0.97247    0.97247    0.9687     0.96247    0.96247    0.96398    0.94247    0.9187     0.8787     0.79741    0.67235]\n [   1.32485    0.97299    0.97299    0.96949    0.96299    0.96299    0.9644     0.94299    0.91949    0.87949    0.79898    0.67497]\n [   1.3381     0.97352    0.97352    0.97029    0.96352    0.96352    0.96482    0.94352    0.92029    0.88029    0.80057    0.67762]\n [   1.35148    0.97406    0.97406    0.97109    0.96406    0.96406    0.96525    0.94406    0.92109    0.88109    0.80218    0.6803 ]\n [   1.365      0.9746     0.9746     0.9719     0.9646     0.9646     0.96568    0.9446     0.9219     0.8819     0.8038     0.683  ]\n [   1.37865    0.97515    0.97515    0.97272    0.96515    0.96515    0.96612    0.94515    0.92272    0.88272    0.80544    0.68573]\n [   1.39244    0.9757     0.9757     0.97355    0.9657     0.9657     0.96656    0.9457     0.92355    0.88355    0.80709    0.68849]\n [   1.40636    0.97625    0.97625    0.97438    0.96625    0.96625    0.967      0.94625    0.92438    0.88438    0.80876    0.69127]\n [   1.42042    0.97682    0.97682    0.97523    0.96682    0.96682    0.96745    0.94682    0.92523    0.88523    0.81045    0.69408]\n [   1.43463    0.97739    0.97739    0.97608    0.96739    0.96739    0.96791    0.94739    0.92608    0.88608    0.81216    0.69693]\n [   1.44897    0.97796    0.97796    0.97694    0.96796    0.96796    0.96837    0.94796    0.92694    0.88694    0.81388    0.69979]\n [   1.46346    0.97854    0.97854    0.97781    0.96854    0.96854    0.96883    0.94854    0.92781    0.88781    0.81562    0.70269]\n [   1.4781     0.97912    0.97912    0.97869    0.96912    0.96912    0.9693     0.94912    0.92869    0.88869    0.81737    0.70562]\n [   1.49288    0.97972    0.97972    0.97957    0.96972    0.96972    0.96977    0.94972    0.92957    0.88957    0.81915    0.70858]\n [   1.50781    0.98016    0.98016    0.98016    0.97031    0.97016    0.97016    0.95031    0.93031    0.89047    0.82078    0.71109]\n [   1.52289    0.98046    0.98046    0.98046    0.97092    0.97046    0.97046    0.95092    0.93092    0.89137    0.82229    0.7132 ]\n [   1.53811    0.98076    0.98076    0.98076    0.97152    0.97076    0.97076    0.95152    0.93152    0.89229    0.82381    0.71534]\n [   1.5535     0.98107    0.98107    0.98107    0.97214    0.97107    0.97107    0.95214    0.93214    0.89321    0.82535    0.71749]\n [   1.56903    0.98138    0.98138    0.98138    0.97276    0.97138    0.97138    0.95276    0.93276    0.89414    0.8269     0.71966]\n [   1.58472    0.98169    0.98169    0.98169    0.97339    0.97169    0.97169    0.95339    0.93339    0.89508    0.82847    0.72186]\n [   1.60057    0.98201    0.98201    0.98201    0.97402    0.97201    0.97201    0.95402    0.93402    0.89603    0.83006    0.72408]\n [   1.61657    0.98233    0.98233    0.98233    0.97466    0.97233    0.97233    0.95466    0.93466    0.89699    0.83166    0.72632]\n [   1.63274    0.98265    0.98265    0.98265    0.97531    0.97265    0.97265    0.95531    0.93531    0.89796    0.83327    0.72858]\n [   1.64907    0.98298    0.98298    0.98298    0.97596    0.97298    0.97298    0.95596    0.93596    0.89894    0.83491    0.73087]\n [   1.66556    0.98331    0.98331    0.98331    0.97662    0.97331    0.97331    0.95662    0.93662    0.89993    0.83656    0.73318]\n [   1.68221    0.98364    0.98364    0.98364    0.97729    0.97364    0.97364    0.95729    0.93729    0.90093    0.83822    0.73551]\n [   1.69904    0.98398    0.98398    0.98398    0.97796    0.97398    0.97398    0.95796    0.93796    0.90194    0.8399     0.73786]\n [   1.71603    0.98432    0.98432    0.98432    0.97864    0.97432    0.97432    0.95864    0.93864    0.90296    0.8416     0.74024]\n [   1.73319    0.98466    0.98466    0.98466    0.97933    0.97466    0.97466    0.95933    0.93933    0.90399    0.84332    0.74265]\n [   1.75052    0.98501    0.98501    0.98501    0.98002    0.97501    0.97501    0.96002    0.94002    0.90503    0.84505    0.74507]\n [   1.76802    0.98536    0.98536    0.98536    0.98072    0.97536    0.97536    0.96072    0.94072    0.90608    0.8468     0.74752]\n [   1.7857     0.98571    0.98571    0.98571    0.98143    0.97571    0.97571    0.96143    0.94143    0.90714    0.84857    0.75   ]\n [   1.80356    0.98607    0.98607    0.98607    0.98214    0.97607    0.97607    0.96214    0.94214    0.90821    0.85036    0.7525 ]\n [   1.8216     0.98643    0.98643    0.98643    0.98286    0.97643    0.97643    0.96286    0.94286    0.9093     0.85216    0.75502]\n [   1.83981    0.9868     0.9868     0.9868     0.98359    0.9768     0.9768     0.96359    0.94359    0.91039    0.85398    0.75757]\n [   1.85821    0.98716    0.98716    0.98716    0.98433    0.97716    0.97716    0.96433    0.94433    0.91149    0.85582    0.76015]\n [   1.87679    0.98754    0.98754    0.98754    0.98507    0.97754    0.97754    0.96507    0.94507    0.91261    0.85768    0.76275]\n [   1.89556    0.98791    0.98791    0.98791    0.98582    0.97791    0.97791    0.96582    0.94582    0.91373    0.85956    0.76538]\n [   1.91452    0.98829    0.98829    0.98829    0.98658    0.97829    0.97829    0.96658    0.94658    0.91487    0.86145    0.76803]\n [   1.93366    0.98867    0.98867    0.98867    0.98735    0.97867    0.97867    0.96735    0.94735    0.91602    0.86337    0.77071]\n [   1.953      0.98906    0.98906    0.98906    0.98812    0.97906    0.97906    0.96812    0.94812    0.91718    0.8653     0.77342]\n [   1.97253    0.98945    0.98945    0.98945    0.9889     0.97945    0.97945    0.9689     0.9489     0.91835    0.86725    0.77615]\n [   1.99225    0.98985    0.98985    0.98985    0.98969    0.97985    0.97985    0.96969    0.94969    0.91954    0.86923    0.77892]\n [   2.01218    0.99       0.99       0.99       0.99       0.98012    0.98012    0.97018    0.9503     0.92049    0.87079    0.78134]\n [   2.0323     0.99       0.99       0.99       0.99       0.98032    0.98032    0.97048    0.95081    0.92129    0.8721     0.78355]\n [   2.05262    0.99       0.99       0.99       0.99       0.98053    0.98053    0.97079    0.95132    0.9221     0.87342    0.78579]\n [   2.07315    0.99       0.99       0.99       0.99       0.98073    0.98073    0.9711     0.95183    0.92293    0.87475    0.78805]\n [   2.09388    0.99       0.99       0.99       0.99       0.98094    0.98094    0.97141    0.95235    0.92376    0.8761     0.79033]\n [   2.11482    0.99       0.99       0.99       0.99       0.98115    0.98115    0.97172    0.95287    0.92459    0.87746    0.79263]\n [   2.13596    0.99       0.99       0.99       0.99       0.98136    0.98136    0.97204    0.9534     0.92544    0.87884    0.79496]\n [   2.15732    0.99       0.99       0.99       0.99       0.98157    0.98157    0.97236    0.95393    0.92629    0.88023    0.79731]\n [   2.1789     0.99       0.99       0.99       0.99       0.98179    0.98179    0.97268    0.95447    0.92716    0.88163    0.79968]\n [   2.20069    0.99       0.99       0.99       0.99       0.98201    0.98201    0.97301    0.95502    0.92803    0.88304    0.80208]\n [   2.22269    0.99       0.99       0.99       0.99       0.98223    0.98223    0.97334    0.95557    0.92891    0.88448    0.8045 ]\n [   2.24492    0.99       0.99       0.99       0.99       0.98245    0.98245    0.97367    0.95612    0.9298     0.88592    0.80694]\n [   2.26737    0.99       0.99       0.99       0.99       0.98267    0.98267    0.97401    0.95668    0.93069    0.88738    0.80941]\n [   2.29004    0.99       0.99       0.99       0.99       0.9829     0.9829     0.97435    0.95725    0.9316     0.88885    0.8119 ]\n [   2.31294    0.99       0.99       0.99       0.99       0.98313    0.98313    0.97469    0.95782    0.93252    0.89034    0.81442]\n [   2.33607    0.99       0.99       0.99       0.99       0.98336    0.98336    0.97504    0.9584     0.93344    0.89184    0.81697]\n [   2.35943    0.99       0.99       0.99       0.99       0.98359    0.98359    0.97539    0.95899    0.93438    0.89336    0.81954]\n [   2.38303    0.99       0.99       0.99       0.99       0.98383    0.98383    0.97575    0.95958    0.93532    0.8949     0.82213]\n [   2.40686    0.99       0.99       0.99       0.99       0.98407    0.98407    0.9761     0.96017    0.93627    0.89645    0.82475]\n [   2.43093    0.99       0.99       0.99       0.99       0.98431    0.98431    0.97646    0.96077    0.93724    0.89801    0.8274 ]\n [   2.45524    0.99       0.99       0.99       0.99       0.98455    0.98455    0.97683    0.96138    0.93821    0.89959    0.83008]\n [   2.47979    0.99       0.99       0.99       0.99       0.9848     0.9848     0.9772     0.96199    0.93919    0.90119    0.83278]\n [   2.50459    0.99       0.99       0.99       0.99       0.98505    0.98505    0.97757    0.96261    0.94018    0.9028     0.8355 ]\n [   2.52963    0.99       0.99       0.99       0.99       0.9853     0.9853     0.97794    0.96324    0.94119    0.90443    0.83826]\n [   2.55493    0.99       0.99       0.99       0.99       0.98555    0.98555    0.97832    0.96387    0.9422     0.90607    0.84104]\n [   2.58048    0.99       0.99       0.99       0.99       0.9858     0.9858     0.97871    0.96451    0.94322    0.90773    0.84385]\n [   2.60628    0.99       0.99       0.99       0.99       0.98606    0.98606    0.97909    0.96516    0.94425    0.90941    0.84669]\n [   2.63235    0.99       0.99       0.99       0.99       0.98632    0.98632    0.97949    0.96581    0.94529    0.9111     0.84956]\n [   2.65867    0.99       0.99       0.99       0.99       0.98659    0.98659    0.97988    0.96647    0.94635    0.91281    0.85245]\n [   2.68526    0.99       0.99       0.99       0.99       0.98685    0.98685    0.98028    0.96713    0.94741    0.91454    0.85538]\n [   2.71211    0.99       0.99       0.99       0.99       0.98712    0.98712    0.98068    0.9678     0.94848    0.91629    0.85833]\n [   2.73923    0.99       0.99       0.99       0.99       0.98739    0.98739    0.98109    0.96848    0.94957    0.91805    0.86132]\n [   2.76662    0.99       0.99       0.99       0.99       0.98767    0.98767    0.9815     0.96917    0.95066    0.91983    0.86433]\n [   2.79429    0.99       0.99       0.99       0.99       0.98794    0.98794    0.98191    0.96986    0.95177    0.92163    0.86737]\n [   2.82223    0.99       0.99       0.99       0.99       0.98822    0.98822    0.98233    0.97056    0.95289    0.92345    0.87045]\n [   2.85045    0.99       0.99       0.99       0.99       0.9885     0.9885     0.98276    0.97126    0.95402    0.92528    0.87355]\n [   2.87896  \n```\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU4NTE4OmNlZDAxM2ZlMjhmZWQyOTE1MjA0NTMzNTYzZDY3YjFhZjExNWYwYWY=", "commit_message": "Merge pull request #3560 from minrk/longcell\n\nRemove max_msg_size\r\n\r\nThe max_msg_size safety limit is just removed.\r\n\r\ncloses #3124", "commit_timestamp": "2013-07-09T18:50:53Z", "files": ["IPython/html/notebookapp.py", "IPython/html/services/kernels/handlers.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzpkNmZiNGI3ZTY3YTkwZjNlZjVjYTJlY2M5ZTc0MTFlOTA2MzM4NmZm", "commit_message": "Merge pull request #3560 from minrk/longcell\n\nRemove max_msg_size\r\n\r\nThe max_msg_size safety limit is just removed.\r\n\r\ncloses #3124", "commit_timestamp": "2013-07-09T18:50:53Z", "files": ["IPython/html/notebookapp.py", "IPython/html/services/kernels/handlers.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmNlZDAxM2ZlMjhmZWQyOTE1MjA0NTMzNTYzZDY3YjFhZjExNWYwYWY=", "commit_message": "Merge pull request #3560 from minrk/longcell\n\nRemove max_msg_size\r\n\r\nThe max_msg_size safety limit is just removed.\r\n\r\ncloses #3124", "commit_timestamp": "2013-07-09T18:50:53Z", "files": ["IPython/html/notebookapp.py", "IPython/html/services/kernels/handlers.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmNlZDAxM2ZlMjhmZWQyOTE1MjA0NTMzNTYzZDY3YjFhZjExNWYwYWY=", "commit_message": "Merge pull request #3560 from minrk/longcell\n\nRemove max_msg_size\r\n\r\nThe max_msg_size safety limit is just removed.\r\n\r\ncloses #3124", "commit_timestamp": "2013-07-09T18:50:53Z", "files": ["IPython/html/notebookapp.py", "IPython/html/services/kernels/handlers.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzpkNmZiNGI3ZTY3YTkwZjNlZjVjYTJlY2M5ZTc0MTFlOTA2MzM4NmZm", "commit_message": "Merge pull request #3560 from minrk/longcell\n\nRemove max_msg_size\r\n\r\nThe max_msg_size safety limit is just removed.\r\n\r\ncloses #3124", "commit_timestamp": "2013-07-09T18:50:53Z", "files": ["IPython/html/notebookapp.py", "IPython/html/services/kernels/handlers.py"]}], "labels": ["bug", "notebook"], "created_at": "2013-04-02T17:05:20Z", "closed_at": "2013-07-09T18:50:54Z", "linked_pr_number": [3124], "method": ["label"]}
{"issue_number": 3123, "title": "Notebook crashed if unplugged ethernet cable", "body": "Reported by a friend yesterday, \n\nApparently reproductible in fedora. I don't think we can do much, but for the record I'll open the issue with the traceback. \n## \n#### To reproduce\n\nStart a server on localhost\nUnplug cable without deactivating interfaces first\nTry to start a second server, it crashes a launch time : \n\n(tornado 2.4.1)\n\n```\n[NotebookApp] Using existing profile dir: u'/home/parleur/.config/ipython/profile_default'\n[NotebookApp] Serving notebooks from /home/parleur\nTraceback (most recent call last):\n File \"/home/parleur/.local/bin/ipython\", line 9, in <module>\n   load_entry_point('ipython==0.13.1', 'console_scripts', 'ipython')()\n File \"/home/parleur/.local/lib/python2.7/site-packages/IPython/frontend/terminal/ipapp.py\", line 388, in launch_new_instance\n   app.initialize()\n File \"<string>\", line 2, in initialize\n File \"/home/parleur/.local/lib/python2.7/site-packages/IPython/config/application.py\", line 84, in catch_config_error\n   return method(app, *args, **kwargs)\n File \"/home/parleur/.local/lib/python2.7/site-packages/IPython/frontend/terminal/ipapp.py\", line 313, in initialize\n   super(TerminalIPythonApp, self).initialize(argv)\n File \"<string>\", line 2, in initialize\n File \"/home/parleur/.local/lib/python2.7/site-packages/IPython/config/application.py\", line 84, in catch_config_error\n   return method(app, *args, **kwargs)\n File \"/home/parleur/.local/lib/python2.7/site-packages/IPython/core/application.py\", line 325, in initialize\n   self.parse_command_line(argv)\n File \"/home/parleur/.local/lib/python2.7/site-packages/IPython/frontend/terminal/ipapp.py\", line 308, in parse_command_line\n   return super(TerminalIPythonApp, self).parse_command_line(argv)\n File \"<string>\", line 2, in parse_command_line\n File \"/home/parleur/.local/lib/python2.7/site-packages/IPython/config/application.py\", line 84, in catch_config_error\n   return method(app, *args, **kwargs)\n File \"/home/parleur/.local/lib/python2.7/site-packages/IPython/config/application.py\", line 420, in parse_command_line\n   return self.initialize_subcommand(subc, subargv)\n File \"<string>\", line 2, in initialize_subcommand\n File \"/home/parleur/.local/lib/python2.7/site-packages/IPython/config/application.py\", line 84, in catch_config_error\n   return method(app, *args, **kwargs)\n File \"/home/parleur/.local/lib/python2.7/site-packages/IPython/config/application.py\", line 359, in initialize_subcommand\n   self.subapp.initialize(argv)\n File \"<string>\", line 2, in initialize\n File \"/home/parleur/.local/lib/python2.7/site-packages/IPython/config/application.py\", line 84, in catch_config_error\n   return method(app, *args, **kwargs)\n File \"/home/parleur/.local/lib/python2.7/site-packages/IPython/frontend/html/notebook/notebookapp.py\", line 532, in initialize\n   self.init_webapp()\n File \"/home/parleur/.local/lib/python2.7/site-packages/IPython/frontend/html/notebook/notebookapp.py\", line 450, in init_webapp\n   self.http_server.listen(port, self.ip)\n File \"/home/parleur/.local/lib/python2.7/site-packages/tornado/netutil.py\", line 120, in listen\n   sockets = bind_sockets(port, address=address)\n File \"/home/parleur/.local/lib/python2.7/site-packages/tornado/netutil.py\", line 268, in bind_sockets\n   0, flags)):\ngaierror: [Errno -9] Address family for hostname not supported\n```\n", "commits": [{"node_id": "MDY6Q29tbWl0NzUzNzY4OjhlY2IyZmM3YWM1NTg5ODU5ZDc4NWFhOGQ3ZWFkYzkyNTllNmQ3NzQ=", "commit_message": "closes #3045, #3123 for tornado < version 3.0\n\nrelated to facebook/tornado#593\n\nI've verified that this fix works for tornado 2.1, 2.4, 2.4.1, and the\nbehavior it fixes does not trigger on tornado 3.0", "commit_timestamp": "2013-04-09T00:16:09Z", "files": ["IPython/frontend/html/notebook/notebookapp.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo3MzkxODhiODBlYmMxZTMxZjY1MmYwMmM2ODg0MDk4ZmFlMmE0MzU4", "commit_message": "closes #3045, #3123 for tornado < version 3.0\n\nrelated to facebook/tornado#593\n\nI've verified that this fix works for tornado 2.1, 2.4, 2.4.1, and the\nbehavior it fixes does not trigger on tornado 3.0", "commit_timestamp": "2013-04-09T00:16:09Z", "files": ["IPython/frontend/html/notebook/notebookapp.py"]}], "labels": [], "created_at": "2013-04-02T08:08:53Z", "closed_at": "2013-04-02T17:18:46Z", "method": ["regex"]}
{"issue_number": 3113, "title": "Fails to install under Jython 2.7 beta", "body": "This is the error I get:\n\n```\n% pip install ipython-0.13.tar.gz \nUnpacking ./ipython-0.13.tar.gz\n  Running setup.py egg_info for package from file:///home/aaditya/work/epsilon/installer/packages/ipython-0.13.tar.gz\n    Unsupported operating system: java\n    Complete output from command python setup.py egg_info:\n    Unsupported operating system: java\n```\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU5NDQ2OjdmMWZhNjRjNGRhOGFjNjgyODhiMWFmNzEyMDUyMDU5MzE1YjUzNzQ=", "commit_message": "don't give up on weird os names\n\nlike java\n\ncloses #3113", "commit_timestamp": "2013-03-30T18:51:32Z", "files": ["setup.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjdmMWZhNjRjNGRhOGFjNjgyODhiMWFmNzEyMDUyMDU5MzE1YjUzNzQ=", "commit_message": "don't give up on weird os names\n\nlike java\n\ncloses #3113", "commit_timestamp": "2013-03-30T18:51:32Z", "files": ["setup.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmQyYWU1YjNiYjkyMDVlNGUyYTQ4ODQ5N2MwNWZhMDdjM2RhZmRiMDE=", "commit_message": "Backport PR #3118: don't give up on weird os names\n\nlike java\n\ncloses #3113", "commit_timestamp": "2013-03-31T17:36:50Z", "files": ["setup.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo2ZThjZWM1ODFiZDk0ZmM0NDRiNTUzYzlhNDBiYzIxNWM2NGYxMjYy", "commit_message": "don't give up on weird os names\n\nlike java\n\ncloses #3113", "commit_timestamp": "2013-03-30T18:51:32Z", "files": ["setup.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjllMWUzY2FiYWY5YTQyYzdlMWE0YmQ0OTExNGU3MzVjZmZjMzI4MDI=", "commit_message": "Merge pull request #3118 from minrk/osname\n\ndon't give up on weird os names", "commit_timestamp": "2013-03-31T08:36:48Z", "files": ["setup.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjllMWUzY2FiYWY5YTQyYzdlMWE0YmQ0OTExNGU3MzVjZmZjMzI4MDI=", "commit_message": "Merge pull request #3118 from minrk/osname\n\ndon't give up on weird os names", "commit_timestamp": "2013-03-31T08:36:48Z", "files": ["setup.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmQyYWU1YjNiYjkyMDVlNGUyYTQ4ODQ5N2MwNWZhMDdjM2RhZmRiMDE=", "commit_message": "Backport PR #3118: don't give up on weird os names\n\nlike java\n\ncloses #3113", "commit_timestamp": "2013-03-31T17:36:50Z", "files": ["setup.py"]}, {"node_id": "MDY6Q29tbWl0MjM0Mzk1OTpjZjI1M2U3MWQ0Mzk5Nzk1OWRhNjM5ZTg5NmM5YmVmMzkzM2VhNDE2", "commit_message": "Merge tag 'rel-0.13.2' into debian-01X\n\nrelease 0.13.2\n\n* tag 'rel-0.13.2': (65 commits)\n  release 0.13.2\n  add release date\n  fix dot syntax error in inheritance diagram\n  only upload sdists (backported from master)\n  0.13.2 rc2\n  update whatsnew\n  Backport PR #3118: don't give up on weird os names\n  Backport PR #3117: propagate automagic change to shell\n  Backport PR #3097: PyQt 4.10: use self._document = self.document()\n  note latest backports\n  Backport PR #2224: fix css typo\n  avoid references to fiel out of directory\n  reimport HTML in different section\n  add width:100% to vbox for webkit / FF consistency (0.13.2)\n  0.13.2.rc1\n  generate whatsnew for 0.13.2\n  Backport PR #3008: fix cython module so extension for multiarched python\n  Backport PR #3013: py3 workaround for reload in cythonmagic\n  Backport PR #2831: avoid string version comparisons in external.qt\n  Backport PR #2994: expanduser on %%file targets\n  ...", "commit_timestamp": "2013-04-09T02:04:57Z", "files": ["IPython/config/application.py", "IPython/core/debugger.py", "IPython/core/interactiveshell.py", "IPython/core/magic.py", "IPython/core/magics/basic.py", "IPython/core/magics/code.py", "IPython/core/magics/execution.py", "IPython/core/magics/history.py", "IPython/core/magics/osm.py", "IPython/core/page.py", "IPython/core/prefilter.py", "IPython/core/release.py", "IPython/core/tests/test_debugger.py", "IPython/core/tests/test_interactiveshell.py", "IPython/core/tests/test_run.py", "IPython/core/ultratb.py", "IPython/extensions/cythonmagic.py", "IPython/external/qt.py", "IPython/external/qt_for_kernel.py", "IPython/external/ssh/tunnel.py", "IPython/frontend/html/notebook/handlers.py", "IPython/frontend/html/notebook/notebookapp.py", "IPython/frontend/qt/console/call_tip_widget.py", "IPython/frontend/qt/console/pygments_highlighter.py", "IPython/lib/clipboard.py", "IPython/lib/inputhookqt4.py", "IPython/lib/inputhookwx.py", "IPython/lib/pretty.py", "IPython/lib/tests/test_irunner.py", "IPython/lib/tests/test_irunner_pylab_magic.py", "IPython/lib/tests/test_pretty.py", "IPython/parallel/apps/ipengineapp.py", "IPython/parallel/apps/launcher.py", "IPython/parallel/client/client.py", "IPython/utils/data.py", "IPython/utils/jsonutil.py", "IPython/utils/rlineimpl.py", "IPython/utils/version.py", "IPython/zmq/iostream.py", "IPython/zmq/ipkernel.py", "IPython/zmq/tests/test_session.py", "docs/sphinxext/inheritance_diagram.py", "ipython.py", "setup.py", "tools/release_windows.py"]}, {"node_id": "MDY6Q29tbWl0MjM0Mzk1OTozMTNiOWYzMTM1YjE0Mjc1OTIwZjRmNTM5MTc5OTU0OTZkYjZjNzQ0", "commit_message": "Merge tag 'rel-0.13.2' (mtheirs) into releases\n\nrelease 0.13.2\n\n* tag 'rel-0.13.2': (65 commits)\n  release 0.13.2\n  add release date\n  fix dot syntax error in inheritance diagram\n  only upload sdists (backported from master)\n  0.13.2 rc2\n  update whatsnew\n  Backport PR #3118: don't give up on weird os names\n  Backport PR #3117: propagate automagic change to shell\n  Backport PR #3097: PyQt 4.10: use self._document = self.document()\n  note latest backports\n  Backport PR #2224: fix css typo\n  avoid references to fiel out of directory\n  reimport HTML in different section\n  add width:100% to vbox for webkit / FF consistency (0.13.2)\n  0.13.2.rc1\n  generate whatsnew for 0.13.2\n  Backport PR #3008: fix cython module so extension for multiarched python\n  Backport PR #3013: py3 workaround for reload in cythonmagic\n  Backport PR #2831: avoid string version comparisons in external.qt\n  Backport PR #2994: expanduser on %%file targets\n  ...", "commit_timestamp": "2013-08-09T16:53:59Z", "files": ["IPython/config/application.py", "IPython/core/debugger.py", "IPython/core/interactiveshell.py", "IPython/core/magic.py", "IPython/core/magics/basic.py", "IPython/core/magics/code.py", "IPython/core/magics/execution.py", "IPython/core/magics/history.py", "IPython/core/magics/osm.py", "IPython/core/page.py", "IPython/core/prefilter.py", "IPython/core/release.py", "IPython/core/tests/test_debugger.py", "IPython/core/tests/test_interactiveshell.py", "IPython/core/tests/test_run.py", "IPython/core/ultratb.py", "IPython/extensions/cythonmagic.py", "IPython/external/qt.py", "IPython/external/qt_for_kernel.py", "IPython/external/ssh/tunnel.py", "IPython/frontend/html/notebook/handlers.py", "IPython/frontend/html/notebook/notebookapp.py", "IPython/frontend/qt/console/call_tip_widget.py", "IPython/frontend/qt/console/pygments_highlighter.py", "IPython/lib/clipboard.py", "IPython/lib/inputhookqt4.py", "IPython/lib/inputhookwx.py", "IPython/lib/pretty.py", "IPython/lib/tests/test_irunner.py", "IPython/lib/tests/test_irunner_pylab_magic.py", "IPython/lib/tests/test_pretty.py", "IPython/parallel/apps/ipengineapp.py", "IPython/parallel/apps/launcher.py", "IPython/parallel/client/client.py", "IPython/utils/data.py", "IPython/utils/jsonutil.py", "IPython/utils/rlineimpl.py", "IPython/utils/version.py", "IPython/zmq/iostream.py", "IPython/zmq/ipkernel.py", "IPython/zmq/tests/test_session.py", "docs/sphinxext/inheritance_diagram.py", "ipython.py", "setup.py", "tools/release_windows.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzpmMTIwYmYyNmRmMDlhMzlmNjA4YmVkOTZkNzRmYTFiZTdhOWIxNjQ2", "commit_message": "Merge pull request #3118 from minrk/osname\n\ndon't give up on weird os names", "commit_timestamp": "2013-03-31T08:36:48Z", "files": ["setup.py"]}], "labels": [], "created_at": "2013-03-30T05:44:08Z", "closed_at": "2013-03-31T08:36:49Z", "linked_pr_number": [3113], "method": ["regex"]}
{"issue_number": 3084, "title": "ipython pyqt 4.10 incompatibilty, QTextBlockUserData", "body": "ipython qtconsole seems to be incompatible with pytqt 4.10, if you type in a line you get this\n\n```\nif 1:\n   print 1\n\nTraceback (most recent call last):\n  File \"/usr/lib/python2.7/dist-packages/IPython/frontend/qt/console/frontend_widget.py\", line 59, in highlightBlock\n    super(FrontendHighlighter, self).highlightBlock(string)\n  File \"/usr/lib/python2.7/dist-packages/IPython/frontend/qt/console/pygments_highlighter.py\", line 109, in highlightBlock\n    self._lexer._saved_state_stack = prev_data.syntax_stack\nAttributeError: 'QTextBlockUserData' object has no attribute 'syntax_stack'\n```\n\nthis needs to be fixed in two places, pyqt needs an update (currently available as snapshot) and ipython needs a fix in pygments_highlighter.py\n\n```\nself._document = QtGui.QTextDocument()\n```\n\n...to...\n\n```\nself._document = self.document()\n```\n\nsee:\nhttp://www.riverbankcomputing.com/pipermail/pyqt/2013-March/032512.html\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU5NDQ2OjA0YzQyNzk1NDg2NDVhZTMzZDAzY2FjOTgzMzg4M2Q5ZmYwMzk3YmY=", "commit_message": "use self._document = self.document()\n\nin PygmentsHighlighter, for PyQt 4.10 compatibility\n\nsee [PyQt list](http://www.riverbankcomputing.com/pipermail/pyqt/2013-March/032512.html)\nfor details.\n\ncloses #3084", "commit_timestamp": "2013-03-29T20:39:41Z", "files": ["IPython/frontend/qt/console/pygments_highlighter.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjA0YzQyNzk1NDg2NDVhZTMzZDAzY2FjOTgzMzg4M2Q5ZmYwMzk3YmY=", "commit_message": "use self._document = self.document()\n\nin PygmentsHighlighter, for PyQt 4.10 compatibility\n\nsee [PyQt list](http://www.riverbankcomputing.com/pipermail/pyqt/2013-March/032512.html)\nfor details.\n\ncloses #3084", "commit_timestamp": "2013-03-29T20:39:41Z", "files": ["IPython/frontend/qt/console/pygments_highlighter.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmQ1MTU5MDJlOTBjMzRmYTI3OTg1ZWQ1OTA4NDBmMjkyNzc1ZDc1Yjc=", "commit_message": "Merge pull request #3097 from minrk/qt-4.10\n\nPyQt 4.10: use self._document = self.document()\r\n\r\ncloses #3084\r\n\r\nI have tested this on all my machines with earlier PyQt and PySide, and it doesn't break anything. I don't have any truly old versions of PyQt, though.\r\n\r\nsee PyQt list for details.", "commit_timestamp": "2013-03-31T17:38:58Z", "files": ["IPython/frontend/qt/console/pygments_highlighter.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmQzMWViZTIzODgxNDNjNWQ2NTJkMTVjNTkxNmNlMGQ5OWYzOWM1NjM=", "commit_message": "Backport PR #3097: PyQt 4.10: use self._document = self.document()\n\nin PygmentsHighlighter, required for PyQt 4.10 compatibility.\n\ncloses #3084\n\nI have tested this on all my machines with earlier PyQt and PySide, and it doesn't break anything.  I don't have any truly old versions of PyQt, though.\n\nsee [PyQt list](http://www.riverbankcomputing.com/pipermail/pyqt/2013-March/032512.html) for details.", "commit_timestamp": "2013-03-31T17:36:45Z", "files": ["IPython/frontend/qt/console/pygments_highlighter.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzpkMWQ0MWQzMWQ4ZmQ4NTJjYjBkNWRlNmRhYWE0MzliNjg5MmY4YTY2", "commit_message": "use self._document = self.document()\n\nin PygmentsHighlighter, for PyQt 4.10 compatibility\n\nsee [PyQt list](http://www.riverbankcomputing.com/pipermail/pyqt/2013-March/032512.html)\nfor details.\n\ncloses #3084", "commit_timestamp": "2013-03-29T20:39:41Z", "files": ["IPython/frontend/qt/console/pygments_highlighter.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzplMzA5ZTQ1NjE1YjRmZjM2ZTFhMDhjYTVmNjdjZGU5ZDg1ODY2NTRj", "commit_message": "Merge pull request #3097 from minrk/qt-4.10\n\nPyQt 4.10: use self._document = self.document()\r\n\r\ncloses #3084\r\n\r\nI have tested this on all my machines with earlier PyQt and PySide, and it doesn't break anything. I don't have any truly old versions of PyQt, though.\r\n\r\nsee PyQt list for details.", "commit_timestamp": "2013-03-31T17:38:58Z", "files": ["IPython/frontend/qt/console/pygments_highlighter.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmQ1MTU5MDJlOTBjMzRmYTI3OTg1ZWQ1OTA4NDBmMjkyNzc1ZDc1Yjc=", "commit_message": "Merge pull request #3097 from minrk/qt-4.10\n\nPyQt 4.10: use self._document = self.document()\r\n\r\ncloses #3084\r\n\r\nI have tested this on all my machines with earlier PyQt and PySide, and it doesn't break anything. I don't have any truly old versions of PyQt, though.\r\n\r\nsee PyQt list for details.", "commit_timestamp": "2013-03-31T17:38:58Z", "files": ["IPython/frontend/qt/console/pygments_highlighter.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmQ1MTU5MDJlOTBjMzRmYTI3OTg1ZWQ1OTA4NDBmMjkyNzc1ZDc1Yjc=", "commit_message": "Merge pull request #3097 from minrk/qt-4.10\n\nPyQt 4.10: use self._document = self.document()\r\n\r\ncloses #3084\r\n\r\nI have tested this on all my machines with earlier PyQt and PySide, and it doesn't break anything. I don't have any truly old versions of PyQt, though.\r\n\r\nsee PyQt list for details.", "commit_timestamp": "2013-03-31T17:38:58Z", "files": ["IPython/frontend/qt/console/pygments_highlighter.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmQzMWViZTIzODgxNDNjNWQ2NTJkMTVjNTkxNmNlMGQ5OWYzOWM1NjM=", "commit_message": "Backport PR #3097: PyQt 4.10: use self._document = self.document()\n\nin PygmentsHighlighter, required for PyQt 4.10 compatibility.\n\ncloses #3084\n\nI have tested this on all my machines with earlier PyQt and PySide, and it doesn't break anything.  I don't have any truly old versions of PyQt, though.\n\nsee [PyQt list](http://www.riverbankcomputing.com/pipermail/pyqt/2013-March/032512.html) for details.", "commit_timestamp": "2013-03-31T17:36:45Z", "files": ["IPython/frontend/qt/console/pygments_highlighter.py"]}, {"node_id": "MDY6Q29tbWl0MjM0Mzk1OTpjZjI1M2U3MWQ0Mzk5Nzk1OWRhNjM5ZTg5NmM5YmVmMzkzM2VhNDE2", "commit_message": "Merge tag 'rel-0.13.2' into debian-01X\n\nrelease 0.13.2\n\n* tag 'rel-0.13.2': (65 commits)\n  release 0.13.2\n  add release date\n  fix dot syntax error in inheritance diagram\n  only upload sdists (backported from master)\n  0.13.2 rc2\n  update whatsnew\n  Backport PR #3118: don't give up on weird os names\n  Backport PR #3117: propagate automagic change to shell\n  Backport PR #3097: PyQt 4.10: use self._document = self.document()\n  note latest backports\n  Backport PR #2224: fix css typo\n  avoid references to fiel out of directory\n  reimport HTML in different section\n  add width:100% to vbox for webkit / FF consistency (0.13.2)\n  0.13.2.rc1\n  generate whatsnew for 0.13.2\n  Backport PR #3008: fix cython module so extension for multiarched python\n  Backport PR #3013: py3 workaround for reload in cythonmagic\n  Backport PR #2831: avoid string version comparisons in external.qt\n  Backport PR #2994: expanduser on %%file targets\n  ...", "commit_timestamp": "2013-04-09T02:04:57Z", "files": ["IPython/config/application.py", "IPython/core/debugger.py", "IPython/core/interactiveshell.py", "IPython/core/magic.py", "IPython/core/magics/basic.py", "IPython/core/magics/code.py", "IPython/core/magics/execution.py", "IPython/core/magics/history.py", "IPython/core/magics/osm.py", "IPython/core/page.py", "IPython/core/prefilter.py", "IPython/core/release.py", "IPython/core/tests/test_debugger.py", "IPython/core/tests/test_interactiveshell.py", "IPython/core/tests/test_run.py", "IPython/core/ultratb.py", "IPython/extensions/cythonmagic.py", "IPython/external/qt.py", "IPython/external/qt_for_kernel.py", "IPython/external/ssh/tunnel.py", "IPython/frontend/html/notebook/handlers.py", "IPython/frontend/html/notebook/notebookapp.py", "IPython/frontend/qt/console/call_tip_widget.py", "IPython/frontend/qt/console/pygments_highlighter.py", "IPython/lib/clipboard.py", "IPython/lib/inputhookqt4.py", "IPython/lib/inputhookwx.py", "IPython/lib/pretty.py", "IPython/lib/tests/test_irunner.py", "IPython/lib/tests/test_irunner_pylab_magic.py", "IPython/lib/tests/test_pretty.py", "IPython/parallel/apps/ipengineapp.py", "IPython/parallel/apps/launcher.py", "IPython/parallel/client/client.py", "IPython/utils/data.py", "IPython/utils/jsonutil.py", "IPython/utils/rlineimpl.py", "IPython/utils/version.py", "IPython/zmq/iostream.py", "IPython/zmq/ipkernel.py", "IPython/zmq/tests/test_session.py", "docs/sphinxext/inheritance_diagram.py", "ipython.py", "setup.py", "tools/release_windows.py"]}, {"node_id": "MDY6Q29tbWl0MjM0Mzk1OTozMTNiOWYzMTM1YjE0Mjc1OTIwZjRmNTM5MTc5OTU0OTZkYjZjNzQ0", "commit_message": "Merge tag 'rel-0.13.2' (mtheirs) into releases\n\nrelease 0.13.2\n\n* tag 'rel-0.13.2': (65 commits)\n  release 0.13.2\n  add release date\n  fix dot syntax error in inheritance diagram\n  only upload sdists (backported from master)\n  0.13.2 rc2\n  update whatsnew\n  Backport PR #3118: don't give up on weird os names\n  Backport PR #3117: propagate automagic change to shell\n  Backport PR #3097: PyQt 4.10: use self._document = self.document()\n  note latest backports\n  Backport PR #2224: fix css typo\n  avoid references to fiel out of directory\n  reimport HTML in different section\n  add width:100% to vbox for webkit / FF consistency (0.13.2)\n  0.13.2.rc1\n  generate whatsnew for 0.13.2\n  Backport PR #3008: fix cython module so extension for multiarched python\n  Backport PR #3013: py3 workaround for reload in cythonmagic\n  Backport PR #2831: avoid string version comparisons in external.qt\n  Backport PR #2994: expanduser on %%file targets\n  ...", "commit_timestamp": "2013-08-09T16:53:59Z", "files": ["IPython/config/application.py", "IPython/core/debugger.py", "IPython/core/interactiveshell.py", "IPython/core/magic.py", "IPython/core/magics/basic.py", "IPython/core/magics/code.py", "IPython/core/magics/execution.py", "IPython/core/magics/history.py", "IPython/core/magics/osm.py", "IPython/core/page.py", "IPython/core/prefilter.py", "IPython/core/release.py", "IPython/core/tests/test_debugger.py", "IPython/core/tests/test_interactiveshell.py", "IPython/core/tests/test_run.py", "IPython/core/ultratb.py", "IPython/extensions/cythonmagic.py", "IPython/external/qt.py", "IPython/external/qt_for_kernel.py", "IPython/external/ssh/tunnel.py", "IPython/frontend/html/notebook/handlers.py", "IPython/frontend/html/notebook/notebookapp.py", "IPython/frontend/qt/console/call_tip_widget.py", "IPython/frontend/qt/console/pygments_highlighter.py", "IPython/lib/clipboard.py", "IPython/lib/inputhookqt4.py", "IPython/lib/inputhookwx.py", "IPython/lib/pretty.py", "IPython/lib/tests/test_irunner.py", "IPython/lib/tests/test_irunner_pylab_magic.py", "IPython/lib/tests/test_pretty.py", "IPython/parallel/apps/ipengineapp.py", "IPython/parallel/apps/launcher.py", "IPython/parallel/client/client.py", "IPython/utils/data.py", "IPython/utils/jsonutil.py", "IPython/utils/rlineimpl.py", "IPython/utils/version.py", "IPython/zmq/iostream.py", "IPython/zmq/ipkernel.py", "IPython/zmq/tests/test_session.py", "docs/sphinxext/inheritance_diagram.py", "ipython.py", "setup.py", "tools/release_windows.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzplMzA5ZTQ1NjE1YjRmZjM2ZTFhMDhjYTVmNjdjZGU5ZDg1ODY2NTRj", "commit_message": "Merge pull request #3097 from minrk/qt-4.10\n\nPyQt 4.10: use self._document = self.document()\r\n\r\ncloses #3084\r\n\r\nI have tested this on all my machines with earlier PyQt and PySide, and it doesn't break anything. I don't have any truly old versions of PyQt, though.\r\n\r\nsee PyQt list for details.", "commit_timestamp": "2013-03-31T17:38:58Z", "files": ["IPython/frontend/qt/console/pygments_highlighter.py"]}], "labels": ["qtconsole", "bug"], "created_at": "2013-03-26T19:36:43Z", "closed_at": "2013-03-31T17:39:00Z", "linked_pr_number": [3084], "method": ["label"]}
{"issue_number": 3053, "title": "Markdown in header cells is not rendered", "body": "You cannot have italics, etc. in a header cell in master, because the header is not rendered.\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU4NTE4OmFlMDRhMGRmNDNiOTE2NmFhMTM4YzQ0OGI1ODVlY2MyYzRiODFhNWY=", "commit_message": "Merge pull request #3601 from minrk/headingmath2\n\nMarkdown in heading cells (take 2)\r\n\r\ncloses #3053\r\ncloses #3597", "commit_timestamp": "2013-07-16T20:00:32Z", "files": ["IPython/nbconvert/exporters/exporter.py", "IPython/nbconvert/filters/markdown.py", "IPython/nbconvert/filters/strings.py", "IPython/nbconvert/utils/pandoc.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzoyZjI4ZjgzZmZjOWJkOTNlMDliMmIwMTNhYjkwY2ZkYTc4Y2M3NTg1", "commit_message": "Merge pull request #3601 from minrk/headingmath2\n\nMarkdown in heading cells (take 2)\r\n\r\ncloses #3053\r\ncloses #3597", "commit_timestamp": "2013-07-16T20:00:32Z", "files": ["IPython/nbconvert/exporters/exporter.py", "IPython/nbconvert/filters/markdown.py", "IPython/nbconvert/filters/strings.py", "IPython/nbconvert/utils/pandoc.py"]}], "labels": ["bug", "notebook"], "created_at": "2013-03-21T20:12:16Z", "closed_at": "2013-07-16T20:00:32Z", "linked_pr_number": [3053], "method": ["label"]}
{"issue_number": 3043, "title": "can't restart pdb session in ipython", "body": "```\nIn [1]: %run -d ~/t.py\nBreakpoint 1 at /home/sk/t.py:1\nNOTE: Enter 'c' at the ipdb>  prompt to start your script.\n> /home/sk/t.py(1)<module>()\n1---> 1 from sympy import *\n      2 x = Symbol('x')\n      3 #bessely(0,x).series(x)\n\nipdb> n\n> /home/sk/t.py(2)<module>()\n1     1 from sympy import *\n----> 2 x = Symbol('x')\n      3 #bessely(0,x).series(x)\n\nipdb> n\n> /home/sk/t.py(5)<module>()\n      4 #sin(asin(3), evaluate=False).is_rational\n----> 5 n = Symbol('n', integer=True)\n      6 #Sum(x**n, (n, 0, S.Infinity)).doit()\n\nipdb> restart\n---------------------------------------------------------------------------\nRestart                                   Traceback (most recent call last)\n/home/sk/src/ipython/IPython/utils/py3compat.pyc in execfile(fname, *where)\n    181             else:\n    182                 filename = fname\n--> 183             __builtin__.execfile(filename, *where)\n\n/home/sk/t.py in <module>()\n      3 #bessely(0,x).series(x)\n      4 #sin(asin(3), evaluate=False).is_rational\n----> 5 n = Symbol('n', integer=True)\n      6 #Sum(x**n, (n, 0, S.Infinity)).doit()\n      7 summation(2**n - 10,(n,0,oo))\n\n/home/sk/t.py in <module>()\n      3 #bessely(0,x).series(x)\n      4 #sin(asin(3), evaluate=False).is_rational\n----> 5 n = Symbol('n', integer=True)\n      6 #Sum(x**n, (n, 0, S.Infinity)).doit()\n      7 summation(2**n - 10,(n,0,oo))\n\n/usr/lib/python2.6/bdb.pyc in trace_dispatch(self, frame, event, arg)\n     44             return # None\n     45         if event == 'line':\n---> 46             return self.dispatch_line(frame)\n     47         if event == 'call':\n     48             return self.dispatch_call(frame, arg)\n\n/usr/lib/python2.6/bdb.pyc in dispatch_line(self, frame)\n     62     def dispatch_line(self, frame):\n     63         if self.stop_here(frame) or self.break_here(frame):\n---> 64             self.user_line(frame)\n     65             if self.quitting: raise BdbQuit\n     66         return self.trace_dispatch\n\n/usr/lib/python2.6/pdb.pyc in user_line(self, frame)\n    148             self._wait_for_mainpyfile = 0\n    149         if self.bp_commands(frame):\n--> 150             self.interaction(frame, None)\n    151 \n    152     def bp_commands(self,frame):\n\n/home/sk/src/ipython/IPython/core/debugger.pyc in interaction(self, frame, traceback)\n    259     def interaction(self, frame, traceback):\n    260         self.shell.set_completer_frame(frame)\n--> 261         OldPdb.interaction(self, frame, traceback)\n    262 \n    263     def new_do_up(self, arg):\n\n/usr/lib/python2.6/pdb.pyc in interaction(self, frame, traceback)\n    196         self.setup(frame, traceback)\n    197         self.print_stack_entry(self.stack[self.curindex])\n--> 198         self.cmdloop()\n    199         self.forget()\n    200 \n\n/usr/lib/python2.6/cmd.pyc in cmdloop(self, intro)\n    140                             line = line.rstrip('\\r\\n')\n    141                 line = self.precmd(line)\n--> 142                 stop = self.onecmd(line)\n    143                 stop = self.postcmd(stop, line)\n    144             self.postloop()\n\n/usr/lib/python2.6/pdb.pyc in onecmd(self, line)\n    265         \"\"\"\n    266         if not self.commands_defining:\n--> 267             return cmd.Cmd.onecmd(self, line)\n    268         else:\n    269             return self.handle_command_def(line)\n\n/usr/lib/python2.6/cmd.pyc in onecmd(self, line)\n    217             except AttributeError:\n    218                 return self.default(line)\n--> 219             return func(arg)\n    220 \n    221     def emptyline(self):\n\n/usr/lib/python2.6/pdb.pyc in do_run(self, arg)\n    659             sys.argv = shlex.split(arg)\n    660             sys.argv[:0] = argv0\n--> 661         raise Restart\n    662 \n    663     do_restart = do_run\n\nRestart: \n\nIn [2]: \n```\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU5NDQ2OjAxNWU3MDc3MTE3NDZhZWU0MzVjYTljNGRkOTRkYWQ1ZWZkMjk1MWU=", "commit_message": "allow restart in `%run -d`\n\ncloses #3043", "commit_timestamp": "2013-11-08T19:17:42Z", "files": ["IPython/core/magics/execution.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzphZmM5NjQxYzlmNmRjMjRiZmUwZmZhZjg5NDFkYzlkYmJlZWQ4NmY4", "commit_message": "allow restart in `%run -d`\n\ncloses #3043", "commit_timestamp": "2013-11-08T19:17:42Z", "files": ["IPython/core/magics/execution.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjA5ZjZjZTVkOGNhODMxMzhiZjFmODUxNzk4OWUyM2NjY2I2OTk2ZTM=", "commit_message": "Merge pull request #4514 from minrk/pdbrestart\n\nallow restart in `%run -d`", "commit_timestamp": "2013-11-13T10:50:46Z", "files": ["IPython/core/magics/execution.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjA5ZjZjZTVkOGNhODMxMzhiZjFmODUxNzk4OWUyM2NjY2I2OTk2ZTM=", "commit_message": "Merge pull request #4514 from minrk/pdbrestart\n\nallow restart in `%run -d`", "commit_timestamp": "2013-11-13T10:50:46Z", "files": ["IPython/core/magics/execution.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzpmY2U5MjNiMDVjMTQ2NWNhNjA1YWZhMmVlYjQ4NjUxMzU5MWUzOTBh", "commit_message": "Merge pull request #4514 from minrk/pdbrestart\n\nallow restart in `%run -d`", "commit_timestamp": "2013-11-13T10:50:46Z", "files": ["IPython/core/magics/execution.py"]}], "labels": ["bug"], "created_at": "2013-03-20T12:55:57Z", "closed_at": "2013-11-13T10:50:46Z", "linked_pr_number": [3043], "method": ["label", "regex"]}
{"issue_number": 3039, "title": "unicode errors when opening a new notebook", "body": "On windows 7 ipython 731eac3 I get a unicode exception when opening a notebook from a path containing non-ascii characters. I do not get the error if only the notebook and not the path contains non-ascii characters.\n\nExample:\n\n```\nC:\\python\\ipydevel\\notebooks\\\u00e5\u00e4\u00f6> ipython notebook\n[NotebookApp] Using existing profile dir: u'C:\\\\Users\\\\jstenar\\\\.ipython\\\\profile_default'\n[NotebookApp] Serving notebooks from local directory: C:\\python\\ipydevel\\notebooks\\\u00e5\u00e4\u00f6\n[NotebookApp] The IPython Notebook is running at: http://127.0.0.1:8888/\n[NotebookApp] Use Control-C to stop this server and shut down all kernels.\n[NotebookApp] Using MathJax from CDN: http://cdn.mathjax.org/mathjax/latest/MathJax.js\nERROR:root:Uncaught exception POST /kernels?notebook=b6abbe73-c225-4182-8b86-4c4094480d4d (127.0.0.1)\nHTTPRequest(protocol='http', host='127.0.0.1:8888', method='POST', uri='/kernels?notebook=b6abbe73-c225-4182-8b86-4c4094480d4d', version='HTTP/1.1', remote_ip='127.0.0.1', body='', headers={'Origin': 'http://127.0.0.1:8888', 'Content-Length': '0', 'Accept-Language': 'sv-SE,sv;q=0.8,en-US;q=0.6,en;q=0.4', 'Accept-Encoding': 'gzip,deflate,sdch', 'Host': '127.0.0.1:8888', 'Accept': 'application/json, text/javascript, */*; q=0.01', 'User-Agent': 'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.22 (KHTML, like Gecko) Chrome/25.0.1364.172 Safari/537.22', 'Accept-Charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3', 'Connection': 'keep-alive', 'X-Requested-With': 'XMLHttpRequest', 'Referer': 'http://127.0.0.1:8888/b6abbe73-c225-4182-8b86-4c4094480d4d'})\nTraceback (most recent call last):\n  File \"C:\\python27\\lib\\site-packages\\tornado\\web.py\", line 1021, in _execute\n    getattr(self, self.request.method.lower())(*args, **kwargs)\n  File \"C:\\python27\\lib\\site-packages\\tornado\\web.py\", line 1794, in wrapper\n    return method(self, *args, **kwargs)\n  File \"C:\\python27\\lib\\site-packages\\ipython-1.0.dev-py2.7.egg\\IPython\\frontend\\html\\notebook\\handlers.py\", line 352, in post\n    kernel_id = km.start_kernel(notebook_id, cwd=nbm.notebook_dir)\n  File \"C:\\python27\\lib\\site-packages\\ipython-1.0.dev-py2.7.egg\\IPython\\frontend\\html\\notebook\\kernelmanager.py\", line 85, in start_kernel\n    kernel_id = super(MappingKernelManager, self).start_kernel(**kwargs)\n  File \"C:\\python27\\lib\\site-packages\\ipython-1.0.dev-py2.7.egg\\IPython\\kernel\\multikernelmanager.py\", line 98, in start_kernel\n    km.start_kernel(**kwargs)\n  File \"C:\\python27\\lib\\site-packages\\ipython-1.0.dev-py2.7.egg\\IPython\\kernel\\kernelmanager.py\", line 950, in start_kernel\n    **kw)\n  File \"C:\\python27\\lib\\site-packages\\ipython-1.0.dev-py2.7.egg\\IPython\\kernel\\kernelmanager.py\", line 919, in _launch_kernel\n    return launch_kernel(kernel_cmd, **kw)\n  File \"C:\\python27\\lib\\site-packages\\ipython-1.0.dev-py2.7.egg\\IPython\\kernel\\launcher.py\", line 227, in launch_kernel\n    stdin=_stdin, stdout=_stdout, stderr=_stderr, cwd=cwd, env=os.environ)\n  File \"C:\\python27\\lib\\subprocess.py\", line 679, in __init__\n    errread, errwrite)\n  File \"C:\\python27\\lib\\subprocess.py\", line 893, in _execute_child\n    startupinfo)\nUnicodeEncodeError: 'ascii' codec can't encode characters in position 29-31: ordinal not in range(128)\nERROR:root:500 POST /kernels?notebook=b6abbe73-c225-4182-8b86-4c4094480d4d (127.0.0.1) 13.00ms\n```\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU5NDQ2OjBhZDJlMjE3OWFhYzAzZmRhMjZhZGU5N2ViYTI1YTI5MmNkNWQzZTM=", "commit_message": "cast kernel cwd to bytes on Python 2 on Windows\n\nPopen on Windows Python 2.x apparently cannot handle unicode cwd.\nuse filesystemencoding if defined, fallback on ascii.\n\ncloses #3039", "commit_timestamp": "2013-03-21T00:07:44Z", "files": ["IPython/kernel/launcher.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjBhZDJlMjE3OWFhYzAzZmRhMjZhZGU5N2ViYTI1YTI5MmNkNWQzZTM=", "commit_message": "cast kernel cwd to bytes on Python 2 on Windows\n\nPopen on Windows Python 2.x apparently cannot handle unicode cwd.\nuse filesystemencoding if defined, fallback on ascii.\n\ncloses #3039", "commit_timestamp": "2013-03-21T00:07:44Z", "files": ["IPython/kernel/launcher.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjNmYjM1ZGMyM2NjMGI2YjViMDFmODNkY2M5MGRjNzc5ZDIzNTQ2OTQ=", "commit_message": "Merge pull request #3046 from minrk/popen_cwdu_win32\n\ncast kernel cwd to bytes on Python 2 on Windows\r\n\r\nPopen on Windows Python 2.x apparently cannot handle unicode cwd. use\r\nfilesystemencoding if defined, fallback on ascii.\r\n\r\ncloses #3039", "commit_timestamp": "2013-03-21T19:52:41Z", "files": ["IPython/kernel/launcher.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo3MzUwZjdlNjI3MjVhOGJiYjNlMGE5ZTcwNzAzMDhmM2M0MTU4MTlh", "commit_message": "cast kernel cwd to bytes on Python 2 on Windows\n\nPopen on Windows Python 2.x apparently cannot handle unicode cwd.\nuse filesystemencoding if defined, fallback on ascii.\n\ncloses #3039", "commit_timestamp": "2013-03-21T00:07:44Z", "files": ["IPython/kernel/launcher.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzpjZDk0NGYzMjg5NjE2N2RlOTZhZjlkOGU0Njg5ZDhlNWI1YjZhMGMz", "commit_message": "Merge pull request #3046 from minrk/popen_cwdu_win32\n\ncast kernel cwd to bytes on Python 2 on Windows\r\n\r\nPopen on Windows Python 2.x apparently cannot handle unicode cwd. use\r\nfilesystemencoding if defined, fallback on ascii.\r\n\r\ncloses #3039", "commit_timestamp": "2013-03-21T19:52:41Z", "files": ["IPython/kernel/launcher.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjNmYjM1ZGMyM2NjMGI2YjViMDFmODNkY2M5MGRjNzc5ZDIzNTQ2OTQ=", "commit_message": "Merge pull request #3046 from minrk/popen_cwdu_win32\n\ncast kernel cwd to bytes on Python 2 on Windows\r\n\r\nPopen on Windows Python 2.x apparently cannot handle unicode cwd. use\r\nfilesystemencoding if defined, fallback on ascii.\r\n\r\ncloses #3039", "commit_timestamp": "2013-03-21T19:52:41Z", "files": ["IPython/kernel/launcher.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjNmYjM1ZGMyM2NjMGI2YjViMDFmODNkY2M5MGRjNzc5ZDIzNTQ2OTQ=", "commit_message": "Merge pull request #3046 from minrk/popen_cwdu_win32\n\ncast kernel cwd to bytes on Python 2 on Windows\r\n\r\nPopen on Windows Python 2.x apparently cannot handle unicode cwd. use\r\nfilesystemencoding if defined, fallback on ascii.\r\n\r\ncloses #3039", "commit_timestamp": "2013-03-21T19:52:41Z", "files": ["IPython/kernel/launcher.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzpjZDk0NGYzMjg5NjE2N2RlOTZhZjlkOGU0Njg5ZDhlNWI1YjZhMGMz", "commit_message": "Merge pull request #3046 from minrk/popen_cwdu_win32\n\ncast kernel cwd to bytes on Python 2 on Windows\r\n\r\nPopen on Windows Python 2.x apparently cannot handle unicode cwd. use\r\nfilesystemencoding if defined, fallback on ascii.\r\n\r\ncloses #3039", "commit_timestamp": "2013-03-21T19:52:41Z", "files": ["IPython/kernel/launcher.py"]}], "labels": ["unicode", "windows", "bug"], "created_at": "2013-03-19T18:32:15Z", "closed_at": "2013-03-21T19:52:43Z", "linked_pr_number": [3039], "method": ["label"]}
{"issue_number": 3020, "title": "Failing test test_interactiveshell.TestAstTransform on Windows", "body": "I think this is one I need to look at, putting it here so I don't forget.\n\n```\n======================================================================\nFAIL: test_time (IPython.core.tests.test_interactiveshell.TestAstTransform)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"S:\\Users\\slave\\Jenkins\\shiningpanda\\jobs\\d5f643a2\\virtualenvs\\ff035a1d\\lib\\site-packages\\ipython-1.0.dev-py2.7.egg\\IPython\\core\\tests\\test_interactiveshell.py\", line 497, in test_time\n    ip.run_line_magic(\"time\", \"f(5+9)\")\n  File \"S:\\Users\\slave\\Jenkins\\shiningpanda\\jobs\\d5f643a2\\virtualenvs\\ff035a1d\\lib\\site-packages\\ipython-1.0.dev-py2.7.egg\\IPython\\testing\\tools.py\", line 342, in __exit__\n    assert self.s in printed, notprinted_msg.format(self.s, self.channel, printed)\nAssertionError: Did not find 'CPU times' in printed output (on stdout):\n-------\nWall time: 0 ns\n\n-------\n```\n\nhttps://jenkins.shiningpanda-ci.com/ipython/job/ipython-win-py27/49/console\n", "commits": [{"node_id": "MDY6Q29tbWl0MTIzNjAwMzpiMDAwMWZjZDZlMGU1NDAxYzBjMDVmY2YwZTg1YzhhMjhhMWY0ZWRk", "commit_message": "Fix test for Windows\n\nCloses gh-3020", "commit_timestamp": "2013-03-15T20:16:56Z", "files": ["IPython/core/tests/test_interactiveshell.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmIwMDAxZmNkNmUwZTU0MDFjMGMwNWZjZjBlODVjOGEyOGExZjRlZGQ=", "commit_message": "Fix test for Windows\n\nCloses gh-3020", "commit_timestamp": "2013-03-15T20:16:56Z", "files": ["IPython/core/tests/test_interactiveshell.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjhiYjNmNTM3NWI1MDY4MjM1YmUzODgxMmNiYjVkMzdlNGJlMDNiOWU=", "commit_message": "Merge pull request #3022 from takluyver/i3020\n\nFix test for Windows\r\n\r\nCloses #3020", "commit_timestamp": "2013-03-16T06:16:37Z", "files": ["IPython/core/tests/test_interactiveshell.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzpmNDg3NzU5OGMyNDc5OTI5MjIyYjFjMzIzMzViMjY5ZmM0YmI3N2Qw", "commit_message": "Fix test for Windows\n\nCloses gh-3020", "commit_timestamp": "2013-03-15T20:16:56Z", "files": ["IPython/core/tests/test_interactiveshell.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzpjMzhlZWFlYmQzOWMxY2M1ZjhhOTE4OWYwN2QzYTE4ZWM5NGJjNjBk", "commit_message": "Merge pull request #3022 from takluyver/i3020\n\nFix test for Windows\r\n\r\nCloses #3020", "commit_timestamp": "2013-03-16T06:16:37Z", "files": ["IPython/core/tests/test_interactiveshell.py"]}], "labels": ["windows", "bug", "testing"], "created_at": "2013-03-15T10:26:34Z", "closed_at": "2013-03-16T06:16:39Z", "method": ["label"]}
{"issue_number": 3017, "title": "SciPy.weave broken in IPython notebook/ qtconsole ", "body": "# Problem\n\nCompiling and running of compiled scipy.weave code is not possible with IPython notebook and IPython console. However, it works with standalone, plain IPython.\n# Minimal Example\n\nhttp://projects.scipy.org/scipy/browser/trunk/Lib/weave/examples/array3d.py?rev=1558\n# Error\n## compiling code\n\nfind the traceback here:\nhttp://pastebin.com/FdSadJtV\nfinal error:\nAttributeError: 'OutStream' object has no attribute 'fileno'\n## executing code\n\nFor both notebook and qtconsole, the output is printed in the terminal that was used to start them.\n# tested version\n## failure in\n\nipython 0.13.1\nscipy  '0.11.0' \nnumpy '1.7.0'\n## working in\n### compilation\n\nApparently it is working with numpy 1.6.0. I did not test it by myself, but that was a response on IRC. It was there also reproduced using numpy 1.7.0. I could compile it in an virtualenv using numpy 1.6 using the notebook. (Still trying to get the qtconsole to run so that I can test that)\n### output\n\nEven with numpy 1.6 the output is directed to the terminal that was used to start the IPython kernel\n", "commits": [{"node_id": "MDY6Q29tbWl0OTA4NjA3OjY0OWM5MDgzMTA3NWI1MTQxYjU2ZTMyMWYyMWM1NzZlZTU4YTA2YTY=", "commit_message": "Assume we can use sys.stdout.fileno() and friends.\n\nThe workaround shouldn't be necessary in a recent python shell.\nTested in python, ipython.\n\nIn fact, distutils is almost never imported and run manually from an\ninteractive shell.\n\nThis removes the use of `sys.__stdout__`, which broke with distribute\n0.6.30 on Python 3.", "commit_timestamp": "2012-11-23T22:58:19Z", "files": ["numpy/distutils/exec_command.py"]}, {"node_id": "MDY6Q29tbWl0NjU5NDQ2OjI3ZTMwODNjYTE5NDUzZmRiNjljMWI5NzZlNTg0YzJlOWJhZGU0MTY=", "commit_message": "raise UnsupportedOperation on iostream.fileno()\n\ncloses #3017", "commit_timestamp": "2013-04-12T23:17:44Z", "files": ["IPython/kernel/zmq/iostream.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjI3ZTMwODNjYTE5NDUzZmRiNjljMWI5NzZlNTg0YzJlOWJhZGU0MTY=", "commit_message": "raise UnsupportedOperation on iostream.fileno()\n\ncloses #3017", "commit_timestamp": "2013-04-12T23:17:44Z", "files": ["IPython/kernel/zmq/iostream.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo2ZjA3ZTcxZDk2NTQwMGZiZmFhODNkMDVjMGI2ZjMyYzJlMzI1ZTMw", "commit_message": "raise UnsupportedOperation on iostream.fileno()\n\ncloses #3017", "commit_timestamp": "2013-04-12T23:17:44Z", "files": ["IPython/kernel/zmq/iostream.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjE3NWJiMDhiYWRmNDc3YWUyNGJjOGZlZTM1YWNjYTljZTE2NWFiZGY=", "commit_message": "Merge pull request #3072 from minrk/streamfileno\n\nraise UnsupportedOperation on iostream.fileno()", "commit_timestamp": "2013-04-13T01:38:44Z", "files": ["IPython/kernel/zmq/iostream.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjE3NWJiMDhiYWRmNDc3YWUyNGJjOGZlZTM1YWNjYTljZTE2NWFiZGY=", "commit_message": "Merge pull request #3072 from minrk/streamfileno\n\nraise UnsupportedOperation on iostream.fileno()", "commit_timestamp": "2013-04-13T01:38:44Z", "files": ["IPython/kernel/zmq/iostream.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo4Nzk4MzY3NzM1MDE1YjFhMDI1MDdkOWU2NTUwN2IwYzljNzA1MDE4", "commit_message": "Merge pull request #3072 from minrk/streamfileno\n\nraise UnsupportedOperation on iostream.fileno()", "commit_timestamp": "2013-04-13T01:38:44Z", "files": ["IPython/kernel/zmq/iostream.py"]}], "labels": [], "created_at": "2013-03-13T15:55:23Z", "closed_at": "2013-04-13T01:38:46Z", "linked_pr_number": [3017], "method": ["regex"]}
{"issue_number": 3010, "title": "cython magic fail if cache dir is deleted while in session", "body": "```\nIn [1]: %load_ext cythonmagic\n\nIn [2]: %%cython\ncimport cython\n   ...: \n\nIn [3]: rm -rf /home/jtaylor/.config/ipython/cython/\n\nIn [4]: %%cython                                    \ncimport cython\n\nCompileError: command 'x86_64-linux-gnu-gcc' failed with exit status 1\n```\n\nthe command issued is:\n\n```\nx86_64-linux-gnu-gcc -pthread -fno-strict-aliasing -DNDEBUG -g -fwrapv -O2 -Wall -Wstrict-prototypes -fPIC -I/usr/include/python2.7 -I/usr/include/x86_64-linux-gnu/python2.7 -c /home/jtaylor/.config/ipython/cython/_cython_magic_d37c0b24f28dfb69270e82105a4c2e8e.c -o /home/jtaylor/.config/ipython/cython/home/jtaylor/.config/ipython/cython/_cython_magic_d37c0b24f28dfb69270e82105a4c2e8e.o\nFatal error: can't create /home/jtaylor/.config/ipython/cython/home/jtaylor/.config/ipython/cython/_cython_magic_d37c0b24f28dfb69270e82105a4c2e8e.o: No such file or directory\n\n```\n\nthe problematic part is this long path which is not recreated before trying to compile into it:\n\n```\n/home/jtaylor/.config/ipython/cython/home/jtaylor/.config/ipython/cython/\n```\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU5NDQ2OjEwZDE5MWJkNDhmMWZkNzMxMTAwODNhNWJkNGMzNTZhYTE0ZWE5MDc=", "commit_message": "allow cython cache dir to be deleted\n\nworkaround by clearing the distutils mkpath cache,\nwhich prevents it from ever creating a given path more than once.\n\ncloses #3010", "commit_timestamp": "2013-07-04T18:15:39Z", "files": ["IPython/extensions/cythonmagic.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzpiYTVhYWI0MGM0M2U4NTE3ZTIxYmVkZDJjMTllNDEyNDUzMzVlYTg3", "commit_message": "allow cython cache dir to be deleted\n\nworkaround by clearing the distutils mkpath cache,\nwhich prevents it from ever creating a given path more than once.\n\ncloses #3010", "commit_timestamp": "2013-07-04T18:15:39Z", "files": ["IPython/extensions/cythonmagic.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjQ5MjBmYjA3YmFmNDExM2E3MDU1M2ViOWRmMTNlOTIzYzc1OWI1Zjg=", "commit_message": "Merge pull request #3540 from minrk/cythoncache\n\nallow cython cache dir to be deleted\r\n\r\nworkaround by clearing the distutils mkpath cache, which prevents it from ever\r\ncreating a given path more than once.", "commit_timestamp": "2013-07-06T16:59:50Z", "files": ["IPython/extensions/cythonmagic.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjQ5MjBmYjA3YmFmNDExM2E3MDU1M2ViOWRmMTNlOTIzYzc1OWI1Zjg=", "commit_message": "Merge pull request #3540 from minrk/cythoncache\n\nallow cython cache dir to be deleted\r\n\r\nworkaround by clearing the distutils mkpath cache, which prevents it from ever\r\ncreating a given path more than once.", "commit_timestamp": "2013-07-06T16:59:50Z", "files": ["IPython/extensions/cythonmagic.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo5YzdjMzZjN2IzMzRiYjk0ZWUxM2RhY2Y3MGViOTYxNWVmZTc5Nzlj", "commit_message": "Merge pull request #3540 from minrk/cythoncache\n\nallow cython cache dir to be deleted\r\n\r\nworkaround by clearing the distutils mkpath cache, which prevents it from ever\r\ncreating a given path more than once.", "commit_timestamp": "2013-07-06T16:59:50Z", "files": ["IPython/extensions/cythonmagic.py"]}], "labels": ["bug"], "created_at": "2013-03-10T14:27:32Z", "closed_at": "2013-07-06T16:59:50Z", "linked_pr_number": [3010], "method": ["label", "regex"]}
{"issue_number": 3007, "title": "cython_pyximport reload broken in python3", "body": "python3.3 notebook, tested in 0.13.1 but the code looks the same in HEAD:\n\n%%cython_pyximport foo\ndef f(x):\n    return 4.0*x\n\nexecute twice and you get \n\n```\n/usr/lib/python3/dist-packages/IPython/extensions/cythonmagic.py in cython_pyximport(self, line, cell)\n     99         if module_name in self._reloads:\n    100             module = self._reloads[module_name]\n--> 101             reload(module)\n    102         else:\n    103             __import__(module_name)\n\nNameError: global name 'reload' is not defined\n```\n\nimp.reload should be used here\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU5NDQ2OjcyYmM3NTk1NzgzN2NkY2UyNTFlOTQ3YmJkZGIxYjE5MzQ4ZjZlZDc=", "commit_message": "py3 workaround for reload in cythonmagic\n\ncloses #3007", "commit_timestamp": "2013-03-11T01:06:53Z", "files": ["IPython/extensions/cythonmagic.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjcyYmM3NTk1NzgzN2NkY2UyNTFlOTQ3YmJkZGIxYjE5MzQ4ZjZlZDc=", "commit_message": "py3 workaround for reload in cythonmagic\n\ncloses #3007", "commit_timestamp": "2013-03-11T01:06:53Z", "files": ["IPython/extensions/cythonmagic.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjU0MTIzNGMzZjQxMTk0YTY0OTQzMWNjZjQ1NjNmMGQ3NTVlNjUxMTU=", "commit_message": "Backport PR #3013: py3 workaround for reload in cythonmagic\n\ncloses #3007", "commit_timestamp": "2013-03-12T18:12:32Z", "files": ["IPython/extensions/cythonmagic.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmRkZGRmMTdhMDk5NWI2OGU1ODJmM2QyMjYzYWJjYjVkNTJmMGM4MTE=", "commit_message": "Backport PR #3013: py3 workaround for reload in cythonmagic\n\ncloses #3007", "commit_timestamp": "2013-03-20T18:58:24Z", "files": ["IPython/extensions/cythonmagic.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmNlMGZiNzY2MWVmOWYwZWE5NmNmZWUyOTAzMWQyYjY1ZTFlMTkwNzk=", "commit_message": "Merge pull request #3062 from juliantaylor/double-pyximport-test\n\ntest double pyximport (#3007)", "commit_timestamp": "2013-03-23T18:45:29Z", "files": ["IPython/extensions/tests/test_cythonmagic.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzpiODlhOTEwMWEzZGNmNGY3NGMyODdlNDVmZDAwMDdjNDEzYjUwMjAw", "commit_message": "py3 workaround for reload in cythonmagic\n\ncloses #3007", "commit_timestamp": "2013-03-11T01:06:53Z", "files": ["IPython/extensions/cythonmagic.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzowZmRiMWIyYWVlNzBkZWE1NWI0NWRhMjFiMjNmZGMwODcyZmY5MmVm", "commit_message": "Merge pull request #3062 from juliantaylor/double-pyximport-test\n\ntest double pyximport (#3007)", "commit_timestamp": "2013-03-23T18:45:29Z", "files": ["IPython/extensions/tests/test_cythonmagic.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjNjMGI4OThjYzkzZGQwN2Y5MmU2YWMyMGJjODAzMWZiZDdiMTM4YTk=", "commit_message": "Merge pull request #3013 from minrk/reload\n\npy3 workaround for reload in cythonmagic", "commit_timestamp": "2013-03-11T02:43:34Z", "files": ["IPython/extensions/cythonmagic.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjNjMGI4OThjYzkzZGQwN2Y5MmU2YWMyMGJjODAzMWZiZDdiMTM4YTk=", "commit_message": "Merge pull request #3013 from minrk/reload\n\npy3 workaround for reload in cythonmagic", "commit_timestamp": "2013-03-11T02:43:34Z", "files": ["IPython/extensions/cythonmagic.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjU0MTIzNGMzZjQxMTk0YTY0OTQzMWNjZjQ1NjNmMGQ3NTVlNjUxMTU=", "commit_message": "Backport PR #3013: py3 workaround for reload in cythonmagic\n\ncloses #3007", "commit_timestamp": "2013-03-12T18:12:32Z", "files": ["IPython/extensions/cythonmagic.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmRkZGRmMTdhMDk5NWI2OGU1ODJmM2QyMjYzYWJjYjVkNTJmMGM4MTE=", "commit_message": "Backport PR #3013: py3 workaround for reload in cythonmagic\n\ncloses #3007", "commit_timestamp": "2013-03-20T18:58:24Z", "files": ["IPython/extensions/cythonmagic.py"]}, {"node_id": "MDY6Q29tbWl0MjM0Mzk1OTpjZjI1M2U3MWQ0Mzk5Nzk1OWRhNjM5ZTg5NmM5YmVmMzkzM2VhNDE2", "commit_message": "Merge tag 'rel-0.13.2' into debian-01X\n\nrelease 0.13.2\n\n* tag 'rel-0.13.2': (65 commits)\n  release 0.13.2\n  add release date\n  fix dot syntax error in inheritance diagram\n  only upload sdists (backported from master)\n  0.13.2 rc2\n  update whatsnew\n  Backport PR #3118: don't give up on weird os names\n  Backport PR #3117: propagate automagic change to shell\n  Backport PR #3097: PyQt 4.10: use self._document = self.document()\n  note latest backports\n  Backport PR #2224: fix css typo\n  avoid references to fiel out of directory\n  reimport HTML in different section\n  add width:100% to vbox for webkit / FF consistency (0.13.2)\n  0.13.2.rc1\n  generate whatsnew for 0.13.2\n  Backport PR #3008: fix cython module so extension for multiarched python\n  Backport PR #3013: py3 workaround for reload in cythonmagic\n  Backport PR #2831: avoid string version comparisons in external.qt\n  Backport PR #2994: expanduser on %%file targets\n  ...", "commit_timestamp": "2013-04-09T02:04:57Z", "files": ["IPython/config/application.py", "IPython/core/debugger.py", "IPython/core/interactiveshell.py", "IPython/core/magic.py", "IPython/core/magics/basic.py", "IPython/core/magics/code.py", "IPython/core/magics/execution.py", "IPython/core/magics/history.py", "IPython/core/magics/osm.py", "IPython/core/page.py", "IPython/core/prefilter.py", "IPython/core/release.py", "IPython/core/tests/test_debugger.py", "IPython/core/tests/test_interactiveshell.py", "IPython/core/tests/test_run.py", "IPython/core/ultratb.py", "IPython/extensions/cythonmagic.py", "IPython/external/qt.py", "IPython/external/qt_for_kernel.py", "IPython/external/ssh/tunnel.py", "IPython/frontend/html/notebook/handlers.py", "IPython/frontend/html/notebook/notebookapp.py", "IPython/frontend/qt/console/call_tip_widget.py", "IPython/frontend/qt/console/pygments_highlighter.py", "IPython/lib/clipboard.py", "IPython/lib/inputhookqt4.py", "IPython/lib/inputhookwx.py", "IPython/lib/pretty.py", "IPython/lib/tests/test_irunner.py", "IPython/lib/tests/test_irunner_pylab_magic.py", "IPython/lib/tests/test_pretty.py", "IPython/parallel/apps/ipengineapp.py", "IPython/parallel/apps/launcher.py", "IPython/parallel/client/client.py", "IPython/utils/data.py", "IPython/utils/jsonutil.py", "IPython/utils/rlineimpl.py", "IPython/utils/version.py", "IPython/zmq/iostream.py", "IPython/zmq/ipkernel.py", "IPython/zmq/tests/test_session.py", "docs/sphinxext/inheritance_diagram.py", "ipython.py", "setup.py", "tools/release_windows.py"]}, {"node_id": "MDY6Q29tbWl0MjM0Mzk1OTozMTNiOWYzMTM1YjE0Mjc1OTIwZjRmNTM5MTc5OTU0OTZkYjZjNzQ0", "commit_message": "Merge tag 'rel-0.13.2' (mtheirs) into releases\n\nrelease 0.13.2\n\n* tag 'rel-0.13.2': (65 commits)\n  release 0.13.2\n  add release date\n  fix dot syntax error in inheritance diagram\n  only upload sdists (backported from master)\n  0.13.2 rc2\n  update whatsnew\n  Backport PR #3118: don't give up on weird os names\n  Backport PR #3117: propagate automagic change to shell\n  Backport PR #3097: PyQt 4.10: use self._document = self.document()\n  note latest backports\n  Backport PR #2224: fix css typo\n  avoid references to fiel out of directory\n  reimport HTML in different section\n  add width:100% to vbox for webkit / FF consistency (0.13.2)\n  0.13.2.rc1\n  generate whatsnew for 0.13.2\n  Backport PR #3008: fix cython module so extension for multiarched python\n  Backport PR #3013: py3 workaround for reload in cythonmagic\n  Backport PR #2831: avoid string version comparisons in external.qt\n  Backport PR #2994: expanduser on %%file targets\n  ...", "commit_timestamp": "2013-08-09T16:53:59Z", "files": ["IPython/config/application.py", "IPython/core/debugger.py", "IPython/core/interactiveshell.py", "IPython/core/magic.py", "IPython/core/magics/basic.py", "IPython/core/magics/code.py", "IPython/core/magics/execution.py", "IPython/core/magics/history.py", "IPython/core/magics/osm.py", "IPython/core/page.py", "IPython/core/prefilter.py", "IPython/core/release.py", "IPython/core/tests/test_debugger.py", "IPython/core/tests/test_interactiveshell.py", "IPython/core/tests/test_run.py", "IPython/core/ultratb.py", "IPython/extensions/cythonmagic.py", "IPython/external/qt.py", "IPython/external/qt_for_kernel.py", "IPython/external/ssh/tunnel.py", "IPython/frontend/html/notebook/handlers.py", "IPython/frontend/html/notebook/notebookapp.py", "IPython/frontend/qt/console/call_tip_widget.py", "IPython/frontend/qt/console/pygments_highlighter.py", "IPython/lib/clipboard.py", "IPython/lib/inputhookqt4.py", "IPython/lib/inputhookwx.py", "IPython/lib/pretty.py", "IPython/lib/tests/test_irunner.py", "IPython/lib/tests/test_irunner_pylab_magic.py", "IPython/lib/tests/test_pretty.py", "IPython/parallel/apps/ipengineapp.py", "IPython/parallel/apps/launcher.py", "IPython/parallel/client/client.py", "IPython/utils/data.py", "IPython/utils/jsonutil.py", "IPython/utils/rlineimpl.py", "IPython/utils/version.py", "IPython/zmq/iostream.py", "IPython/zmq/ipkernel.py", "IPython/zmq/tests/test_session.py", "docs/sphinxext/inheritance_diagram.py", "ipython.py", "setup.py", "tools/release_windows.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzpmY2IyYzhjNzU5ZGE2ZjU0MGFkZmZkMWQyMGJlOWU1NGUyZTkzMGRi", "commit_message": "Merge pull request #3013 from minrk/reload\n\npy3 workaround for reload in cythonmagic", "commit_timestamp": "2013-03-11T02:43:34Z", "files": ["IPython/extensions/cythonmagic.py"]}], "labels": ["bug"], "created_at": "2013-03-10T13:33:57Z", "closed_at": "2013-03-11T02:43:37Z", "linked_pr_number": [3007], "method": ["label", "regex"]}
{"issue_number": 2996, "title": "registration::purging stalled registration high occurrence in small clusters ", "body": "I am starting relatively smaller clusters (5 nodes) in ec2, all medium instances.  One is designated the controller and 4 others are designated engines.  Of the four engines, generally 2 fail to start.  My controller log contains entries, registration::purging stalled registration , for each lost engine.  Each engine log says that it started fine.  \n\nAny idea as to why this is happening?  What would cause an engine to stall during registration so frequently?  All of my machines exist within the same datacenter and security group.  All ports are open internally.  \n\nController start command (Run on the lone controller):\n\nipcontroller --ip=\\* --log-to-file=True --debug --ping=5000\n\nNote: I have been playing with ping values because i was seeing lots of heartbeat timeouts.  \n\nEngine Start command (Run once on each instance designated an engine)\n\nipengine --log-to-file=True --timeout=10 --debug\n\nI am running ipython version 13.1 on all machines. \n", "commits": [{"node_id": "MDY6Q29tbWl0NjU5NDQ2OmI1NGI0MTBiYjFmN2MxOWU3YzM1NDdiYWUzMjRlYTUwZjZmZDcxNTg=", "commit_message": "increase registration timeout\n\nto highest of 10 seconds or 5 heartbeat periods\n\nShould reduce stalled registration notices (#2996)", "commit_timestamp": "2013-03-05T21:31:51Z", "files": ["IPython/parallel/controller/hub.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmU1MWIwZWNmMDM0ODI0NTYzMDFmMGQ0MDljZmUyNmI0ODI3ODEzYjk=", "commit_message": "Merge pull request #2999 from minrk/regtimeout\n\nincrease registration timeout\r\n\r\nto highest of 10 seconds or 5 heartbeat periods.\r\n\r\nShould reduce stalled registration notices.\r\n\r\ncloses #2996", "commit_timestamp": "2013-03-25T02:36:33Z", "files": ["IPython/parallel/controller/hub.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo1ZTExMWMzM2ZkYWY0YTBlMzFmZDcyYWE0YjgwMTU5NWU1NDcxMGQx", "commit_message": "increase registration timeout\n\nto highest of 10 seconds or 5 heartbeat periods\n\nShould reduce stalled registration notices (#2996)", "commit_timestamp": "2013-03-05T21:31:51Z", "files": ["IPython/parallel/controller/hub.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzpjNmQ2NWE4YzRjN2FkZGI3YWMxNTc3MzJlNmVjODEyZTU0ZTg3NDc5", "commit_message": "Merge pull request #2999 from minrk/regtimeout\n\nincrease registration timeout\r\n\r\nto highest of 10 seconds or 5 heartbeat periods.\r\n\r\nShould reduce stalled registration notices.\r\n\r\ncloses #2996", "commit_timestamp": "2013-03-25T02:36:33Z", "files": ["IPython/parallel/controller/hub.py"]}], "labels": ["parallel", "needs-info"], "created_at": "2013-03-05T04:15:52Z", "closed_at": "2013-03-25T02:36:34Z", "method": ["regex"]}
{"issue_number": 2993, "title": "File magic (%%file) does not work with paths beginning with tilde (e.g., ~/anaconda/stuff.txt)", "body": "Found this quirk teaching a Software Carpentry class at LBL, wanted to jot down before I forgot it. I don't know if it's been resolved yet; this behavior occurred with IPython 0.13.1 in the notebook interface.\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU5NDQ2OjhmY2NlNzI0ODQ4YmYzOWY2NzNhZGJhY2FjMTUwYzcwNmQ2YzE3Y2U=", "commit_message": "expanduser on %%file targets\n\ncloses #2993", "commit_timestamp": "2013-03-04T19:52:24Z", "files": ["IPython/core/magics/osm.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjhmY2NlNzI0ODQ4YmYzOWY2NzNhZGJhY2FjMTUwYzcwNmQ2YzE3Y2U=", "commit_message": "expanduser on %%file targets\n\ncloses #2993", "commit_timestamp": "2013-03-04T19:52:24Z", "files": ["IPython/core/magics/osm.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjFlYWYzYjNlMGU2Njg3YmZhOWU2ZmY4MGQxNjc5MzA0OThkZWNmZGQ=", "commit_message": "Backport PR #2994: expanduser on %%file targets\n\ncloses #2993", "commit_timestamp": "2013-03-08T22:38:41Z", "files": ["IPython/core/magics/osm.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmE3MmQ2NTI3OWU3MThmODYwN2Q3ZmE5MzI5MTNkNjU0MTNiZDgyZDc=", "commit_message": "Backport PR #2994: expanduser on %%file targets\n\ncloses #2993", "commit_timestamp": "2013-03-20T18:58:23Z", "files": ["IPython/core/magics/osm.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzpkOGFmZTIzMGYwMDdlNmExMzJlMmQwY2M0NWI2NDgwMTY1NTdjYTgw", "commit_message": "expanduser on %%file targets\n\ncloses #2993", "commit_timestamp": "2013-03-04T19:52:24Z", "files": ["IPython/core/magics/osm.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjQwMDg3NWM2YzYyNWZmYmI5ZDFmNTJiY2Y1ODIwZTc4NjEwZTAwYmI=", "commit_message": "Merge pull request #2994 from minrk/expanduser\n\nexpanduser on %%file targets", "commit_timestamp": "2013-03-04T19:59:10Z", "files": ["IPython/core/magics/osm.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjQwMDg3NWM2YzYyNWZmYmI5ZDFmNTJiY2Y1ODIwZTc4NjEwZTAwYmI=", "commit_message": "Merge pull request #2994 from minrk/expanduser\n\nexpanduser on %%file targets", "commit_timestamp": "2013-03-04T19:59:10Z", "files": ["IPython/core/magics/osm.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjFlYWYzYjNlMGU2Njg3YmZhOWU2ZmY4MGQxNjc5MzA0OThkZWNmZGQ=", "commit_message": "Backport PR #2994: expanduser on %%file targets\n\ncloses #2993", "commit_timestamp": "2013-03-08T22:38:41Z", "files": ["IPython/core/magics/osm.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmE3MmQ2NTI3OWU3MThmODYwN2Q3ZmE5MzI5MTNkNjU0MTNiZDgyZDc=", "commit_message": "Backport PR #2994: expanduser on %%file targets\n\ncloses #2993", "commit_timestamp": "2013-03-20T18:58:23Z", "files": ["IPython/core/magics/osm.py"]}, {"node_id": "MDY6Q29tbWl0MjM0Mzk1OTpjZjI1M2U3MWQ0Mzk5Nzk1OWRhNjM5ZTg5NmM5YmVmMzkzM2VhNDE2", "commit_message": "Merge tag 'rel-0.13.2' into debian-01X\n\nrelease 0.13.2\n\n* tag 'rel-0.13.2': (65 commits)\n  release 0.13.2\n  add release date\n  fix dot syntax error in inheritance diagram\n  only upload sdists (backported from master)\n  0.13.2 rc2\n  update whatsnew\n  Backport PR #3118: don't give up on weird os names\n  Backport PR #3117: propagate automagic change to shell\n  Backport PR #3097: PyQt 4.10: use self._document = self.document()\n  note latest backports\n  Backport PR #2224: fix css typo\n  avoid references to fiel out of directory\n  reimport HTML in different section\n  add width:100% to vbox for webkit / FF consistency (0.13.2)\n  0.13.2.rc1\n  generate whatsnew for 0.13.2\n  Backport PR #3008: fix cython module so extension for multiarched python\n  Backport PR #3013: py3 workaround for reload in cythonmagic\n  Backport PR #2831: avoid string version comparisons in external.qt\n  Backport PR #2994: expanduser on %%file targets\n  ...", "commit_timestamp": "2013-04-09T02:04:57Z", "files": ["IPython/config/application.py", "IPython/core/debugger.py", "IPython/core/interactiveshell.py", "IPython/core/magic.py", "IPython/core/magics/basic.py", "IPython/core/magics/code.py", "IPython/core/magics/execution.py", "IPython/core/magics/history.py", "IPython/core/magics/osm.py", "IPython/core/page.py", "IPython/core/prefilter.py", "IPython/core/release.py", "IPython/core/tests/test_debugger.py", "IPython/core/tests/test_interactiveshell.py", "IPython/core/tests/test_run.py", "IPython/core/ultratb.py", "IPython/extensions/cythonmagic.py", "IPython/external/qt.py", "IPython/external/qt_for_kernel.py", "IPython/external/ssh/tunnel.py", "IPython/frontend/html/notebook/handlers.py", "IPython/frontend/html/notebook/notebookapp.py", "IPython/frontend/qt/console/call_tip_widget.py", "IPython/frontend/qt/console/pygments_highlighter.py", "IPython/lib/clipboard.py", "IPython/lib/inputhookqt4.py", "IPython/lib/inputhookwx.py", "IPython/lib/pretty.py", "IPython/lib/tests/test_irunner.py", "IPython/lib/tests/test_irunner_pylab_magic.py", "IPython/lib/tests/test_pretty.py", "IPython/parallel/apps/ipengineapp.py", "IPython/parallel/apps/launcher.py", "IPython/parallel/client/client.py", "IPython/utils/data.py", "IPython/utils/jsonutil.py", "IPython/utils/rlineimpl.py", "IPython/utils/version.py", "IPython/zmq/iostream.py", "IPython/zmq/ipkernel.py", "IPython/zmq/tests/test_session.py", "docs/sphinxext/inheritance_diagram.py", "ipython.py", "setup.py", "tools/release_windows.py"]}, {"node_id": "MDY6Q29tbWl0MjM0Mzk1OTozMTNiOWYzMTM1YjE0Mjc1OTIwZjRmNTM5MTc5OTU0OTZkYjZjNzQ0", "commit_message": "Merge tag 'rel-0.13.2' (mtheirs) into releases\n\nrelease 0.13.2\n\n* tag 'rel-0.13.2': (65 commits)\n  release 0.13.2\n  add release date\n  fix dot syntax error in inheritance diagram\n  only upload sdists (backported from master)\n  0.13.2 rc2\n  update whatsnew\n  Backport PR #3118: don't give up on weird os names\n  Backport PR #3117: propagate automagic change to shell\n  Backport PR #3097: PyQt 4.10: use self._document = self.document()\n  note latest backports\n  Backport PR #2224: fix css typo\n  avoid references to fiel out of directory\n  reimport HTML in different section\n  add width:100% to vbox for webkit / FF consistency (0.13.2)\n  0.13.2.rc1\n  generate whatsnew for 0.13.2\n  Backport PR #3008: fix cython module so extension for multiarched python\n  Backport PR #3013: py3 workaround for reload in cythonmagic\n  Backport PR #2831: avoid string version comparisons in external.qt\n  Backport PR #2994: expanduser on %%file targets\n  ...", "commit_timestamp": "2013-08-09T16:53:59Z", "files": ["IPython/config/application.py", "IPython/core/debugger.py", "IPython/core/interactiveshell.py", "IPython/core/magic.py", "IPython/core/magics/basic.py", "IPython/core/magics/code.py", "IPython/core/magics/execution.py", "IPython/core/magics/history.py", "IPython/core/magics/osm.py", "IPython/core/page.py", "IPython/core/prefilter.py", "IPython/core/release.py", "IPython/core/tests/test_debugger.py", "IPython/core/tests/test_interactiveshell.py", "IPython/core/tests/test_run.py", "IPython/core/ultratb.py", "IPython/extensions/cythonmagic.py", "IPython/external/qt.py", "IPython/external/qt_for_kernel.py", "IPython/external/ssh/tunnel.py", "IPython/frontend/html/notebook/handlers.py", "IPython/frontend/html/notebook/notebookapp.py", "IPython/frontend/qt/console/call_tip_widget.py", "IPython/frontend/qt/console/pygments_highlighter.py", "IPython/lib/clipboard.py", "IPython/lib/inputhookqt4.py", "IPython/lib/inputhookwx.py", "IPython/lib/pretty.py", "IPython/lib/tests/test_irunner.py", "IPython/lib/tests/test_irunner_pylab_magic.py", "IPython/lib/tests/test_pretty.py", "IPython/parallel/apps/ipengineapp.py", "IPython/parallel/apps/launcher.py", "IPython/parallel/client/client.py", "IPython/utils/data.py", "IPython/utils/jsonutil.py", "IPython/utils/rlineimpl.py", "IPython/utils/version.py", "IPython/zmq/iostream.py", "IPython/zmq/ipkernel.py", "IPython/zmq/tests/test_session.py", "docs/sphinxext/inheritance_diagram.py", "ipython.py", "setup.py", "tools/release_windows.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo0ZjE0N2QxNzcxNzMzNDE2OWE5Y2ZhYWM3YzU3NjUwZWM1NmFmNDgz", "commit_message": "Merge pull request #2994 from minrk/expanduser\n\nexpanduser on %%file targets", "commit_timestamp": "2013-03-04T19:59:10Z", "files": ["IPython/core/magics/osm.py"]}], "labels": ["bug"], "created_at": "2013-03-04T19:21:22Z", "closed_at": "2013-03-04T19:59:21Z", "linked_pr_number": [2993], "method": ["label", "regex"]}
{"issue_number": 2988, "title": "DBusMenuExporterPrivate::addAction verbage at startup.", "body": "On starting qt-console (0.13) on Ubuntu 11.10, Python 2.7.2. I get \"DBusMenuExporterPivate:.....Already tracking action\" for many menu actions. \n\ne.g.\nvoid DBusMenuExporterPrivate::addAction(QAction_, int): Already tracking action \"%%capture\" under id 56\n...\nvoid DBusMenuExporterPrivate::addAction(QAction_, int): Already tracking action \"%page\" under id 152\n\nThis happens about 110 times.\n\nThe 'Magic' menu, although present, has no content other than the top level headings, so I guess this is the result of this problem.\n\nI have found an identical issue already reported with 'Paraview', reported here: http://www.paraview.org/pipermail/paraview/2012-September/026108.html, so perhaps the solution is the same? \n", "commits": [{"node_id": "MDY6Q29tbWl0NjU4NTE4OjJjOTM2N2UxN2E2MDM0MWMxOGE0NTdmMDI3ODEwZWM1MTdkNjk2NzY=", "commit_message": "Fixed empty menu entries and error output, fix for Issue #2988\n\nRecent Ubuntu's (12.10 and later) give DBusMenuExporterPrivate::addAction errors on adding the same action multiple times. 13.04 does not add the duplicate item to the menu (causing all menus in magics to be empty except one). Fixes Issue #2988.", "commit_timestamp": "2013-06-28T23:26:00Z", "files": ["IPython/qt/console/mainwindow.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzplMGRkY2M3YzU2NjhiYmMxZDUyNzA5NzAxZTljYjA0YWUzOTdiYWIx", "commit_message": "Fixed empty menu entries and error output, fix for Issue #2988\n\nRecent Ubuntu's (12.10 and later) give DBusMenuExporterPrivate::addAction errors on adding the same action multiple times. 13.04 does not add the duplicate item to the menu (causing all menus in magics to be empty except one). Fixes Issue #2988.", "commit_timestamp": "2013-06-28T23:26:00Z", "files": ["IPython/qt/console/mainwindow.py"]}], "labels": ["qtconsole", "bug"], "created_at": "2013-02-28T09:52:51Z", "closed_at": "2016-07-25T22:56:26Z", "method": ["label"]}
{"issue_number": 2955, "title": "Incompatible Qt imports when running inprocess_qtconsole", "body": "There is in inconsistency in how Qt is loaded during the [inprocess_qtconsole.py](https://github.com/ipython/ipython/blob/master/docs/examples/frontend/inprocess_qtconsole.py) example. \n\nThe problem is that `IPython.external.qt.py` and `IPython.external.qt.qt_for_kernel.py` use different logic for choosing between PySide and PyQt4 -- If no `QT_API` environment variable is set and both libraries are installed, the former module loads `PySide` while the latter loads `PyQt4`. \n\nBoth helper modules are imported in the `inprocess_qtconsole` script (from `IPython.lib.guispport` and `IPython.frontend.qt...`) This crashes python.\n\nThe only added functionality that `qt_for_kernel.py` seems to provide is apparent support for PyQt4 API v1. However, I suspect this is incompatible with the code in `IPython.frontend.qt`. If this is the case (and API v1 isn't _really_ supported), then the easiest solution is to only use `qt.py`. If V1 is really meant to be supported, `qt.py` should still probably be the only access point to Qt, but the relevant logic from `qt_for_kernel.py` should be ported over.\n\nI can provide a PR with these changes, if desired\n\ncc @MinRK @epatters @mspacek\n", "commits": [{"node_id": "MDY6Q29tbWl0ODMxODQxNDo3ZWMxODg4ZWJiZGRhOGM5MjQ0YTY3ZjM1YTgxM2Q0NWQxNjRhZDdm", "commit_message": "Refactor qt import logic. Fixes #2955", "commit_timestamp": "2013-02-20T23:11:53Z", "files": ["IPython/external/qt.py", "IPython/external/qt_for_kernel.py", "IPython/external/qt_loaders.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjdlYzE4ODhlYmJkZGE4YzkyNDRhNjdmMzVhODEzZDQ1ZDE2NGFkN2Y=", "commit_message": "Refactor qt import logic. Fixes #2955", "commit_timestamp": "2013-02-20T23:11:53Z", "files": ["IPython/external/qt.py", "IPython/external/qt_for_kernel.py", "IPython/external/qt_loaders.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmM5NjFkNzhmZGIxODE1NGY1MTcwNTkzNDk5ZGMwMDc1OWIyOWFhYjc=", "commit_message": "Merge pull request #2957 from ChrisBeaumont/qt_refactor\n\nRefactor qt import logic.\r\n\r\nCloses #2955", "commit_timestamp": "2013-03-10T23:12:38Z", "files": ["IPython/external/qt.py", "IPython/external/qt_for_kernel.py", "IPython/external/qt_loaders.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzpmNzEwNGI3NGY4NjhiNDMxMGEzN2YzODMxMDFmYTY1NjQxYmQ1N2U3", "commit_message": "Refactor qt import logic. Fixes #2955", "commit_timestamp": "2013-02-20T23:11:53Z", "files": ["IPython/external/qt.py", "IPython/external/qt_for_kernel.py", "IPython/external/qt_loaders.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzplMGE0NzU2MjBkZTI3MjUxMDhiZjJhMWQ4Mzk1YzY0OTA2MThkMTE0", "commit_message": "Merge pull request #2957 from ChrisBeaumont/qt_refactor\n\nRefactor qt import logic.\r\n\r\nCloses #2955", "commit_timestamp": "2013-03-10T23:12:38Z", "files": ["IPython/external/qt.py", "IPython/external/qt_for_kernel.py", "IPython/external/qt_loaders.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmM5NjFkNzhmZGIxODE1NGY1MTcwNTkzNDk5ZGMwMDc1OWIyOWFhYjc=", "commit_message": "Merge pull request #2957 from ChrisBeaumont/qt_refactor\n\nRefactor qt import logic.\r\n\r\nCloses #2955", "commit_timestamp": "2013-03-10T23:12:38Z", "files": ["IPython/external/qt.py", "IPython/external/qt_for_kernel.py", "IPython/external/qt_loaders.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmM5NjFkNzhmZGIxODE1NGY1MTcwNTkzNDk5ZGMwMDc1OWIyOWFhYjc=", "commit_message": "Merge pull request #2957 from ChrisBeaumont/qt_refactor\n\nRefactor qt import logic.\r\n\r\nCloses #2955", "commit_timestamp": "2013-03-10T23:12:38Z", "files": ["IPython/external/qt.py", "IPython/external/qt_for_kernel.py", "IPython/external/qt_loaders.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzplMGE0NzU2MjBkZTI3MjUxMDhiZjJhMWQ4Mzk1YzY0OTA2MThkMTE0", "commit_message": "Merge pull request #2957 from ChrisBeaumont/qt_refactor\n\nRefactor qt import logic.\r\n\r\nCloses #2955", "commit_timestamp": "2013-03-10T23:12:38Z", "files": ["IPython/external/qt.py", "IPython/external/qt_for_kernel.py", "IPython/external/qt_loaders.py"]}], "labels": ["qtconsole", "bug"], "created_at": "2013-02-19T22:36:23Z", "closed_at": "2013-03-10T23:12:40Z", "linked_pr_number": [2955], "method": ["label"]}
{"issue_number": 2943, "title": "Up arrow key history search gets stuck in QTConsole", "body": "With the ipython installed with with commit 50a583890fd0640492fcd76d6ecc97b5c3f23ae0, going through history with up arrow key in qtconsole works without any problem. But in current commit 48b63c19a53f9e26dc4f64150641c730cb6a2305, in qtconsole, it gets \"stuck\" after several items - pressing up arrow key does not do anything. It seems to be happening when the currently showing history is longer than the qtconsole width. \n\nSince there are more than 120 commits in between, I haven't tried to identify what was the commit which caused this.\n\nAlso, in terminal this does not happen.\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU5NDQ2OjQyN2Y1NTE2NDFhMWZkNjRlMzE5Nzk0ZGI5OTZmYTg3MWI2YzkwNWM=", "commit_message": "fix qtconsole history logic for end-of-line\n\nEndOfLine may or may not mean the end of a full line when the line is longer than the window.\nThis commit uses the same logic to check as the actual move, so it should be consistent.\n\ncloses #2943", "commit_timestamp": "2013-02-16T23:38:45Z", "files": ["IPython/frontend/qt/console/history_console_widget.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjQyN2Y1NTE2NDFhMWZkNjRlMzE5Nzk0ZGI5OTZmYTg3MWI2YzkwNWM=", "commit_message": "fix qtconsole history logic for end-of-line\n\nEndOfLine may or may not mean the end of a full line when the line is longer than the window.\nThis commit uses the same logic to check as the actual move, so it should be consistent.\n\ncloses #2943", "commit_timestamp": "2013-02-16T23:38:45Z", "files": ["IPython/frontend/qt/console/history_console_widget.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo3MDUyNDA0YmUyOWNhNDIzZTM1YWVlYjgwZDk1NzA1Njc1MDk1OTc4", "commit_message": "fix qtconsole history logic for end-of-line\n\nEndOfLine may or may not mean the end of a full line when the line is longer than the window.\nThis commit uses the same logic to check as the actual move, so it should be consistent.\n\ncloses #2943", "commit_timestamp": "2013-02-16T23:38:45Z", "files": ["IPython/frontend/qt/console/history_console_widget.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjJhNjE4NTNlMjUyNjZjNDY1OGNmNzM0YzdiNTgxODRmOWNiY2JmZTA=", "commit_message": "Merge pull request #2946 from minrk/qteol\n\nfix qtconsole history logic for end-of-line", "commit_timestamp": "2013-02-20T20:04:51Z", "files": ["IPython/frontend/qt/console/history_console_widget.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjJhNjE4NTNlMjUyNjZjNDY1OGNmNzM0YzdiNTgxODRmOWNiY2JmZTA=", "commit_message": "Merge pull request #2946 from minrk/qteol\n\nfix qtconsole history logic for end-of-line", "commit_timestamp": "2013-02-20T20:04:51Z", "files": ["IPython/frontend/qt/console/history_console_widget.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzpiMWMxNzliYmE4NTE5ZDc3NmNiNjI2YzI4MThlM2FiOGMyNGI0NGQy", "commit_message": "Merge pull request #2946 from minrk/qteol\n\nfix qtconsole history logic for end-of-line", "commit_timestamp": "2013-02-20T20:04:51Z", "files": ["IPython/frontend/qt/console/history_console_widget.py"]}], "labels": ["qtconsole", "bug"], "created_at": "2013-02-16T19:45:34Z", "closed_at": "2013-02-20T20:04:52Z", "linked_pr_number": [2943], "method": ["label"]}
{"issue_number": 2925, "title": "BUG: kernel dies if user sets sys.stderr or sys.stdout to a file object", "body": "If the user redirects the streams to a file for example,\nthe kernel would raise an exception because file\nobjects do not have `set_parent` defined, unlike ipython's\nOutStream.\n\nsteps to reproduce:\n\n``` ipython\nIn [2]: sys.stderr=open(\"/tmp/o\",\"wb\")\n```\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU4NTE4OjQ2NWY0M2NlNGI4M2U5MWU4MWQ0YTFhMDQwZjZmMGY2MDlmYjI0Njc=", "commit_message": "Merge pull request #2926 from y-p/GH2925\n\nDon't die if stderr/stdout do not support set_parent()\r\n\r\nIf the user redirects the streams to a file for example,\r\nthe kernel would raise an exception because file\r\nobjects do not have set_parent defined, unlike ipython's\r\nOutStream.\r\nThis happens even if the user does this in a spawned thread.\r\n\r\ncloses #2925", "commit_timestamp": "2013-02-13T00:06:19Z", "files": ["IPython/kernel/zmq/ipkernel.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjAxZjExNzliNTRhNjI4MTI0NzY1MzYwYjVjZTBmNGUxMTVhZWE3NDQ=", "commit_message": "Backport PR #2926: Don't die if stderr/stdout do not support set_parent() #2925\n\nIf the user redirects the streams to a file for example,\nthe kernel would raise an exception because file\nobjects do not have set_parent defined, unlike ipython's\nOutStream.\nThis happens even if the user does this in a spawned thread.\n\ncloses #2925", "commit_timestamp": "2013-03-05T00:29:54Z", "files": ["IPython/zmq/ipkernel.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmY4NWUxZjg0Y2EyY2NlNWEzOTVkZGZmYTM4NjlhMzM3OWNkN2QxYTc=", "commit_message": "Backport PR #2926: Don't die if stderr/stdout do not support set_parent() #2925\n\nIf the user redirects the streams to a file for example,\nthe kernel would raise an exception because file\nobjects do not have set_parent defined, unlike ipython's\nOutStream.\nThis happens even if the user does this in a spawned thread.\n\ncloses #2925", "commit_timestamp": "2013-03-20T18:58:23Z", "files": ["IPython/zmq/ipkernel.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzphODhjZTcwMmQ1Y2FmMzI3NjA2NDE2NWNkYTQ2ZDcwZjdiMGRiNDll", "commit_message": "Don't die if stderr/stdout do not support set_parent() #2925\n\nIf the user redirects the streams to a file for example,\nthe kernel would raise an exception because file\nobjects do not have set_parent defined, unlike ipython's\nOutStream.\nThis happens even if the user does this in a spawned thread.", "commit_timestamp": "2013-02-12T23:59:00Z", "files": ["IPython/kernel/zmq/ipkernel.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo0MDkzYjViZmJhNGY1NzIwOWEwMTQ3MjE2NmU0OGJkMWIzMzdiNGZi", "commit_message": "Merge pull request #2926 from y-p/GH2925\n\nDon't die if stderr/stdout do not support set_parent()\r\n\r\nIf the user redirects the streams to a file for example,\r\nthe kernel would raise an exception because file\r\nobjects do not have set_parent defined, unlike ipython's\r\nOutStream.\r\nThis happens even if the user does this in a spawned thread.\r\n\r\ncloses #2925", "commit_timestamp": "2013-02-13T00:06:19Z", "files": ["IPython/kernel/zmq/ipkernel.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjQ2NWY0M2NlNGI4M2U5MWU4MWQ0YTFhMDQwZjZmMGY2MDlmYjI0Njc=", "commit_message": "Merge pull request #2926 from y-p/GH2925\n\nDon't die if stderr/stdout do not support set_parent()\r\n\r\nIf the user redirects the streams to a file for example,\r\nthe kernel would raise an exception because file\r\nobjects do not have set_parent defined, unlike ipython's\r\nOutStream.\r\nThis happens even if the user does this in a spawned thread.\r\n\r\ncloses #2925", "commit_timestamp": "2013-02-13T00:06:19Z", "files": ["IPython/kernel/zmq/ipkernel.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjQ2NWY0M2NlNGI4M2U5MWU4MWQ0YTFhMDQwZjZmMGY2MDlmYjI0Njc=", "commit_message": "Merge pull request #2926 from y-p/GH2925\n\nDon't die if stderr/stdout do not support set_parent()\r\n\r\nIf the user redirects the streams to a file for example,\r\nthe kernel would raise an exception because file\r\nobjects do not have set_parent defined, unlike ipython's\r\nOutStream.\r\nThis happens even if the user does this in a spawned thread.\r\n\r\ncloses #2925", "commit_timestamp": "2013-02-13T00:06:19Z", "files": ["IPython/kernel/zmq/ipkernel.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjAxZjExNzliNTRhNjI4MTI0NzY1MzYwYjVjZTBmNGUxMTVhZWE3NDQ=", "commit_message": "Backport PR #2926: Don't die if stderr/stdout do not support set_parent() #2925\n\nIf the user redirects the streams to a file for example,\nthe kernel would raise an exception because file\nobjects do not have set_parent defined, unlike ipython's\nOutStream.\nThis happens even if the user does this in a spawned thread.\n\ncloses #2925", "commit_timestamp": "2013-03-05T00:29:54Z", "files": ["IPython/zmq/ipkernel.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmY4NWUxZjg0Y2EyY2NlNWEzOTVkZGZmYTM4NjlhMzM3OWNkN2QxYTc=", "commit_message": "Backport PR #2926: Don't die if stderr/stdout do not support set_parent() #2925\n\nIf the user redirects the streams to a file for example,\nthe kernel would raise an exception because file\nobjects do not have set_parent defined, unlike ipython's\nOutStream.\nThis happens even if the user does this in a spawned thread.\n\ncloses #2925", "commit_timestamp": "2013-03-20T18:58:23Z", "files": ["IPython/zmq/ipkernel.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo0MDkzYjViZmJhNGY1NzIwOWEwMTQ3MjE2NmU0OGJkMWIzMzdiNGZi", "commit_message": "Merge pull request #2926 from y-p/GH2925\n\nDon't die if stderr/stdout do not support set_parent()\r\n\r\nIf the user redirects the streams to a file for example,\r\nthe kernel would raise an exception because file\r\nobjects do not have set_parent defined, unlike ipython's\r\nOutStream.\r\nThis happens even if the user does this in a spawned thread.\r\n\r\ncloses #2925", "commit_timestamp": "2013-02-13T00:06:19Z", "files": ["IPython/kernel/zmq/ipkernel.py"]}], "labels": ["bug", "kernel"], "created_at": "2013-02-12T23:43:33Z", "closed_at": "2013-02-13T00:06:21Z", "linked_pr_number": [2925], "method": ["label", "regex"]}
{"issue_number": 2890, "title": "Test failure when fabric not installed", "body": "In `IPython.frontend`\n\n```\n======================================================================\nERROR: Failure: ImportError (No module named fabric.api)\n----------------------------------------------------------------------\nTraceback (most recent call last):\nFile \"/usr/lib/python2.7/dist-packages/nose/loader.py\", line 390, in loadTestsFromName\naddr.filename, addr.module)\nFile \"/usr/lib/python2.7/dist-packages/nose/importer.py\", line 39, in importFromPath\nreturn self.importFromDir(dir_path, fqname)\nFile \"/usr/lib/python2.7/dist-packages/nose/importer.py\", line 86, in importFromDir\nmod = load_module(part_fqname, fh, filename, desc)\nFile \"/home/thomas/.ipy_pr_tests/venv-python2.7/local/lib/python2.7/site-packages/IPython/frontend/html/notebook/fabfile.py\", line 3, in <module>\nfrom fabric.api import local,lcd\nImportError: No module named fabric.api\n```\n\nSee https://gist.github.com/takluyver/4731216\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU5NDQ2OjE3ZmZhZjBmN2E4YjAyYjU5ZThkNzgyNGJkOTcwMjgyMGRjNDgwOTE=", "commit_message": "exclude fabfile from tests\n\ncloses #2890", "commit_timestamp": "2013-02-07T17:03:42Z", "files": ["IPython/testing/iptest.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjE3ZmZhZjBmN2E4YjAyYjU5ZThkNzgyNGJkOTcwMjgyMGRjNDgwOTE=", "commit_message": "exclude fabfile from tests\n\ncloses #2890", "commit_timestamp": "2013-02-07T17:03:42Z", "files": ["IPython/testing/iptest.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzpmMzhmZjVjMzA2NzhjNTNkZDEwOGRlOWZkOThlZTAxNTgwYWFhNjhi", "commit_message": "exclude fabfile from tests\n\ncloses #2890", "commit_timestamp": "2013-02-07T17:03:42Z", "files": ["IPython/testing/iptest.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmE4MTVlNDcyYTdlM2Y1MTBiZDVkNTg5ODlkMTU4NjMzZWQyNmFkNTg=", "commit_message": "Merge pull request #2893 from minrk/fab\n\nexclude fabfile from tests", "commit_timestamp": "2013-02-07T17:21:29Z", "files": ["IPython/testing/iptest.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmE4MTVlNDcyYTdlM2Y1MTBiZDVkNTg5ODlkMTU4NjMzZWQyNmFkNTg=", "commit_message": "Merge pull request #2893 from minrk/fab\n\nexclude fabfile from tests", "commit_timestamp": "2013-02-07T17:21:29Z", "files": ["IPython/testing/iptest.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzowYzg5MzljMTY0ZjhhNTMzZjhkMWZlOTI4ZDBjMGQ0NDM2OTc4YTVm", "commit_message": "Merge pull request #2893 from minrk/fab\n\nexclude fabfile from tests", "commit_timestamp": "2013-02-07T17:21:29Z", "files": ["IPython/testing/iptest.py"]}], "labels": ["bug", "testing"], "created_at": "2013-02-07T14:35:34Z", "closed_at": "2013-02-07T17:21:30Z", "linked_pr_number": [2890], "method": ["label"]}
{"issue_number": 2879, "title": "When importing a module with a wrong name, ipython crashes", "body": "Under python 2.6.0, I found that the newest development version of 0.14 crashed when importing a module that does not exist (e.g. wrong name). See report below.  Strangely this does not happen in python 2.6.6 under Debian 6. If you can't reproduce this, let me know what to test to pinpoint the error. The python binary was packaged by SUSE for SLES 11.1:\n\nwirawan0@localhost:~> rpm -qi python\nName        : python                       Relocations: (not relocatable)\nVersion     : 2.6.0                             Vendor: SUSE LINUX Products GmbH, Nuernberg, Germany\nRelease     : 8.14.1                        Build Date: Thu 02 Feb 2012 10:59:47 AM CST\nInstall Date: Thu 26 Jul 2012 11:11:30 AM CDT      Build Host: bax\nGroup       : Development/Languages/Python   Source RPM: python-2.6.0-8.14.1.src.rpm\nSize        : 1186111                          License: X11/MIT\nSignature   : RSA/8, Thu 02 Feb 2012 10:59:58 AM CST, Key ID e3a5c360307e3d54\nPackager    : http://bugs.opensuse.org\nURL         : http://www.python.org/\nSummary     : Python Interpreter\n[del]\nDistribution: SUSE Linux Enterprise 11\n\nWirawan\n\n---\n\nIPython post-mortem report\n\n{'commit_hash': '918365c',\n 'commit_source': 'repository',\n 'default_encoding': 'UTF-8',\n 'ipython_path': '/u/sciteam/wirawan0/local/ipython/IPython',\n 'ipython_version': '0.14.dev',\n 'os_name': 'posix',\n 'platform': 'Linux-2.6.32.49-0.3-default-x86_64-with-SuSE-11-x86_64',\n 'sys_executable': '/usr/bin/python',\n 'sys_platform': 'linux2',\n 'sys_version': '2.6 (r26:66714, Feb  2 2012, 16:59:44) \\n[GCC 4.3.4 [gcc-4_3-branch revision 152973]]'}\n\n---\n\n---\n\nCrash traceback:\n\n---\n\nAttributeError                                  Python 2.6: /usr/bin/python\n                                                   Mon Feb  4 13:12:32 2013\nA problem occured executing Python code.  Here is the sequence of function\ncalls leading up to the error, with the most recent (innermost) call last.\n/u/sciteam/wirawan0/local/ipython/ipython.py in <module>()\n      8 (just copy the source tree somewhere and run ipython.py) and development.\n      9 \n     10 \"\"\"\n     11 \n     12 if **name** != \"**main**\":\n     13     raise RuntimeError('You are trying to import the ipython.py executable. '\n     14             'Did you mean to call \"import IPython\" (case-sensitive) instead?')\n     15 \n     16 # Ensure that the imported IPython is the local one, not a system-wide one\n     17 import os, sys\n     18 this_dir = os.path.dirname(sys.argv[0])\n     19 sys.path.insert(0, this_dir)\n     20 \n     21 # Now proceed with execution\n     22 execfile(os.path.join(\n---> 23     this_dir, 'IPython', 'scripts', 'ipython'\n        global this_dir = '/u/sciteam/wirawan0/local/ipython'\n     24 ))\n\n/u/sciteam/wirawan0/local/ipython/ipython.py in <module>()\n      1 #!/usr/bin/env python\n      2 \"\"\"Terminal-based IPython entry point.\n      3 \"\"\"\n      4 \n      5 from IPython.frontend.terminal.ipapp import launch_new_instance\n      6 \n----> 7 launch_new_instance()\n        global ipython = undefined\n        global source = undefined\n        global root = undefined\n        global directory = undefined\n        global to = undefined\n        global facilitate = undefined\n        global non = undefined\n\n/u/sciteam/wirawan0/local/ipython/IPython/frontend/terminal/ipapp.pyc in launch_new_instance()\n\n/u/sciteam/wirawan0/local/ipython/IPython/frontend/terminal/ipapp.pyc in start(self=<IPython.frontend.terminal.ipapp.TerminalIPythonApp object at 0x2aaaaab9ddd0>)\n\n/u/sciteam/wirawan0/local/ipython/IPython/frontend/terminal/interactiveshell.pyc in mainloop(self=<IPython.frontend.terminal.interactiveshell.TerminalInteractiveShell object at 0xed7f50>, display_banner=None)\n\n/u/sciteam/wirawan0/local/ipython/IPython/frontend/terminal/interactiveshell.pyc in interact(self=<IPython.frontend.terminal.interactiveshell.TerminalInteractiveShell object at 0xed7f50>, display_banner=False)\n\n/u/sciteam/wirawan0/local/ipython/IPython/core/interactiveshell.pyc in run_cell(self=<IPython.frontend.terminal.interactiveshell.TerminalInteractiveShell object at 0xed7f50>, raw_cell=u'import sifjwh\\n', store_history=True, silent=False, shell_futures=True)\n\n/u/sciteam/wirawan0/local/ipython/IPython/core/interactiveshell.pyc in transform_ast(self=<IPython.frontend.terminal.interactiveshell.TerminalInteractiveShell object at 0xed7f50>, node=<_ast.Module object at 0x105c250>)\n\n/usr/lib64/python2.6/ast.pyc in fix_missing_locations(node=<_ast.Module object at 0x105c250>)\n    118     parent node.  It works recursively starting at _node_.\n    119     \"\"\"\n    120     def _fix(node, lineno, col_offset):\n    121         if 'lineno' in node._attributes:\n    122             if not hasattr(node, 'lineno'):\n    123                 node.lineno = lineno\n    124             else:\n    125                 lineno = node.lineno\n    126         if 'col_offset' in node._attributes:\n    127             if not hasattr(node, 'col_offset'):\n    128                 node.col_offset = col_offset\n    129             else:\n    130                 col_offset = node.col_offset\n    131         for child in iter_child_nodes(node):\n    132             _fix(child, lineno, col_offset)\n--> 133     _fix(node, 1, 0)\n        global _fix = undefined\n        node = <_ast.Module object at 0x105c250>\n    134     return node\n    135 \n    136 \n    137 def increment_lineno(node, n=1):\n    138     \"\"\"\n    139     Increment the line number of each node in the tree starting at _node_ by _n_.\n    140     This is useful to \"move code\" to a different location in a file.\n    141     \"\"\"\n    142     if 'lineno' in node._attributes:\n    143         node.lineno = getattr(node, 'lineno', 0) + n\n    144     for child in walk(node):\n    145         if 'lineno' in child._attributes:\n    146             child.lineno = getattr(child, 'lineno', 0) + n\n    147     return node\n    148 \n\n/usr/lib64/python2.6/ast.pyc in _fix(node=<_ast.Module object at 0x105c250>, lineno=1, col_offset=0)\n    117     recursively where not already set, by setting them to the values of the\n    118     parent node.  It works recursively starting at _node_.\n    119     \"\"\"\n    120     def _fix(node, lineno, col_offset):\n    121         if 'lineno' in node._attributes:\n    122             if not hasattr(node, 'lineno'):\n    123                 node.lineno = lineno\n    124             else:\n    125                 lineno = node.lineno\n    126         if 'col_offset' in node._attributes:\n    127             if not hasattr(node, 'col_offset'):\n    128                 node.col_offset = col_offset\n    129             else:\n    130                 col_offset = node.col_offset\n    131         for child in iter_child_nodes(node):\n--> 132             _fix(child, lineno, col_offset)\n        global _fix = undefined\n        child = <_ast.Import object at 0x105e5d0>\n        lineno = 1\n        col_offset = 0\n    133     _fix(node, 1, 0)\n    134     return node\n    135 \n    136 \n    137 def increment_lineno(node, n=1):\n    138     \"\"\"\n    139     Increment the line number of each node in the tree starting at _node_ by _n_.\n    140     This is useful to \"move code\" to a different location in a file.\n    141     \"\"\"\n    142     if 'lineno' in node._attributes:\n    143         node.lineno = getattr(node, 'lineno', 0) + n\n    144     for child in walk(node):\n    145         if 'lineno' in child._attributes:\n    146             child.lineno = getattr(child, 'lineno', 0) + n\n    147     return node\n\n/usr/lib64/python2.6/ast.pyc in _fix(node=<_ast.Import object at 0x105e5d0>, lineno=1, col_offset=0)\n    117     recursively where not already set, by setting them to the values of the\n    118     parent node.  It works recursively starting at _node_.\n    119     \"\"\"\n    120     def _fix(node, lineno, col_offset):\n    121         if 'lineno' in node._attributes:\n    122             if not hasattr(node, 'lineno'):\n    123                 node.lineno = lineno\n    124             else:\n    125                 lineno = node.lineno\n    126         if 'col_offset' in node._attributes:\n    127             if not hasattr(node, 'col_offset'):\n    128                 node.col_offset = col_offset\n    129             else:\n    130                 col_offset = node.col_offset\n    131         for child in iter_child_nodes(node):\n--> 132             _fix(child, lineno, col_offset)\n        global _fix = undefined\n        child = <_ast.alias object at 0x105ed10>\n        lineno = 1\n        col_offset = 0\n    133     _fix(node, 1, 0)\n    134     return node\n    135 \n    136 \n    137 def increment_lineno(node, n=1):\n    138     \"\"\"\n    139     Increment the line number of each node in the tree starting at _node_ by _n_.\n    140     This is useful to \"move code\" to a different location in a file.\n    141     \"\"\"\n    142     if 'lineno' in node._attributes:\n    143         node.lineno = getattr(node, 'lineno', 0) + n\n    144     for child in walk(node):\n    145         if 'lineno' in child._attributes:\n    146             child.lineno = getattr(child, 'lineno', 0) + n\n    147     return node\n\n/usr/lib64/python2.6/ast.pyc in _fix(node=<_ast.alias object at 0x105ed10>, lineno=1, col_offset=0)\n    106         if attr in old_node._attributes and attr in new_node._attributes \\\n    107            and hasattr(old_node, attr):\n    108             setattr(new_node, attr, getattr(old_node, attr))\n    109     return new_node\n    110 \n    111 \n    112 def fix_missing_locations(node):\n    113     \"\"\"\n    114     When you compile a node tree with compile(), the compiler expects lineno and\n    115     col_offset attributes for every node that supports them.  This is rather\n    116     tedious to fill in for generated nodes, so this helper adds these attributes\n    117     recursively where not already set, by setting them to the values of the\n    118     parent node.  It works recursively starting at _node_.\n    119     \"\"\"\n    120     def _fix(node, lineno, col_offset):\n--> 121         if 'lineno' in node._attributes:\n        node._attributes = undefined\n    122             if not hasattr(node, 'lineno'):\n    123                 node.lineno = lineno\n    124             else:\n    125                 lineno = node.lineno\n    126         if 'col_offset' in node._attributes:\n    127             if not hasattr(node, 'col_offset'):\n    128                 node.col_offset = col_offset\n    129             else:\n    130                 col_offset = node.col_offset\n    131         for child in iter_child_nodes(node):\n    132             _fix(child, lineno, col_offset)\n    133     _fix(node, 1, 0)\n    134     return node\n    135 \n    136 \n\nAttributeError: 'alias' object has no attribute '_attributes'\n\n---\n\nHistory of session input:get_ipython().magic(u'config Application.verbose_crash=True')import sifjwh\n**\\* Last line of input (may not be in above history):\nimport sifjwh\n", "commits": [{"node_id": "MDY6Q29tbWl0MTIzNjAwMzo4NGNmZDMwYzJjOWI0ZmRhZWRiYzliMmVhNzI4MGVlNWI0MDBjZGQ4", "commit_message": "Don't call ast.fix_missing_locations unless the AST could have been modified.\n\nShould close gh-2879", "commit_timestamp": "2013-02-05T15:24:56Z", "files": ["IPython/core/interactiveshell.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4Ojg0Y2ZkMzBjMmM5YjRmZGFlZGJjOWIyZWE3MjgwZWU1YjQwMGNkZDg=", "commit_message": "Don't call ast.fix_missing_locations unless the AST could have been modified.\n\nShould close gh-2879", "commit_timestamp": "2013-02-05T15:24:56Z", "files": ["IPython/core/interactiveshell.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmE1ZjkxYjZjMjIzMDYxMDYxNzYzYWNlZjM3MmY0NWE2NTBkNDQ4MzQ=", "commit_message": "Merge pull request #2883 from takluyver/i2879\n\nDon't call ast.fix_missing_locations unless the AST could have been modified\r\n\r\nShould close gh-2879, and give a tiny improvement in performance.", "commit_timestamp": "2013-02-05T15:47:46Z", "files": ["IPython/core/interactiveshell.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo5Y2I5ZmVhZDYxMDZmYjMyNmZmNTEwNTcyZWRiNzBkOTM2YzMxZDc0", "commit_message": "Don't call ast.fix_missing_locations unless the AST could have been modified.\n\nShould close gh-2879", "commit_timestamp": "2013-02-05T15:24:56Z", "files": ["IPython/core/interactiveshell.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzpjOTRmNGQyYmQ4OWIwYmIyNDFmNGMxNTdlZGFjMjYzNWEzZWY4NDg3", "commit_message": "Merge pull request #2883 from takluyver/i2879\n\nDon't call ast.fix_missing_locations unless the AST could have been modified\r\n\r\nShould close gh-2879, and give a tiny improvement in performance.", "commit_timestamp": "2013-02-05T15:47:46Z", "files": ["IPython/core/interactiveshell.py"]}], "labels": ["needs-info"], "created_at": "2013-02-04T19:24:52Z", "closed_at": "2013-02-05T15:47:47Z", "method": ["regex"]}
{"issue_number": 2865, "title": "%%!? does not display the shell execute docstring", "body": "Neither %%!? nor ?%%! display the docstring for the shell execute cell magic. Each case gives a separate error message, however:\n\n```\nIn [1]: %%!?\nERROR: Line magic function `%` not found.\n```\n\n```\nIn [2]: ?%%!\nObject `%%` not found.\n```\n", "commits": [{"node_id": "MDY6Q29tbWl0MTMzMjc4MzY6NTAwY2U0NTM0NzM4ZjRiYWI3Zjg1NjNjOGY3YzZmY2FlNWQ5N2FhNw==", "commit_message": "split input tests for Issue #2865", "commit_timestamp": "2013-10-13T04:35:51Z", "files": ["IPython/core/tests/test_splitinput.py"]}, {"node_id": "MDY6Q29tbWl0MTMzMjc4MzY6ZDI4MGExNzAzNjY0NzUzNmEzZGNkMGYwOWIyMWU0MzUyM2ZjNjNhYg==", "commit_message": "regex updates for Issue #2865 bugfix", "commit_timestamp": "2013-10-13T06:02:40Z", "files": ["IPython/core/inputtransformer.py", "IPython/core/splitinput.py"]}], "labels": ["documentation", "bug"], "created_at": "2013-01-29T21:18:28Z", "closed_at": "2013-12-16T00:35:19Z", "method": ["label"]}
{"issue_number": 2821, "title": "Test failure: IPython.parallel.tests.test_client.test_resubmit_header", "body": "This has now failed two days in a row, so I'm assuming it's not just a timing issue.\n\n```\n======================================================================\nERROR: resubmit shouldn't clobber the whole header\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/home/slave/jenkins/shiningpanda/f786c3c0/virtualenvs/ff035a1d/lib/python2.7/site-packages/IPython/parallel/tests/test_client.py\", line 373, in test_resubmit_header\n    self._wait_for_idle()\n  File \"/home/slave/jenkins/shiningpanda/f786c3c0/virtualenvs/ff035a1d/lib/python2.7/site-packages/IPython/parallel/tests/test_client.py\", line 310, in _wait_for_idle\n    hub_hist = rc.hub_history()\n  File \"<string>\", line 2, in hub_history\n  File \"/home/slave/jenkins/shiningpanda/f786c3c0/virtualenvs/ff035a1d/lib/python2.7/site-packages/IPython/parallel/client/client.py\", line 70, in spin_first\n    return f(self, *args, **kwargs)\n  File \"/home/slave/jenkins/shiningpanda/f786c3c0/virtualenvs/ff035a1d/lib/python2.7/site-packages/IPython/parallel/client/client.py\", line 1775, in hub_history\n    raise self._unwrap_exception(content)\nRemoteError: TypeError(can't compare datetime.datetime to NoneType)\n```\n\nhttps://jenkins.shiningpanda-ci.com/ipython/job/ipython-multi/PLATFORM=debian6,PYTHON=CPython-2.7/344/testReport/IPython.parallel.tests.test_client/TestClient/test_resubmit_header/\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU5NDQ2OjA5Yjc5YzMyYWQxODYwYTMwOGYzN2YyMWNjOGJhOTFjYjUxMDNhOWM=", "commit_message": "avoid comparison error in dictdb hub history\n\nin rare situations, display data can arrive at the Hub before the execution request, in which case `submitted` is undefined.\n\nshould address #2821, but I need to see Jenkins succeed,\nsince that is the only place this comes up.", "commit_timestamp": "2013-01-22T05:31:30Z", "files": ["IPython/parallel/controller/dictdb.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjkzOTg4N2ZhZjlmOGYyYTE0MWM1MmI3NTQxNDE3Mjg2YzQ5ZTRiOWE=", "commit_message": "Merge pull request #2829 from minrk/nodate\n\navoid comparison error in dictdb hub history\r\n\r\nin rare situations, display data can arrive at the Hub before the execution\r\nrequest, in which case `submitted` is undefined.\r\n\r\nshould address #2821, but I need to see Jenkins succeed, since that is the\r\nonly place this comes up.", "commit_timestamp": "2013-01-23T06:08:48Z", "files": ["IPython/parallel/controller/dictdb.py"]}, {"node_id": "MDY6Q29tbWl0NjU5NDQ2OmM2ZTEwZDk3OTYxOWI5OWY3MjEyMGM4ZDVlNWM1MWI1NmFkYjBkZjk=", "commit_message": "avoid comparison error in dictdb hub history\n\nin rare situations, display data can arrive at the Hub before the execution request, in which case `submitted` is undefined.\n\nshould address #2821, but I need to see Jenkins succeed,\nsince that is the only place this comes up.", "commit_timestamp": "2013-01-25T21:27:35Z", "files": ["IPython/parallel/controller/dictdb.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo3YjgwOWY3MGMzMmU1N2VlMWRjNzYzM2UxNjNkNzQwYWNhMTkyNDgz", "commit_message": "avoid comparison error in dictdb hub history\n\nin rare situations, display data can arrive at the Hub before the execution request, in which case `submitted` is undefined.\n\nshould address #2821, but I need to see Jenkins succeed,\nsince that is the only place this comes up.", "commit_timestamp": "2013-01-22T05:31:30Z", "files": ["IPython/parallel/controller/dictdb.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzpjNGRmYTI0ZDY5MDhhZTdmMGI1MTM2MjkyMDE5ZmRmNmI2YTQ3NGNj", "commit_message": "Merge pull request #2829 from minrk/nodate\n\navoid comparison error in dictdb hub history\r\n\r\nin rare situations, display data can arrive at the Hub before the execution\r\nrequest, in which case `submitted` is undefined.\r\n\r\nshould address #2821, but I need to see Jenkins succeed, since that is the\r\nonly place this comes up.", "commit_timestamp": "2013-01-23T06:08:48Z", "files": ["IPython/parallel/controller/dictdb.py"]}], "labels": ["bug", "parallel"], "created_at": "2013-01-20T14:10:33Z", "closed_at": "2013-07-04T01:17:35Z", "method": ["label"]}
{"issue_number": 2807, "title": "Test failure: IPython.parallel.tests.test_client.TestClient.test_purge_everything", "body": "```\nTraceback (most recent call last):\n  File \"/sp/lib/python/cpython-2.7/lib/python2.7/unittest/case.py\", line 327, in run\n    testMethod()\n  File \"/home/slave/jenkins/shiningpanda/f786c3c0/virtualenvs/ff035a1d/lib/python2.7/site-packages/IPython/parallel/tests/test_client.py\", line 467, in test_purge_everything\n    self.assertEqual(len(hist), 0, msg=\"hub history not empty\")\n  File \"/sp/lib/python/cpython-2.7/lib/python2.7/unittest/case.py\", line 511, in assertEqual\n    assertion_func(first, second, msg=msg)\n  File \"/sp/lib/python/cpython-2.7/lib/python2.7/unittest/case.py\", line 504, in _baseAssertEqual\n    raise self.failureException(msg)\nAssertionError: hub history not empty\n    '1 != 0' = '%s != %s' % (safe_repr(1), safe_repr(0))\n    'hub history not empty' = self._formatMessage('hub history not empty', '1 != 0')\n>>  raise self.failureException('hub history not empty')\n```\n\nhttps://jenkins.shiningpanda-ci.com/ipython/job/ipython-multi/PLATFORM=debian6,PYTHON=CPython-2.7/343/testReport/IPython.parallel.tests.test_client/TestClient/test_purge_everything/\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU5NDQ2OjU5YmM1Y2RjMDRiOGU4MDVkZTc1ZGZhZjMzMTEyNGRlN2YwMzhjZmM=", "commit_message": "improve patience for slow Hub in client tests\n\nadds a first step in `_wait_for_idle`,\nwhere it waits for all tasks to arrive before waiting for\nno tasks to be running.  On a super slow machine,\nit was possible for `_wait_for_idle` to return prematurely,\nbefore tasks had even started.\n\nought to close #2807", "commit_timestamp": "2013-01-18T22:16:29Z", "files": ["IPython/parallel/tests/test_client.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjU5YmM1Y2RjMDRiOGU4MDVkZTc1ZGZhZjMzMTEyNGRlN2YwMzhjZmM=", "commit_message": "improve patience for slow Hub in client tests\n\nadds a first step in `_wait_for_idle`,\nwhere it waits for all tasks to arrive before waiting for\nno tasks to be running.  On a super slow machine,\nit was possible for `_wait_for_idle` to return prematurely,\nbefore tasks had even started.\n\nought to close #2807", "commit_timestamp": "2013-01-18T22:16:29Z", "files": ["IPython/parallel/tests/test_client.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjlkYjg4MTE1MjQwODgwZTM3NTdiYzljZDFmZDA0YjIxMzliY2QyMjA=", "commit_message": "Merge pull request #2808 from minrk/parallel_wait\n\nimprove patience for slow Hub in client tests\r\n\r\nadds a first step in `_wait_for_idle`, where it waits for all tasks to arrive before waiting for no tasks to be running.  On a super slow machine, it was possible for `_wait_for_idle` to return prematurely, before tasks had even started.\r\n\r\ncloses #2807", "commit_timestamp": "2013-01-19T07:35:18Z", "files": ["IPython/parallel/tests/test_client.py"]}, {"node_id": "MDY6Q29tbWl0NjU5NDQ2Ojg1ODhlMGRmZjY2MDZlY2Q2MWI5YzY0NDBmMWRlZDQxNzAzMWMxOWI=", "commit_message": "improve patience for slow Hub in client tests\n\nadds a first step in `_wait_for_idle`,\nwhere it waits for all tasks to arrive before waiting for\nno tasks to be running.  On a super slow machine,\nit was possible for `_wait_for_idle` to return prematurely,\nbefore tasks had even started.\n\nought to close #2807", "commit_timestamp": "2013-01-25T21:27:32Z", "files": ["IPython/parallel/tests/test_client.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzozZmRmNzI0M2I0NWIyODg1M2VlODk1ZmE2MzY1MjQ0NjIxY2RiNmZk", "commit_message": "improve patience for slow Hub in client tests\n\nadds a first step in `_wait_for_idle`,\nwhere it waits for all tasks to arrive before waiting for\nno tasks to be running.  On a super slow machine,\nit was possible for `_wait_for_idle` to return prematurely,\nbefore tasks had even started.\n\nought to close #2807", "commit_timestamp": "2013-01-18T22:16:29Z", "files": ["IPython/parallel/tests/test_client.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo3YmY5ZWZjOGIzMmQzODVjYjdiNDIyZGQ2MzQ4ZWU2Y2I3YzQ0NzUw", "commit_message": "Merge pull request #2808 from minrk/parallel_wait\n\nimprove patience for slow Hub in client tests\r\n\r\nadds a first step in `_wait_for_idle`, where it waits for all tasks to arrive before waiting for no tasks to be running.  On a super slow machine, it was possible for `_wait_for_idle` to return prematurely, before tasks had even started.\r\n\r\ncloses #2807", "commit_timestamp": "2013-01-19T07:35:18Z", "files": ["IPython/parallel/tests/test_client.py"]}], "labels": ["bug", "parallel", "testing"], "created_at": "2013-01-18T12:16:52Z", "closed_at": "2013-01-19T07:35:19Z", "method": ["label"]}
{"issue_number": 2794, "title": "_exit_code behaves differently in terminal vs ZMQ frontends", "body": "The ZMQ frontends (which use pexpect to run `!foo` shell commands) set `_exit_code` to the simple exit code of the process.\n\nIn the terminal, we use `os.system`, which on Unix-y systems returns:\n\n> exit status indication: a 16-bit number, whose low byte is the signal number that killed the process, and whose high byte is the exit status (if the signal number is zero); the high bit of the low byte is set if a core file was produced.\n\nN.B. [the docs](http://docs.python.org/3/library/os#os.system) also say:\n\n> Note that POSIX does not specify the meaning of the return value of the C system() function, so the return value of the Python function is system-dependent.\n\nWe should work out which systems this affects (i.e. do BSD & Macs do the same thing?) and do something sensible with the exit code.\n", "commits": [{"node_id": "MDY6Q29tbWl0MTIzNjAwMzo4MThhZTM1MzAzMWZhYmI2ZTZkNzhmOGJlZDc5YTJjNjA1MTcxNWQx", "commit_message": "Correct exit code from os.system() on Unix.\n\nCloses gh-2794", "commit_timestamp": "2013-01-17T13:36:09Z", "files": ["IPython/core/interactiveshell.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjgxOGFlMzUzMDMxZmFiYjZlNmQ3OGY4YmVkNzlhMmM2MDUxNzE1ZDE=", "commit_message": "Correct exit code from os.system() on Unix.\n\nCloses gh-2794", "commit_timestamp": "2013-01-17T13:36:09Z", "files": ["IPython/core/interactiveshell.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjdlODkwOTkzMGE2NzU5ODcyOGJiYzJiODY2ZGI3ZDQ5ZmZlMDE1ZTk=", "commit_message": "Merge pull request #2799 from takluyver/exit-code\n\nfix `_exit_code` after running system calls\r\n\r\nCorrect the exit code to be a simple value, rather than two or three separate values stuffed into a single integer.\r\n\r\nCloses #2794", "commit_timestamp": "2013-01-18T04:25:37Z", "files": ["IPython/core/interactiveshell.py", "IPython/core/tests/test_interactiveshell.py"]}, {"node_id": "MDY6Q29tbWl0NjU5NDQ2OmMyN2Y3YTA3OWEyODIyODc1MDFhMjI4Yzc0MDM1YmNlMzkyOGJhNDk=", "commit_message": "Correct exit code from os.system() on Unix.\n\nCloses gh-2794", "commit_timestamp": "2013-01-25T21:27:30Z", "files": ["IPython/core/interactiveshell.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmYxODQ4ODg3NWFkODA2Njg5NGQ3Y2JlMGNkNGRkNTEzOTQ5YjljYmE=", "commit_message": "Backport PR #2799: Exit code\n\nCorrect the exit code to be a simple value, rather than two or three separate values stuffed into a single integer.\n\nCloses issue #2794.\n\nMy reading of the [Windows docs](http://www.microsoft.com/resources/documentation/windows/xp/all/proddocs/en-us/exit.mspx?mfr=true) is that the test I've added should work on Windows as well.", "commit_timestamp": "2013-03-04T23:52:14Z", "files": ["IPython/core/interactiveshell.py", "IPython/core/tests/test_interactiveshell.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo0Mzg2ZDhjYzQyMDAwYTFhYzBkODlmZjlkNjZlZTA1ZGY4YzI1NmM1", "commit_message": "Correct exit code from os.system() on Unix.\n\nCloses gh-2794", "commit_timestamp": "2013-01-17T13:36:09Z", "files": ["IPython/core/interactiveshell.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzpmYzgyY2VhZjdiODNkNGMwMWFjM2VlMDE2YWY3MDQ5YjViMjE0MjAx", "commit_message": "Merge pull request #2799 from takluyver/exit-code\n\nfix `_exit_code` after running system calls\r\n\r\nCorrect the exit code to be a simple value, rather than two or three separate values stuffed into a single integer.\r\n\r\nCloses #2794", "commit_timestamp": "2013-01-18T04:25:37Z", "files": ["IPython/core/interactiveshell.py", "IPython/core/tests/test_interactiveshell.py"]}], "labels": ["bug"], "created_at": "2013-01-15T13:14:34Z", "closed_at": "2013-01-18T04:25:38Z", "method": ["label"]}
{"issue_number": 2793, "title": "IPython.parallel issue with pushing pandas TimeSeries", "body": "A pandas.TimeSeries is cast to a numpy.ndarray when pushed using IPython.parallel.\n\nHere is an example:\n\n```\nIn [1]: from IPython import parallel\n\nIn [2]: dview = parallel.Client()[:]\n\nIn [3]: with dview.sync_imports(): import pandas\nimporting pandas on engine(s)\n\nIn [4]: a = pandas.TimeSeries([1,2,3],index=[1,2,3])\n\nIn [5]: a.__class__\npandas.core.series.Series\n\nIn [6]: dview.push({'b':a})\n<AsyncResult: _push>\n\nIn [7]: ret = dview.apply_async(lambda x: b.__class__, range(0,1))\n\nIn [8]: ret.result\n[numpy.ndarray,\n numpy.ndarray]\n```\n\nThis seems to be a result of dview.push handling numpy arrays differently: http://ipython.org/ipython-doc/dev/parallel/parallel_details.html\nand pandas.TimeSeries using numpy arrays:\n\n```\nIn [9]: cPickle.dumps(a)\n\"cnumpy.core.multiarray\\n_reconstruct\\np1\\n(cpandas.core.series\\nSeries\\np2\\n(I0\\ntS'b'\\ntRp3\\n((I1\\n(I3\\ntcnumpy\\ndtype\\np4\\n(S'i8'\\nI0\\nI1\\ntRp5\\n(I3\\nS'<'\\nNNNI-1\\nI-1\\nI0\\ntbI00\\nS'\\\\x01\\\\x00\\\\x00\\\\x00\\\\x00\\\\x00\\\\x00\\\\x00\\\\x02\\\\x00\\\\x00\\\\x00\\\\x00\\\\x00\\\\x00\\\\x00\\\\x03\\\\x00\\\\x00\\\\x00\\\\x00\\\\x00\\\\x00\\\\x00'\\nt(g1\\n(cpandas.core.index\\nInt64Index\\np6\\n(I0\\ntS'b'\\ntRp7\\n((I1\\n(I3\\ntg5\\nI00\\nS'\\\\x01\\\\x00\\\\x00\\\\x00\\\\x00\\\\x00\\\\x00\\\\x00\\\\x02\\\\x00\\\\x00\\\\x00\\\\x00\\\\x00\\\\x00\\\\x00\\\\x03\\\\x00\\\\x00\\\\x00\\\\x00\\\\x00\\\\x00\\\\x00'\\nt(NttbNttb.\"\n```\n\nIs there a way to cast back to pandas.TimeSeries on the ipcluster engines?\n\nMany thanks.\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU5NDQ2OmE2ZDBiNWUyZDcyZTZhMjE0YjM2MmNiMTFiZmI2NDFkYjJkOTA5ZTc=", "commit_message": "use `type(obj) is cls` as switch when canning\n\n`isinstance(obj, cos)` would trigger the canning shortcuts for subclasses,\nwhich can be inappropriate (e.g. pandas.TimeSeries).\n\ncloses #2793", "commit_timestamp": "2013-01-17T18:20:52Z", "files": ["IPython/utils/pickleutil.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmE2ZDBiNWUyZDcyZTZhMjE0YjM2MmNiMTFiZmI2NDFkYjJkOTA5ZTc=", "commit_message": "use `type(obj) is cls` as switch when canning\n\n`isinstance(obj, cos)` would trigger the canning shortcuts for subclasses,\nwhich can be inappropriate (e.g. pandas.TimeSeries).\n\ncloses #2793", "commit_timestamp": "2013-01-17T18:20:52Z", "files": ["IPython/utils/pickleutil.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjRmODQ2NWU0ZDI1YjVlYzgxNzQwMzYzYWNjODkzZjZkODFhNGFiNWQ=", "commit_message": "Merge pull request #2800 from minrk/typecheck\n\nuse `type(obj) is cls` as switch when canning\r\n\r\n`isinstance(obj, cos)` would trigger the canning shortcuts for subclasses,\r\nwhich can be inappropriate (e.g. pandas.TimeSeries).\r\n\r\ncloses #2793", "commit_timestamp": "2013-01-18T04:03:07Z", "files": ["IPython/parallel/tests/test_view.py", "IPython/utils/pickleutil.py"]}, {"node_id": "MDY6Q29tbWl0NjU5NDQ2OjAzNjEwNWU4MjkyOTE5YmZlZTMyMzY1NDVjZmFjYzM5OWU0MTE2M2I=", "commit_message": "use `type(obj) is cls` as switch when canning\n\n`isinstance(obj, cos)` would trigger the canning shortcuts for subclasses,\nwhich can be inappropriate (e.g. pandas.TimeSeries).\n\ncloses #2793", "commit_timestamp": "2013-01-25T21:27:30Z", "files": ["IPython/utils/pickleutil.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo0ZDEwMGIxYTJjMzcwY2JiMzEwNjIxMWM1NzIyY2MyNmIwOWY2NDRk", "commit_message": "use `type(obj) is cls` as switch when canning\n\n`isinstance(obj, cos)` would trigger the canning shortcuts for subclasses,\nwhich can be inappropriate (e.g. pandas.TimeSeries).\n\ncloses #2793", "commit_timestamp": "2013-01-17T18:20:52Z", "files": ["IPython/utils/pickleutil.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzozZmZlZDYyYzMyZDMzMzI2YzJlMzNmYTRkZGJjOTVkODYzOTVhMTEy", "commit_message": "Merge pull request #2800 from minrk/typecheck\n\nuse `type(obj) is cls` as switch when canning\r\n\r\n`isinstance(obj, cos)` would trigger the canning shortcuts for subclasses,\r\nwhich can be inappropriate (e.g. pandas.TimeSeries).\r\n\r\ncloses #2793", "commit_timestamp": "2013-01-18T04:03:07Z", "files": ["IPython/parallel/tests/test_view.py", "IPython/utils/pickleutil.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjRmODQ2NWU0ZDI1YjVlYzgxNzQwMzYzYWNjODkzZjZkODFhNGFiNWQ=", "commit_message": "Merge pull request #2800 from minrk/typecheck\n\nuse `type(obj) is cls` as switch when canning\r\n\r\n`isinstance(obj, cos)` would trigger the canning shortcuts for subclasses,\r\nwhich can be inappropriate (e.g. pandas.TimeSeries).\r\n\r\ncloses #2793", "commit_timestamp": "2013-01-18T04:03:07Z", "files": ["IPython/parallel/tests/test_view.py", "IPython/utils/pickleutil.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjRmODQ2NWU0ZDI1YjVlYzgxNzQwMzYzYWNjODkzZjZkODFhNGFiNWQ=", "commit_message": "Merge pull request #2800 from minrk/typecheck\n\nuse `type(obj) is cls` as switch when canning\r\n\r\n`isinstance(obj, cos)` would trigger the canning shortcuts for subclasses,\r\nwhich can be inappropriate (e.g. pandas.TimeSeries).\r\n\r\ncloses #2793", "commit_timestamp": "2013-01-18T04:03:07Z", "files": ["IPython/parallel/tests/test_view.py", "IPython/utils/pickleutil.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzozZmZlZDYyYzMyZDMzMzI2YzJlMzNmYTRkZGJjOTVkODYzOTVhMTEy", "commit_message": "Merge pull request #2800 from minrk/typecheck\n\nuse `type(obj) is cls` as switch when canning\r\n\r\n`isinstance(obj, cos)` would trigger the canning shortcuts for subclasses,\r\nwhich can be inappropriate (e.g. pandas.TimeSeries).\r\n\r\ncloses #2793", "commit_timestamp": "2013-01-18T04:03:07Z", "files": ["IPython/parallel/tests/test_view.py", "IPython/utils/pickleutil.py"]}], "labels": ["bug", "parallel"], "created_at": "2013-01-15T11:15:34Z", "closed_at": "2013-01-18T04:03:08Z", "linked_pr_number": [2793], "method": ["label"]}
{"issue_number": 2790, "title": "%paste and %cpaste not removing \"...\" lines", "body": "Pasting doctest code that contains \"...\" lines raises a syntax error. Adding a space to replace such lines with \"... \" fixes the problem.\n\nThis makes pasting some code snippets very cumbersome (e.g. http://docs.sqlalchemy.org/en/rel_0_8/orm/tutorial.html#declare-a-mapping), as they have to be fixed before being pasted.\n\nIt would be nice if this were fixed.\n\n(Observed with version 0.13.1 on Mac OS\u00a0X).\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU5NDQ2OjkyODZiODgxNTdkNDI4MWYwNzU3MTlmY2E4Y2IxNmEwZWM4YTFlODU=", "commit_message": "allow classic prompts without a space\n\n>>>a=5\n...b=10\n\netc.\n\ncloses #2790", "commit_timestamp": "2013-01-18T22:26:21Z", "files": ["IPython/core/inputsplitter.py", "IPython/core/tests/test_inputsplitter.py"]}, {"node_id": "MDY6Q29tbWl0MTIzNjAwMzpmMDc0Zjg5ZjYxYzZiZGM1YjdmZWUyY2Y0MTQzZWIzNzhjMmJjYThl", "commit_message": "Allow classic prompts without space.\n\nCloses gh-2790", "commit_timestamp": "2013-06-29T16:05:38Z", "files": ["IPython/core/inputtransformer.py", "IPython/core/tests/test_inputtransformer.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo3N2ZiMjJhMzgyYzY1ZjZiNGQwNWM0YjQyOWFhN2FlODU5M2ZmNDMy", "commit_message": "Allow classic prompts without space.\n\nCloses gh-2790", "commit_timestamp": "2013-06-29T16:05:38Z", "files": ["IPython/core/inputtransformer.py", "IPython/core/tests/test_inputtransformer.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjMwOTZhZmEyZDRjNzQ5YzZjNzBiYWU3YzM4NTM2ZTAyYzI4N2Q1NmQ=", "commit_message": "Merge pull request #3483 from takluyver/i2790\n\nInputtransformer: Allow classic prompts without space", "commit_timestamp": "2013-06-29T18:32:41Z", "files": ["IPython/core/inputtransformer.py", "IPython/core/tests/test_inputtransformer.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjMwOTZhZmEyZDRjNzQ5YzZjNzBiYWU3YzM4NTM2ZTAyYzI4N2Q1NmQ=", "commit_message": "Merge pull request #3483 from takluyver/i2790\n\nInputtransformer: Allow classic prompts without space", "commit_timestamp": "2013-06-29T18:32:41Z", "files": ["IPython/core/inputtransformer.py", "IPython/core/tests/test_inputtransformer.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo0NmIwMGQwMzRhNDg0MjlmNmIxNzRkYmRhZGRjNDZlNTliM2VkYjNl", "commit_message": "Merge pull request #3483 from takluyver/i2790\n\nInputtransformer: Allow classic prompts without space", "commit_timestamp": "2013-06-29T18:32:41Z", "files": ["IPython/core/inputtransformer.py", "IPython/core/tests/test_inputtransformer.py"]}], "labels": ["bug"], "created_at": "2013-01-15T04:13:26Z", "closed_at": "2013-06-29T18:32:41Z", "linked_pr_number": [2790], "method": ["label"]}
{"issue_number": 2784, "title": "%run -t -N<N> error", "body": "This is the same issue as #800 which is reported as fixed but maybe the fix somehow got dropped during refactorization.\n\nThe bug is in IPython/core/magics/execution.py:\n\n```\n  print \"\\nIPython CPU timings (estimated):\"\n  print \"Total runs performed:\", nruns\n  print \"  Times  : %10.2f    %10.2f\" % ('Total', 'Per run')  <----------\n  print \"  User   : %10.2f s, %10.2f s.\" % (t_usr, t_usr / nruns)\n  print \"  System : %10.2f s, %10.2f s.\" % (t_sys, t_sys / nruns)\n```\n\nReplacing:\n\n```\n  print \"  Times  : %10.2f    %10.2f\" % ('Total', 'Per run') \n```\n\nwith:\n\n```\n  print \"  Times  : %10s    %10s\" % ('Total', 'Per run')\n```\n\nfixes the problem.\n", "commits": [{"node_id": "MDY6Q29tbWl0Nzg4ODE2NTo1MDE2MWY1ZWNiNTI0NzEyOTkxZDc0OGFkN2U0NDQyMTJmOGZhNzk2", "commit_message": "rlmv - Added test for issue #2784\n\nThe test checks for exceptions raised from bad string formatting when %run -t -N<N> is called with N > 1.", "commit_timestamp": "2013-01-29T11:23:49Z", "files": ["IPython/core/tests/test_run.py"]}, {"node_id": "MDY6Q29tbWl0Nzg4ODE2NTo5NWJkZTBmYzIyZjBjOGI4YjUzMGMxYTdkNzIxOTVjZjU4NDlkZjZh", "commit_message": "rlmv - Fixed issue #2784", "commit_timestamp": "2013-01-29T11:27:28Z", "files": ["IPython/core/magics/execution.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmRjMWFkMGQzMzUwZWQzYmJkNDJmZDVhZmEyOTFiYTNmYzk2NTJlYjM=", "commit_message": "Backport PR #2864: Fix %run -t -N<N> TypeError\n\nAdds a test case and a fix for issue #2784.", "commit_timestamp": "2013-03-05T00:26:37Z", "files": ["IPython/core/magics/execution.py", "IPython/core/tests/test_run.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmQ5OTQ2NjJlM2VkYWQzZjBlMjRjMGZjYmUyZjI5YmI3YzE5MmM5M2Y=", "commit_message": "Backport PR #2864: Fix %run -t -N<N> TypeError\n\nAdds a test case and a fix for issue #2784.", "commit_timestamp": "2013-03-20T18:58:23Z", "files": ["IPython/core/magics/execution.py", "IPython/core/tests/test_run.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo3NGM4OWE5MThiZDJkNDBiYWEyNjg0Yjk0ZTA4OTc3MDJkZGMwZGU5", "commit_message": "rlmv - Added test for issue #2784\n\nThe test checks for exceptions raised from bad string formatting when %run -t -N<N> is called with N > 1.", "commit_timestamp": "2013-01-29T11:23:49Z", "files": ["IPython/core/tests/test_run.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzphYzM4ZjMxNGU4NWI0NmFkNDY0YjgyYjM3ZmFhOGJlZjNkYzEwMmI3", "commit_message": "rlmv - Fixed issue #2784", "commit_timestamp": "2013-01-29T11:27:28Z", "files": ["IPython/core/magics/execution.py"]}], "labels": ["bug", "regression"], "created_at": "2013-01-14T06:44:33Z", "closed_at": "2013-01-29T13:31:39Z", "method": ["label", "regex"]}
{"issue_number": 2772, "title": "AttributeError: 'Client' object has no attribute 'kill'", "body": "The kill method on a DirectView throws an attribute error. The following code demonstrates the problem:\n\n``` python\nimport time\nfrom IPython.utils.path import locate_profile\nfrom IPython.parallel.apps.launcher import LocalControllerLauncher, LocalEngineLauncher\nfrom IPython.parallel import Client\ncontroller = LocalControllerLauncher(profile_dir=locate_profile())\ncontroller.start()\ne = LocalEngineLauncher(profile_dir=locate_profile())\ne.start()\ntime.sleep(1)\nrc = Client()\ntime.sleep(5)\ndv = rc[:]\ndv.kill()\nrc.shutdown(hub=True)\n```\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU5NDQ2OmIwMmRiNDkwYTE4YjNmODg2NmJiMjU5ZjQ0MjQzMjQ4YjJkMTFlMjU=", "commit_message": "remove non-functional View.kill method\n\nThis method cannot be implemented until engines have local nannies\nthat can send signals.\n\ncloses #2772", "commit_timestamp": "2013-01-11T20:32:51Z", "files": ["IPython/parallel/client/view.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmIwMmRiNDkwYTE4YjNmODg2NmJiMjU5ZjQ0MjQzMjQ4YjJkMTFlMjU=", "commit_message": "remove non-functional View.kill method\n\nThis method cannot be implemented until engines have local nannies\nthat can send signals.\n\ncloses #2772", "commit_timestamp": "2013-01-11T20:32:51Z", "files": ["IPython/parallel/client/view.py"]}, {"node_id": "MDY6Q29tbWl0NjU5NDQ2OmI2ZjRlNTBiNTVmNDUzY2Q5ODg5MjBmMTE1ZjQzM2EzYTZlZThjNWI=", "commit_message": "remove non-functional View.kill method\n\nThis method cannot be implemented until engines have local nannies\nthat can send signals.\n\ncloses #2772", "commit_timestamp": "2013-01-25T21:27:23Z", "files": ["IPython/parallel/client/view.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzplODlmNWM3NmJiOGIyYjdhMDg3MzRlN2EyNGIyNjczYmQyOTJkNDRl", "commit_message": "remove non-functional View.kill method\n\nThis method cannot be implemented until engines have local nannies\nthat can send signals.\n\ncloses #2772", "commit_timestamp": "2013-01-11T20:32:51Z", "files": ["IPython/parallel/client/view.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjE5MWE5ZmI2ZmRlNzIwMDUyOWQzMjEyZThkOGVlYzI5ZGVjZmQ5NmY=", "commit_message": "Merge pull request #2776 from minrk/rmkill\n\nremove non-functional View.kill method", "commit_timestamp": "2013-01-12T19:47:13Z", "files": ["IPython/parallel/client/view.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjE5MWE5ZmI2ZmRlNzIwMDUyOWQzMjEyZThkOGVlYzI5ZGVjZmQ5NmY=", "commit_message": "Merge pull request #2776 from minrk/rmkill\n\nremove non-functional View.kill method", "commit_timestamp": "2013-01-12T19:47:13Z", "files": ["IPython/parallel/client/view.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzozNTNhNDBjMzI0NzYxNDRiMWM2ODBlODJmMzUyMjk5MTc3NmIwMzcy", "commit_message": "Merge pull request #2776 from minrk/rmkill\n\nremove non-functional View.kill method", "commit_timestamp": "2013-01-12T19:47:13Z", "files": ["IPython/parallel/client/view.py"]}], "labels": ["bug", "parallel"], "created_at": "2013-01-11T10:12:33Z", "closed_at": "2013-01-12T19:47:14Z", "linked_pr_number": [2772], "method": ["label"]}
{"issue_number": 2765, "title": "name '__file__' is not defined", "body": "When i %ed a python file like test.py, \"name '**file**' is not defined\" occur when i quit the file.\nthe ipython -V is 0.14.dev and the python is Python 2.6.7\nsource code use like:  os.path.dirname(os.path.realpath(**file**))\n", "commits": [{"node_id": "MDY6Q29tbWl0MjkwOTI5MDo2OTdlYzA5MzcyNTFjMGE3YTA3ZjIyZGQzNDIzZmJmZTkxMGM3MGYx", "commit_message": "Define __file__ when we %edit a real file.\n\nCloses gh-2765.", "commit_timestamp": "2013-01-10T06:26:28Z", "files": ["IPython/core/magics/code.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjY5N2VjMDkzNzI1MWMwYTdhMDdmMjJkZDM0MjNmYmZlOTEwYzcwZjE=", "commit_message": "Define __file__ when we %edit a real file.\n\nCloses gh-2765.", "commit_timestamp": "2013-01-10T06:26:28Z", "files": ["IPython/core/magics/code.py"]}, {"node_id": "MDY6Q29tbWl0NjU5NDQ2OjZkYjI4YTIxYjEzOTM1ZmU5YzIxMWZlNDBjZWE5ODgyODMyMjk1MTg=", "commit_message": "Define __file__ when we %edit a real file.\n\nCloses gh-2765.", "commit_timestamp": "2013-01-25T21:27:22Z", "files": ["IPython/core/magics/code.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzowYTVkOTcxOWE2Y2IxM2Y3ODFmN2ZmNzkyY2JkMmQyN2RiNDBmZTMz", "commit_message": "Define __file__ when we %edit a real file.\n\nCloses gh-2765.", "commit_timestamp": "2013-01-10T06:26:28Z", "files": ["IPython/core/magics/code.py"]}], "labels": ["bug"], "created_at": "2013-01-10T05:26:16Z", "closed_at": "2013-01-10T14:05:04Z", "method": ["label"]}
{"issue_number": 2762, "title": "OSX wxPython (osx_cocoa, 64bit) command \"%gui wx\" blocks the interpreter", "body": "On mac os x trying to use ipython with wxPython in interactive mode as soon as I type the command\n\n```\n%gui wx\n```\n\ncompletely block the python interpreter and the only way to stop it is to kill it.\n\nIf I try to use an old version of wxpython (wxPython2.8-osx-unicode-2.8.12.1-universal-py2.7.dmg)\nI should start ipython in 32 bit mode and it works.\n\nThe versions used in the blocking mode are:\n- OSX 10.7.5\n- python 2.7.2 (and even 2.7.3) binary version from python.org\n- ipython 0.13.1 (pip install and local install from sources)\n- wxPython 2.9.4.0 (locally compiled and binary version from wxpython.org)\n\nHere the console example\n\n```\n$ ipython\nPython 2.7.2 (v2.7.2:8527427914a2, Jun 11 2011, 15:22:34) \nType \"copyright\", \"credits\" or \"license\" for more information.\n\nIPython 0.13.1 -- An enhanced Interactive Python.\n?         -> Introduction and overview of IPython's features.\n%quickref -> Quick reference.\nhelp      -> Python's own help system.\nobject?   -> Details about 'object', use 'object??' for extra details.\n\nIn [1]: gui wx\nOut[1]: <wx._core.App; proxy of <Swig Object of type 'wxPyApp *' at 0x102936fd0> >\n\nIn [2]: **[here completely blocked]**\n```\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU4NTE4OmFjMDliNWU3YTAyZGJjMTkzMTQ2Yjg1ZTQ3YjNkZTc3MWIxNDA2NTI=", "commit_message": "Use inputhook_wx2 on osx\n\nFixes #2762", "commit_timestamp": "2013-02-10T22:06:49Z", "files": ["IPython/lib/inputhookwx.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjJjNDcwZDgzZjJlOTQ3ZTQ4MjJhYzIzYjBlOTk4NWMwZDQ2Mjg2MTk=", "commit_message": "Backport PR #2901: Fix inputhook_wx on osx\n\nUse the inputhook_wx2 implementation on osx, fixing #2762.\n\nPlease review. Perhaps it would be better to test with `'cocoa' in wx.version()`, write a new implementation without the Pending/Dispatch loop, or just use inputhook_wx2 on all platforms.", "commit_timestamp": "2013-03-05T00:39:56Z", "files": ["IPython/lib/inputhookwx.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjlhYTA1MzcxNzRiNDI0ODQxMTMwMDVjMmQ2Y2IxZjcyYTNiMDVkZmI=", "commit_message": "Backport PR #2901: Fix inputhook_wx on osx\n\nUse the inputhook_wx2 implementation on osx, fixing #2762.\n\nPlease review. Perhaps it would be better to test with `'cocoa' in wx.version()`, write a new implementation without the Pending/Dispatch loop, or just use inputhook_wx2 on all platforms.", "commit_timestamp": "2013-03-20T18:58:23Z", "files": ["IPython/lib/inputhookwx.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzplYmIwMjkwMTA1Njk3ZjA5ZTFmNTFhM2RhMWRmNzVjODY3ZjI5YTI2", "commit_message": "Use inputhook_wx2 on osx\n\nFixes #2762", "commit_timestamp": "2013-02-10T22:06:49Z", "files": ["IPython/lib/inputhookwx.py"]}], "labels": ["bug", "osx"], "created_at": "2013-01-09T09:45:01Z", "closed_at": "2013-02-21T00:11:39Z", "method": ["label"]}
{"issue_number": 2759, "title": "R magic extension interferes with tab completion", "body": "To reproduce:\n1. Start IPython in the terminal.\n2. Enter `%lsm` and hit tab a couple of times. The first press completes `%lsmagic`, the second does nothing, and subsequent presses show `%lsmagic` as the only completion available, returning you to the prompt.\n3. Clear the line (e.g. with backspace), type `%load_ext rmagic`, and hit return.\n4. Repeat step 2. This time, each press of tab adds another `%` to the start of the line.\n\n```\nIn [1]: %lsmagic\n%lsmagic\n\nIn [1]: %load_ext rmagic\n\nIn [2]: %%%%lsmagic\n```\n\nIt seems specific to rmagic - neither sympyprinting nor cythonmagic has the same effect.\n", "commits": [{"node_id": "MDY6Q29tbWl0MTIzNjAwMzoxZDM1MGVmYjc4OTljYTM3ZWE2YjQ3NDg2OGFjNzRiODJkNzY2NDk1", "commit_message": "Reset readline delimiters after loading rmagic.\n\nCloses gh-2759", "commit_timestamp": "2013-01-09T13:16:22Z", "files": ["IPython/core/interactiveshell.py", "IPython/extensions/rmagic.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjFkMzUwZWZiNzg5OWNhMzdlYTZiNDc0ODY4YWM3NGI4MmQ3NjY0OTU=", "commit_message": "Reset readline delimiters after loading rmagic.\n\nCloses gh-2759", "commit_timestamp": "2013-01-09T13:16:22Z", "files": ["IPython/core/interactiveshell.py", "IPython/extensions/rmagic.py"]}, {"node_id": "MDY6Q29tbWl0NjU5NDQ2OjU1OGFlYWYyZmM5MmYxNTk0NDcwM2Q0YmRkMWM1NWMzZTEzMDJjOWE=", "commit_message": "Reset readline delimiters after loading rmagic.\n\nCloses gh-2759", "commit_timestamp": "2013-01-25T21:27:22Z", "files": ["IPython/core/interactiveshell.py", "IPython/extensions/rmagic.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzpjZmIzOTk1NTc5Y2JhOGM5ZTQ0NDU1YjE4MjkwYTQ4OTMzNzJhMTI3", "commit_message": "Reset readline delimiters after loading rmagic.\n\nCloses gh-2759", "commit_timestamp": "2013-01-09T13:16:22Z", "files": ["IPython/core/interactiveshell.py", "IPython/extensions/rmagic.py"]}], "labels": ["bug"], "created_at": "2013-01-08T00:09:46Z", "closed_at": "2013-01-10T04:22:26Z", "method": ["label", "regex"]}
{"issue_number": 2732, "title": "Test failure with FileLinks class on Windows", "body": "```\n======================================================================\nFAIL: FileLinks: Calling _repr_html_ functions as expected on existing dir\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"S:\\Users\\slave\\Jenkins\\shiningpanda\\d5f643a2\\virtualenvs\\ff035a1d\\lib\\site-packages\\nose\\case.py\", line 197, in runTest\n    self.test(*self.arg)\n  File \"S:\\Users\\slave\\Jenkins\\shiningpanda\\d5f643a2\\virtualenvs\\ff035a1d\\lib\\site-packages\\ipython-0.14.dev-py2.7.egg\\IPython\\lib\\tests\\test_display.py\", line 97, in test_existing_path_FileLinks\n    nt.assert_equal(actual,expected)\nAssertionError: Lists differ: [\"&nbsp;&nbsp;<a href='files/c... != [\"&nbsp;&nbsp;<a href='files/c...\n\nFirst differing element 0:\n&nbsp;&nbsp;<a href='files/c:\\users\\slave\\appdata\\local\\temp\\tmprdhtvl/tmp18db_h' target='_blank'>tmp18db_h</a><br>\n&nbsp;&nbsp;<a href='files/c:\\users\\slave\\appdata\\local\\temp\\tmprdhtvl\\tmp18db_h' target='_blank'>tmp18db_h</a><br>\n```\n\nNote that the last slash in the href changes - actual has a forward slash, expected a backslash.\n\nPing @gregcaporaso, who added those classes.\n\nExample ShiningPanda failure at https://jenkins.shiningpanda.com/ipython/job/ipython-win-py27/lastBuild/console\n", "commits": [{"node_id": "MDY6Q29tbWl0NTUxNTExODozMWZkZDJjZjc2YWIzNjJiODJjZTEzNmVjODdhMGZhOTg3MzZkNjhi", "commit_message": "fix for issue #2732\n\nall occurrences of '/' were replaced with os.sep. This should address issues with broken links on Windows, but I don't have access to a Windows machine to test this. Can someone with a Windows machine please test before merging?", "commit_timestamp": "2013-01-11T21:09:49Z", "files": ["IPython/lib/display.py"]}, {"node_id": "MDY6Q29tbWl0NTUxNTExODowZDI0MDgxMjU0NTY5ZGYyMWQ5ZDMwMThhOWNjMWEzNGI0OTM1NzVl", "commit_message": "this should address the failure in #2732\n\ni am still very concerned that I can't test this on windows - I'm not used to developing for windows, so not sure that these links will work even if the test passes on windows.\n\nis there a good AWS AMI to use for windows testing? i can run this in my own AWS account.", "commit_timestamp": "2013-01-15T02:53:07Z", "files": ["IPython/lib/display.py", "IPython/lib/tests/test_display.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmU4ZTZkNDgyYTQzMjEzNTU2MWI5OTlmMTU2NWZjMjNjMzg5ZjYxNGE=", "commit_message": "Merge pull request #2844 from gregcaporaso/issue-2732\n\nthis should address the failure in #2732", "commit_timestamp": "2013-01-27T00:48:57Z", "files": ["IPython/lib/display.py", "IPython/lib/tests/test_display.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzoxNDU2NzQ3MzE1Y2E5YWVlN2IyZTcxNmQ4ZTA2NzhjNzUwOTQ0N2Vk", "commit_message": "this should address the failure in #2732\n\ni am still very concerned that I can't test this on windows - I'm not used to developing for windows, so not sure that these links will work even if the test passes on windows.\n\nis there a good AWS AMI to use for windows testing? i can run this in my own AWS account.", "commit_timestamp": "2013-01-15T02:53:07Z", "files": ["IPython/lib/display.py", "IPython/lib/tests/test_display.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzphYWYzOTc1ZTYwZTkyNDc2MGI5NzJkN2NlMGE0ODcxZjIzMWMzODFl", "commit_message": "Merge pull request #2844 from gregcaporaso/issue-2732\n\nthis should address the failure in #2732", "commit_timestamp": "2013-01-27T00:48:57Z", "files": ["IPython/lib/display.py", "IPython/lib/tests/test_display.py"]}], "labels": ["windows", "bug"], "created_at": "2013-01-02T15:33:43Z", "closed_at": "2013-01-29T10:53:51Z", "method": ["label"]}
{"issue_number": 2727, "title": "%run -m doesn't support relative imports", "body": "I'm trying to use `%run -m` to run modules within some packages, but it doesn't work quite like `python -m`: it doesn't support relative imports.\n\nFor example, I have the following two files:\n- ./foo/**init**.py\n  \n  ```\n  x = 1\n  ```\n- ./foo/bar.py\n  \n  ```\n  from . import x\n  print x\n  ```\n\nWith `python -m foo.bar` or `ipython -m foo.bar`  the output is `x`. With `%run`, however:\n\n```\n>>> run -m test.bar\nTraceback (most recent call last):\n  File \"/Library/Python/2.7/site-packages/IPython/utils/py3compat.py\", line 179, in execfile\n    __builtin__.execfile(filename, *where)\n  File \"/private/tmp/test/bar.py\", line 1, in <module>\n    from . import x\nValueError: Attempted relative import in non-package\n```\n", "commits": [{"node_id": "MDY6Q29tbWl0Mzk4ODI3MDpjZWQ1MWI5ZGVjY2FmZTBkM2IxODAwZDU2ZjJmYjhiMWFkMzEwYjkw", "commit_message": "Test for #2727 (%run -m doesn't support relative imports)\n\ntest_run_submodule_with_relative_import fails.", "commit_timestamp": "2013-03-23T18:39:55Z", "files": ["IPython/core/tests/test_run.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjkwODdiYjk2M2I0YjFjYTc5MmFmZmRhNGRlNWYzZDhiZmVlZmViMWE=", "commit_message": "Merge pull request #3066 from tkf/run-module\n\nAdd support for relative import to %run -m (fixes #2727)", "commit_timestamp": "2013-05-03T21:28:07Z", "files": ["IPython/core/magics/execution.py", "IPython/core/tests/test_run.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo4ZTU5NWYyZmY0NTQxZTUyYTA4ODYyMmU4ZjZhMjVkYTJkZjY2ODky", "commit_message": "Test for #2727 (%run -m doesn't support relative imports)\n\ntest_run_submodule_with_relative_import fails.", "commit_timestamp": "2013-03-23T18:39:55Z", "files": ["IPython/core/tests/test_run.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo1ODkyNzM0YzA0MTBjMzU0MGM3ZThhM2Q2MWJmNjliMjNmOWEzNWUz", "commit_message": "Merge pull request #3066 from tkf/run-module\n\nAdd support for relative import to %run -m (fixes #2727)", "commit_timestamp": "2013-05-03T21:28:07Z", "files": ["IPython/core/magics/execution.py", "IPython/core/tests/test_run.py"]}], "labels": ["bug"], "created_at": "2012-12-29T18:01:01Z", "closed_at": "2013-05-03T21:28:08Z", "method": ["label", "regex"]}
{"issue_number": 2722, "title": "IPC transport option not taking effect ?", "body": "Haven't been able to set IPC as transport neither from `--transport` option or `c.IPKernelApp.transport` python config file, as `tcp` is always used.\n\nBeen able to force the value on the call stack and use it successfully. Took a look at the code with latest master and ran it through a debugger but wasn't able to figure the configuration system completely or i would had gladly send a patch after confirmation of the issue.\n\nSuspect i can be an issue around the kernel manager factory around: \n\nhttps://github.com/ipython/ipython/blob/master/IPython/frontend/html/notebook/kernelmanager.py#L84\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU4NTE4OjhjMTIzNmM0OGQ0NjM1YjAzMTY1MjgwZTg4MTk0MmI4MjM3NzkyMjM=", "commit_message": "Merge pull request #2811 from minrk/ipc_defaults\n\nStill more KernelManager cleanup\r\n\r\nFinish up some more work from #2775\r\n\r\ncloses #2722\r\n\r\n- [x] ip/transport configurables only live on KernelManager objects, not ConsoleApp\r\n- [x] fix default ipc paths in `ipython kernel` and `ipython notebook` cases\r\n- [x] fix ipc file cleanup in a few more cases\r\n- [x] add `--transport` alias for all appropriate entry points", "commit_timestamp": "2013-01-24T19:58:24Z", "files": ["IPython/frontend/consoleapp.py", "IPython/frontend/html/notebook/notebookapp.py", "IPython/frontend/qt/console/qtconsoleapp.py", "IPython/zmq/heartbeat.py", "IPython/zmq/kernelapp.py", "IPython/zmq/kernelmanager.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzowZWE4NGZkZDhjZThmNzdlYTk2NjM5OWRmNDdjMjBlZTQ0MmI1ZDVk", "commit_message": "Merge pull request #2811 from minrk/ipc_defaults\n\nStill more KernelManager cleanup\r\n\r\nFinish up some more work from #2775\r\n\r\ncloses #2722\r\n\r\n- [x] ip/transport configurables only live on KernelManager objects, not ConsoleApp\r\n- [x] fix default ipc paths in `ipython kernel` and `ipython notebook` cases\r\n- [x] fix ipc file cleanup in a few more cases\r\n- [x] add `--transport` alias for all appropriate entry points", "commit_timestamp": "2013-01-24T19:58:24Z", "files": ["IPython/frontend/consoleapp.py", "IPython/frontend/html/notebook/notebookapp.py", "IPython/frontend/qt/console/qtconsoleapp.py", "IPython/zmq/heartbeat.py", "IPython/zmq/kernelapp.py", "IPython/zmq/kernelmanager.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjhjMTIzNmM0OGQ0NjM1YjAzMTY1MjgwZTg4MTk0MmI4MjM3NzkyMjM=", "commit_message": "Merge pull request #2811 from minrk/ipc_defaults\n\nStill more KernelManager cleanup\r\n\r\nFinish up some more work from #2775\r\n\r\ncloses #2722\r\n\r\n- [x] ip/transport configurables only live on KernelManager objects, not ConsoleApp\r\n- [x] fix default ipc paths in `ipython kernel` and `ipython notebook` cases\r\n- [x] fix ipc file cleanup in a few more cases\r\n- [x] add `--transport` alias for all appropriate entry points", "commit_timestamp": "2013-01-24T19:58:24Z", "files": ["IPython/frontend/consoleapp.py", "IPython/frontend/html/notebook/notebookapp.py", "IPython/frontend/qt/console/qtconsoleapp.py", "IPython/zmq/heartbeat.py", "IPython/zmq/kernelapp.py", "IPython/zmq/kernelmanager.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjhjMTIzNmM0OGQ0NjM1YjAzMTY1MjgwZTg4MTk0MmI4MjM3NzkyMjM=", "commit_message": "Merge pull request #2811 from minrk/ipc_defaults\n\nStill more KernelManager cleanup\r\n\r\nFinish up some more work from #2775\r\n\r\ncloses #2722\r\n\r\n- [x] ip/transport configurables only live on KernelManager objects, not ConsoleApp\r\n- [x] fix default ipc paths in `ipython kernel` and `ipython notebook` cases\r\n- [x] fix ipc file cleanup in a few more cases\r\n- [x] add `--transport` alias for all appropriate entry points", "commit_timestamp": "2013-01-24T19:58:24Z", "files": ["IPython/frontend/consoleapp.py", "IPython/frontend/html/notebook/notebookapp.py", "IPython/frontend/qt/console/qtconsoleapp.py", "IPython/zmq/heartbeat.py", "IPython/zmq/kernelapp.py", "IPython/zmq/kernelmanager.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzowZWE4NGZkZDhjZThmNzdlYTk2NjM5OWRmNDdjMjBlZTQ0MmI1ZDVk", "commit_message": "Merge pull request #2811 from minrk/ipc_defaults\n\nStill more KernelManager cleanup\r\n\r\nFinish up some more work from #2775\r\n\r\ncloses #2722\r\n\r\n- [x] ip/transport configurables only live on KernelManager objects, not ConsoleApp\r\n- [x] fix default ipc paths in `ipython kernel` and `ipython notebook` cases\r\n- [x] fix ipc file cleanup in a few more cases\r\n- [x] add `--transport` alias for all appropriate entry points", "commit_timestamp": "2013-01-24T19:58:24Z", "files": ["IPython/frontend/consoleapp.py", "IPython/frontend/html/notebook/notebookapp.py", "IPython/frontend/qt/console/qtconsoleapp.py", "IPython/zmq/heartbeat.py", "IPython/zmq/kernelapp.py", "IPython/zmq/kernelmanager.py"]}], "labels": [], "created_at": "2012-12-26T16:05:16Z", "closed_at": "2013-01-24T19:58:26Z", "linked_pr_number": [2722], "method": ["regex"]}
{"issue_number": 2721, "title": "dreload kills ipython when it hits zmq", "body": "If I try to dreload anything, it eventually hits zmq and drops me out of ipython:\n\n```\nReloading zmq.core.zmq\nERROR: AttributeError: 'builtin_function_or_method' object has no attribute '__all__' [zmq.core]\nCustom TB Handler failed, unregistering\nTraceback (most recent call last):\n  File \"/Users/adam/virtual-python/bin/ipython\", line 7, in <module>\n    launch_new_instance()\n  File \"/Users/adam/virtual-python/lib/python2.7/site-packages/IPython/frontend/terminal/ipapp.py\", line 389, in launch_new_instance\n    app.start()\n  File \"/Users/adam/virtual-python/lib/python2.7/site-packages/IPython/frontend/terminal/ipapp.py\", line 363, in start\n    self.shell.mainloop()\n  File \"/Users/adam/virtual-python/lib/python2.7/site-packages/IPython/frontend/terminal/interactiveshell.py\", line 468, in mainloop\n    self.interact(display_banner=display_banner)\n  File \"/Users/adam/virtual-python/lib/python2.7/site-packages/IPython/frontend/terminal/interactiveshell.py\", line 587, in interact\n    self.run_cell(source_raw, store_history=True)\n  File \"/Users/adam/virtual-python/lib/python2.7/site-packages/IPython/core/interactiveshell.py\", line 2625, in run_cell\n    interactivity=interactivity)\n  File \"/Users/adam/virtual-python/lib/python2.7/site-packages/IPython/core/interactiveshell.py\", line 2746, in run_ast_nodes\n    self.showtraceback()\n  File \"/Users/adam/virtual-python/lib/python2.7/site-packages/IPython/core/interactiveshell.py\", line 1747, in showtraceback\n    value, tb, tb_offset=tb_offset)\n  File \"/Users/adam/virtual-python/lib/python2.7/site-packages/IPython/core/ultratb.py\", line 1173, in structured_traceback\n    self, etype, value, tb, tb_offset, context)\nTypeError: unbound method structured_traceback() must be called with FormattedTB instance as first argument (got AutoFormattedTB instance instead)\n\nIf you suspect this is an IPython bug, please report it at:\n    https://github.com/ipython/ipython/issues\nor send an email to the mailing list at ipython-dev@scipy.org\n\nYou can print a more detailed traceback right now with \"%tb\", or use \"%debug\"\nto interactively debug it.\n\nExtra-detailed tracebacks for bug-reporting purposes can be enabled via:\n    c.Application.verbose_crash=True\n```\n\n(this occurs with the latest - i.e. Dec 25 2012 - dev version)\n", "commits": [{"node_id": "MDY6Q29tbWl0NzU0NjQxOjU3YzZmNmYyMDczYjMxZGNlNzRjODg3MmFiMWFjYzA2ZTU0NmIzODI=", "commit_message": "avoid degenerate name at zmq.core.device\n\nzmq.core.device ends up pointing to zmq.core.device.device,\nwhich causes some confusion in tools like reload.\n\nrepro:  `reload(zmq.core)`\n\nSolution: rename *module* `zmq.core._device`, so the name is not degenerate, and zmq.core.device always refers to the function.\n\nSee ipython/ipython#2721", "commit_timestamp": "2012-12-26T00:46:20Z", "files": ["setup.py", "zmq/core/__init__.py"]}], "labels": [], "created_at": "2012-12-25T22:05:29Z", "closed_at": "2013-01-19T01:31:29Z", "method": ["regex"]}
{"issue_number": 2720, "title": "base_url and static path", "body": "Static path in template does not use the base_project_url.\n\nWhich seem to work, but tornado is still serving static resources in `/static/` instead of `/$base_url/static`\n\nI will promote this to high as this prevent running ipython in parallel with other webapp. \n", "commits": [{"node_id": "MDY6Q29tbWl0NjU5NDQ2OmQwNWE5YTRmZGY1M2M1Yzc1OTZhNjEwZmM2Y2U2MDZhNTNmOWIwOTU=", "commit_message": "fix local mathjax with custom base_project_url\n\ncloses #2720", "commit_timestamp": "2013-07-04T00:34:00Z", "files": ["IPython/html/notebookapp.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzpiMDU1YjJkZDdhZmMxMmVkNjRjYjNmZjAyN2U1NjJkOGEwZDhiMDgy", "commit_message": "fix local mathjax with custom base_project_url\n\ncloses #2720", "commit_timestamp": "2013-07-04T00:34:00Z", "files": ["IPython/html/notebookapp.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjRlN2I4ZWIzMDFlMTljOTljMzk2NDYxMWQxNDAyM2VhNDgyNjEyZmQ=", "commit_message": "Merge pull request #3528 from minrk/staticbase\n\nfix local mathjax with custom base_project_url", "commit_timestamp": "2013-07-04T09:24:34Z", "files": ["IPython/html/notebookapp.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjRlN2I4ZWIzMDFlMTljOTljMzk2NDYxMWQxNDAyM2VhNDgyNjEyZmQ=", "commit_message": "Merge pull request #3528 from minrk/staticbase\n\nfix local mathjax with custom base_project_url", "commit_timestamp": "2013-07-04T09:24:34Z", "files": ["IPython/html/notebookapp.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo1Njg4NTk2MTIzOTNjN2RiZDQ0ZGU2NjU0YjAxOTI3YmY0YjlhNDg5", "commit_message": "Merge pull request #3528 from minrk/staticbase\n\nfix local mathjax with custom base_project_url", "commit_timestamp": "2013-07-04T09:24:34Z", "files": ["IPython/html/notebookapp.py"]}], "labels": ["bug", "notebook", "regression"], "created_at": "2012-12-25T17:29:48Z", "closed_at": "2013-07-04T09:24:34Z", "linked_pr_number": [2720], "method": ["label"]}
{"issue_number": 2709, "title": "Cython -la doesn't work", "body": "It's parsed as -l instead.\n\n``` python\n    @magic_arguments.argument(\n        '-la', '--link-args', action='append', default=[],\n        help=\"Extra flags to pass to linker via the `extra_link_args` \"\n             \"Extension flag (can be specified  multiple times).\"\n    )\n    @magic_arguments.argument(\n        '-l', '--lib', action='append', default=[],\n        help=\"Add a library to link the extension against (can be specified \"\n             \"multiple times).\"\n    )\n```\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU5NDQ2OjFjYmE1Zjk3NzU2Y2FmMjI4NTE1YjEyMjU4OWIwM2FkNzA2ZDZmZDA=", "commit_message": "remove nonfunctional `-la` short arg in cython magic\n\nshort flags only allow one letter, so `-la` is the same as `-l`,\nwhich is already taken.\n\ncloses #2709", "commit_timestamp": "2013-01-19T05:42:40Z", "files": ["IPython/extensions/cythonmagic.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjFjYmE1Zjk3NzU2Y2FmMjI4NTE1YjEyMjU4OWIwM2FkNzA2ZDZmZDA=", "commit_message": "remove nonfunctional `-la` short arg in cython magic\n\nshort flags only allow one letter, so `-la` is the same as `-l`,\nwhich is already taken.\n\ncloses #2709", "commit_timestamp": "2013-01-19T05:42:40Z", "files": ["IPython/extensions/cythonmagic.py"]}, {"node_id": "MDY6Q29tbWl0NjU5NDQ2OmE2MmE0OWEyMzAxN2UxYjY3YmFhN2M1MjVhNmM2YTRmNGI0MGMzZDA=", "commit_message": "remove nonfunctional `-la` short arg in cython magic\n\nshort flags only allow one letter, so `-la` is the same as `-l`,\nwhich is already taken.\n\ncloses #2709", "commit_timestamp": "2013-01-25T21:27:32Z", "files": ["IPython/extensions/cythonmagic.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzpmZGVmMWUzOGU5YTk4ZTQ4YjRmOTMyZDc1NTliM2RkMjk0N2JiYWNj", "commit_message": "remove nonfunctional `-la` short arg in cython magic\n\nshort flags only allow one letter, so `-la` is the same as `-l`,\nwhich is already taken.\n\ncloses #2709", "commit_timestamp": "2013-01-19T05:42:40Z", "files": ["IPython/extensions/cythonmagic.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjE0NWE2NGYwMjY1OWExODY2MjYyZDU5MzE5MDJkMDI5Y2YzMDMzNDc=", "commit_message": "Merge pull request #2812 from minrk/la\n\nremove nonfunctional `-la` short arg in cython magic", "commit_timestamp": "2013-01-19T07:15:11Z", "files": ["IPython/extensions/cythonmagic.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjE0NWE2NGYwMjY1OWExODY2MjYyZDU5MzE5MDJkMDI5Y2YzMDMzNDc=", "commit_message": "Merge pull request #2812 from minrk/la\n\nremove nonfunctional `-la` short arg in cython magic", "commit_timestamp": "2013-01-19T07:15:11Z", "files": ["IPython/extensions/cythonmagic.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzpiOWYyMDQ0NDcyMzk5MGM3ODFiNjZkNTE1NmU3MjQzYWU1MzVkYWUy", "commit_message": "Merge pull request #2812 from minrk/la\n\nremove nonfunctional `-la` short arg in cython magic", "commit_timestamp": "2013-01-19T07:15:11Z", "files": ["IPython/extensions/cythonmagic.py"]}], "labels": ["documentation", "bug"], "created_at": "2012-12-20T07:00:31Z", "closed_at": "2013-01-19T07:15:12Z", "linked_pr_number": [2709], "method": ["label", "regex"]}
{"issue_number": 2702, "title": "frozen setup: permission denied for default ipython_dir", "body": "Ipython's embedded shell is creating its configuration directory in `../.ipython` in frozen setups. When the directory is not writeable (such as if the frozen code was in `c:/Program\\ Files/app/`, then `c:/Program\\ Files/.ipython` fails to be created by non-admin), ipython fails with `WindowsError`. This case should be handled more gracefully - e.g. by doing without configuration directory.\n\nA workaround is to set IPYTHONDIR to something writeable (in my case, `expanduser('~/.ipython')`) before constructing the embedded shell. \n", "commits": [{"node_id": "MDY6Q29tbWl0NjU5NDQ2OjI3YTc0MWY0ZGNlMjYzZjk4ZjEzNWUzMWE0NjUyYTBlOWQzZDIwZDg=", "commit_message": "remove special-case in get_home_dir for frozen dists\n\ncloses #2702", "commit_timestamp": "2013-07-17T22:51:53Z", "files": ["IPython/utils/path.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzozNGI5MDZkMWZjY2ZiMTZmZTc0ZWIwM2UzNmNlYjI4NjJmMzFkYTY1", "commit_message": "remove special-case in get_home_dir for frozen dists\n\ncloses #2702", "commit_timestamp": "2013-07-17T22:51:53Z", "files": ["IPython/utils/path.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjliMzNlYjUwZjc0ZGQ2NGJhMWYyYzI3ODY0NjBlMDI5ZDI1NmZlNjI=", "commit_message": "Merge pull request #3677 from minrk/nofreeze\n\nremove special-case in get_home_dir for frozen dists\r\n\r\nNot needed anymore.", "commit_timestamp": "2013-07-18T15:54:26Z", "files": ["IPython/utils/path.py", "IPython/utils/tests/test_path.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjliMzNlYjUwZjc0ZGQ2NGJhMWYyYzI3ODY0NjBlMDI5ZDI1NmZlNjI=", "commit_message": "Merge pull request #3677 from minrk/nofreeze\n\nremove special-case in get_home_dir for frozen dists\r\n\r\nNot needed anymore.", "commit_timestamp": "2013-07-18T15:54:26Z", "files": ["IPython/utils/path.py", "IPython/utils/tests/test_path.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzpkNjI3YTMxMTM0YmQ4NjFiNWU5ZGNlZmNiNzM2MGRhMTZjZWMxYzYy", "commit_message": "Merge pull request #3677 from minrk/nofreeze\n\nremove special-case in get_home_dir for frozen dists\r\n\r\nNot needed anymore.", "commit_timestamp": "2013-07-18T15:54:26Z", "files": ["IPython/utils/path.py", "IPython/utils/tests/test_path.py"]}], "labels": ["windows", "bug"], "created_at": "2012-12-18T09:00:24Z", "closed_at": "2013-07-18T15:54:27Z", "linked_pr_number": [2702], "method": ["label", "regex"]}
{"issue_number": 2684, "title": "pretty print broken for types created with PyType_FromSpec", "body": "The pretty print system breaks for types created using [PyType_FromSpec](http://docs.python.org/dev/c-api/type.html#PyType_FromSpec), as the `__module__` attribute is not accessible.  For a demo, use the `xxlimited` module which should probably be installed in your Python 3 distribution.\n\nTranscript follows:\n\n```\n$ ipy3\nPython 3.2.3 (default, Oct 19 2012, 20:10:41) \nType \"copyright\", \"credits\" or \"license\" for more information.\n\nIPython 0.14.dev -- An enhanced Interactive Python.\n?         -> Introduction and overview of IPython's features.\n%quickref -> Quick reference.\nhelp      -> Python's own help system.\nobject?   -> Details about 'object', use 'object??' for extra details.\n\nIn [1]: import xxlimited\n\nIn [2]: type(xxlimited.Null)\nOut[2]: builtins.type\n\nIn [3]: xxlimited.Null\nOut[3]: ---------------------------------------------------------------------------\nAttributeError                            Traceback (most recent call last)\n<ipython-input-3-de3f08f6c91b> in <module>()\n----> 1 xxlimited.Null\n\n/home/bfroehle/src/ipython/IPython/core/displayhook.py in __call__(self, result)\n    240             self.start_displayhook()\n    241             self.write_output_prompt()\n--> 242             format_dict = self.compute_format_data(result)\n    243             self.write_format_data(format_dict)\n    244             self.update_user_ns(result)\n\n/home/bfroehle/src/ipython/IPython/core/displayhook.py in compute_format_data(self, result)\n    152             MIME type representation of the object.\n    153         \"\"\"\n--> 154         return self.shell.display_formatter.format(result)\n    155 \n    156     def write_format_data(self, format_dict):\n\n/home/bfroehle/src/ipython/IPython/core/formatters.py in format(self, obj, include, exclude)\n    128                     continue\n    129             try:\n--> 130                 data = formatter(obj)\n    131             except:\n    132                 # FIXME: log the exception\n\n/home/bfroehle/src/ipython/IPython/core/formatters.py in __call__(self, obj)\n    448                 singleton_pprinters=self.singleton_printers,\n    449                 type_pprinters=self.type_printers,\n--> 450                 deferred_pprinters=self.deferred_printers)\n    451             printer.pretty(obj)\n    452             printer.flush()\n\n/home/bfroehle/src/ipython/IPython/lib/pretty.py in pretty(self, obj)\n    346                     # printer registered in self.type_pprinters\n    347                     return self.type_pprinters[cls](obj, self, cycle)\n--> 348                 else:\n    349                     # deferred printer\n    350                     printer = self._in_deferred_types(cls)\n\n/home/bfroehle/src/ipython/IPython/lib/pretty.py in _type_pprint(obj, p, cycle)\n    606     \"\"\"The pprint for classes and types.\"\"\"\n    607     if obj.__module__ in ('__builtin__', 'exceptions'):\n--> 608         name = obj.__name__\n    609     else:\n    610         name = obj.__module__ + '.' + obj.__name__\n\nAttributeError: __module__\n```\n\nPlease ignore the fact that the traceback line numbers are off by one.. this is a side effect of my [rt2to3](https://github.com/bfroehle/rt2to3) setup.\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU4NTE4OjliMTE1MjM0MzE2YjFjODIyZmM2YmM1NWRmZjZlZDNhMmNhZjY4OTQ=", "commit_message": "Fix pretty print of types when `__module__` is not available.\n\nIn Python 3, heap allocated types -- for example those created using\nPyType_FromSpec -- lack the `__module__` attribute.\n\nCloses #2684", "commit_timestamp": "2012-12-15T00:44:21Z", "files": ["IPython/lib/pretty.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmEyZjNhY2VlMGJmOGE0ZDlmN2IwZWQ5MTIwNWFlZmQ0YjE3NDcyZWU=", "commit_message": "Add test for gh-2684.", "commit_timestamp": "2012-12-16T22:23:21Z", "files": ["IPython/lib/tests/test_pretty.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjJjODI5MTk5YTRiZjJmNGU5MmFhMDRhOGY5NzQyODc0NWM1YzJjYTI=", "commit_message": "Backport PR #2685: Fix pretty print of types when `__module__` is not available.\n\nIn Python 3, heap allocated types -- for example those created using\nPyType_FromSpec -- lack the `__module__` attribute.\n\nCloses #2684", "commit_timestamp": "2013-03-04T23:28:08Z", "files": ["IPython/lib/pretty.py", "IPython/lib/tests/test_pretty.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzpmOThjNWM3NzBkMjQ5NDVlZTI3ZDkyOWFiNzc2MmIyNjYwZDgzNjI1", "commit_message": "Fix pretty print of types when `__module__` is not available.\n\nIn Python 3, heap allocated types -- for example those created using\nPyType_FromSpec -- lack the `__module__` attribute.\n\nCloses #2684", "commit_timestamp": "2012-12-15T00:44:21Z", "files": ["IPython/lib/pretty.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzpiOGZjYmVkZTA0YTg3NjFjYWVmYTQzYjg3OTgxODBmMWJhODliNjE4", "commit_message": "Add test for gh-2684.", "commit_timestamp": "2012-12-16T22:23:21Z", "files": ["IPython/lib/tests/test_pretty.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmJiMmQzNWI2YTA4YTE0NjI3MWY3OTFlZGJlNmIxZGI0ZDdkNDFlYjY=", "commit_message": "Merge pull request #2685 from bfroehle/pretty_print_heap_type\n\nFix pretty print of types when `__module__` is not available.", "commit_timestamp": "2012-12-16T23:23:53Z", "files": ["IPython/lib/pretty.py", "IPython/lib/tests/test_pretty.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmJiMmQzNWI2YTA4YTE0NjI3MWY3OTFlZGJlNmIxZGI0ZDdkNDFlYjY=", "commit_message": "Merge pull request #2685 from bfroehle/pretty_print_heap_type\n\nFix pretty print of types when `__module__` is not available.", "commit_timestamp": "2012-12-16T23:23:53Z", "files": ["IPython/lib/pretty.py", "IPython/lib/tests/test_pretty.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjJjODI5MTk5YTRiZjJmNGU5MmFhMDRhOGY5NzQyODc0NWM1YzJjYTI=", "commit_message": "Backport PR #2685: Fix pretty print of types when `__module__` is not available.\n\nIn Python 3, heap allocated types -- for example those created using\nPyType_FromSpec -- lack the `__module__` attribute.\n\nCloses #2684", "commit_timestamp": "2013-03-04T23:28:08Z", "files": ["IPython/lib/pretty.py", "IPython/lib/tests/test_pretty.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzozNjcxOWFkYWQwZjgyYjIwYWI5MjcwMTBjMjQzNDVjM2NmOGExMDRk", "commit_message": "Merge pull request #2685 from bfroehle/pretty_print_heap_type\n\nFix pretty print of types when `__module__` is not available.", "commit_timestamp": "2012-12-16T23:23:53Z", "files": ["IPython/lib/pretty.py", "IPython/lib/tests/test_pretty.py"]}], "labels": ["bug"], "created_at": "2012-12-15T00:22:15Z", "closed_at": "2012-12-16T23:23:54Z", "linked_pr_number": [2684], "method": ["label", "regex"]}
{"issue_number": 2660, "title": "Certain arguments (-h, --help, --version) never passed to scripts run with ipython", "body": "I'd like to run a Python script with IPython that has its own functionality for the -h and --help arguments  (i.e. shows its own help message).  That is, I want to say:\n\nipython my_script.py -- -h\n\nand get my_script.py's help message. However, I get IPython's help here.\n\nIPython's docs say I can give a bare (--) argument as I did above to indicate that subsequent arguments go to the script being run, not to IPython. This works for all of IPython's arguments, but not -h, --help, or --version.\n\nThe bug is in parse_command_line() in config/application.py.\n\nI suggest modifying that function so it ignores --help/-h/--version arguments that come after a bare '--' argument. Happy to provide a patch / pull request if one will be accepted.\n\nIt seems someone else has also hit this recently:\n\nhttp://grokbase.com/t/scipy.org/ipython-user/12b9gzn92y/arguments-in-ipython-scripts\n\nThanks!\n\nTim\n\nDetails on reproducing the bug:\n\n$ cat ex.py \n    import sys\n    print sys.argv\n\n$ ipython --version\n0.13.1\n\n$ ipython ex.py -- -h\n# \n#  IPython\n# Tools for Interactive Computing in Python\n\n... rest of IPython help...\n", "commits": [{"node_id": "MDY6Q29tbWl0NzA0NTA0OTo1ZDkzYjczOTcwYjZiYTE0MWQ1NTVlNDk2ZDZkOWQ3NjY1MWVkYjcy", "commit_message": "Fix issue #2660. Help (-h --help --help-all) and version (--version -V)\narguments that appear after a bare '--' argument are passed to the script\nIPython is running (like other arguments), instead of causing IPython itself to\nwrite out help / version info.", "commit_timestamp": "2012-12-07T00:39:01Z", "files": ["IPython/config/application.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjU5MWU5YjMyM2E0YzE4ZDA3NjU3YTkwMzc2NWY5ZWQ0YjFkZjIzM2I=", "commit_message": "Merge pull request #2663 from timodonnell/dev/timodonnell/bug/2660\n\nFix issue #2660: parsing of help and version arguments", "commit_timestamp": "2012-12-07T21:15:29Z", "files": ["IPython/config/application.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmUxZDA1N2QwY2QwYjg0YTU1ZWRlZDE4OTkyMDdlMWY4YTFjNzU4OWI=", "commit_message": "Backport PR #2663: Fix issue #2660: parsing of help and version arguments\n\nHelp (-h --help --help-all) and version (--version -V) arguments that appear after a bare '--' argument are passed to the script IPython is running (like other arguments), instead of causing IPython itself to\nwrite out help / version info.", "commit_timestamp": "2013-03-04T23:03:35Z", "files": ["IPython/config/application.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzoxNTQ0NmE0NzI2NjI3NDMxZDQzMjkyMmNmZGEwN2Y3YTEzZGU1MWIx", "commit_message": "Fix issue #2660. Help (-h --help --help-all) and version (--version -V)\narguments that appear after a bare '--' argument are passed to the script\nIPython is running (like other arguments), instead of causing IPython itself to\nwrite out help / version info.", "commit_timestamp": "2012-12-07T00:39:01Z", "files": ["IPython/config/application.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzowZTAxOWVjMDU1ODJiZTNhZjkyOGRlNzcyYWEwNTE2MDM4YzdhZTky", "commit_message": "Merge pull request #2663 from timodonnell/dev/timodonnell/bug/2660\n\nFix issue #2660: parsing of help and version arguments", "commit_timestamp": "2012-12-07T21:15:29Z", "files": ["IPython/config/application.py"]}], "labels": ["bug"], "created_at": "2012-12-06T20:58:47Z", "closed_at": "2012-12-07T21:19:08Z", "method": ["label", "regex"]}
{"issue_number": 2655, "title": "Test fails if `from __future__ import print_function` in .pythonrc.py", "body": "Running iptest.py IPython.lib fails if the user has `from __future__ import print_function` in their .pythonrc.py. One possible fix is to set PYTHONSTARTUP=\"\" in the environment before invoking a Python process in the test.\n\nThe output of the failed test is as follows:\n\n```\n...............F....................\n======================================================================\nFAIL: Test the Python runner.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/local/amcnabb/rpmbuild/BUILDROOT/ipython-0.13.1-1.fc19.x86_64/usr/lib/python2.7/site-packages/IPython/lib/tests/test_irunner.py\", line 179, in testPython\n    self._test_runner(runner,source,output)\n  File \"/local/amcnabb/rpmbuild/BUILDROOT/ipython-0.13.1-1.fc19.x86_64/usr/lib/python2.7/site-packages/IPython/lib/tests/test_irunner.py\", line 45, in _test_runner\n    self.fail(message)\nAssertionError: Mismatch in number of lines\n\nExpected:\n~~~~~~~~~\n>>> print 'hello, this is python'\nhello, this is python\n# some more code\n>>> x=1;y=2\n>>> x+y**2\n5\n>>> from math import *\n>>> cos(pi)\n-1.0\n>>> for i in range(5):\n...     print i\n...\n0\n1\n2\n3\n4\n>>> print \"that's all folks!\"\nthat's all folks!\n\nGot:\n~~~~~~~~~\n>>> print 'hello, this is python'\n  File \"<stdin>\", line 1\n    print 'hello, this is python'\n                                ^\nSyntaxError: invalid syntax\n# some more code\n>>> x=1;y=2\n>>> x+y**2\n5\n>>> from math import *\n>>> cos(pi)\n-1.0\n>>> for i in range(5):\n...     print i\n  File \"<stdin>\", line 2\n    print i\n          ^\nSyntaxError: invalid syntax\n>>> print \"that's all folks!\"\n  File \"<stdin>\", line 1\n    print \"that's all folks!\"\n                            ^\nSyntaxError: invalid syntax\n    \"\"\"Fail immediately, with the given message.\"\"\"\n>>  raise self.failureException(u'Mismatch in number of lines\\n\\nExpected:\\n~~~~~~~~~\\n>>> print \\'hello, this is python\\'\\nhello, this is python\\n# some more code\\n>>> x=1;y=2\\n>>> x+y**2\\n5\\n>>> from math import *\\n>>> cos(pi)\\n-1.0\\n>>> for i in range(5):\\n...     print i\\n...\\n0\\n1\\n2\\n3\\n4\\n>>> print \"that\\'s all folks!\"\\nthat\\'s all folks!\\n\\nGot:\\n~~~~~~~~~\\n>>> print \\'hello, this is python\\'\\n  File \"<stdin>\", line 1\\n    print \\'hello, this is python\\'\\n                                ^\\nSyntaxError: invalid syntax\\n# some more code\\n>>> x=1;y=2\\n>>> x+y**2\\n5\\n>>> from math import *\\n>>> cos(pi)\\n-1.0\\n>>> for i in range(5):\\n...     print i\\n  File \"<stdin>\", line 2\\n    print i\\n          ^\\nSyntaxError: invalid syntax\\n>>> print \"that\\'s all folks!\"\\n  File \"<stdin>\", line 1\\n    print \"that\\'s all folks!\"\\n                            ^\\nSyntaxError: invalid syntax')\n\n\n----------------------------------------------------------------------\nRan 37 tests in 6.423s\n\nFAILED (failures=1)\n```\n", "commits": [{"node_id": "MDY6Q29tbWl0MTIzNjAwMzpmNWFmYWU4M2NmNzFlNDhmN2RiMjk5MDAzNTYyNzBmNDU0NWZlOTdl", "commit_message": "Fix irunner tests when $PYTHONSTARTUP is set.\n\nCloses gh-2655", "commit_timestamp": "2012-12-05T22:57:31Z", "files": ["IPython/lib/tests/test_irunner.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmY1YWZhZTgzY2Y3MWU0OGY3ZGIyOTkwMDM1NjI3MGY0NTQ1ZmU5N2U=", "commit_message": "Fix irunner tests when $PYTHONSTARTUP is set.\n\nCloses gh-2655", "commit_timestamp": "2012-12-05T22:57:31Z", "files": ["IPython/lib/tests/test_irunner.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjM0MmYzNzQ0ZjBhOWM5ODQ4NzA5ZDM4Zjc1ODlhMmJmZDI2ZDVmYjQ=", "commit_message": "Backport PR #2656: Fix irunner tests when $PYTHONSTARTUP is set\n\nCloses gh-2655", "commit_timestamp": "2013-03-04T23:03:34Z", "files": ["IPython/lib/tests/test_irunner.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzozYmIwNDA5YTYwZmI4NTM5OThmOGE5NzY0NzExYmUzZmYzMDIzODEx", "commit_message": "Fix irunner tests when $PYTHONSTARTUP is set.\n\nCloses gh-2655", "commit_timestamp": "2012-12-05T22:57:31Z", "files": ["IPython/lib/tests/test_irunner.py"]}], "labels": [], "created_at": "2012-12-05T19:22:58Z", "closed_at": "2012-12-05T23:11:18Z", "method": ["regex"]}
{"issue_number": 2637, "title": "%paste in Python 3 on Mac doesn't work", "body": "``` py\nIn [1]: %paste\n---------------------------------------------------------------------------\nTypeError                                 Traceback (most recent call last)\n<ipython-input-1-86b9186405a3> in <module>()\n----> 1 get_ipython().magic('paste')\n\n/sw/lib/python3.3/site-packages/ipython-0.13.1-py3.3.egg/IPython/core/interactiveshell.py in magic(self, arg_s)\n   2135         magic_name, _, magic_arg_s = arg_s.partition(' ')\n   2136         magic_name = magic_name.lstrip(prefilter.ESC_MAGIC)\n-> 2137         return self.run_line_magic(magic_name, magic_arg_s)\n   2138 \n   2139     #-------------------------------------------------------------------------\n\n/sw/lib/python3.3/site-packages/ipython-0.13.1-py3.3.egg/IPython/core/interactiveshell.py in run_line_magic(self, magic_name, line)\n   2061                 args.append(sys._getframe(stack_depth).f_locals)\n   2062             with self.builtin_trap:\n-> 2063                 result = fn(*args)\n   2064             return result\n   2065 \n\n/sw/lib/python3.3/site-packages/ipython-0.13.1-py3.3.egg/IPython/frontend/terminal/interactiveshell.py in paste(self, parameter_s)\n\n/sw/lib/python3.3/site-packages/ipython-0.13.1-py3.3.egg/IPython/core/magic.py in <lambda>(f, *a, **k)\n    190     # but it's overkill for just that one bit of state.\n    191     def magic_deco(arg):\n--> 192         call = lambda f, *a, **k: f(*a, **k)\n    193 \n    194         if isinstance(arg, collections.Callable):\n\n/sw/lib/python3.3/site-packages/ipython-0.13.1-py3.3.egg/IPython/frontend/terminal/interactiveshell.py in paste(self, parameter_s)\n    270             return\n    271         try:\n--> 272             block = self.shell.hooks.clipboard_get()\n    273         except TryNext as clipboard_exc:\n    274             message = getattr(clipboard_exc, 'args')\n\n/sw/lib/python3.3/site-packages/ipython-0.13.1-py3.3.egg/IPython/core/hooks.py in __call__(self, *args, **kw)\n    136             #print \"prio\",prio,\"cmd\",cmd #dbg\n    137             try:\n--> 138                 return cmd(*args, **kw)\n    139             except TryNext as exc:\n    140                 last_exc = exc\n\n/sw/lib/python3.3/site-packages/ipython-0.13.1-py3.3.egg/IPython/core/hooks.py in clipboard_get(self)\n    227     for func in chain:\n    228         dispatcher.add(func)\n--> 229     text = dispatcher()\n    230     return text\n\n/sw/lib/python3.3/site-packages/ipython-0.13.1-py3.3.egg/IPython/core/hooks.py in __call__(self, *args, **kw)\n    136             #print \"prio\",prio,\"cmd\",cmd #dbg\n    137             try:\n--> 138                 return cmd(*args, **kw)\n    139             except TryNext as exc:\n    140                 last_exc = exc\n\n/sw/lib/python3.3/site-packages/ipython-0.13.1-py3.3.egg/IPython/lib/clipboard.py in osx_clipboard_get()\n     31     text, stderr = p.communicate()\n     32     # Text comes in with old Mac \\r line endings. Change them to \\n.\n---> 33     text = text.replace('\\r', '\\n')\n     34     return text\n     35 \n\nTypeError: expected bytes, bytearray or buffer compatible object\n```\n", "commits": [{"node_id": "MDY6Q29tbWl0MjEzNTQxMjphOGEwZjE2NzEzMjVhNzI2ODAzOWMyMmYxZjJlMTMwMjRlMTVjNjcx", "commit_message": "Fix %paste in Python 3 on Mac\n\nFixes #2637.", "commit_timestamp": "2012-12-02T23:33:14Z", "files": ["IPython/lib/clipboard.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmE4YTBmMTY3MTMyNWE3MjY4MDM5YzIyZjFmMmUxMzAyNGUxNWM2NzE=", "commit_message": "Fix %paste in Python 3 on Mac\n\nFixes #2637.", "commit_timestamp": "2012-12-02T23:33:14Z", "files": ["IPython/lib/clipboard.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjYyY2QxZjNhMTBjNWUxOWI4YjcyMTVmZmI2YjQyM2NmNjEwMjQ2OGU=", "commit_message": "Backport PR #2638: Fix %paste in Python 3 on Mac\n\nFixes #2637.", "commit_timestamp": "2013-03-04T23:03:33Z", "files": ["IPython/lib/clipboard.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzpkOGI0MjJkZGRmMDhiODk2MTQwNzllMzk2MGIzZjliNTkxMGNkOTkz", "commit_message": "Fix %paste in Python 3 on Mac\n\nFixes #2637.", "commit_timestamp": "2012-12-02T23:33:14Z", "files": ["IPython/lib/clipboard.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjQ3Y2M0ODlhYjZkNWFkNzY0YzgxYjgxYzJiYWZmZDQ0OTNmMmRjYWI=", "commit_message": "Merge pull request #2638 from asmeurer/mac-py3-paste\n\nFix %paste in Python 3 on Mac", "commit_timestamp": "2012-12-02T23:35:53Z", "files": ["IPython/lib/clipboard.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjQ3Y2M0ODlhYjZkNWFkNzY0YzgxYjgxYzJiYWZmZDQ0OTNmMmRjYWI=", "commit_message": "Merge pull request #2638 from asmeurer/mac-py3-paste\n\nFix %paste in Python 3 on Mac", "commit_timestamp": "2012-12-02T23:35:53Z", "files": ["IPython/lib/clipboard.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjYyY2QxZjNhMTBjNWUxOWI4YjcyMTVmZmI2YjQyM2NmNjEwMjQ2OGU=", "commit_message": "Backport PR #2638: Fix %paste in Python 3 on Mac\n\nFixes #2637.", "commit_timestamp": "2013-03-04T23:03:33Z", "files": ["IPython/lib/clipboard.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzplYTRiNWE4ZGFkMGU2Y2I2NzA3MGYyODRhNzVmZmQ2MjZmMTFiNGI5", "commit_message": "Merge pull request #2638 from asmeurer/mac-py3-paste\n\nFix %paste in Python 3 on Mac", "commit_timestamp": "2012-12-02T23:35:53Z", "files": ["IPython/lib/clipboard.py"]}], "labels": ["bug", "osx"], "created_at": "2012-12-02T23:26:46Z", "closed_at": "2012-12-02T23:35:55Z", "linked_pr_number": [2637], "method": ["label", "regex"]}
{"issue_number": 2581, "title": "%hist does not work when InteractiveShell.cache_size = 0", "body": "This is with ipython 0.13.1. The only lines in ipython_config.py are\n\n```\nc = get_config()\nc.InteractiveShell.cache_size = 0\n```\n\nAfter launching ipython in a terminal window, the %hist command does not work anymore:\n\n```\nIn [1]: %hist\nThis feature is only available if numbered prompts are in use.\n```\n\nThis seems to be an unnecessary restriction.\n", "commits": [{"node_id": "MDY6Q29tbWl0MTIzNjAwMzplZmViYzg5ZDA1YzU5Yzg1NDRjY2FjNzFjNWJmODczNzI0N2NiZWI5", "commit_message": "Fix displaying history when output cache is disabled.\n\nCloses gh-2581", "commit_timestamp": "2012-11-15T13:30:24Z", "files": ["IPython/core/magics/history.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmVmZWJjODlkMDVjNTljODU0NGNjYWM3MWM1YmY4NzM3MjQ3Y2JlYjk=", "commit_message": "Fix displaying history when output cache is disabled.\n\nCloses gh-2581", "commit_timestamp": "2012-11-15T13:30:24Z", "files": ["IPython/core/magics/history.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjA0N2ZiNDI3ZDU5MGI1NjE4YjBhNGE0MWUzMzk3NzQ5YjIwMjkxN2M=", "commit_message": "Merge pull request #2582 from takluyver/i2581\n\nFix displaying history when output cache is disabled.\r\n\r\nPreviously, disabling the output cache disabled all history. These were separated, but the %hist magic was left with an unnecessary check, where if the output cache was disabled, it would refuse to work.\r\n\r\nCloses gh-2581", "commit_timestamp": "2012-11-16T13:32:45Z", "files": ["IPython/core/magics/history.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmY3YTM4OWE0NzQzY2Q5MGJlNDFhYTg2MjE1OGY4NjY1NzU4OWYyMjM=", "commit_message": "Backport PR #2582: Fix displaying history when output cache is disabled.\n\nPreviously, disabling the output cache disabled all history. These were separated, but the `%hist` magic was left with an unnecessary check, where if the output cache was disabled, it would refuse to work.\n\nCloses gh-2581", "commit_timestamp": "2013-03-04T23:01:03Z", "files": ["IPython/core/magics/history.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzphNjNjZGUwZjc4YjBjNmRhZDQ2MjY5ZWE5MGU2NzFhYmVlYjc1Yjhi", "commit_message": "Fix displaying history when output cache is disabled.\n\nCloses gh-2581", "commit_timestamp": "2012-11-15T13:30:24Z", "files": ["IPython/core/magics/history.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo0NmE5NWI0ZjVlMzRhOTQyMzRlYzg1MzkxNDRiZmM3ZThhMmFiYTFi", "commit_message": "Merge pull request #2582 from takluyver/i2581\n\nFix displaying history when output cache is disabled.\r\n\r\nPreviously, disabling the output cache disabled all history. These were separated, but the %hist magic was left with an unnecessary check, where if the output cache was disabled, it would refuse to work.\r\n\r\nCloses gh-2581", "commit_timestamp": "2012-11-16T13:32:45Z", "files": ["IPython/core/magics/history.py"]}], "labels": [], "created_at": "2012-11-15T11:20:29Z", "closed_at": "2012-11-16T13:32:47Z", "method": ["regex"]}
{"issue_number": 2577, "title": "sh.py and ipython for python 3.3", "body": "Someone using sh.py with ipython ran into the following issue, and I was hoping someone with better working knowledge of ipython's internals could shed some light on what's happening: amoffat/sh/issues/97\n\nsh.py has some magic going on internally, where any attribute access on the module can resolve dynamically to a specific object.  This issue only seems to be in ipython for python 3.3, python 2.7 works fine.  Anyone have an idea of what could be happening?\n\nThanks\n", "commits": [{"node_id": "MDY6Q29tbWl0MTIzNjAwMzozYzViMTk2ZTA4MmJkNjQyMGZkYzQ5OTVlOWY5YzQ0NmYxOWRmMzhh", "commit_message": "Catch some pathological cases inside oinspect\n\nCloses gh-2577", "commit_timestamp": "2013-06-29T17:26:10Z", "files": ["IPython/core/oinspect.py", "IPython/core/tests/test_oinspect.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzowYjYzYzc3MTBhMzQ5MTFkNDIxY2I5MTY5OGQ4NDFkNDQyZDFhZjAz", "commit_message": "Catch some pathological cases inside oinspect\n\nCloses gh-2577", "commit_timestamp": "2013-06-29T17:26:10Z", "files": ["IPython/core/oinspect.py", "IPython/core/tests/test_oinspect.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmU5NWMyOTZmZmZhZDg4Zjk2ZmZlZjNhM2JmZmNmZTQwZGE1MWNlOGM=", "commit_message": "Merge pull request #3484 from takluyver/i2577\n\nCatch some pathological cases inside oinspect", "commit_timestamp": "2013-07-01T04:38:20Z", "files": ["IPython/core/oinspect.py", "IPython/core/tests/test_oinspect.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmU5NWMyOTZmZmZhZDg4Zjk2ZmZlZjNhM2JmZmNmZTQwZGE1MWNlOGM=", "commit_message": "Merge pull request #3484 from takluyver/i2577\n\nCatch some pathological cases inside oinspect", "commit_timestamp": "2013-07-01T04:38:20Z", "files": ["IPython/core/oinspect.py", "IPython/core/tests/test_oinspect.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo0ZjAzYjJjNDI5YTBhZjUzYTc5ZjMwZjQ2ZDk5ODk1YmJjZmE0ZTIx", "commit_message": "Merge pull request #3484 from takluyver/i2577\n\nCatch some pathological cases inside oinspect", "commit_timestamp": "2013-07-01T04:38:20Z", "files": ["IPython/core/oinspect.py", "IPython/core/tests/test_oinspect.py"]}], "labels": ["bug"], "created_at": "2012-11-14T06:50:36Z", "closed_at": "2013-07-01T04:38:21Z", "linked_pr_number": [2577], "method": ["label"]}
{"issue_number": 2563, "title": "core.profiledir.check_startup_dir() doesn't work inside py2exe'd installation", "body": "On Windows, I'm embedding IPython (ipython-0.13.1.py2-win32-PROPER.exe) QtConsole inside a PySide program. The embedding is done similarly as in http://stackoverflow.com/a/12375397. This works ok. However, after py2exe'ing the program as a standalone package, IPython initialization breaks:\n\n```\nTraceback (most recent call last):\n[--snip--]\nFile \"IPython\\core\\profiledir.pyc\", line 106, in check_startup_dir\nFile \"shutil.pyc\", line 116, in copy\nFile \"shutil.pyc\", line 81, in copyfile\nIOError: [Errno 2] No such file or directory: u'C:\\\\Documents and Settings\\\\User\\\\My Documents\\\\sofware\\\\dist\\\\library.zip\\\\IPython\\\\config\\\\profile\\\\README_STARTUP'\n```\n\nREADME_STARTUP file does not exist inside the library.zip, i.e. it does not get copied by the normal py2exe procedure (adding IPython, pygments and pyreadline under py2exe setup.py packages). Also, I'm not sure if `shutil` was able to copy it from there, even if it existed.\n\nAs an ugly, quick workaround, I commented out the problematic lines in `site-packages/IPython/core/profiledir.py`, lines 105-106:\n\n``` python\n    def check_startup_dir(self):\n        if not os.path.isdir(self.startup_dir):\n            os.mkdir(self.startup_dir)\n        readme = os.path.join(self.startup_dir, 'README')\n        src = os.path.join(get_ipython_package_dir(), u'config', u'profile', u'README_STARTUP')\n        #if not os.path.exists(readme):\n        #    shutil.copy(src, readme)\n```\n\nA better solution could catch IOError in `check_startup_dir()` and show a warning. Even if we managed to get the README_STARTUP in the library.zip correctly, in some cases the startup_dir can be in a directory, which we can't write. Then even the os.mkdir() would probably fail. (I'm not sure how this would affect zmq/json connectionfile saving -- I have not tested such scenario.)\n\nFull traceback:\n\n```\nTraceback (most recent call last):\n[---snip program specific stuff---]\nFile \"<string>\", line 2, in initialize\nFile \"IPython\\config\\application.pyc\", line 84, in catch_config_error\nFile \"IPython\\zmq\\ipkernel.pyc\", line 803, in initialize\nFile \"<string>\", line 2, in initialize\nFile \"IPython\\config\\application.pyc\", line 84, in catch_config_error\nFile \"IPython\\zmq\\kernelapp.pyc\", line 307, in initialize\nFile \"<string>\", line 2, in initialize\nFile \"IPython\\config\\application.pyc\", line 84, in catch_config_error\nFile \"IPython\\core\\application.pyc\", line 331, in initialize\nFile \"IPython\\core\\application.pyc\", line 245, in init_profile_dir\nFile \"IPython\\core\\profiledir.pyc\", line 207, in find_profile_dir_by_name\nFile \"IPython\\config\\configurable.pyc\", line 87, in __init__\nFile \"IPython\\utils\\traitlets.pyc\", line 421, in __init__\nFile \"IPython\\utils\\traitlets.pyc\", line 307, in __set__\nFile \"IPython\\utils\\traitlets.pyc\", line 458, in _notify_trait\nFile \"IPython\\core\\profiledir.pyc\", line 86, in _location_changed\nFile \"IPython\\utils\\traitlets.pyc\", line 307, in __set__\nFile \"IPython\\utils\\traitlets.pyc\", line 458, in _notify_trait\nFile \"IPython\\core\\profiledir.pyc\", line 98, in _startup_dir_changed\nFile \"IPython\\core\\profiledir.pyc\", line 106, in check_startup_dir\nFile \"shutil.pyc\", line 116, in copy\nFile \"shutil.pyc\", line 81, in copyfile\nIOError: [Errno 2] No such file or directory: u'C:\\\\Documents and Settings\\\\User\\\\My Documents\\\\sofware\\\\dist\\\\library.zip\\\\IPython\\\\config\\\\profile\\\\README_STARTUP'\n```\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU4NTE4OmU3YTk4YjE1MGZjN2MwODU2Mjg4OWVlMmVjMjc3MzI1M2JhNGZiMzg=", "commit_message": "Merge pull request #3212 from jusic/master\n\nfix check_startup_dir inside py2exe\r\n\r\nOn Windows inside a py2exe'd environment, README_STARTUP does not\r\nget copied into library.zip. Added a warning and a skip if\r\nthe file IPython/config/profile/README_STARTUP is missing.\r\n\r\ncloses #2563", "commit_timestamp": "2013-04-24T04:07:58Z", "files": ["IPython/core/profiledir.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzoxYTY3YjgxYzJkZjdlNDU0YzBlMjhmMWRhNjE0OTgwN2ZkZmY3NTYy", "commit_message": "Merge pull request #3212 from jusic/master\n\nfix check_startup_dir inside py2exe\r\n\r\nOn Windows inside a py2exe'd environment, README_STARTUP does not\r\nget copied into library.zip. Added a warning and a skip if\r\nthe file IPython/config/profile/README_STARTUP is missing.\r\n\r\ncloses #2563", "commit_timestamp": "2013-04-24T04:07:58Z", "files": ["IPython/core/profiledir.py"]}], "labels": ["windows", "bug"], "created_at": "2012-11-09T19:18:57Z", "closed_at": "2013-04-24T04:08:00Z", "method": ["label", "regex"]}
{"issue_number": 2555, "title": "\"import\" module completion on MacOSX", "body": "\"import\" module completion doesn't work for some modules (e.g. sqlalchemy), because in site-packages directory these modules are archived .egg files.\n\nVersion information: MacOS X Mountain Lion, python 2.7, ipython 0.13.1\n\nHere is a quick patch:\n\n``` patch\n--- IPython/core/completerlib.py    2012-10-21 03:30:53.000000000 +0300\n+++ ../completerlib.py  2012-11-07 15:14:10.000000000 +0200\n@@ -88,10 +88,13 @@\n         name, extension = os.path.splitext( path )\n         return import_re.match(path) and py3compat.isidentifier(name)\n\n-    # Now find actual path matches for packages or modules\n-    folder_list = [p for p in folder_list\n-                   if isfile(pjoin(path, p,'__init__.py'))\n-                   or is_importable_file(p) ]\n+    if path.endswith('.egg') and isfile(path):\n+        folder_list = set(p.split('/', 1)[0] for p in folder_list if is_importable_file and p.endswith('/__init__.py'))\n+    else:\n+        # Now find actual path matches for packages or modules\n+        folder_list = [p for p in folder_list\n+                       if isfile(pjoin(path, p,'__init__.py'))\n+                       or is_importable_file(p) ]\n\n     return [basename(p).split('.')[0] for p in folder_list]\n\n```\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU4NTE4OmQ1ZWQzMDk3MDZmOTg1OGY3MTY3MTY5NmM0OTcxMDZkZjg2NTdhZjM=", "commit_message": "Fix 'import '... completion for py3 & egg files.\n\nCloses #2555.", "commit_timestamp": "2012-12-17T01:52:42Z", "files": ["IPython/core/completerlib.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzplZjhhZmMwODhlNzBjM2YxNGZkMDNjOTNmM2QyNDZiMDk4ZTk2ODhm", "commit_message": "Fix 'import '... completion for py3 & egg files.\n\nCloses #2555.", "commit_timestamp": "2012-12-17T01:52:42Z", "files": ["IPython/core/completerlib.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjhkNDYwYzhiY2NhZjRjZDAxNTNkZDc0NTA0YmNjNjFjYzcxM2FlYzY=", "commit_message": "Merge pull request #2690 from bfroehle/import_egg_completion2\n\nFix 'import '... completion for py3 & egg files.", "commit_timestamp": "2012-12-19T19:19:56Z", "files": ["IPython/core/completerlib.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjhkNDYwYzhiY2NhZjRjZDAxNTNkZDc0NTA0YmNjNjFjYzcxM2FlYzY=", "commit_message": "Merge pull request #2690 from bfroehle/import_egg_completion2\n\nFix 'import '... completion for py3 & egg files.", "commit_timestamp": "2012-12-19T19:19:56Z", "files": ["IPython/core/completerlib.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzpiNDU3M2Y4ZmVjZjdhZDU2MTY5ZDQ0ZDQzM2Y2NzFmZjEyMTUwODk4", "commit_message": "Merge pull request #2690 from bfroehle/import_egg_completion2\n\nFix 'import '... completion for py3 & egg files.", "commit_timestamp": "2012-12-19T19:19:56Z", "files": ["IPython/core/completerlib.py"]}], "labels": ["bug", "tab-completion"], "created_at": "2012-11-07T13:28:05Z", "closed_at": "2012-12-19T19:19:58Z", "linked_pr_number": [2555], "method": ["label", "regex"]}
{"issue_number": 2550, "title": "Rpush magic doesn't find local variables and doesn't support comma separated lists of variables", "body": "1) The `%Rpush` line magic function in the rmagic extension doesn't support variables with local scope. For example, the code below does not work. `function1()` works, but `function2()` does not.\n\n``` python\n%load_ext rmagic\ndef function1():\n    local_var = \"this gets printed\"\n    %R -i local_var local_var = local_var\n    %R print(local_var)\n\ndef function2():\n    local_var = \"this doesn't print\"\n    %Rpush local_var\n    %R print(local_var)\n\nfunction1()\nfunction2()\n```\n\nTo view the error, see http://nbviewer.ipython.org/4027617/\n\n2) `%Rpush` doesn't let you push a bunch of local variables that are separated by commas. For example, the following code throws a `KeyError`.\n\n``` python\n%load_ext rmagic\nx, y = 1,2\n%Rpush x, y\n```\n\nThe code only works if the third line is `%Rpush x y`\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU3MDM4NjozMmI1NmNkNWI3MTdlNzE5NDNkYTM5Y2Q1NjZhYTgxYjdlNGQ5OGQ3", "commit_message": "Fixed rmagic/RPush issue #2550", "commit_timestamp": "2012-11-06T22:09:57Z", "files": ["IPython/extensions/rmagic.py"]}, {"node_id": "MDY6Q29tbWl0NjU3MDM4Njo3NjA5N2I2MTdkOTBmYTgzN2E4NmM4NDE1NTc1NzkzODM5OGY4NDcy", "commit_message": "Fix issue #2550", "commit_timestamp": "2012-12-18T00:26:13Z", "files": ["IPython/extensions/rmagic.py"]}, {"node_id": "MDY6Q29tbWl0MjkwOTI5MDozNjMyY2ZiYWRlMmUwMWNhNTJlN2UxZGQ1MzIzODAwZGNiMGI0Mjdl", "commit_message": "Fix issue #2550", "commit_timestamp": "2013-01-02T03:26:34Z", "files": ["IPython/extensions/rmagic.py"]}, {"node_id": "MDY6Q29tbWl0NjU5NDQ2OmU4ZjI0YzM4NjI1NjE3Yjg4ZTBkOGIzYTNiNzRkNzViNGE2NzczZmU=", "commit_message": "Fix issue #2550", "commit_timestamp": "2013-01-25T21:27:19Z", "files": ["IPython/extensions/rmagic.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo2NDI1YjBiYTFlN2ExNjViNTNhMDVlYzc3YzUyMjA0NDg0MzMxNzI2", "commit_message": "Fix issue #2550", "commit_timestamp": "2013-01-02T03:26:34Z", "files": ["IPython/extensions/rmagic.py"]}], "labels": [], "created_at": "2012-11-06T21:29:08Z", "closed_at": "2013-01-02T16:22:41Z", "method": ["regex"]}
{"issue_number": 2533, "title": "rmagic breaks on Windows", "body": "On Windows, whenever one executes a line of R code the kernel breaks and has to be restarted. The problem is IMHO two-fold:\n1. In [this line](https://github.com/ipython/ipython/blob/master/IPython/extensions/rmagic.py#L515) of the sources the path is just pushed into a string in R, which then interprets the delimiter of `c:\\temp` as an escape sequence (here one that indeed exists). If however it sees a sequence that does not exist, R will fail and take the kernel with it.\n2. The fact that the last part happens is another bug, but it might belong to rpy2 (it should just throw an exception instead of failing violently as it does).\n\nAs a temporary fix I convert all backslashes to forward slashes:\n\n```\nself.r('png(\"%s/Rplots%%03d.png\",%s)' % (tmpd.replace(\"\\\\\", \"/\"), png_args))\n```\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU4NTE4OjEzYmMxM2VlM2ZkZDI4ZWZiNzZhOWNkYjkxNzg5Y2QyYTljOWZlOWY=", "commit_message": "Merge pull request #2604 from filmor/master\n\nfix misinterpreted backslashes as escape-sequences by the R-interpreter.\r\n\r\nFixes #2533", "commit_timestamp": "2012-12-16T22:06:25Z", "files": ["IPython/extensions/rmagic.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzowYmVmMjFjNTg2NGRlNWJmMTVjYjMwZDhiNjMyM2ZjMjNlMmE1MzUz", "commit_message": "Merge pull request #2604 from filmor/master\n\nfix misinterpreted backslashes as escape-sequences by the R-interpreter.\r\n\r\nFixes #2533", "commit_timestamp": "2012-12-16T22:06:25Z", "files": ["IPython/extensions/rmagic.py"]}], "labels": ["bug", "notebook"], "created_at": "2012-10-30T15:25:28Z", "closed_at": "2012-12-16T22:06:26Z", "method": ["label", "regex"]}
{"issue_number": 2520, "title": "Control-C kills port forwarding", "body": "```\nIn [1]: from IPython.parallel import Client\n\nIn [2]: c = Client() # this works as expected\n\nIn [3]: <Control-C> SIGINT: Port forwarding stopped cleanly\nSIGINT: Port forwarding stopped cleanly\nSIGINT: Port forwarding stopped cleanly\nSIGINT: Port forwarding stopped cleanly\nSIGINT: Port forwarding stopped cleanly\nSIGINT: Port forwarding stopped cleanly\n\nKeyboardInterrupt\n```\n\nIt seems that pressing Control-C at the prompt propagates to ssh, killing the tunnels.\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU4NTE4OmJhODlhNzgyNjcyM2FiNDkyNTU3OTYyZjZiNzkyMmQ5ZTE5MWQzZDg=", "commit_message": "Backport PR #2526: Don't kill paramiko tunnels when receiving ^C\n\nprevents ^C from being passed along to children, bringing them down\n\ncloses #2520", "commit_timestamp": "2013-03-04T22:54:46Z", "files": ["IPython/external/ssh/tunnel.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmVjZjA2MWU2YjZhNDMzNDE1NGNlNjdlYjMyNTNjMDA0ZDRkMmMyZWE=", "commit_message": "Merge pull request #2526 from minrk/setpgrp\n\nDon't kill paramiko tunnels when receiving ^C", "commit_timestamp": "2012-11-13T10:36:52Z", "files": ["IPython/external/ssh/tunnel.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmVjZjA2MWU2YjZhNDMzNDE1NGNlNjdlYjMyNTNjMDA0ZDRkMmMyZWE=", "commit_message": "Merge pull request #2526 from minrk/setpgrp\n\nDon't kill paramiko tunnels when receiving ^C", "commit_timestamp": "2012-11-13T10:36:52Z", "files": ["IPython/external/ssh/tunnel.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmJhODlhNzgyNjcyM2FiNDkyNTU3OTYyZjZiNzkyMmQ5ZTE5MWQzZDg=", "commit_message": "Backport PR #2526: Don't kill paramiko tunnels when receiving ^C\n\nprevents ^C from being passed along to children, bringing them down\n\ncloses #2520", "commit_timestamp": "2013-03-04T22:54:46Z", "files": ["IPython/external/ssh/tunnel.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzpmYmYyNTlkNmRjN2ZkYzNlZTc2NjkxNDVkYTgwNzM0M2MwNDA1MTc1", "commit_message": "Merge pull request #2526 from minrk/setpgrp\n\nDon't kill paramiko tunnels when receiving ^C", "commit_timestamp": "2012-11-13T10:36:52Z", "files": ["IPython/external/ssh/tunnel.py"]}], "labels": ["bug", "parallel"], "created_at": "2012-10-26T03:14:37Z", "closed_at": "2013-07-04T00:25:07Z", "linked_pr_number": [2520], "method": ["label"]}
{"issue_number": 2477, "title": "Glob expansion tests fail on Windows", "body": "Both 2.7 and 3.2 are failing. See ShiningPanda output: https://jenkins.shiningpanda-ci.com/ipython/job/ipython-win-py32/30/console\n\nI'm pretty sure this was caused by the recent merge of #2165.\n", "commits": [{"node_id": "MDY6Q29tbWl0Mzk4ODI3MDpkMDQ5MDRmY2JmZWU1ZTFiMjE3MGNiZThkOGY2NzUxOWY4ZDlmOGY5", "commit_message": "Fix doctest_run_option_parser for Windows\n\nIt should fix (part of) #2477.", "commit_timestamp": "2012-10-09T14:08:02Z", "files": ["IPython/core/tests/test_run.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo4MzliYWE3YjNhYjNhMTEyMDY5OGY0YjZiNGYxZDAzNmUxZTlkMjk4", "commit_message": "Fix doctest_run_option_parser for Windows\n\nIt should fix (part of) #2477.", "commit_timestamp": "2012-10-09T14:08:02Z", "files": ["IPython/core/tests/test_run.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjhmMDBhYzVlZTk3NzdmOGIxOTJmMTY0NzlhODY2NWMxNGY5YjE4MzA=", "commit_message": "Merge pull request #2534 from tkf/windows-test-shellglob2\n\nDo not unescape backslashes in Windows (shellglob)", "commit_timestamp": "2012-11-02T11:37:26Z", "files": ["IPython/utils/path.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjhmMDBhYzVlZTk3NzdmOGIxOTJmMTY0NzlhODY2NWMxNGY5YjE4MzA=", "commit_message": "Merge pull request #2534 from tkf/windows-test-shellglob2\n\nDo not unescape backslashes in Windows (shellglob)", "commit_timestamp": "2012-11-02T11:37:26Z", "files": ["IPython/utils/path.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzphN2I0ODYzNGQ1MGQwNzAwZjUxNjA2ZjBmZWQxZmEwOWJhMTcyZmU2", "commit_message": "Merge pull request #2534 from tkf/windows-test-shellglob2\n\nDo not unescape backslashes in Windows (shellglob)", "commit_timestamp": "2012-11-02T11:37:26Z", "files": ["IPython/utils/path.py"]}], "labels": ["windows", "bug"], "created_at": "2012-10-09T08:26:42Z", "closed_at": "2013-01-20T02:08:08Z", "linked_pr_number": [2477], "method": ["label"]}
{"issue_number": 2473, "title": "Better error messages in ipengine/ipcontroller", "body": "I currently try to debug why my ipengines don't work on one maschine (on another they run fine): \n\nOn the ipengine side I get this in the logs (--log-level=DEBUG, This is from a debug run with both engine and controller on the 32bit maschine):\n\n```\n2012-10-06 17:39:39.854 [IPEngineApp] Loading url_file u'C:\\\\Users\\\\jschulz\\\\.ipython\\\\profile_test-shutup\\\\security\\\\ipcontroller-engine.json'\n2012-10-06 17:39:39.855 [IPEngineApp] Config changed:\n2012-10-06 17:39:39.855 [IPEngineApp] {'RegistrationFactory': {}, 'EngineFactory': {'url': u'tcp://127.0.0.1:52977', 'location': u'192.168.56.1', 'sshserver': u''}, 'Session': {'packer': u'json', 'unpacker': u'json', 'key': 'b2161611-8143-4b71-980e-c35d57aa1eac'}, 'IPEngineApp': {'cluster_id': u'', 'log_to_file': True, 'log_level': u'DEBUG'}, 'ProfileDir': {'location': u'C:\\\\Users\\\\jschulz\\\\.ipython\\\\profile_test-shutup'}}\n2012-10-06 17:39:39.871 [IPEngineApp] Registering with controller at tcp://127.0.0.1:52977\n2012-10-06 17:39:40.056 [IPEngineApp] Using existing profile dir: u'C:\\\\Users\\\\jschulz\\\\.ipython\\\\profile_test-shutup'\n2012-10-06 17:39:40.058 [IPEngineApp] Completed registration with id 1\n2012-10-06 17:40:50.285 [IPEngineApp] \n*** MESSAGE TYPE:apply_request***\n2012-10-06 17:40:50.285 [IPEngineApp]    Content: {}\n   --->\n\n\n```\n\nOn the controller side I see the engine registered successfully  and then sending lots of tasks (`arrived on x`) but no \"finished\" message. The controller afterwards sends the same tasks out to other engines. There is alsmost no CPU on the engine side.\n\nThe engines work on a 64bit system, the non-working engines are on 32-bit Win7. Runing the same code \"unclustered\" works on both the 32bit and 64bit platform.\n\nRunning the whole cluster on the 32 bit win7 is resulting in the same problem (see log above, I get the same log when running against the normal controller).\n\nIs there any way to get a better debug message?\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU4NTE4OjQ4MzgzNDRiODNlYTUzYjQ1MzE2ZGZmOTdlMmEzZDdjNjY4ZDY3ZmM=", "commit_message": "Merge pull request #2818 from minrk/log_exception\n\nlog user tracebacks in the kernel (INFO-level)\r\n\r\nShould make debugging errors a little less painful\r\n\r\ncloses #2473", "commit_timestamp": "2013-01-23T18:54:10Z", "files": ["IPython/zmq/ipkernel.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmI4MTE5NmVkYzg0NzliODMwNTVlMTZlMWYzMDdiZTk0MGEwNzFjYjU=", "commit_message": "Backport PR #2490: add ZMQInteractiveShell to IPEngineApp class list\n\nso it will appear in default ipengine_config.py, `--help-all`, etc.\n\nas [mentioned](https://github.com/ipython/ipython/issues/2473#issuecomment-9414837) in #2473", "commit_timestamp": "2013-03-04T22:53:48Z", "files": ["IPython/parallel/apps/ipengineapp.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzowZmQ3MWUzODJmYTdmNGI4YmI2ZjZlM2FlMDcxY2JlNTE4ZmY2MTVj", "commit_message": "Merge pull request #2818 from minrk/log_exception\n\nlog user tracebacks in the kernel (INFO-level)\r\n\r\nShould make debugging errors a little less painful\r\n\r\ncloses #2473", "commit_timestamp": "2013-01-23T18:54:10Z", "files": ["IPython/zmq/ipkernel.py"]}], "labels": ["parallel"], "created_at": "2012-10-06T15:52:46Z", "closed_at": "2013-01-23T18:54:11Z", "method": ["regex"]}
{"issue_number": 2471, "title": "_subprocess module removed in Python 3.3", "body": "In Python 3.3, there is no _subprocess, thus a couple of IPython.zmq related methods fail due missing import on Windows. The items imported were Windows specific API calls that the subprocess module used privately on Windows. The API calls are available via [pywin32](http://sourceforge.net/projects/pywin32/) (specifically from win32api, win32con and win32event modules), however that currently doesn't have a released version that works for Python 3.3, although current tip/trunk does work. Below is a patch which fixes the issue for Python 3.3 and likely works for the other versions of Python as well. The question is which of the following would be most preferable:\n1. should a dependency be added on pywin32 for just Python 3.3\n2. move away from the private _subprocess include for all versions and have pywin32 be a dependency for IPython on Windows, or\n3. find a mechanism, if possible, that removes the need for _subprocess or pywin32\n\n_There is already a dependency on pywin32, at least in some contexts (Parallel/HPC, others?), so it would seem that long-term, **2** is probably preferable._\n\n``` diff\ndiff --git a/IPython/zmq/entry_point.py b/IPython/zmq/entry_point.py\nindex dff9286..960fccb 100644\n--- a/IPython/zmq/entry_point.py\n+++ b/IPython/zmq/entry_point.py\n@@ -189,8 +189,8 @@ def base_launch_kernel(code, fname, stdin=None, stdout=None, stderr=None,\n                          creationflags=512, # CREATE_NEW_PROCESS_GROUP\n                          stdin=_stdin, stdout=_stdout, stderr=_stderr)\n         else:\n-            from _subprocess import DuplicateHandle, GetCurrentProcess, \\\n-                DUPLICATE_SAME_ACCESS\n+            from win32api import DuplicateHandle, GetCurrentProcess\n+            from win32con import DUPLICATE_SAME_ACCESS\n             pid = GetCurrentProcess()\n             handle = DuplicateHandle(pid, pid, pid, 0,\n                                      True, # Inheritable by new processes.\ndiff --git a/IPython/zmq/parentpoller.py b/IPython/zmq/parentpoller.py\nindex 5cf0b57..80f509b 100644\n--- a/IPython/zmq/parentpoller.py\n+++ b/IPython/zmq/parentpoller.py\n@@ -100,7 +100,8 @@ def send_interrupt(interrupt_handle):\n     def run(self):\n         \"\"\" Run the poll loop. This method never returns.\n         \"\"\"\n-        from _subprocess import WAIT_OBJECT_0, INFINITE\n+        from win32con import WAIT_OBJECT_0\n+        from win32event import INFINITE\n\n         # Build the list of handle to listen on.\n         handles = []\n```\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU5NDQ2OmM5MzBlZmZjN2Y1NTc2NGY0ZjdlM2I1ZTkzNGZiZTUzMDdhMDdiZDU=", "commit_message": "use new _winapi instead of removed _subprocess\n\n`_subprocess` is removed in Python 3.3, and the relevant names\nrelocated to a new `_winapi` module.\n\nref: http://bugs.python.org/issue11750\n\ncloses #2471\n\nshould be back ported to 0.13.1", "commit_timestamp": "2012-10-11T19:48:47Z", "files": ["IPython/zmq/entry_point.py", "IPython/zmq/parentpoller.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmM5MzBlZmZjN2Y1NTc2NGY0ZjdlM2I1ZTkzNGZiZTUzMDdhMDdiZDU=", "commit_message": "use new _winapi instead of removed _subprocess\n\n`_subprocess` is removed in Python 3.3, and the relevant names\nrelocated to a new `_winapi` module.\n\nref: http://bugs.python.org/issue11750\n\ncloses #2471\n\nshould be back ported to 0.13.1", "commit_timestamp": "2012-10-11T19:48:47Z", "files": ["IPython/zmq/entry_point.py", "IPython/zmq/parentpoller.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmJiZDQ0ODU2ZmY4NDRmYTZmN2ZhODFjNzk4YThiYmM5MWE4MWFkZTY=", "commit_message": "Backport PR #2479: use new _winapi instead of removed _subprocess\n\n`_subprocess` is removed in Python 3.3, and the relevant names relocated to a new `_winapi` module.\n\ncloses #2471\n\nshould be back ported to 0.13.1 because all zmq-based IPython will fail on win/py3.3 without it.\n\nref: http://bugs.python.org/issue11750", "commit_timestamp": "2012-10-11T21:50:27Z", "files": ["IPython/zmq/entry_point.py", "IPython/zmq/parentpoller.py"]}, {"node_id": "MDY6Q29tbWl0NDAwNDYwMDozODYwZTNhOTM3MTBmODIyNWNiNzE3NmRkMzcwNjgwNWYwYzJhN2Rh", "commit_message": "Backport PR #2479: use new _winapi instead of removed _subprocess\n\n`_subprocess` is removed in Python 3.3, and the relevant names relocated to a new `_winapi` module.\n\ncloses #2471\n\nshould be back ported to 0.13.1 because all zmq-based IPython will fail on win/py3.3 without it.\n\nref: http://bugs.python.org/issue11750", "commit_timestamp": "2012-10-18T15:26:41Z", "files": ["IPython/zmq/entry_point.py", "IPython/zmq/parentpoller.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo2YjczZjJhNmJkM2E2NGI0NGJmOTViYzE2NDRkZDdkZWM3NDM3YWM0", "commit_message": "use new _winapi instead of removed _subprocess\n\n`_subprocess` is removed in Python 3.3, and the relevant names\nrelocated to a new `_winapi` module.\n\nref: http://bugs.python.org/issue11750\n\ncloses #2471\n\nshould be back ported to 0.13.1", "commit_timestamp": "2012-10-11T19:48:47Z", "files": ["IPython/zmq/entry_point.py", "IPython/zmq/parentpoller.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjFiMWZjY2NlMmM0MTAzY2IyYzliODkzNmJmMGRjZmYyY2QxZWY0ZjU=", "commit_message": "Merge pull request #2479 from minrk/winapi\n\nUse new _winapi instead of removed _subprocess\r\n\r\nNew in Python 3.3, c.f. http://bugs.python.org/issue11750\r\n\r\nMaintain existing support by falling back on _subprocess if\r\n_winapi cannot be imported.", "commit_timestamp": "2012-10-11T21:47:35Z", "files": ["IPython/zmq/entry_point.py", "IPython/zmq/parentpoller.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjFiMWZjY2NlMmM0MTAzY2IyYzliODkzNmJmMGRjZmYyY2QxZWY0ZjU=", "commit_message": "Merge pull request #2479 from minrk/winapi\n\nUse new _winapi instead of removed _subprocess\r\n\r\nNew in Python 3.3, c.f. http://bugs.python.org/issue11750\r\n\r\nMaintain existing support by falling back on _subprocess if\r\n_winapi cannot be imported.", "commit_timestamp": "2012-10-11T21:47:35Z", "files": ["IPython/zmq/entry_point.py", "IPython/zmq/parentpoller.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmJiZDQ0ODU2ZmY4NDRmYTZmN2ZhODFjNzk4YThiYmM5MWE4MWFkZTY=", "commit_message": "Backport PR #2479: use new _winapi instead of removed _subprocess\n\n`_subprocess` is removed in Python 3.3, and the relevant names relocated to a new `_winapi` module.\n\ncloses #2471\n\nshould be back ported to 0.13.1 because all zmq-based IPython will fail on win/py3.3 without it.\n\nref: http://bugs.python.org/issue11750", "commit_timestamp": "2012-10-11T21:50:27Z", "files": ["IPython/zmq/entry_point.py", "IPython/zmq/parentpoller.py"]}, {"node_id": "MDY6Q29tbWl0NDAwNDYwMDozODYwZTNhOTM3MTBmODIyNWNiNzE3NmRkMzcwNjgwNWYwYzJhN2Rh", "commit_message": "Backport PR #2479: use new _winapi instead of removed _subprocess\n\n`_subprocess` is removed in Python 3.3, and the relevant names relocated to a new `_winapi` module.\n\ncloses #2471\n\nshould be back ported to 0.13.1 because all zmq-based IPython will fail on win/py3.3 without it.\n\nref: http://bugs.python.org/issue11750", "commit_timestamp": "2012-10-18T15:26:41Z", "files": ["IPython/zmq/entry_point.py", "IPython/zmq/parentpoller.py"]}, {"node_id": "MDY6Q29tbWl0MjM0Mzk1OToxMmIzNDRkMTcwMzMyYjg2MWMyZTVlNGFmNmYwYzBiMjA1NWRlYTE1", "commit_message": "Merge tag 'rel-0.13.1' into debian-01X\n\n* tag 'rel-0.13.1': (27 commits)\n  remove rc for 0.13.1 final\n  0.13.1.rc3\n  qtconsole extras_require to whatsnew\n  Backport PR #2492: add missing 'qtconsole' extras_require\n  add 2480 to whatsnew\n  Backport PR #2480: Add deprecation warnings for sympyprinting\n  PR 2384 to whatsnew\n  mark 0.13.1.rc2\n  Backport PR #2384: Adapt inline backend to changes in matplotlib\n  mark 0.13.1.rc1\n  update 0.13.1 whatsnew lists\n  Backport PR #2479: use new _winapi instead of removed _subprocess\n  Backport PR #2437: don't let log cleanup prevent engine start\n  Backport PR #2405: clarify TaskScheduler.hwm doc\n  Backport PR #2377: Fix installation of man pages in Python 3\n  start 0.13.1 whatsnew\n  Backport PR #2373: fix missing imports in core.interactiveshell\n  Backport PR #2365: fix names of notebooks for download/save\n  Backport PR #2345: Remove references to 'version' no longer in argparse. Github issue #2343.\n  Backport PR #2347: adjust division error message checking to account for Python 3\n  ...", "commit_timestamp": "2012-11-19T16:53:01Z", "files": ["IPython/core/interactiveshell.py", "IPython/core/magic_arguments.py", "IPython/core/release.py", "IPython/extensions/sympyprinting.py", "IPython/frontend/html/notebook/notebookmanager.py", "IPython/parallel/apps/baseapp.py", "IPython/zmq/entry_point.py", "IPython/zmq/parentpoller.py", "IPython/zmq/pylab/backend_inline.py", "setup.py", "setupbase.py"]}, {"node_id": "MDY6Q29tbWl0MjM0Mzk1OTozOWI5NjAxNzg0NTk1YjUxMzgwMWJkZjAxM2I0OTRhZDM5ZWRkOGRj", "commit_message": "Merge tag 'rel-0.13.1' (mtheirs) into releases\n\n* tag 'rel-0.13.1': (51 commits)\n  remove rc for 0.13.1 final\n  0.13.1.rc3\n  qtconsole extras_require to whatsnew\n  Backport PR #2492: add missing 'qtconsole' extras_require\n  add 2480 to whatsnew\n  Backport PR #2480: Add deprecation warnings for sympyprinting\n  PR 2384 to whatsnew\n  mark 0.13.1.rc2\n  Backport PR #2384: Adapt inline backend to changes in matplotlib\n  mark 0.13.1.rc1\n  update 0.13.1 whatsnew lists\n  Backport PR #2479: use new _winapi instead of removed _subprocess\n  Backport PR #2437: don't let log cleanup prevent engine start\n  Backport PR #2405: clarify TaskScheduler.hwm doc\n  Backport PR #2377: Fix installation of man pages in Python 3\n  start 0.13.1 whatsnew\n  Backport PR #2373: fix missing imports in core.interactiveshell\n  Backport PR #2365: fix names of notebooks for download/save\n  Backport PR #2345: Remove references to 'version' no longer in argparse. Github issue #2343.\n  Backport PR #2347: adjust division error message checking to account for Python 3\n  ...", "commit_timestamp": "2013-08-09T16:53:41Z", "files": ["IPython/core/debugger.py", "IPython/core/display.py", "IPython/core/interactiveshell.py", "IPython/core/magic_arguments.py", "IPython/core/magics/osm.py", "IPython/core/release.py", "IPython/core/tests/test_debugger.py", "IPython/core/tests/test_interactiveshell.py", "IPython/core/tests/test_magic.py", "IPython/extensions/octavemagic.py", "IPython/extensions/storemagic.py", "IPython/extensions/sympyprinting.py", "IPython/external/ssh/tunnel.py", "IPython/frontend/html/notebook/handlers.py", "IPython/frontend/html/notebook/notebookapp.py", "IPython/frontend/html/notebook/notebookmanager.py", "IPython/frontend/qt/console/console_widget.py", "IPython/parallel/apps/baseapp.py", "IPython/parallel/apps/ipengineapp.py", "IPython/parallel/apps/launcher.py", "IPython/parallel/engine/engine.py", "IPython/parallel/error.py", "IPython/parallel/tests/test_view.py", "IPython/utils/jsonutil.py", "IPython/utils/tests/test_text.py", "IPython/utils/text.py", "IPython/zmq/entry_point.py", "IPython/zmq/ipkernel.py", "IPython/zmq/parentpoller.py", "IPython/zmq/pylab/backend_inline.py", "IPython/zmq/zmqshell.py", "setup.py", "setupbase.py", "tools/release_windows.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzpjNTgyMzc1MjAyZTY1OWRjYmRkYjAxYzJjZmRjNTA3ZTVhZTE3MWQ5", "commit_message": "Merge pull request #2479 from minrk/winapi\n\nUse new _winapi instead of removed _subprocess\r\n\r\nNew in Python 3.3, c.f. http://bugs.python.org/issue11750\r\n\r\nMaintain existing support by falling back on _subprocess if\r\n_winapi cannot be imported.", "commit_timestamp": "2012-10-11T21:47:35Z", "files": ["IPython/zmq/entry_point.py", "IPython/zmq/parentpoller.py"]}], "labels": ["windows", "bug"], "created_at": "2012-10-05T23:31:20Z", "closed_at": "2012-10-11T21:47:36Z", "linked_pr_number": [2471], "method": ["label"]}
{"issue_number": 2466, "title": "mistyping `ed -p` breaks `ed -p`", "body": "``` python\n\nIn [2]: ed\nIPython will make a temporary file named: /tmp/ipython_edit_ScaKLT.py\nEditing...Waiting for Emacs...\n done. Executing edited code...\nOut[2]: '#\\n'\n\nIn [3]: ed -p\nIPython will make a temporary file named: /tmp/ipython_edit_Spe8Xb.py\nEditing...Waiting for Emacs...\n done. Executing edited code...\nOut[3]: '##\\n'\n\nIn [4]: ed - p\nWARNING: Argument given (- p) can't be found as a variable or as a filename.---------------------------------------------------------------------------\nTypeError                                 Traceback (most recent call last)\n\nTypeError: 'NoneType' object is not iterable\n\nIn [5]: ed -p\nWARNING: Argument given (- p) can't be found as a variable or as a filename.---------------------------------------------------------------------------\nTypeError                                 Traceback (most recent call last)\n\nTypeError: 'NoneType' object is not iterable\n```\n\nworks correctly until line 4 where it breaks indefinitely, i then have to go back up copy it out and paste into a new edit window. Very annoying, especially when it happens almost every single day for months.\n\nFull Traceback:\n\n``` python\nWARNING: Argument given (- p) can't be found as a variable or as a filename.---------------------------------------------------------------------------\nTypeError                                 Traceback (most recent call last)\n<ipython-input-4-f5355427c5e8> in <module>()\n----> 1 get_ipython().magic(u'ed - p')\n\n/home/ddd/Dropbox/prog/oth/ipython/IPython/core/interactiveshell.pyc in magic(self, arg_s)\n   2155         magic_name, _, magic_arg_s = arg_s.partition(' ')\n   2156         magic_name = magic_name.lstrip(prefilter.ESC_MAGIC)\n-> 2157         return self.run_line_magic(magic_name, magic_arg_s)\n   2158 \n   2159     #-------------------------------------------------------------------------\n\n/home/ddd/Dropbox/prog/oth/ipython/IPython/core/interactiveshell.pyc in run_line_magic(self, magic_name, line)\n   2081                 args.append(sys._getframe(stack_depth).f_locals)\n   2082             with self.builtin_trap:\n-> 2083                 result = fn(*args)\n   2084             return result\n   2085 \n\n/home/ddd/Dropbox/prog/oth/ipython/IPython/core/magics/code.pyc in ed(self, parameter_s)\n\n/home/ddd/Dropbox/prog/oth/ipython/IPython/core/magic.pyc in <lambda>(f, *a, **k)\n    189     # but it's overkill for just that one bit of state.\n    190     def magic_deco(arg):\n--> 191         call = lambda f, *a, **k: f(*a, **k)\n    192 \n    193         if callable(arg):\n\n/home/ddd/Dropbox/prog/oth/ipython/IPython/core/magics/code.pyc in ed(self, parameter_s)\n    337     def ed(self, parameter_s=''):\n    338         \"\"\"Alias to %edit.\"\"\"\n--> 339         return self.edit(parameter_s)\n    340 \n    341     @skip_doctest\n\n/home/ddd/Dropbox/prog/oth/ipython/IPython/core/magics/code.pyc in edit(self, parameter_s, last_call)\n\n/home/ddd/Dropbox/prog/oth/ipython/IPython/core/magic.pyc in <lambda>(f, *a, **k)\n    189     # but it's overkill for just that one bit of state.\n    190     def magic_deco(arg):\n--> 191         call = lambda f, *a, **k: f(*a, **k)\n    192 \n    193         if callable(arg):\n\n/home/ddd/Dropbox/prog/oth/ipython/IPython/core/magics/code.pyc in edit(self, parameter_s, last_call)\n    488         try:\n    489             filename, lineno, is_temp = self._find_edit_target(self.shell, \n--> 490                                                        args, opts, last_call)\n    491         except MacroToEdit as e:\n    492             self._edit_macro(args, e.args[0])\n\nTypeError: 'NoneType' object is not iterable\n```\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU5NDQ2OmYyYWJjMGY1MWQ5NjBjMDY1NTc2NzVmMzUyZmY5YjEzYjVmNzcxZmU=", "commit_message": "in %edit, don't save \"last_call\" unless last call succeeded\n\navoids failing calls to `%edit` from killing future `%edit -p`\n\ncloses #2466", "commit_timestamp": "2013-01-19T22:01:09Z", "files": ["IPython/core/magics/code.py"]}, {"node_id": "MDY6Q29tbWl0NjU5NDQ2OjYyYzUxNTAyYjcxY2E2ZTU5Y2RmZmE2NGFlYjViNTBmNmVhZTA5ZTQ=", "commit_message": "in %edit, don't save \"last_call\" unless last call succeeded\n\navoids failing calls to `%edit` from killing future `%edit -p`\n\ncloses #2466", "commit_timestamp": "2013-01-25T21:27:33Z", "files": ["IPython/core/magics/code.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjkzOTRjZTU0M2M3NWRlYmNhNjBhMTU4MTEyNjU0OGJiNjFkNWViMmY=", "commit_message": "Backport PR #2816: in %edit, don't save \"last_call\" unless last call succeeded\n\navoids failing calls to `%edit` from killing future `%edit -p`\n\ncloses #2466", "commit_timestamp": "2013-03-04T23:55:25Z", "files": ["IPython/core/magics/code.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzozYzQ4NzdkYjMzMWRiNTJjZGM4YmUyODBlNWI3NmMxMTYxYTJlYzZl", "commit_message": "in %edit, don't save \"last_call\" unless last call succeeded\n\navoids failing calls to `%edit` from killing future `%edit -p`\n\ncloses #2466", "commit_timestamp": "2013-01-19T22:01:09Z", "files": ["IPython/core/magics/code.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmU4MWViZjMxNGU3ZmI4NGI1Zjk4NWEzYmUwNTc3OGFjNmEwMmU0YTQ=", "commit_message": "Merge pull request #2816 from minrk/edit_last_cell\n\nin %edit, don't save \"last_call\" unless last call succeeded", "commit_timestamp": "2013-01-20T13:43:27Z", "files": ["IPython/core/magics/code.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmU4MWViZjMxNGU3ZmI4NGI1Zjk4NWEzYmUwNTc3OGFjNmEwMmU0YTQ=", "commit_message": "Merge pull request #2816 from minrk/edit_last_cell\n\nin %edit, don't save \"last_call\" unless last call succeeded", "commit_timestamp": "2013-01-20T13:43:27Z", "files": ["IPython/core/magics/code.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjkzOTRjZTU0M2M3NWRlYmNhNjBhMTU4MTEyNjU0OGJiNjFkNWViMmY=", "commit_message": "Backport PR #2816: in %edit, don't save \"last_call\" unless last call succeeded\n\navoids failing calls to `%edit` from killing future `%edit -p`\n\ncloses #2466", "commit_timestamp": "2013-03-04T23:55:25Z", "files": ["IPython/core/magics/code.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo2YWYyOGNjMDkxNjdmNzUyOGJlNDcwMWIzZDJlNjk2NWY1NWFmODkx", "commit_message": "Merge pull request #2816 from minrk/edit_last_cell\n\nin %edit, don't save \"last_call\" unless last call succeeded", "commit_timestamp": "2013-01-20T13:43:27Z", "files": ["IPython/core/magics/code.py"]}], "labels": ["bug"], "created_at": "2012-10-04T00:17:56Z", "closed_at": "2013-01-20T11:07:47Z", "linked_pr_number": [2466], "method": ["label"]}
{"issue_number": 2465, "title": "automatic indent fails after EOF", "body": "``` python\nIn [1]: for bla in bla:\n   ...:     <- cursor here\n\nIn [1]:  <press Ctrl+d>\nDo you really want to exit ([y]/n)? n\n\nIn [1]: for bla in bla:\n   ...: <- cursor here\n```\n", "commits": [{"node_id": "MDY6Q29tbWl0MTI5NTczMzA6ZTc0NmI2OWU5M2UxYzgyMTYxNzkwMTEyNmQyY2JlYzM5MWJkZTNjYQ==", "commit_message": "dont reset readline_startup_hook on EOF. fix #2465", "commit_timestamp": "2013-10-09T20:22:01Z", "files": ["IPython/terminal/interactiveshell.py"]}, {"node_id": "MDY6Q29tbWl0MTMzMjc4MzY6MzNiNGNmNTViZWQxZDUwNjI2NWQxZTYyN2I0N2RmYTgxNDY4Yjc4Nw==", "commit_message": "Test for Issue #2465", "commit_timestamp": "2013-10-09T22:48:17Z", "files": ["IPython/terminal/tests/test_interactivshell.py"]}, {"node_id": "MDY6Q29tbWl0MTMzMjc4MzY6NTQzNmY4ZDI4NDE1MmE0NDFiNWQ5ZDFiMTI4NGVmYzEwMjMzNTA0Mg==", "commit_message": "bug fix for Issue #2465", "commit_timestamp": "2013-10-09T22:49:27Z", "files": ["IPython/terminal/interactiveshell.py"]}, {"node_id": "MDY6Q29tbWl0MTI5NTczMzA6NDkyYTA0YjBhMTgyNWM0NzY4MjZiYjkwMzVlNmJlN2M2ZmUyMjIzNw==", "commit_message": "Test for Issue #2465", "commit_timestamp": "2013-10-09T23:15:54Z", "files": ["IPython/terminal/tests/test_interactivshell.py"]}], "labels": ["bug"], "created_at": "2012-10-04T00:12:19Z", "closed_at": "2015-04-14T06:57:27Z", "method": ["label", "regex"]}
{"issue_number": 2438, "title": "print inside multiprocessing crashes Ipython kernel", "body": "Printing to stdout when in multiprocessing crashes Ipython notebook kernel.\nSeems to occur both in 0.13 and 198168962e48 (current Git master)\n\n``` python\n# bar.py\nimport multiprocessing\n\ndef foo(x):\n    print x  # <- this statement causes the crash, works properly if commented out\n    return x + 1\n\ndef go():\n    pool = multiprocessing.Pool()\n    try:\n        print \"Got:\", pool.map_async(foo, [1,2,3]).get(999)\n    finally:\n        pool.terminate()\n```\n\nAnd in notebook:\n\n``` python\nimport bar\nbar.go() # <- crashes kernel\n```\n\nThe notebook process prints this:\n\n```\nAssertion failed: ok (mailbox.cpp:84)\n[NotebookApp] Kernel xxx-yyy-zzz-qqq-fff failed to respond to heartbeat\n```\n\nmailbox.cpp seems to be inside ZMQ/PyZMQ (tried with versions zmq-2.2.0 & pyzmq-2.2.0.1 and zmq-2.1.11 & pyzmq-2.1.7).\n\nThis works properly on the Ipython & Python command-line shells.\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU4NTE4OmFkN2IxMmNiYTNiYWQyOWY3NTA2NWQxNWVkZGQ3YmE4Yjk1NGY5OGI=", "commit_message": "Merge pull request #2791 from minrk/forksafe_nomp\n\nforward stdout from forked processes\r\n\r\nuses zmq instead of multiprocessing, because mp has too many issues.\r\n\r\n- messages are sent via PUSH/PULL from subprocesses\r\n- messages are sent at flush time, not at write time\r\n- subprocess messages\r\n- no threads, no sync events, etc.\r\n\r\nsome basic tests are included\r\n\r\ncloses #2438", "commit_timestamp": "2013-04-11T05:40:22Z", "files": ["IPython/kernel/inprocess/ipkernel.py", "IPython/kernel/tests/test_message_spec.py", "IPython/kernel/zmq/iostream.py", "IPython/kernel/zmq/session.py", "IPython/zmq/tests/test_kernel.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzphOWNlZGZjODExNTk4ZWNhZTVlZDE2N2IxM2E1NjMzNDE0ZTcwMzhi", "commit_message": "Merge pull request #2791 from minrk/forksafe_nomp\n\nforward stdout from forked processes\r\n\r\nuses zmq instead of multiprocessing, because mp has too many issues.\r\n\r\n- messages are sent via PUSH/PULL from subprocesses\r\n- messages are sent at flush time, not at write time\r\n- subprocess messages\r\n- no threads, no sync events, etc.\r\n\r\nsome basic tests are included\r\n\r\ncloses #2438", "commit_timestamp": "2013-04-11T05:40:22Z", "files": ["IPython/kernel/inprocess/ipkernel.py", "IPython/kernel/tests/test_message_spec.py", "IPython/kernel/zmq/iostream.py", "IPython/kernel/zmq/session.py", "IPython/zmq/tests/test_kernel.py"]}], "labels": ["bug"], "created_at": "2012-09-27T09:34:02Z", "closed_at": "2013-04-11T05:40:23Z", "method": ["label"]}
{"issue_number": 2434, "title": "%store magic not auto-restoring", "body": "I'm not sure when this started happening, I haven't used store in a while, but just ran into this. Basically, storing works, but restores don't automatically happen anymore. We should either:\n1. changes this behavior so that the auto-restores start to happen again (preferred), or \n2. just update the docs to show how to make stored things available (via `store -r`). See this session\n\n```\nIn [1]: pi = 3.1415926\n\nIn [2]: pi\nOut[2]: 3.1415926\n\nIn [3]: store pi\nStored 'pi' (float)\n\nIn [4]: store\nStored variables and their in-db values:\npi                  -> 3.1415926\n\nIn [5]: \nDo you really want to exit ([y]/n)? y\n15:44@~(HbIOTOH)$ ipython\nIn [1]: pi\n---------------------------------------------------------------------------\nNameError                                 Traceback (most recent call last)\n<ipython-input-1-68f7b1e53523> in <module>()\n----> 1 pi\n\nNameError: name 'pi' is not defined\n\nIn [2]: store\nStored variables and their in-db values:\npi                  -> 3.1415926\n\nIn [3]: store -r\n\nIn [4]: pi\nOut[4]: 3.1415926\n```\n\nwhereas the docs suggest one shouldn't need to do `store -r`:\n\n```\nExample::\n\n  In [1]: l = ['hello',10,'world']\n  In [2]: %store l\n  In [3]: exit\n\n  (IPython session is closed and started again...)\n\n  ville@badger:~$ ipython\n  In [1]: l\n  Out[1]: ['hello', 10, 'world']\n```\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU5NDQ2OmIwMDllNTI1ZjRiNmFkNzhiMWE4NWU4MmIxYjEwZDBmZGM3MjUzMWY=", "commit_message": "update %store magic docstring\n\nreflects the fact that auto restore is not the default behavior\n\ncloses #2434", "commit_timestamp": "2013-07-04T01:11:22Z", "files": ["IPython/extensions/storemagic.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo2ZDI3ODczZDM4ZmJkOTg2MDllZGNiMDdhYjFiODM1NTA1ZjQ2NDlj", "commit_message": "update %store magic docstring\n\nreflects the fact that auto restore is not the default behavior\n\ncloses #2434", "commit_timestamp": "2013-07-04T01:11:22Z", "files": ["IPython/extensions/storemagic.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmMyOGY2NmIzNDc4ODJkYmYwODM3MjEwOTFkZDNiMTc0ZjhiNWQxYmE=", "commit_message": "Merge pull request #3530 from minrk/storedoc\n\nupdate %store magic docstring\r\n\r\nreflects the fact that auto restore is not the default behavior", "commit_timestamp": "2013-07-04T09:26:05Z", "files": ["IPython/extensions/storemagic.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmMyOGY2NmIzNDc4ODJkYmYwODM3MjEwOTFkZDNiMTc0ZjhiNWQxYmE=", "commit_message": "Merge pull request #3530 from minrk/storedoc\n\nupdate %store magic docstring\r\n\r\nreflects the fact that auto restore is not the default behavior", "commit_timestamp": "2013-07-04T09:26:05Z", "files": ["IPython/extensions/storemagic.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzozYTgxNmEyZTJkODM5MWI0NmUxMGI0OTUzMWNjOGRmNjAxMTdiN2E0", "commit_message": "Merge pull request #3530 from minrk/storedoc\n\nupdate %store magic docstring\r\n\r\nreflects the fact that auto restore is not the default behavior", "commit_timestamp": "2013-07-04T09:26:05Z", "files": ["IPython/extensions/storemagic.py"]}], "labels": ["documentation", "bug", "regression"], "created_at": "2012-09-26T23:00:52Z", "closed_at": "2013-07-04T09:26:05Z", "linked_pr_number": [2434], "method": ["label"]}
{"issue_number": 2431, "title": "TypeError: must be string without null bytes, not str", "body": "Hi, I  just installed iPython 2.7 under macports, and when I try to start it I get the following error:\n\n$ /opt/local/bin/ipython-2.7 Traceback (most recent call last):\n  File \"/opt/local/bin/ipython-2.7\", line 7, in <module>\n    launch_new_instance()\n  File \"/opt/local/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/IPython/frontend/terminal/ipapp.py\", line 388, in launch_new_instance\n    app.initialize()\n  File \"<string>\", line 2, in initialize\n  File \"/opt/local/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/IPython/config/application.py\", line 84, in catch_config_error\n    return method(app, _args, *_kwargs)\n  File \"/opt/local/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/IPython/frontend/terminal/ipapp.py\", line 324, in initialize\n    self.init_shell()\n  File \"/opt/local/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/IPython/frontend/terminal/ipapp.py\", line 340, in init_shell\n    ipython_dir=self.ipython_dir)\n  File \"/opt/local/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/IPython/config/configurable.py\", line 318, in instance\n    inst = cls(_args, *_kwargs)\n  File \"/opt/local/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/IPython/frontend/terminal/interactiveshell.py\", line 360, in **init**\n    user_module=user_module, custom_exceptions=custom_exceptions\n  File \"/opt/local/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/IPython/core/interactiveshell.py\", line 481, in **init**\n    self.init_readline()\n  File \"/opt/local/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/IPython/core/interactiveshell.py\", line 1868, in init_readline\n    self.refill_readline_hist()\n  File \"/opt/local/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/IPython/core/interactiveshell.py\", line 1886, in refill_readline_hist\n    stdin_encoding))\nTypeError: must be string without null bytes, not str\n\nIf you suspect this is an IPython bug, please report it at:\n    https://github.com/ipython/ipython/issues\nor send an email to the mailing list at ipython-dev@scipy.org\n\nYou can print a more detailed traceback right now with \"%tb\", or use \"%debug\"\nto interactively debug it.\n\nExtra-detailed tracebacks for bug-reporting purposes can be enabled via:\n    c.Application.verbose_crash=True\n\nCan you help ? I am not sure what is wrong here.\n", "commits": [{"node_id": "MDY6Q29tbWl0MTIzNjAwMzo3NDE2ZGE1OWNhOTE3ZWIxNjJlMzAxMDM3ZWRhYjNkYTkxOGQ1N2I3", "commit_message": "Catch errors filling readline history on startup.\n\nCloses gh-2431", "commit_timestamp": "2013-07-31T09:01:29Z", "files": ["IPython/core/interactiveshell.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmI2MzRhZTJmOTUwOTEzNTBlY2IwZDZlZWI0YmVlMTdlZDNlZGYzZDY=", "commit_message": "Merge pull request #3854 from takluyver/i2431\n\nCatch errors filling readline history on startup\r\n\r\nIn some cases, the history db can be a valid SQLite database, but contain strings with null bytes, which readline refuses to accept. This catches and ignores the resulting error.\r\n\r\nAt present, it leaves the history database untouched, and keeps trying to load readline history: if just one entry is invalid, the rest of the history may still be useful to the user.\r\n\r\nCloses #2431", "commit_timestamp": "2013-07-31T19:04:57Z", "files": ["IPython/core/interactiveshell.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzpiOTMwMDIwOGZjNmZiMzg3YTMxMzFkNTJlNWE5NDFlYmQzNDYyMzdm", "commit_message": "Catch errors filling readline history on startup.\n\nCloses gh-2431", "commit_timestamp": "2013-07-31T09:01:29Z", "files": ["IPython/core/interactiveshell.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo2MTMzNDZiMDM2NDg5ZDMwOWEzZWE3YmRkZjM1ODhjZTc1NzQ5ZjYy", "commit_message": "Merge pull request #3854 from takluyver/i2431\n\nCatch errors filling readline history on startup\r\n\r\nIn some cases, the history db can be a valid SQLite database, but contain strings with null bytes, which readline refuses to accept. This catches and ignores the resulting error.\r\n\r\nAt present, it leaves the history database untouched, and keeps trying to load readline history: if just one entry is invalid, the rest of the history may still be useful to the user.\r\n\r\nCloses #2431", "commit_timestamp": "2013-07-31T19:04:57Z", "files": ["IPython/core/interactiveshell.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmI2MzRhZTJmOTUwOTEzNTBlY2IwZDZlZWI0YmVlMTdlZDNlZGYzZDY=", "commit_message": "Merge pull request #3854 from takluyver/i2431\n\nCatch errors filling readline history on startup\r\n\r\nIn some cases, the history db can be a valid SQLite database, but contain strings with null bytes, which readline refuses to accept. This catches and ignores the resulting error.\r\n\r\nAt present, it leaves the history database untouched, and keeps trying to load readline history: if just one entry is invalid, the rest of the history may still be useful to the user.\r\n\r\nCloses #2431", "commit_timestamp": "2013-07-31T19:04:57Z", "files": ["IPython/core/interactiveshell.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmI2MzRhZTJmOTUwOTEzNTBlY2IwZDZlZWI0YmVlMTdlZDNlZGYzZDY=", "commit_message": "Merge pull request #3854 from takluyver/i2431\n\nCatch errors filling readline history on startup\r\n\r\nIn some cases, the history db can be a valid SQLite database, but contain strings with null bytes, which readline refuses to accept. This catches and ignores the resulting error.\r\n\r\nAt present, it leaves the history database untouched, and keeps trying to load readline history: if just one entry is invalid, the rest of the history may still be useful to the user.\r\n\r\nCloses #2431", "commit_timestamp": "2013-07-31T19:04:57Z", "files": ["IPython/core/interactiveshell.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo2MTMzNDZiMDM2NDg5ZDMwOWEzZWE3YmRkZjM1ODhjZTc1NzQ5ZjYy", "commit_message": "Merge pull request #3854 from takluyver/i2431\n\nCatch errors filling readline history on startup\r\n\r\nIn some cases, the history db can be a valid SQLite database, but contain strings with null bytes, which readline refuses to accept. This catches and ignores the resulting error.\r\n\r\nAt present, it leaves the history database untouched, and keeps trying to load readline history: if just one entry is invalid, the rest of the history may still be useful to the user.\r\n\r\nCloses #2431", "commit_timestamp": "2013-07-31T19:04:57Z", "files": ["IPython/core/interactiveshell.py"]}], "labels": ["bug"], "created_at": "2012-09-26T07:09:26Z", "closed_at": "2013-07-31T19:04:57Z", "linked_pr_number": [2431], "method": ["label", "regex"]}
{"issue_number": 2419, "title": "TerminalInteractiveShell.__init__() ignores value of ipython_dir argument", "body": "It should pass `ipython_dir` to `__init__()` method of the superclass.\n", "commits": [{"node_id": "MDY6Q29tbWl0NTkwNDExNzo1MGM5MDdlOWM5ZmQ2N2FjZjYzNzIxZGQ5ZjhmNzA5NWU1NTVhNzNm", "commit_message": "Update IPython/frontend/terminal/interactiveshell.py\n\nfix issue #2419", "commit_timestamp": "2012-09-21T16:29:40Z", "files": ["IPython/frontend/terminal/interactiveshell.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzpjOGFhMzdiMDE0NmVkNWMyYThiNzM4MTQxMWU3MmEzZWRmNTZiMzQ3", "commit_message": "Update IPython/frontend/terminal/interactiveshell.py\n\nfix issue #2419", "commit_timestamp": "2012-09-21T16:29:40Z", "files": ["IPython/frontend/terminal/interactiveshell.py"]}], "labels": ["bug"], "created_at": "2012-09-21T16:23:29Z", "closed_at": "2012-12-30T12:38:04Z", "method": ["label"]}
{"issue_number": 2374, "title": "Issues with man pages", "body": "I've run into issues with how ipython installs its man pages:\n- Since 0.13, the man pages are no longer gzipped when installed - I just wanted to check if this is intentional?\n- When installing ipython with Python 3.2, the man pages are not installed - is this normal?\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU4NTE4OmZjYzBjNzNlYzBiYjg4YTY5Nzg3MjdkZDExOGI5OGFmZDRkYTE4NGY=", "commit_message": "Backport PR #2377: Fix installation of man pages in Python 3\n\nThis fixes a bug that caused man pages to not be installed in Python 3 when running from the source tree. The issue was that in Python 3, an empty filter is not an empty list, so ``if not manpages`` could not be satisfied. By using ``list()``, we can ensure that we convert the filter iterator to a list in Python 3. This partially fixes #2374.", "commit_timestamp": "2012-10-11T19:31:10Z", "files": ["setupbase.py"]}, {"node_id": "MDY6Q29tbWl0NDAwNDYwMDoyZTFlMzVmN2ZiN2Y5NWEzMTE3Y2JkNDUyMGRkM2FmYTU2MDg1N2Q2", "commit_message": "Backport PR #2377: Fix installation of man pages in Python 3\n\nThis fixes a bug that caused man pages to not be installed in Python 3 when running from the source tree. The issue was that in Python 3, an empty filter is not an empty list, so ``if not manpages`` could not be satisfied. By using ``list()``, we can ensure that we convert the filter iterator to a list in Python 3. This partially fixes #2374.", "commit_timestamp": "2012-10-18T15:26:40Z", "files": ["setupbase.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmQ4MDJkNTU2MjJjMTM2YmU4NTgyZjgwOWM0MDBhMTcwOTc4OGNhNjY=", "commit_message": "Merge pull request #2377 from astrofrog/fix-man-python3\n\nFix installation of man pages in Python 3", "commit_timestamp": "2012-09-18T20:20:09Z", "files": ["setupbase.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmQ4MDJkNTU2MjJjMTM2YmU4NTgyZjgwOWM0MDBhMTcwOTc4OGNhNjY=", "commit_message": "Merge pull request #2377 from astrofrog/fix-man-python3\n\nFix installation of man pages in Python 3", "commit_timestamp": "2012-09-18T20:20:09Z", "files": ["setupbase.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmZjYzBjNzNlYzBiYjg4YTY5Nzg3MjdkZDExOGI5OGFmZDRkYTE4NGY=", "commit_message": "Backport PR #2377: Fix installation of man pages in Python 3\n\nThis fixes a bug that caused man pages to not be installed in Python 3 when running from the source tree. The issue was that in Python 3, an empty filter is not an empty list, so ``if not manpages`` could not be satisfied. By using ``list()``, we can ensure that we convert the filter iterator to a list in Python 3. This partially fixes #2374.", "commit_timestamp": "2012-10-11T19:31:10Z", "files": ["setupbase.py"]}, {"node_id": "MDY6Q29tbWl0NDAwNDYwMDoyZTFlMzVmN2ZiN2Y5NWEzMTE3Y2JkNDUyMGRkM2FmYTU2MDg1N2Q2", "commit_message": "Backport PR #2377: Fix installation of man pages in Python 3\n\nThis fixes a bug that caused man pages to not be installed in Python 3 when running from the source tree. The issue was that in Python 3, an empty filter is not an empty list, so ``if not manpages`` could not be satisfied. By using ``list()``, we can ensure that we convert the filter iterator to a list in Python 3. This partially fixes #2374.", "commit_timestamp": "2012-10-18T15:26:40Z", "files": ["setupbase.py"]}, {"node_id": "MDY6Q29tbWl0MjM0Mzk1OToxMmIzNDRkMTcwMzMyYjg2MWMyZTVlNGFmNmYwYzBiMjA1NWRlYTE1", "commit_message": "Merge tag 'rel-0.13.1' into debian-01X\n\n* tag 'rel-0.13.1': (27 commits)\n  remove rc for 0.13.1 final\n  0.13.1.rc3\n  qtconsole extras_require to whatsnew\n  Backport PR #2492: add missing 'qtconsole' extras_require\n  add 2480 to whatsnew\n  Backport PR #2480: Add deprecation warnings for sympyprinting\n  PR 2384 to whatsnew\n  mark 0.13.1.rc2\n  Backport PR #2384: Adapt inline backend to changes in matplotlib\n  mark 0.13.1.rc1\n  update 0.13.1 whatsnew lists\n  Backport PR #2479: use new _winapi instead of removed _subprocess\n  Backport PR #2437: don't let log cleanup prevent engine start\n  Backport PR #2405: clarify TaskScheduler.hwm doc\n  Backport PR #2377: Fix installation of man pages in Python 3\n  start 0.13.1 whatsnew\n  Backport PR #2373: fix missing imports in core.interactiveshell\n  Backport PR #2365: fix names of notebooks for download/save\n  Backport PR #2345: Remove references to 'version' no longer in argparse. Github issue #2343.\n  Backport PR #2347: adjust division error message checking to account for Python 3\n  ...", "commit_timestamp": "2012-11-19T16:53:01Z", "files": ["IPython/core/interactiveshell.py", "IPython/core/magic_arguments.py", "IPython/core/release.py", "IPython/extensions/sympyprinting.py", "IPython/frontend/html/notebook/notebookmanager.py", "IPython/parallel/apps/baseapp.py", "IPython/zmq/entry_point.py", "IPython/zmq/parentpoller.py", "IPython/zmq/pylab/backend_inline.py", "setup.py", "setupbase.py"]}, {"node_id": "MDY6Q29tbWl0MjM0Mzk1OTozOWI5NjAxNzg0NTk1YjUxMzgwMWJkZjAxM2I0OTRhZDM5ZWRkOGRj", "commit_message": "Merge tag 'rel-0.13.1' (mtheirs) into releases\n\n* tag 'rel-0.13.1': (51 commits)\n  remove rc for 0.13.1 final\n  0.13.1.rc3\n  qtconsole extras_require to whatsnew\n  Backport PR #2492: add missing 'qtconsole' extras_require\n  add 2480 to whatsnew\n  Backport PR #2480: Add deprecation warnings for sympyprinting\n  PR 2384 to whatsnew\n  mark 0.13.1.rc2\n  Backport PR #2384: Adapt inline backend to changes in matplotlib\n  mark 0.13.1.rc1\n  update 0.13.1 whatsnew lists\n  Backport PR #2479: use new _winapi instead of removed _subprocess\n  Backport PR #2437: don't let log cleanup prevent engine start\n  Backport PR #2405: clarify TaskScheduler.hwm doc\n  Backport PR #2377: Fix installation of man pages in Python 3\n  start 0.13.1 whatsnew\n  Backport PR #2373: fix missing imports in core.interactiveshell\n  Backport PR #2365: fix names of notebooks for download/save\n  Backport PR #2345: Remove references to 'version' no longer in argparse. Github issue #2343.\n  Backport PR #2347: adjust division error message checking to account for Python 3\n  ...", "commit_timestamp": "2013-08-09T16:53:41Z", "files": ["IPython/core/debugger.py", "IPython/core/display.py", "IPython/core/interactiveshell.py", "IPython/core/magic_arguments.py", "IPython/core/magics/osm.py", "IPython/core/release.py", "IPython/core/tests/test_debugger.py", "IPython/core/tests/test_interactiveshell.py", "IPython/core/tests/test_magic.py", "IPython/extensions/octavemagic.py", "IPython/extensions/storemagic.py", "IPython/extensions/sympyprinting.py", "IPython/external/ssh/tunnel.py", "IPython/frontend/html/notebook/handlers.py", "IPython/frontend/html/notebook/notebookapp.py", "IPython/frontend/html/notebook/notebookmanager.py", "IPython/frontend/qt/console/console_widget.py", "IPython/parallel/apps/baseapp.py", "IPython/parallel/apps/ipengineapp.py", "IPython/parallel/apps/launcher.py", "IPython/parallel/engine/engine.py", "IPython/parallel/error.py", "IPython/parallel/tests/test_view.py", "IPython/utils/jsonutil.py", "IPython/utils/tests/test_text.py", "IPython/utils/text.py", "IPython/zmq/entry_point.py", "IPython/zmq/ipkernel.py", "IPython/zmq/parentpoller.py", "IPython/zmq/pylab/backend_inline.py", "IPython/zmq/zmqshell.py", "setup.py", "setupbase.py", "tools/release_windows.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo3YzZmMTMzMzRlODZkMzkwNWI2MjljN2ZkM2NlYmU2MGM2MGIxNzUz", "commit_message": "Merge pull request #2377 from astrofrog/fix-man-python3\n\nFix installation of man pages in Python 3", "commit_timestamp": "2012-09-18T20:20:09Z", "files": ["setupbase.py"]}], "labels": ["bug"], "created_at": "2012-09-02T10:25:55Z", "closed_at": "2012-10-11T19:32:31Z", "linked_pr_number": [2374], "method": ["label"]}
{"issue_number": 2372, "title": "interactiveshell.py misses urllib and io_open imports", "body": "cf15c8f0ed4493492b50e8fccb72175157afac7c seems to have accidentally removed them.\n\nused in line 2957 and 2973\n\nalso affects 0.13.1 branch\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU5NDQ2OjViMDlhODEzN2Y4YmVmZjNlYmY0YWQyNDJmMGY3YzlhODE2ZGMyNWQ=", "commit_message": "fix missing imports in core.interactiveshell\n\nintroduced in cf15c8f0ed4493492b50e8fccb72175157afac7c\n\ncloses #2372", "commit_timestamp": "2012-09-01T16:52:17Z", "files": ["IPython/core/interactiveshell.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjViMDlhODEzN2Y4YmVmZjNlYmY0YWQyNDJmMGY3YzlhODE2ZGMyNWQ=", "commit_message": "fix missing imports in core.interactiveshell\n\nintroduced in cf15c8f0ed4493492b50e8fccb72175157afac7c\n\ncloses #2372", "commit_timestamp": "2012-09-01T16:52:17Z", "files": ["IPython/core/interactiveshell.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjU5ZWRhMjkwOGEyMDI3YTQ4NDMyZWQ1ODUwY2Y4MTAyZDAzZWE5ZTg=", "commit_message": "Backport PR #2373: fix missing imports in core.interactiveshell\n\nintroduced in cf15c8f0ed4493492b50e8fccb72175157afac7c\n\ncloses #2372", "commit_timestamp": "2012-09-03T17:29:09Z", "files": ["IPython/core/interactiveshell.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzphNWMwYjUxYzhkMzM0ZTEyOWI3YmUzNzE4YjdkMWRiNjA0YmMzNmFj", "commit_message": "fix missing imports in core.interactiveshell\n\nintroduced in cf15c8f0ed4493492b50e8fccb72175157afac7c\n\ncloses #2372", "commit_timestamp": "2012-09-01T16:52:17Z", "files": ["IPython/core/interactiveshell.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmM2NzhhODc4MjUyYzM5NmRlNzZlMTg1YzQ3Zjg3OTIxYzFmNjc4MTI=", "commit_message": "Merge pull request #2373 from minrk/imports\n\nfix missing imports in core.interactiveshell", "commit_timestamp": "2012-09-03T13:36:57Z", "files": ["IPython/core/interactiveshell.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmM2NzhhODc4MjUyYzM5NmRlNzZlMTg1YzQ3Zjg3OTIxYzFmNjc4MTI=", "commit_message": "Merge pull request #2373 from minrk/imports\n\nfix missing imports in core.interactiveshell", "commit_timestamp": "2012-09-03T13:36:57Z", "files": ["IPython/core/interactiveshell.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjU5ZWRhMjkwOGEyMDI3YTQ4NDMyZWQ1ODUwY2Y4MTAyZDAzZWE5ZTg=", "commit_message": "Backport PR #2373: fix missing imports in core.interactiveshell\n\nintroduced in cf15c8f0ed4493492b50e8fccb72175157afac7c\n\ncloses #2372", "commit_timestamp": "2012-09-03T17:29:09Z", "files": ["IPython/core/interactiveshell.py"]}, {"node_id": "MDY6Q29tbWl0MjM0Mzk1OToxMmIzNDRkMTcwMzMyYjg2MWMyZTVlNGFmNmYwYzBiMjA1NWRlYTE1", "commit_message": "Merge tag 'rel-0.13.1' into debian-01X\n\n* tag 'rel-0.13.1': (27 commits)\n  remove rc for 0.13.1 final\n  0.13.1.rc3\n  qtconsole extras_require to whatsnew\n  Backport PR #2492: add missing 'qtconsole' extras_require\n  add 2480 to whatsnew\n  Backport PR #2480: Add deprecation warnings for sympyprinting\n  PR 2384 to whatsnew\n  mark 0.13.1.rc2\n  Backport PR #2384: Adapt inline backend to changes in matplotlib\n  mark 0.13.1.rc1\n  update 0.13.1 whatsnew lists\n  Backport PR #2479: use new _winapi instead of removed _subprocess\n  Backport PR #2437: don't let log cleanup prevent engine start\n  Backport PR #2405: clarify TaskScheduler.hwm doc\n  Backport PR #2377: Fix installation of man pages in Python 3\n  start 0.13.1 whatsnew\n  Backport PR #2373: fix missing imports in core.interactiveshell\n  Backport PR #2365: fix names of notebooks for download/save\n  Backport PR #2345: Remove references to 'version' no longer in argparse. Github issue #2343.\n  Backport PR #2347: adjust division error message checking to account for Python 3\n  ...", "commit_timestamp": "2012-11-19T16:53:01Z", "files": ["IPython/core/interactiveshell.py", "IPython/core/magic_arguments.py", "IPython/core/release.py", "IPython/extensions/sympyprinting.py", "IPython/frontend/html/notebook/notebookmanager.py", "IPython/parallel/apps/baseapp.py", "IPython/zmq/entry_point.py", "IPython/zmq/parentpoller.py", "IPython/zmq/pylab/backend_inline.py", "setup.py", "setupbase.py"]}, {"node_id": "MDY6Q29tbWl0MjM0Mzk1OTozOWI5NjAxNzg0NTk1YjUxMzgwMWJkZjAxM2I0OTRhZDM5ZWRkOGRj", "commit_message": "Merge tag 'rel-0.13.1' (mtheirs) into releases\n\n* tag 'rel-0.13.1': (51 commits)\n  remove rc for 0.13.1 final\n  0.13.1.rc3\n  qtconsole extras_require to whatsnew\n  Backport PR #2492: add missing 'qtconsole' extras_require\n  add 2480 to whatsnew\n  Backport PR #2480: Add deprecation warnings for sympyprinting\n  PR 2384 to whatsnew\n  mark 0.13.1.rc2\n  Backport PR #2384: Adapt inline backend to changes in matplotlib\n  mark 0.13.1.rc1\n  update 0.13.1 whatsnew lists\n  Backport PR #2479: use new _winapi instead of removed _subprocess\n  Backport PR #2437: don't let log cleanup prevent engine start\n  Backport PR #2405: clarify TaskScheduler.hwm doc\n  Backport PR #2377: Fix installation of man pages in Python 3\n  start 0.13.1 whatsnew\n  Backport PR #2373: fix missing imports in core.interactiveshell\n  Backport PR #2365: fix names of notebooks for download/save\n  Backport PR #2345: Remove references to 'version' no longer in argparse. Github issue #2343.\n  Backport PR #2347: adjust division error message checking to account for Python 3\n  ...", "commit_timestamp": "2013-08-09T16:53:41Z", "files": ["IPython/core/debugger.py", "IPython/core/display.py", "IPython/core/interactiveshell.py", "IPython/core/magic_arguments.py", "IPython/core/magics/osm.py", "IPython/core/release.py", "IPython/core/tests/test_debugger.py", "IPython/core/tests/test_interactiveshell.py", "IPython/core/tests/test_magic.py", "IPython/extensions/octavemagic.py", "IPython/extensions/storemagic.py", "IPython/extensions/sympyprinting.py", "IPython/external/ssh/tunnel.py", "IPython/frontend/html/notebook/handlers.py", "IPython/frontend/html/notebook/notebookapp.py", "IPython/frontend/html/notebook/notebookmanager.py", "IPython/frontend/qt/console/console_widget.py", "IPython/parallel/apps/baseapp.py", "IPython/parallel/apps/ipengineapp.py", "IPython/parallel/apps/launcher.py", "IPython/parallel/engine/engine.py", "IPython/parallel/error.py", "IPython/parallel/tests/test_view.py", "IPython/utils/jsonutil.py", "IPython/utils/tests/test_text.py", "IPython/utils/text.py", "IPython/zmq/entry_point.py", "IPython/zmq/ipkernel.py", "IPython/zmq/parentpoller.py", "IPython/zmq/pylab/backend_inline.py", "IPython/zmq/zmqshell.py", "setup.py", "setupbase.py", "tools/release_windows.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo2MWQxNTk2OWM1ZjU3OTkxNDJkOTI0ODQ5MmNjZmVhZGU4YzE2Y2Mz", "commit_message": "Merge pull request #2373 from minrk/imports\n\nfix missing imports in core.interactiveshell", "commit_timestamp": "2012-09-03T13:36:57Z", "files": ["IPython/core/interactiveshell.py"]}], "labels": ["bug"], "created_at": "2012-09-01T13:32:47Z", "closed_at": "2012-09-03T13:36:58Z", "linked_pr_number": [2372], "method": ["label"]}
{"issue_number": 2361, "title": "client doesn't use connection file's 'location' in disambiguating 'interface'", "body": "be9601be0603cd5de781c4f91b8fc6a3120c9839 seems to have changed client.py to stop using `location` in the call to `util.disambiguate_ip_address` (previously `util.disambiguate_url`).  This means that if `interface`'s address is '*', the client tries to connect to localhost, which doesn't seem to me to be the correct behaviour.\n\nThe fix appears to be as simple as\n\n```\n-        addr = util.disambiguate_ip_address(addr)\n+        addr = util.disambiguate_ip_address(addr, location)\n```\n", "commits": [{"node_id": "MDY6Q29tbWl0NTM2NzYxNzpiZjk0Mjk3ZDA2YjIyN2QxMmQzZTI5OTM5MjgzYjQ3YmZhM2IxOGI5", "commit_message": "make clients use 'location' properly (fixes #2361)\n\nThis fixes a previous change that removed the location argument from the\ncall to util.disambiguate_ip_address, which stops it getting used where\ninterface is * or 0.0.0.0.", "commit_timestamp": "2012-08-30T19:38:35Z", "files": ["IPython/parallel/client/client.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmJmOTQyOTdkMDZiMjI3ZDEyZDNlMjk5MzkyODNiNDdiZmEzYjE4Yjk=", "commit_message": "make clients use 'location' properly (fixes #2361)\n\nThis fixes a previous change that removed the location argument from the\ncall to util.disambiguate_ip_address, which stops it getting used where\ninterface is * or 0.0.0.0.", "commit_timestamp": "2012-08-30T19:38:35Z", "files": ["IPython/parallel/client/client.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmRkZGUyZTE4N2E5NTQzNDZkNzQ5MjkzMjc0Yzg0YmRjMzAyODg5Y2M=", "commit_message": "Merge pull request #2364 from ikn/client-use-location\n\nmake clients use 'location' properly (fixes #2361)\r\n\r\ncloses #2361", "commit_timestamp": "2012-08-30T20:11:18Z", "files": ["IPython/parallel/client/client.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzoyMzZkYzZiZjM2NDcyNmE0ZGQzYjg5NDM2NDMyMTQ0YTZjODlkMmFm", "commit_message": "make clients use 'location' properly (fixes #2361)\n\nThis fixes a previous change that removed the location argument from the\ncall to util.disambiguate_ip_address, which stops it getting used where\ninterface is * or 0.0.0.0.", "commit_timestamp": "2012-08-30T19:38:35Z", "files": ["IPython/parallel/client/client.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzpmNWQ3NmUzYjEzMmM5NTEzYTM5ZWQzMzk2NjllNjY1YzVhZWNlNTdm", "commit_message": "Merge pull request #2364 from ikn/client-use-location\n\nmake clients use 'location' properly (fixes #2361)\r\n\r\ncloses #2361", "commit_timestamp": "2012-08-30T20:11:18Z", "files": ["IPython/parallel/client/client.py"]}], "labels": ["bug", "parallel"], "created_at": "2012-08-30T11:56:15Z", "closed_at": "2012-08-30T20:11:19Z", "method": ["label"]}
{"issue_number": 2343, "title": "Installing in a python 3.3b2 or python 3.3rc1 virtual environment.", "body": "Hi, I'm having trouble installing inside a venv.\n\nI activate the venv, install distribute, install ipython:\n    python setup.py install\nand then when trying to run the ipython3 binary which is installed, I get\n    'TypeError: **init**() got an unexpected keyword argument 'version'\nHave I perhaps missed some necessary dependency?\n\nTraceback is given below. I've tried the git version of ipython, and\nipython 0.13.\n\n(ipythontest) andrew@wiki:~/ipythontest/bin$ ./ipython3\nTraceback (most recent call last):\n  File \"./ipython3\", line 9, in <module>\n    load_entry_point('ipython==0.14.dev', 'console_scripts', 'ipython3')()\n  File \"/home/andrew/ipythontest/lib/python3.3/site-packages/distribute-0.6.28-py3.3.egg/pkg_resources.py\",\nline 337, in load_entry_point\n    return get_distribution(dist).load_entry_point(group, name)\n  File \"/home/andrew/ipythontest/lib/python3.3/site-packages/distribute-0.6.28-py3.3.egg/pkg_resources.py\",\nline 2312, in load_entry_point\n    return ep.load()\n  File \"/home/andrew/ipythontest/lib/python3.3/site-packages/distribute-0.6.28-py3.3.egg/pkg_resources.py\",\nline 2018, in load\n    entry = **import**(self.module_name, globals(),globals(), ['**name**'])\n  File \"/home/andrew/ipythontest/lib/python3.3/site-packages/ipython-0.14.dev-py3.3.egg/IPython/**init**.py\",\nline 46, in <module>\n    from .frontend.terminal.embed import embed\n  File \"/home/andrew/ipythontest/lib/python3.3/site-packages/ipython-0.14.dev-py3.3.egg/IPython/frontend/terminal/embed.py\",\nline 40, in <module>\n    from IPython.frontend.terminal.ipapp import load_default_config\n  File \"/home/andrew/ipythontest/lib/python3.3/site-packages/ipython-0.14.dev-py3.3.egg/IPython/frontend/terminal/ipapp.py\",\nline 46, in <module>\n    from IPython.core.magics import ScriptMagics\n  File \"/home/andrew/ipythontest/lib/python3.3/site-packages/ipython-0.14.dev-py3.3.egg/IPython/core/magics/**init**.py\",\nline 17, in <module>\n    from .basic import BasicMagics\n  File \"/home/andrew/ipythontest/lib/python3.3/site-packages/ipython-0.14.dev-py3.3.egg/IPython/core/magics/basic.py\",\nline 37, in <module>\n    class BasicMagics(Magics):\n  File \"/home/andrew/ipythontest/lib/python3.3/site-packages/ipython-0.14.dev-py3.3.egg/IPython/core/magics/basic.py\",\nline 61, in BasicMagics\n    def alias_magic(self, line=''):\n  File \"/home/andrew/ipythontest/lib/python3.3/site-packages/ipython-0.14.dev-py3.3.egg/IPython/core/magic_arguments.py\",\nline 173, in **call**\n    func.parser = construct_parser(func)\n  File \"/home/andrew/ipythontest/lib/python3.3/site-packages/ipython-0.14.dev-py3.3.egg/IPython/core/magic_arguments.py\",\nline 103, in construct_parser\n    parser = MagicArgumentParser(arg_name, **kwds)\n  File \"/home/andrew/ipythontest/lib/python3.3/site-packages/ipython-0.14.dev-py3.3.egg/IPython/core/magic_arguments.py\",\nline 82, in **init**\n    conflict_handler=conflict_handler, add_help=add_help)\nTypeError: **init**() got an unexpected keyword argument 'version'\n\nMatthias Bussonnier suggests:\n\"version\" keyword seem to be deprecated even in 2.7, it might have been dropped in the version of python you use, so it a bug on our side.\n\nhttp://hg.python.org/cpython/file/2.7/Lib/argparse.py\n  1557         if version is not None:\n  1558             import warnings\n  1559             warnings.warn(\n  1560                 \"\"\"The \"version\" argument to ArgumentParser is deprecated. \"\"\"\n  1561                 \"\"\"Please use \"\"\"\n  1562                 \"\"\"\"add_argument(..., action='version', version=\"N\", ...)\" \"\"\"\n  1563                 \"\"\"instead\"\"\", DeprecationWarning)\n\nBackground:\nI'm running Debian squeeze, I installed the dependencies listed in the\ndebian .dsc file for python 3 before doing a source install. That is,\nthe following packages:\n    quilt autoconf libreadline6-dev libncursesw5-dev zlib1g-dev\nlibdb4.8-dev tk8.5-dev blt-dev libssl-dev sharutils libbz2-dev\nlibbluetooth-dev locales libsqlite3-dev libffi-dev mime-support\nlibgpm2 netbase lsb-release bzip2 gdb\n", "commits": [{"node_id": "MDY6Q29tbWl0MjM0NDA3MzphNWU5NDc0OGYzMGEwNDE2M2VhNmY0MjlkMGJmNmJhZTJlYWJmNTUw", "commit_message": "version keyword deprecated in argparse\n\nfixes #2343", "commit_timestamp": "2012-08-26T15:06:27Z", "files": ["IPython/core/magic_arguments.py"]}, {"node_id": "MDY6Q29tbWl0NTU2MDk3ODpiZDQ4ZDM4NmZmMTRiNzA3ZjY0MTZiNmRmZTM0MGRlOWNkMjM2ZTc2", "commit_message": "Update IPython/core/magic_arguments.py\n\nRemove references to 'version' no longer in argparse. Github issue #2343.", "commit_timestamp": "2012-08-26T15:12:39Z", "files": ["IPython/core/magic_arguments.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmZmYzM2Y2M5NzAwYmI5NzJjZjQxOWY1YjBjYzIyZWE3MWViNmIwNDU=", "commit_message": "Merge pull request #2345 from 7andrew/master\n\nRemove references to 'version' no longer in argparse. Github issue #2343.", "commit_timestamp": "2012-08-29T09:53:28Z", "files": ["IPython/core/magic_arguments.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjAwMTc1MWExZjFjZTIyYWE3NTI5N2Y0OTFhMTVjNzEwMzVmMGMzNmU=", "commit_message": "Backport PR #2345: Remove references to 'version' no longer in argparse. Github issue #2343.\n\nRemove references to 'version' no longer in argparse. Github issue #2343.", "commit_timestamp": "2012-08-29T18:12:25Z", "files": ["IPython/core/magic_arguments.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjhhZDI2MTJjNjkyNjg3ZDVmMDhkNzJlOGRmMjc1NmIyMWIwYzkxZWQ=", "commit_message": "Backport PR #2345: Remove references to 'version' no longer in argparse. Github issue #2343.\n\nRemove references to 'version' no longer in argparse. Github issue #2343.", "commit_timestamp": "2012-09-01T21:03:37Z", "files": ["IPython/core/magic_arguments.py"]}, {"node_id": "MDY6Q29tbWl0MjM0NDA3Mzo3MDUyY2UzNWRhZjY5OWI3NGQ4NWI5ZWVkZDZjMWVmOWM2YjE3MGE2", "commit_message": "Update IPython/core/magic_arguments.py\n\nRemove references to 'version' no longer in argparse. Github issue #2343.", "commit_timestamp": "2012-09-05T12:46:02Z", "files": ["IPython/core/magic_arguments.py"]}, {"node_id": "MDY6Q29tbWl0MjM0Mzk1OToxMmIzNDRkMTcwMzMyYjg2MWMyZTVlNGFmNmYwYzBiMjA1NWRlYTE1", "commit_message": "Merge tag 'rel-0.13.1' into debian-01X\n\n* tag 'rel-0.13.1': (27 commits)\n  remove rc for 0.13.1 final\n  0.13.1.rc3\n  qtconsole extras_require to whatsnew\n  Backport PR #2492: add missing 'qtconsole' extras_require\n  add 2480 to whatsnew\n  Backport PR #2480: Add deprecation warnings for sympyprinting\n  PR 2384 to whatsnew\n  mark 0.13.1.rc2\n  Backport PR #2384: Adapt inline backend to changes in matplotlib\n  mark 0.13.1.rc1\n  update 0.13.1 whatsnew lists\n  Backport PR #2479: use new _winapi instead of removed _subprocess\n  Backport PR #2437: don't let log cleanup prevent engine start\n  Backport PR #2405: clarify TaskScheduler.hwm doc\n  Backport PR #2377: Fix installation of man pages in Python 3\n  start 0.13.1 whatsnew\n  Backport PR #2373: fix missing imports in core.interactiveshell\n  Backport PR #2365: fix names of notebooks for download/save\n  Backport PR #2345: Remove references to 'version' no longer in argparse. Github issue #2343.\n  Backport PR #2347: adjust division error message checking to account for Python 3\n  ...", "commit_timestamp": "2012-11-19T16:53:01Z", "files": ["IPython/core/interactiveshell.py", "IPython/core/magic_arguments.py", "IPython/core/release.py", "IPython/extensions/sympyprinting.py", "IPython/frontend/html/notebook/notebookmanager.py", "IPython/parallel/apps/baseapp.py", "IPython/zmq/entry_point.py", "IPython/zmq/parentpoller.py", "IPython/zmq/pylab/backend_inline.py", "setup.py", "setupbase.py"]}, {"node_id": "MDY6Q29tbWl0MjM0Mzk1OTozOWI5NjAxNzg0NTk1YjUxMzgwMWJkZjAxM2I0OTRhZDM5ZWRkOGRj", "commit_message": "Merge tag 'rel-0.13.1' (mtheirs) into releases\n\n* tag 'rel-0.13.1': (51 commits)\n  remove rc for 0.13.1 final\n  0.13.1.rc3\n  qtconsole extras_require to whatsnew\n  Backport PR #2492: add missing 'qtconsole' extras_require\n  add 2480 to whatsnew\n  Backport PR #2480: Add deprecation warnings for sympyprinting\n  PR 2384 to whatsnew\n  mark 0.13.1.rc2\n  Backport PR #2384: Adapt inline backend to changes in matplotlib\n  mark 0.13.1.rc1\n  update 0.13.1 whatsnew lists\n  Backport PR #2479: use new _winapi instead of removed _subprocess\n  Backport PR #2437: don't let log cleanup prevent engine start\n  Backport PR #2405: clarify TaskScheduler.hwm doc\n  Backport PR #2377: Fix installation of man pages in Python 3\n  start 0.13.1 whatsnew\n  Backport PR #2373: fix missing imports in core.interactiveshell\n  Backport PR #2365: fix names of notebooks for download/save\n  Backport PR #2345: Remove references to 'version' no longer in argparse. Github issue #2343.\n  Backport PR #2347: adjust division error message checking to account for Python 3\n  ...", "commit_timestamp": "2013-08-09T16:53:41Z", "files": ["IPython/core/debugger.py", "IPython/core/display.py", "IPython/core/interactiveshell.py", "IPython/core/magic_arguments.py", "IPython/core/magics/osm.py", "IPython/core/release.py", "IPython/core/tests/test_debugger.py", "IPython/core/tests/test_interactiveshell.py", "IPython/core/tests/test_magic.py", "IPython/extensions/octavemagic.py", "IPython/extensions/storemagic.py", "IPython/extensions/sympyprinting.py", "IPython/external/ssh/tunnel.py", "IPython/frontend/html/notebook/handlers.py", "IPython/frontend/html/notebook/notebookapp.py", "IPython/frontend/html/notebook/notebookmanager.py", "IPython/frontend/qt/console/console_widget.py", "IPython/parallel/apps/baseapp.py", "IPython/parallel/apps/ipengineapp.py", "IPython/parallel/apps/launcher.py", "IPython/parallel/engine/engine.py", "IPython/parallel/error.py", "IPython/parallel/tests/test_view.py", "IPython/utils/jsonutil.py", "IPython/utils/tests/test_text.py", "IPython/utils/text.py", "IPython/zmq/entry_point.py", "IPython/zmq/ipkernel.py", "IPython/zmq/parentpoller.py", "IPython/zmq/pylab/backend_inline.py", "IPython/zmq/zmqshell.py", "setup.py", "setupbase.py", "tools/release_windows.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo3ZjcyYTFmYjM0OTI4ZGIwMjg3MWYzY2Q2Y2YxZDhiMDYyMGYwMjk5", "commit_message": "Update IPython/core/magic_arguments.py\n\nRemove references to 'version' no longer in argparse. Github issue #2343.", "commit_timestamp": "2012-08-26T15:12:39Z", "files": ["IPython/core/magic_arguments.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzpmZTcwOWNjOTgzNWVkYjE1YzUwOTg0NGYxN2I2MWY3MzM0Y2YxZGFk", "commit_message": "Merge pull request #2345 from 7andrew/master\n\nRemove references to 'version' no longer in argparse. Github issue #2343.", "commit_timestamp": "2012-08-29T09:53:28Z", "files": ["IPython/core/magic_arguments.py"]}], "labels": [], "created_at": "2012-08-26T14:17:15Z", "closed_at": "2012-08-29T16:07:27Z", "method": ["regex"]}
{"issue_number": 2315, "title": "Failure in test: \"Test we're not loading modules on startup that we shouldn't.\" ", "body": "There is a failure on windows (ba42b83). This is a line ending expectation problem,\n\n```\nFAIL: Test we're not loading modules on startup that we shouldn't.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"c:\\python27\\lib\\site-packages\\ipython-0.14.dev-py2.7.egg\\IPython\\core\\tests\\test_interactiveshell.py\", line 427, in test_extraneous_loads\n    tt.ipexec_validate(self.fname, out)\n  File \"c:\\python27\\lib\\site-packages\\ipython-0.14.dev-py2.7.egg\\IPython\\testing\\tools.py\", line 243, in ipexec_validate\n    nt.assert_equal(out.strip(), expected_out.strip())\nAssertionError: 'False\\r\\nFalse\\r\\nFalse' != 'False\\nFalse\\nFalse'\n    \"'False\\\\r\\\\nFalse\\\\r\\\\nFalse' != 'False\\\\nFalse\\\\nFalse'\" = '%s != %s' % (safe_repr('False\\r\\nFalse\\r\\nFalse'), safe_repr('False\\nFalse\\nFalse'))\n    \"'False\\\\r\\\\nFalse\\\\r\\\\nFalse' != 'False\\\\nFalse\\\\nFalse'\" = self._formatMessage(\"'False\\\\r\\\\nFalse\\\\r\\\\nFalse' != 'False\\\\nFalse\\\\nFalse'\", \"'False\\\\r\\\\nFalse\\\\r\\\\nFalse' != 'False\\\\nFalse\\\\nFalse'\")\n>>  raise self.failureException(\"'False\\\\r\\\\nFalse\\\\r\\\\nFalse' != 'False\\\\nFalse\\\\nFalse'\")\n```\n", "commits": [{"node_id": "MDY6Q29tbWl0MTUwNzk1NzpjZWQyMWNjOWU3MzU3ODczOWI5M2FhZTA4OGU3NThkYThjZmFhOTE1", "commit_message": "Normalize line endings for ipexec_validate, fix for #2315.\n\nMake sure line endings are the same both in the ipexec result and\nin the expected result.", "commit_timestamp": "2012-08-25T12:02:27Z", "files": ["IPython/testing/tools.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjViYjBhZTQ5YWUxNjg4NzgxNDlhNThlNTY4YWEyMDVjNGIyYTcyZjU=", "commit_message": "Merge pull request #2338 from jstenar/fix-2315\n\nNormalize line endings for ipexec_validate, fix for #2315.", "commit_timestamp": "2012-08-26T09:04:55Z", "files": ["IPython/testing/tests/test_tools.py", "IPython/testing/tools.py"]}, {"node_id": "MDY6Q29tbWl0MjM0NDA3MzpmYWY3ODdjOWFmNTkxYzljMGZkNjQwNzBhYzA5YmU2NDM2YWU3ZWM3", "commit_message": "Normalize line endings for ipexec_validate, fix for #2315.\n\nMake sure line endings are the same both in the ipexec result and\nin the expected result.", "commit_timestamp": "2012-09-05T12:46:02Z", "files": ["IPython/testing/tools.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzoxZDk5NTFlNDViMzM5MjExNGYwNTg5ZmIyZjljNjkwMDYyNGEzZTdj", "commit_message": "Normalize line endings for ipexec_validate, fix for #2315.\n\nMake sure line endings are the same both in the ipexec result and\nin the expected result.", "commit_timestamp": "2012-08-25T12:02:27Z", "files": ["IPython/testing/tools.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzpmNjMzZGYwZWYzNGNlMWRjYWQ4MDZmYTYzNDI2Y2UzZWMzNzYwNjYy", "commit_message": "Merge pull request #2338 from jstenar/fix-2315\n\nNormalize line endings for ipexec_validate, fix for #2315.", "commit_timestamp": "2012-08-26T09:04:55Z", "files": ["IPython/testing/tests/test_tools.py", "IPython/testing/tools.py"]}], "labels": ["bug", "testing"], "created_at": "2012-08-17T10:35:51Z", "closed_at": "2012-08-28T06:10:53Z", "method": ["label"]}
{"issue_number": 2314, "title": "HTML lists seem to interfere with the QtConsole display", "body": "Hi all,\n\nWe are trying to use the awesome QtConsole with some custom HTML output of our objects.\n\nSome of these objects contains HTML lists. But when we display them the following happens.\n\n![](http://i.imgur.com/emFVL.png)\n\nHopefully this is just an error in the way we are using the console, display objects, or HTML So we'd love to be corrected if that is the case. :)\n\nThanks!\n", "commits": [{"node_id": "MDY6Q29tbWl0MjkwOTI5MDo1MmJkYzFkNmVlNDYzNWVlZDAyOTM3YzdkMGRlN2RhN2U0OTczOWVk", "commit_message": "qtconsole: Create a prompt newline by inserting a new block (w/o formatting)\n\nCloses #2314", "commit_timestamp": "2012-08-31T19:01:51Z", "files": ["IPython/frontend/qt/console/console_widget.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjUyYmRjMWQ2ZWU0NjM1ZWVkMDI5MzdjN2QwZGU3ZGE3ZTQ5NzM5ZWQ=", "commit_message": "qtconsole: Create a prompt newline by inserting a new block (w/o formatting)\n\nCloses #2314", "commit_timestamp": "2012-08-31T19:01:51Z", "files": ["IPython/frontend/qt/console/console_widget.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo2OTA5NTMzNmFkMWYyZDQxYzZjMTZhZTBiNTQ4YmNkM2Q4MTFmMjA1", "commit_message": "qtconsole: Create a prompt newline by inserting a new block (w/o formatting)\n\nCloses #2314", "commit_timestamp": "2012-08-31T19:01:51Z", "files": ["IPython/frontend/qt/console/console_widget.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmQzNzkyYWYwZGNmNTA5YmEyMTQyZDVjNzlkNThhZmEwNGVlOGJjOTY=", "commit_message": "Merge pull request #2370 from bfroehle/qtconsole_append_block\n\nqtconsole: Create a prompt newline by inserting a new block (w/o formatting)", "commit_timestamp": "2012-09-06T20:23:45Z", "files": ["IPython/frontend/qt/console/console_widget.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmQzNzkyYWYwZGNmNTA5YmEyMTQyZDVjNzlkNThhZmEwNGVlOGJjOTY=", "commit_message": "Merge pull request #2370 from bfroehle/qtconsole_append_block\n\nqtconsole: Create a prompt newline by inserting a new block (w/o formatting)", "commit_timestamp": "2012-09-06T20:23:45Z", "files": ["IPython/frontend/qt/console/console_widget.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo3ODliMDkxMGM1NDI4OTU0MDZhMWZlYWM0ZjJmMjY2Yzk2ZDUyYTRm", "commit_message": "Merge pull request #2370 from bfroehle/qtconsole_append_block\n\nqtconsole: Create a prompt newline by inserting a new block (w/o formatting)", "commit_timestamp": "2012-09-06T20:23:45Z", "files": ["IPython/frontend/qt/console/console_widget.py"]}], "labels": ["bug", "notebook"], "created_at": "2012-08-17T05:36:44Z", "closed_at": "2012-09-06T20:23:46Z", "linked_pr_number": [2314], "method": ["label"]}
{"issue_number": 2303, "title": " remote tracebacks broken since 952d0d6 (PR #2223)", "body": "since 952d0d68d22860bf55fca35c1573a77a4455a7ed PR #2223 broke remote tracebacks:\n\n```\nfrom IPython.parallel import Client\nc = Client()\ndv = c[:]\ndv.execute(\"from nump import *\").get()\n```\n\noutputs \"No traceback available\" instead of the tracebacks\nthis affects HEAD and the 0.13.1 branch\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU5NDQ2OjA5YjQ0MGFlMGYzNzllNTEyM2Y2NmM3Mzg5OWVkOGE4NDk1ZGJmZmQ=", "commit_message": "RemoteError._render_traceback_ calls self.render_traceback\n\nrather than an alias\n\nThere are two options here:\n\n1. `_render_traceback_`  should *call* render_traceback\n2. any subclass that redefines render_traceback must also redefine `_render_traceback_`\n\nI went with 1., which is more efficient code-wise when subclassing RemoteError\n(would prevent future cases of this same mistake),\nbut less efficient execution-wise, because it involves an extra function call.\n\ncloses #2303", "commit_timestamp": "2012-08-14T20:46:09Z", "files": ["IPython/parallel/error.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjA5YjQ0MGFlMGYzNzllNTEyM2Y2NmM3Mzg5OWVkOGE4NDk1ZGJmZmQ=", "commit_message": "RemoteError._render_traceback_ calls self.render_traceback\n\nrather than an alias\n\nThere are two options here:\n\n1. `_render_traceback_`  should *call* render_traceback\n2. any subclass that redefines render_traceback must also redefine `_render_traceback_`\n\nI went with 1., which is more efficient code-wise when subclassing RemoteError\n(would prevent future cases of this same mistake),\nbut less efficient execution-wise, because it involves an extra function call.\n\ncloses #2303", "commit_timestamp": "2012-08-14T20:46:09Z", "files": ["IPython/parallel/error.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjU4MzM1YWQ3ZjkwOTliMjVkNzQyZTc0ZGMyMDU4NjM3YTk2MjY2MTg=", "commit_message": "Merge pull request #2305 from minrk/render_traceback\n\nRemoteError._render_traceback_ calls self.render_traceback\r\n\r\nrather than an alias, which can be broken by subclassing\r\n\r\ncloses #2303", "commit_timestamp": "2012-08-26T23:16:19Z", "files": ["IPython/parallel/error.py", "IPython/parallel/tests/test_view.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjcwNjk4MDNmOGQzNGQ2YTQ1OGJjYjc0ZWYyYTUyMjM0YzY3OTFlYzA=", "commit_message": "Backport PR #2305: RemoteError._render_traceback_ calls self.render_traceback\n\nrather than an alias\n\nThere are two options here:\n\n1. `_render_traceback_`  should *call* render_traceback\n2. any subclass that redefines render_traceback must also redefine `_render_traceback_`\n\nI went with 1., which is more efficient code-wise when subclassing RemoteError\n(would prevent future cases of this same mistake),\nbut less efficient execution-wise, because it involves an extra function call.\n\ncloses #2303", "commit_timestamp": "2012-08-26T23:17:34Z", "files": ["IPython/parallel/error.py", "IPython/parallel/tests/test_view.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjBlNDI2MTNmNWRjMTM5ZDFkOTk4YzYxYjk4ODkzNzMyM2YxZDMwZTc=", "commit_message": "Backport PR #2305: RemoteError._render_traceback_ calls self.render_traceback\n\nrather than an alias\n\nThere are two options here:\n\n1. `_render_traceback_`  should *call* render_traceback\n2. any subclass that redefines render_traceback must also redefine `_render_traceback_`\n\nI went with 1., which is more efficient code-wise when subclassing RemoteError\n(would prevent future cases of this same mistake),\nbut less efficient execution-wise, because it involves an extra function call.\n\ncloses #2303", "commit_timestamp": "2012-09-01T21:03:37Z", "files": ["IPython/parallel/error.py", "IPython/parallel/tests/test_view.py"]}, {"node_id": "MDY6Q29tbWl0MjM0NDA3MzpjYjk1OWIwN2U2YWY5YTRjNmY4MmI0ZGQ5NjI2MzA0ODQ4NWJmMmFl", "commit_message": "RemoteError._render_traceback_ calls self.render_traceback\n\nrather than an alias\n\nThere are two options here:\n\n1. `_render_traceback_`  should *call* render_traceback\n2. any subclass that redefines render_traceback must also redefine `_render_traceback_`\n\nI went with 1., which is more efficient code-wise when subclassing RemoteError\n(would prevent future cases of this same mistake),\nbut less efficient execution-wise, because it involves an extra function call.\n\ncloses #2303", "commit_timestamp": "2012-09-05T12:46:01Z", "files": ["IPython/parallel/error.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzpkMDQyZjFlMWRmZGM5NjVhOWNjZGMxN2JmNTNhODdlMzczMzEwYTdk", "commit_message": "RemoteError._render_traceback_ calls self.render_traceback\n\nrather than an alias\n\nThere are two options here:\n\n1. `_render_traceback_`  should *call* render_traceback\n2. any subclass that redefines render_traceback must also redefine `_render_traceback_`\n\nI went with 1., which is more efficient code-wise when subclassing RemoteError\n(would prevent future cases of this same mistake),\nbut less efficient execution-wise, because it involves an extra function call.\n\ncloses #2303", "commit_timestamp": "2012-08-14T20:46:09Z", "files": ["IPython/parallel/error.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzoxZDAxYTFiNjJiZWQ4MzZiNWJmODY5NjhkMmFiMmQwOTMxN2JiMWE5", "commit_message": "Merge pull request #2305 from minrk/render_traceback\n\nRemoteError._render_traceback_ calls self.render_traceback\r\n\r\nrather than an alias, which can be broken by subclassing\r\n\r\ncloses #2303", "commit_timestamp": "2012-08-26T23:16:19Z", "files": ["IPython/parallel/error.py", "IPython/parallel/tests/test_view.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjU4MzM1YWQ3ZjkwOTliMjVkNzQyZTc0ZGMyMDU4NjM3YTk2MjY2MTg=", "commit_message": "Merge pull request #2305 from minrk/render_traceback\n\nRemoteError._render_traceback_ calls self.render_traceback\r\n\r\nrather than an alias, which can be broken by subclassing\r\n\r\ncloses #2303", "commit_timestamp": "2012-08-26T23:16:19Z", "files": ["IPython/parallel/error.py", "IPython/parallel/tests/test_view.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjU4MzM1YWQ3ZjkwOTliMjVkNzQyZTc0ZGMyMDU4NjM3YTk2MjY2MTg=", "commit_message": "Merge pull request #2305 from minrk/render_traceback\n\nRemoteError._render_traceback_ calls self.render_traceback\r\n\r\nrather than an alias, which can be broken by subclassing\r\n\r\ncloses #2303", "commit_timestamp": "2012-08-26T23:16:19Z", "files": ["IPython/parallel/error.py", "IPython/parallel/tests/test_view.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjcwNjk4MDNmOGQzNGQ2YTQ1OGJjYjc0ZWYyYTUyMjM0YzY3OTFlYzA=", "commit_message": "Backport PR #2305: RemoteError._render_traceback_ calls self.render_traceback\n\nrather than an alias\n\nThere are two options here:\n\n1. `_render_traceback_`  should *call* render_traceback\n2. any subclass that redefines render_traceback must also redefine `_render_traceback_`\n\nI went with 1., which is more efficient code-wise when subclassing RemoteError\n(would prevent future cases of this same mistake),\nbut less efficient execution-wise, because it involves an extra function call.\n\ncloses #2303", "commit_timestamp": "2012-08-26T23:17:34Z", "files": ["IPython/parallel/error.py", "IPython/parallel/tests/test_view.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjAxMTIyMmE1MTI2NGU1YmU4MTc5YzhjMmMxMjZiNDZiM2M5MDkxMDA=", "commit_message": "Merge pull request #2347 from minrk/byzero\n\nadjust division error message checking to account for Python 3\r\n\r\nfixes Python3-specific typo introduced #2305", "commit_timestamp": "2012-08-27T00:07:38Z", "files": ["IPython/parallel/tests/test_view.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmNmYzU2OTJkODYxMzc5YjA3NzQ4MjdhNzA4ZmY5MTczYzg0MWIyYWY=", "commit_message": "Backport PR #2347: adjust division error message checking to account for Python 3\n\nfix Python3-specific typo introduced #2305", "commit_timestamp": "2012-08-27T00:08:08Z", "files": ["IPython/parallel/tests/test_view.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjBlNDI2MTNmNWRjMTM5ZDFkOTk4YzYxYjk4ODkzNzMyM2YxZDMwZTc=", "commit_message": "Backport PR #2305: RemoteError._render_traceback_ calls self.render_traceback\n\nrather than an alias\n\nThere are two options here:\n\n1. `_render_traceback_`  should *call* render_traceback\n2. any subclass that redefines render_traceback must also redefine `_render_traceback_`\n\nI went with 1., which is more efficient code-wise when subclassing RemoteError\n(would prevent future cases of this same mistake),\nbut less efficient execution-wise, because it involves an extra function call.\n\ncloses #2303", "commit_timestamp": "2012-09-01T21:03:37Z", "files": ["IPython/parallel/error.py", "IPython/parallel/tests/test_view.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjZkNjc3ZjUxOGVjY2ZiZTE3MGU1MjJmNjJhNjcyZmMyMTY0NzE1YmI=", "commit_message": "Backport PR #2347: adjust division error message checking to account for Python 3\n\nfix Python3-specific typo introduced #2305", "commit_timestamp": "2012-09-01T21:03:37Z", "files": ["IPython/parallel/tests/test_view.py"]}], "labels": ["bug", "regression"], "created_at": "2012-08-14T16:56:42Z", "closed_at": "2012-08-26T23:16:20Z", "linked_pr_number": [2303], "method": ["label", "regex"]}
{"issue_number": 2293, "title": "IPEP 2: Input transformations", "body": "- Created: 2012-08-12\n- Author: Thomas Kluyver\n\nThe state of our input transformation machinery has come up a couple of times recently, and I'd promised to look into it.\n## Requirements\n\nA line-by-line input filter is needed for two main reasons:\n- We need to avoid transforming content inside multi-line strings.\n- Line-based frontends (the terminal and Qt console) decide whether another line is required based on attempting to compile the current buffer as Python code. So constructs like %magic commands, which aren't Python syntax, have to be intercepted as each line is entered.\n\nWe also need to do some transformations which are only possible with access to the interactive namespace, i.e. they must be done in the kernel. Examples include the autocall system (which lets you type `exit` to exit), macros, automagics (using magics without the % prefix) and aliases for shell commands (like `ls`). We refer to these as 'dynamic transformations'.\n\nFinally, we need an extensible system that third parties can hook into without having to monkeypatch lots of our code.\n## Current situation\n\nInputSplitter does line-by-line transformation (the name's a little confusing, as its primary role is no longer splitting input). It also handles cell magics, but the implementation feels somewhat awkward to me. For line-based frontends, inputsplitter is run twice: once by the frontend, and again by `run_cell()`, which is called with the raw, untransformed code.\n\nPrefilter does dynamic transformations using a mixture of Transformer subclasses and Checker/Handler subclass pairs. We've struck the compromise that dynamic transforms only happen on single line cells, because the frontend can't make them valid syntax on its own. This is the primary extension point for third parties, but it's somewhat awkward to use (subclassing from Transformer isn't simple), and doesn't work as extension authors might expect (only transforms single lines).\n\nSeveral bits of functionality are duplicated in inputsplitter and prefilter: the transformations for `%magic`, `!system`, assigning versions of both (`foo = %magic`), `help?` (and `?help`, `morehelp??`), escapes for various kinds of call (`/callme arg`, `,quoteseparate a b c`, `;quotetogether a b c`), and stripping Python/IPython input prompts. As far as I know, we only use the inputsplitter versions of these functions, since Fernando fixed `%paste` to use inputsplitter.\n## Suggestions\n1. I suggest that we make InputSplitter the main point of contact for extension authors to transform input. It works on multi-line cells, and knows to ignore text within strings, which almost all transformations will want to leave alone. This will involve developing InputSplitter to make it easier to extend (details to be fleshed out in discussion), and improving the documentation to point extension authors towards this rather than prefilter.\n2. For all the duplicated functionality, strip it out of prefilter and rely on the inputsplitter versions.\n3. Rename InputSplitter to something more meaningful, before many third parties are depending on it. InputAccumulator? InputFilter?\n4. Allow inputsplitter transformers to maintain state between lines. This should allow a less special-cased system for catching cell magics, as well as correctly stripping the prompts in a pasted block like the following::\n\n```\n>>> a = \"\"\"1\n... 2\n... 3\"\"\"\n```\n1. Add a later transformation hook which acts on the AST, rather than a string of the code. This would support cases like SymPy's intention to wrap integer literals ([reference](http://article.gmane.org/gmane.comp.python.ipython.user/8922)). The `ast` module already has a [NodeTransformer](http://docs.python.org/library/ast#ast.NodeTransformer) class to support this kind of thing. This approach is limited to code that is already valid Python syntax before the transformation, but it should be powerful and reliable in those situations.\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU4NTE4OjA2YTdhNTc0OGM5MDA0YzQ5ZmZlZGJlZGMxOGY1MjQxNWM3NGM2NWI=", "commit_message": "Merge pull request #2299 from takluyver/remove-duplicate-input-transforms\n\nRemove code from prefilter that duplicates functionality in inputsplitter\r\n\r\nThis is the first step towards implementing IPEP 2 (#2293). Removed all the static transformations from prefilter, because we're relying on the equivalent functionality in inputsplitter.\r\n\r\nNote that this is a backwards-incompatible change for anyone who might have relied on the low-level details of the prefiltering machinery.  Regular users of the IPython applications themselves will not see any changes in behavior.", "commit_timestamp": "2012-08-13T22:42:06Z", "files": ["IPython/core/prefilter.py", "IPython/core/tests/test_handlers.py", "IPython/core/tests/test_magic.py", "IPython/core/tests/test_prefilter.py", "IPython/testing/plugin/ipdoctest.py"]}], "labels": [], "created_at": "2012-08-12T17:25:02Z", "closed_at": "2013-06-29T19:50:02Z", "method": ["regex"]}
{"issue_number": 2279, "title": "Setting `__file__` to None breaks Mayavi import", "body": "As discussed at the bottom of #1831, after its merge it became impossible to import mayavi, with this traceback:\n\n```\nIn [1]: import mayavi.mlab\n---------------------------------------------------------------------------\nAttributeError                            Traceback (most recent call last)\n<ipython-input-1-c7e202e132f1> in <module>()\n----> 1 import mayavi.mlab\n\n/usr/lib/python2.7/dist-packages/mayavi/mlab.py in <module>()\n     25 \n     26 # Mayavi imports\n---> 27 from mayavi.tools.camera import view, roll, yaw, pitch, move\n     28 from mayavi.tools.figure import figure, clf, gcf, savefig, \\\n     29     draw, sync_camera, close, screenshot\n\n/usr/lib/python2.7/dist-packages/mayavi/tools/camera.py in <module>()\n     21 # We can't use gcf, as it creates a circular import in camera management\n     22 # routines.\n---> 23 from engine_manager import get_engine\n     24 \n     25 def world_to_display(x, y, z, figure=None):\n\n/usr/lib/python2.7/dist-packages/mayavi/tools/engine_manager.py in <module>()\n     10 \n     11 # Local imports\n---> 12 from mayavi.preferences.api import preference_manager\n     13 from mayavi.core.registry import registry\n     14 from mayavi.core.engine import Engine\n\n/usr/lib/python2.7/dist-packages/mayavi/preferences/api.py in <module>()\n      2 \n      3 # The global PreferenceManager instance\n----> 4 from preference_manager import preference_manager\n      5 from bindings import set_scene_preferences, get_scene_preferences\n\n/usr/lib/python2.7/dist-packages/mayavi/preferences/preference_manager.py in <module>()\n    126 # A Global preference manager that all other modules can use.\n    127 \n--> 128 preference_manager = PreferenceManager()\n    129 \n\n/usr/lib/python2.7/dist-packages/mayavi/preferences/preference_manager.py in __init__(self, **traits)\n     79 \n     80         if 'preferences' not in traits:\n---> 81             self._load_preferences()\n     82 \n     83     def _preferences_default(self):\n\n/usr/lib/python2.7/dist-packages/mayavi/preferences/preference_manager.py in _load_preferences(self)\n     99         \"\"\"Load the default preferences.\"\"\"\n    100         # Save current application_home.\n--> 101         app_home = ETSConfig.get_application_home()\n    102         # Set it to where the mayavi preferences are temporarily.\n    103         path = join(ETSConfig.get_application_data(), ID)\n\n/usr/lib/python2.7/dist-packages/traits/etsconfig/etsconfig.pyc in get_application_home(self, create)\n    127             self._application_home = path.join(\n    128                                 self.get_application_data(create=create),\n--> 129                                 self._get_application_dirname())\n    130 \n    131         return self._application_home\n\n/usr/lib/python2.7/dist-packages/traits/etsconfig/etsconfig.pyc in _get_application_dirname(self)\n    338         if main_mod is not None:\n    339             if hasattr(main_mod, '__file__'):\n--> 340                 main_mod_file = path.abspath(main_mod.__file__)\n    341                 dirname = path.basename(path.dirname(main_mod_file))\n    342 \n\n/usr/lib/python2.7/posixpath.pyc in abspath(path)\n    341 def abspath(path):\n    342     \"\"\"Return an absolute path.\"\"\"\n--> 343     if not isabs(path):\n    344         if isinstance(path, unicode):\n    345             cwd = os.getcwdu()\n\n/usr/lib/python2.7/posixpath.pyc in isabs(s)\n     51 def isabs(s):\n     52     \"\"\"Test whether a path is absolute\"\"\"\n---> 53     return s.startswith('/')\n     54 \n     55 \n\nAttributeError: 'NoneType' object has no attribute 'startswith'\n```\n\nIt may be that there's an issue with mayavi (and if so, we can report it upstream), but breaking use of Mayavi is not acceptable.  We may have to temporarily revert #1831 altogether, until we find a cleaner solution to #1814...\n\nI'm not 100% sure on the semantics of `__file__` so there may be a better solution that undoing #1831 completely.\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU4NTE4OmQzZDM3YTNhNzA3ZTUyNTExMzQ0NjA4OWY0MTI1YzEzM2MzMDJkODk=", "commit_message": "Merge pull request #2432 from bfroehle/revert_1831\n\nRevert #1831, the `__file__` injection in safe_execfile / safe_execfile_ipy.\r\n\r\nThis reverts commit 2717feb, reversing changes made to ea4f608.\r\n\r\nPull request #1831 (fix #1814 set __file__ when running .ipy files) has been the source of a lot of grief:\r\n\r\n#2279: Setting __file__ to None breaks Mayavi import\r\n#2429: Using warnings.warn() results in TypeError\r\nIn general the patch was inappropriate because it:\r\n1. Fails to properly restore the context, by setting __file__ to None rather than deleting it.\r\n2. Sets __file__ in the wrong dictionary (self.user_ns rather than where[0]).", "commit_timestamp": "2012-09-30T09:42:54Z", "files": ["IPython/core/interactiveshell.py", "IPython/core/shellapp.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzpmNWZjMjU2MWUwNDEzNDZjYjIwNzIwOTY4Y2E4ZDUwZmQ2Y2JmNjgw", "commit_message": "Merge pull request #2432 from bfroehle/revert_1831\n\nRevert #1831, the `__file__` injection in safe_execfile / safe_execfile_ipy.\r\n\r\nThis reverts commit 2717feb, reversing changes made to ea4f608.\r\n\r\nPull request #1831 (fix #1814 set __file__ when running .ipy files) has been the source of a lot of grief:\r\n\r\n#2279: Setting __file__ to None breaks Mayavi import\r\n#2429: Using warnings.warn() results in TypeError\r\nIn general the patch was inappropriate because it:\r\n1. Fails to properly restore the context, by setting __file__ to None rather than deleting it.\r\n2. Sets __file__ in the wrong dictionary (self.user_ns rather than where[0]).", "commit_timestamp": "2012-09-30T09:42:54Z", "files": ["IPython/core/interactiveshell.py", "IPython/core/shellapp.py"]}], "labels": ["important", "bug"], "created_at": "2012-08-10T08:36:05Z", "closed_at": "2013-07-04T00:24:52Z", "method": ["label"]}
{"issue_number": 2266, "title": "SSH passwordless check with OpenSSH checks for the wrong thing", "body": "The pattern passed to pexpect is '[Ppassword]:', which looks for any of those letters followed by ':', and not, as the intention seems to be, for 'Password:'.  The correct pattern is '[Pp]assword:'.\n\nThis is at IPython/external/ssh/tunnel.py:100.\n", "commits": [{"node_id": "MDY6Q29tbWl0NTM2NzYxNzpmOWE4N2QyZWQ3ZGE1MGY0NTcyZTUxMGVjNDY3MmE3NmU1YjUxOWEz", "commit_message": "fix check for passwordless OpenSSH (fixes #2266)\n\npexpect takes a regular expression, so we want '[Pp]assword:', not\n'[Ppassword]:'.", "commit_timestamp": "2012-08-10T09:55:24Z", "files": ["IPython/external/ssh/tunnel.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmY5YTg3ZDJlZDdkYTUwZjQ1NzJlNTEwZWM0NjcyYTc2ZTViNTE5YTM=", "commit_message": "fix check for passwordless OpenSSH (fixes #2266)\n\npexpect takes a regular expression, so we want '[Pp]assword:', not\n'[Ppassword]:'.", "commit_timestamp": "2012-08-10T09:55:24Z", "files": ["IPython/external/ssh/tunnel.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjMxYWZiNjJmNDJjMGIyYTAwNjhhYjk3YWNjMmU5N2NiMGE1NmYxZDc=", "commit_message": "Merge pull request #2280 from ikn/master\n\nfix SSH passwordless check for OpenSSH\r\n\r\ntypo in pexpect pattern\r\n\r\ncloses #2266", "commit_timestamp": "2012-08-11T04:32:53Z", "files": ["IPython/external/ssh/tunnel.py"]}, {"node_id": "MDY6Q29tbWl0MjM0NDA3MzpmNmI0MWRjZTUxNTNmMDU0ZjM1MDViODlmYTU0NDYxMTVlM2UwYjY4", "commit_message": "fix check for passwordless OpenSSH (fixes #2266)\n\npexpect takes a regular expression, so we want '[Pp]assword:', not\n'[Ppassword]:'.", "commit_timestamp": "2012-09-05T12:45:59Z", "files": ["IPython/external/ssh/tunnel.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzpjNGJmNTc0NzdkOGQ1NDMwZWQ3NzNiNDYxYWE4ZTc5Y2MwNDMzOTNi", "commit_message": "fix check for passwordless OpenSSH (fixes #2266)\n\npexpect takes a regular expression, so we want '[Pp]assword:', not\n'[Ppassword]:'.", "commit_timestamp": "2012-08-10T09:55:24Z", "files": ["IPython/external/ssh/tunnel.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo2Y2RkZGFiMjBlM2ExYjMyZmY3ZDg0Nzc0MjMwMDhmM2ZkZjcxNzU3", "commit_message": "Merge pull request #2280 from ikn/master\n\nfix SSH passwordless check for OpenSSH\r\n\r\ntypo in pexpect pattern\r\n\r\ncloses #2266", "commit_timestamp": "2012-08-11T04:32:53Z", "files": ["IPython/external/ssh/tunnel.py"]}], "labels": ["bug"], "created_at": "2012-08-07T15:50:45Z", "closed_at": "2012-08-11T04:32:54Z", "method": ["label"]}
{"issue_number": 2259, "title": "git-mpr is currently broken", "body": "I just tried using it and got this:\n\n```\n(master)dreamweaver[ipython]> git mpr 2258\nTraceback (most recent call last):\n  File \"/home/fperez/usr/bin//git-mpr\", line 115, in <module>\n    main()\n  File \"/home/fperez/usr/bin//git-mpr\", line 103, in main\n    elif args.merge:\nAttributeError: 'Namespace' object has no attribute 'merge'\n(master)dreamweaver[ipython]> git mpr\nTraceback (most recent call last):\n  File \"/home/fperez/usr/bin//git-mpr\", line 115, in <module>\n    main()\n  File \"/home/fperez/usr/bin//git-mpr\", line 103, in main\n    elif args.merge:\nAttributeError: 'Namespace' object has no attribute 'merge'\n```\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU4NTE4OjEyM2M0ZDY1NzM1MjE1MjYxODc0MjQ4YmUyYmRkYzhiODg5NDRkZmE=", "commit_message": "Merge pull request #2260 from Carreau/fix-mpr-again\n\nfix mpr again.\r\n\r\nCloses #2259.", "commit_timestamp": "2012-08-05T19:46:38Z", "files": ["tools/git-mpr.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo4N2ZiNzA4YTg5ZDU3ZDQxYjAyYzI4ZDJlZGJmNDA0MTFmOTA0Mzcx", "commit_message": "Merge pull request #2260 from Carreau/fix-mpr-again\n\nfix mpr again.\r\n\r\nCloses #2259.", "commit_timestamp": "2012-08-05T19:46:38Z", "files": ["tools/git-mpr.py"]}], "labels": [], "created_at": "2012-08-05T18:47:55Z", "closed_at": "2012-08-05T19:46:39Z", "method": ["regex"]}
{"issue_number": 2252, "title": "%paste throws an exception with empty clipboard", "body": "1. `ipython --quick` on 0.14dev 079f8edc2bb42d1c6ce3f0033cacd4030c0bd29a, OS X (bug also at rel-0.13 but not rel-0.12)\n2. Empty system clipboard\n3. %paste\n\n```\nlib/python/ipython ipython --quick                                           ()\nPython 2.7.2 (default, Aug  4 2011, 16:59:19) \nType \"copyright\", \"credits\" or \"license\" for more information.\n\nIPython 0.14.dev -- An enhanced Interactive Python.\n?         -> Introduction and overview of IPython's features.\n%quickref -> Quick reference.\nhelp      -> Python's own help system.\nobject?   -> Details about 'object', use 'object??' for extra details.\n\nIn [1]: import IPython ; IPython.__version__\nOut[1]: '0.14.dev'\n\nIn [2]: %paste\n\n\n## -- End pasted text --\n---------------------------------------------------------------------------\nIndexError                                Traceback (most recent call last)\n<ipython-input-2-da94f22893b1> in <module>()\n----> 1 get_ipython().magic(u'paste')\n\n/Users/davison/lib/python/ipython/IPython/core/interactiveshell.py in magic(self, arg_s)\n   2167         magic_name, _, magic_arg_s = arg_s.partition(' ')\n   2168         magic_name = magic_name.lstrip(prefilter.ESC_MAGIC)\n-> 2169         return self.run_line_magic(magic_name, magic_arg_s)\n   2170 \n   2171     #-------------------------------------------------------------------------\n\n/Users/davison/lib/python/ipython/IPython/core/interactiveshell.py in run_line_magic(self, magic_name, line)\n   2093                 args.append(sys._getframe(stack_depth).f_locals)\n   2094             with self.builtin_trap:\n-> 2095                 result = fn(*args)\n   2096             return result\n   2097 \n\n/Users/davison/lib/python/ipython/IPython/frontend/terminal/interactiveshell.py in paste(self, parameter_s)\n\n/Users/davison/lib/python/ipython/IPython/core/magic.py in <lambda>(f, *a, **k)\n    189     # but it's overkill for just that one bit of state.\n    190     def magic_deco(arg):\n--> 191         call = lambda f, *a, **k: f(*a, **k)\n    192 \n    193         if callable(arg):\n\n/Users/davison/lib/python/ipython/IPython/frontend/terminal/interactiveshell.py in paste(self, parameter_s)\n    288             write(\"## -- End pasted text --\\n\")\n    289 \n--> 290         self.store_or_execute(block, name)\n    291 \n    292     # Class-level: add a '%cls' magic only on Windows\n\n/Users/davison/lib/python/ipython/IPython/frontend/terminal/interactiveshell.py in store_or_execute(self, block, name)\n    151         \"\"\" Execute a block, or store it in a variable, per the user's request.\n    152         \"\"\"\n--> 153         b = self.cleanup_input(block)\n    154         if name:\n    155             # If storing it for further editing\n\n/Users/davison/lib/python/ipython/IPython/frontend/terminal/interactiveshell.py in cleanup_input(self, block)\n    117         # Remove email quotes first.  These must be consistently applied to\n    118         # *all* lines to be removed\n--> 119         b = strip_email_quotes(b)\n    120 \n    121         # Split the input into independent sub-blocks so we can later do\n\n/Users/davison/lib/python/ipython/IPython/utils/text.py in strip_email_quotes(text)\n    600             break\n    601     else:\n--> 602         prefix = long_substr(list(matches))\n    603         if prefix:\n    604             strip = len(prefix)\n\n/Users/davison/lib/python/ipython/IPython/utils/text.py in long_substr(data)\n    555                     substr = data[0][i:i+j]\n    556     else:\n--> 557         substr = data[0]\n    558     return substr\n    559 \n\nIndexError: list index out of range\n```\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU4NTE4OmYwNDNiNGZmMmViNGM2YzdlMzUwMDRhZDBkZGFmY2EyZDlhMjI1NGE=", "commit_message": "Backport PR #2261: Fix: longest_substr([]) -> ''\n\nPreviously the algorithm used to find the longest common starting substring\nunintentionally raised an error when it was called on an empty list.\n\nThis should fix the issue of an error being raised when running %paste\non an empty clipboard (#2252).", "commit_timestamp": "2012-08-09T07:49:46Z", "files": ["IPython/utils/tests/test_text.py", "IPython/utils/text.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmMxNjZhYTA0MzAxNjkyMWU1YzM5MTBjZTQzNjhhZjZkODdkMWFmYTA=", "commit_message": "Backport PR #2261: Fix: longest_substr([]) -> ''\n\nPreviously the algorithm used to find the longest common starting substring\nunintentionally raised an error when it was called on an empty list.\n\nThis should fix the issue of an error being raised when running %paste\non an empty clipboard (#2252).", "commit_timestamp": "2012-09-01T21:03:36Z", "files": ["IPython/utils/tests/test_text.py", "IPython/utils/text.py"]}], "labels": ["bug"], "created_at": "2012-08-04T21:56:08Z", "closed_at": "2012-08-06T00:59:37Z", "method": ["label", "regex"]}
{"issue_number": 2244, "title": "small issue: wrong printout", "body": "The ipython notebook proclaims:\n\"WARNING: the notebook server is listening on all IP addresses but not using any encryption or authentication\"\n\nalthough it is using authentication (but it doesn't use encryption). \n\nThat should be changed to:\n\"WARNING: the notebook server is listening on all IP addresses but is not using BOTH encryption and authentication\"\n", "commits": [{"node_id": "MDY6Q29tbWl0NjY1NTcwNzpjYWRiZmE1Mzc4OTk1MjY1NzA1OWM1NjYxOTA5YjA1MmMzN2ZhNWZk", "commit_message": "Refactored warning printout as per Issue #2244", "commit_timestamp": "2012-11-13T16:49:34Z", "files": ["IPython/frontend/html/notebook/notebookapp.py"]}, {"node_id": "MDY6Q29tbWl0NjY1NTcwNzo3NzcyOGZiNTUzZjA3NzliOTNlMzMwMzQ3MDhiZWUyZTQyMzI5MmZk", "commit_message": "Refactored warning printout as per Issue #2244", "commit_timestamp": "2012-11-13T22:11:03Z", "files": ["IPython/frontend/html/notebook/notebookapp.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjRlNzMwMjkxOTQxYjFiYmJiMTQxZGJmMTRjNzc3MTk5Zjk3MDM4MzY=", "commit_message": "Merge pull request #2574 from dkua/Fix#2244\n\nReformatted the warning message of notebook server starting.\r\n\r\nPublic IP without SSL should prompt a warning.\r\nPublic IP in read-write mode and no password, also a warning.\r\n\r\nFix #2244", "commit_timestamp": "2012-11-17T17:02:02Z", "files": ["IPython/frontend/html/notebook/notebookapp.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmY1ZjU1YTBmM2I4MGJmZTZkNGZiNmM5MDM2ZDI5MzFlZmFhYzVmOGE=", "commit_message": "Backport PR #2574: Fix #2244\n\nReformatted the warning message as per the issue and changed some of the original logic to be more readable as advised by Fernando.", "commit_timestamp": "2013-03-04T23:01:04Z", "files": ["IPython/frontend/html/notebook/notebookapp.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo4Njg3Mzc2NTA1YTk0ZThmYTYwMmQ4NjExNTQwNmJkMzhkNTY5YzRj", "commit_message": "Refactored warning printout as per Issue #2244", "commit_timestamp": "2012-11-13T22:11:03Z", "files": ["IPython/frontend/html/notebook/notebookapp.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzoxMTViM2EyYWY3NzkzMjRhYTdkODhlMjgzNjcxOWY5ZGM5MDdiYjFi", "commit_message": "Merge pull request #2574 from dkua/Fix#2244\n\nReformatted the warning message of notebook server starting.\r\n\r\nPublic IP without SSL should prompt a warning.\r\nPublic IP in read-write mode and no password, also a warning.\r\n\r\nFix #2244", "commit_timestamp": "2012-11-17T17:02:02Z", "files": ["IPython/frontend/html/notebook/notebookapp.py"]}], "labels": ["documentation", "bug"], "created_at": "2012-08-03T21:13:01Z", "closed_at": "2012-11-17T17:02:04Z", "method": ["label"]}
{"issue_number": 2239, "title": "can't use parallel.Reference in view.map", "body": "This is due to the more conservative serialization not walking down into containers for canning/uncanning.\n\nWorks:\n\n```\nview.apply_sync(lambda x:x, parallel.Reference('a'))\n```\n\nDoesn't work:\n\n```\nview.map_sync(lambda x:x, [parallel.Reference('a')])\n```\n\nOr, for that matter:\n\n```\nview.apply_sync(lambda x:x, [parallel.Reference('a')])\n```\n\nfor the same reason: because the _list itself_ is canned, and not its contents.\n\nI think I can rework things a little bit so that it will dive exactly one level down, which would catch this case, and any other first-level containers of special objects, while still avoiding arbitrary inspection of nested containers.\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU4NTE4Ojc1YzY2Yzg3ODJhZThhZTZhYThiNWQxZDQ1MTdhYzUyZTgzYjgyNDA=", "commit_message": "Merge pull request #2246 from minrk/canning_depth\n\nserialize individual args/kwargs rather than the containers\r\n\r\nThis allows specials to be handled inside containers as args/kwargs\r\n\r\nIt is less efficient than before (still more efficient than 0.13) in cases where there is a very large number of simple arguments, but I think that generally the number of arguments is modest, and simple cases of small containers of arrays/References are likely (as most readily demonstrated by use in map).\r\n\r\nThe relevant behaviors are tested.\r\n\r\ncloses #2239", "commit_timestamp": "2012-08-09T22:52:45Z", "files": ["IPython/parallel/tests/test_view.py", "IPython/zmq/serialize.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo1Mjg0YTQ4MWM3NzMxM2FiNjM2NzM3YTQxMzQwYzM0NTdmYzk0Mzhm", "commit_message": "Merge pull request #2246 from minrk/canning_depth\n\nserialize individual args/kwargs rather than the containers\r\n\r\nThis allows specials to be handled inside containers as args/kwargs\r\n\r\nIt is less efficient than before (still more efficient than 0.13) in cases where there is a very large number of simple arguments, but I think that generally the number of arguments is modest, and simple cases of small containers of arrays/References are likely (as most readily demonstrated by use in map).\r\n\r\nThe relevant behaviors are tested.\r\n\r\ncloses #2239", "commit_timestamp": "2012-08-09T22:52:45Z", "files": ["IPython/parallel/tests/test_view.py", "IPython/zmq/serialize.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4Ojc1YzY2Yzg3ODJhZThhZTZhYThiNWQxZDQ1MTdhYzUyZTgzYjgyNDA=", "commit_message": "Merge pull request #2246 from minrk/canning_depth\n\nserialize individual args/kwargs rather than the containers\r\n\r\nThis allows specials to be handled inside containers as args/kwargs\r\n\r\nIt is less efficient than before (still more efficient than 0.13) in cases where there is a very large number of simple arguments, but I think that generally the number of arguments is modest, and simple cases of small containers of arrays/References are likely (as most readily demonstrated by use in map).\r\n\r\nThe relevant behaviors are tested.\r\n\r\ncloses #2239", "commit_timestamp": "2012-08-09T22:52:45Z", "files": ["IPython/parallel/tests/test_view.py", "IPython/zmq/serialize.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4Ojc1YzY2Yzg3ODJhZThhZTZhYThiNWQxZDQ1MTdhYzUyZTgzYjgyNDA=", "commit_message": "Merge pull request #2246 from minrk/canning_depth\n\nserialize individual args/kwargs rather than the containers\r\n\r\nThis allows specials to be handled inside containers as args/kwargs\r\n\r\nIt is less efficient than before (still more efficient than 0.13) in cases where there is a very large number of simple arguments, but I think that generally the number of arguments is modest, and simple cases of small containers of arrays/References are likely (as most readily demonstrated by use in map).\r\n\r\nThe relevant behaviors are tested.\r\n\r\ncloses #2239", "commit_timestamp": "2012-08-09T22:52:45Z", "files": ["IPython/parallel/tests/test_view.py", "IPython/zmq/serialize.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo1Mjg0YTQ4MWM3NzMxM2FiNjM2NzM3YTQxMzQwYzM0NTdmYzk0Mzhm", "commit_message": "Merge pull request #2246 from minrk/canning_depth\n\nserialize individual args/kwargs rather than the containers\r\n\r\nThis allows specials to be handled inside containers as args/kwargs\r\n\r\nIt is less efficient than before (still more efficient than 0.13) in cases where there is a very large number of simple arguments, but I think that generally the number of arguments is modest, and simple cases of small containers of arrays/References are likely (as most readily demonstrated by use in map).\r\n\r\nThe relevant behaviors are tested.\r\n\r\ncloses #2239", "commit_timestamp": "2012-08-09T22:52:45Z", "files": ["IPython/parallel/tests/test_view.py", "IPython/zmq/serialize.py"]}], "labels": ["bug", "parallel", "regression"], "created_at": "2012-08-03T00:07:13Z", "closed_at": "2012-08-09T22:52:46Z", "linked_pr_number": [2239], "method": ["label", "regex"]}
{"issue_number": 2234, "title": "Update various low resolution graphics for retina displays", "body": "I have a retina MacBook Pro, and I've noticed that several of the images in IPython need to be updated to higher resolution so that they don't look bad.  What I've noticed so far:\n- The icons in the notebook, including the reload icon on the dashboard and all the toolbar icons in the notebook itself\n- The IPython icon in the header of the qtconsole\n- The IPython icon itself from the qtconsole (Note that Mac OS X supports extremely high resolution application icons)\n- The IPython icon in the quit screen in the qtconsole\n- The default resolution for inline plots in both the qtconsole and the notebook is too low (this one is probably the most important).\n- The favicon for the notebook.\n\nNote that you'll need to use Safari to test the notebook, as Chrome doesn't fully support retina graphics yet (Chrome Canary supports retina graphics, but not retina favicons).\n\nThis is only based on my little knowledge.  Likely there are images and such for features that I don't know about that also need to be updated.\n\nOn non-retina Macs, you can test this by using Quartz Debug to increase the scaling to 2x.\n\nSorry if this seems low priority, but you really have to use a retina device to see just how bad non-retina things look.\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU5NDQ2OjFlYTljZTI1MjhlNWZlNWRlMGI0ZjlmODY1Y2I5NTMyMmQxOGUyZDY=", "commit_message": "use display instead of send_figure in inline backend hooks\n\nThis lets custom display functions (e.g. HTML) be used without any extra changes (see #2234).\n\npossible downsides:\n\n* The previous code guarantees that only one format is published. If multiple figure formatters are registered, display will send them all.\n* If people for some reason disable the type-printers, then they will display the automatic figure display.\n\nNeither of these cases can come up unless people are messing with the formatters, and I think the first is actually an improvement.", "commit_timestamp": "2012-08-09T04:55:12Z", "files": ["IPython/zmq/pylab/backend_inline.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjRhMTcyOGFhOTYzZmM0MWFlNjYyMWFmNjdlODA0NDFlNGJjNWM5N2Q=", "commit_message": "Merge pull request #2271 from minrk/display_send_figure\n\nuse display instead of send_figure in inline backend hooks\r\n\r\nThis lets custom display functions (e.g. HTML) be used without any extra changes (see #2234).\r\n\r\npossible downsides:\r\n\r\n* The previous code guarantees that only one format is published. If multiple figure formatters are registered, display will send them all.\r\n* If people for some reason disable the type-printers, then they will display the automatic figure display.\r\n\r\n**Backwards-incompatible change**\r\n\r\nNote that `IPython.zmq.pylab.backend_inline.send_figure` has been removed, as `display()` can do the same job and we avoid an unnecessary special-case code path.", "commit_timestamp": "2012-08-10T22:48:53Z", "files": ["IPython/zmq/pylab/backend_inline.py"]}, {"node_id": "MDY6Q29tbWl0MjM0NDA3Mzo2MTBjNjExNDVkODQ2ZDY4NjM0YzMyYTcyMjM1MThkYmZjZGViMTYy", "commit_message": "use display instead of send_figure in inline backend hooks\n\nThis lets custom display functions (e.g. HTML) be used without any extra changes (see #2234).\n\npossible downsides:\n\n* The previous code guarantees that only one format is published. If multiple figure formatters are registered, display will send them all.\n* If people for some reason disable the type-printers, then they will display the automatic figure display.\n\nNeither of these cases can come up unless people are messing with the formatters, and I think the first is actually an improvement.", "commit_timestamp": "2012-09-05T12:45:58Z", "files": ["IPython/zmq/pylab/backend_inline.py"]}], "labels": [], "created_at": "2012-08-01T22:38:55Z", "closed_at": "2013-07-04T01:39:14Z", "method": ["regex"]}
{"issue_number": 2221, "title": "Avoid importing from IPython.parallel in core", "body": "IPython.core.interactiveshell imports an error class from IPython.parallel:\n\nhttps://github.com/ipython/ipython/blob/master/IPython/core/interactiveshell.py#L89\n\nThis pulls in the parallel machinery, zmq, numpy, paramiko, and so on, so it adds significantly to startup time and memory use.\n\nThe comment in the file suggests a better way of handling it - move the error class into IPython.core.errors, and have IPython.parallel import it from there.\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU4NTE4OjA2YzI3ZDg5Zjg2NWU5NDMzMzkxMDY4YzdlODhhOWNmNjE1MGFiN2E=", "commit_message": "Merge pull request #2223 from takluyver/custom_traceback\n\nCustom traceback API\r\n\r\nCloses gh-2221", "commit_timestamp": "2012-07-31T11:58:22Z", "files": ["IPython/core/display.py", "IPython/core/interactiveshell.py", "IPython/core/tests/test_interactiveshell.py", "IPython/parallel/error.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4Ojk1MmQwZDY4ZDIyODYwYmY1NWZjYTM1YzE1NzNhNzdhNDQ1NWE3ZWQ=", "commit_message": "Backport PR #2223: Custom tracebacks\n\nRather than special casing IPython.parallel errors (which led to issue #2221), this adds a simple API where exception classes can offer a custom traceback, by defining a `_render_traceback_(self)` method.\n\nIt also adds some documentation on how third parties can integrate packages with IPython. 'Configuration & customisation' seemed the most natural home for this.\n\nWe should remember to close #2221 when we merge this - I forgot to put it in a commit message.", "commit_timestamp": "2012-08-04T18:45:19Z", "files": ["IPython/core/display.py", "IPython/core/interactiveshell.py", "IPython/core/tests/test_interactiveshell.py", "IPython/parallel/error.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmQxNjcxNDAyOWMyMTZlYmViZDk1NTZkYmUxMGVkYzljZmNjODdjYTc=", "commit_message": "Backport PR #2223: Custom tracebacks\n\nRather than special casing IPython.parallel errors (which led to issue #2221), this adds a simple API where exception classes can offer a custom traceback, by defining a `_render_traceback_(self)` method.\n\nIt also adds some documentation on how third parties can integrate packages with IPython. 'Configuration & customisation' seemed the most natural home for this.\n\nWe should remember to close #2221 when we merge this - I forgot to put it in a commit message.", "commit_timestamp": "2012-09-01T21:03:35Z", "files": ["IPython/core/display.py", "IPython/core/interactiveshell.py", "IPython/core/tests/test_interactiveshell.py", "IPython/parallel/error.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo5NTgyNzJlZGRlZjJiYWIyYjAzYmVmMTZjNzY3ZTE3NzM4NjU0ODVm", "commit_message": "Merge pull request #2223 from takluyver/custom_traceback\n\nCustom traceback API\r\n\r\nCloses gh-2221", "commit_timestamp": "2012-07-31T11:58:22Z", "files": ["IPython/core/display.py", "IPython/core/interactiveshell.py", "IPython/core/tests/test_interactiveshell.py", "IPython/parallel/error.py"]}], "labels": ["bug"], "created_at": "2012-07-30T13:15:48Z", "closed_at": "2012-07-31T11:58:24Z", "method": ["label"]}
{"issue_number": 2220, "title": "No sys.stdout.encoding in kernel based IPython", "body": "As originally reported by @tkf in #2207.\n### Kernel-based IPython\n\n``` python\n% ./ipython.py console                       \nPython 2.7.2+ (default, Oct  4 2011, 20:06:09) \nType \"copyright\", \"credits\" or \"license\" for more information.\n\nIPython 0.14.dev -- An enhanced Interactive Python.\n?         -> Introduction and overview of IPython's features.\n%quickref -> Quick reference.\nhelp      -> Python's own help system.\nobject?   -> Details about 'object', use 'object??' for extra details.\n[IPKernelApp] To connect another client to this kernel, use:\n[IPKernelApp] --existing kernel-8616.json\n\nIn [1]: import sys\n\nIn [2]: sys.stdout.encoding\n---------------------------------------------------------------------------\nAttributeError                            Traceback (most recent call last)\n<ipython-input-2-18fba92f6a6c> in <module>()\n----> 1 sys.stdout.encoding\n\nAttributeError: 'OutStream' object has no attribute 'encoding'\n```\n### Normal IPython\n\nSame in pure Python console.\n\n``` python\n% ./ipython.py        \nPython 2.7.2+ (default, Oct  4 2011, 20:06:09) \nType \"copyright\", \"credits\" or \"license\" for more information.\n\nIPython 0.14.dev -- An enhanced Interactive Python.\n?         -> Introduction and overview of IPython's features.\n%quickref -> Quick reference.\nhelp      -> Python's own help system.\nobject?   -> Details about 'object', use 'object??' for extra details.\n\nIn [1]: import sys\n\nIn [2]: sys.stdout.encoding\nOut[2]: 'UTF-8'\n```\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU4NTE4OmY2MzU1MTZmMGY3NzEwMWQ5NTc3YmVlZmY0MjA5ZjQzMjI3OGI3YzE=", "commit_message": "Backport PR #2500: Add `encoding` attribute to `OutStream` class.\n\nThis means that `sys.stdout.encoding` returns something useful instead of raising an AttributeError.\n\nCloses #2220.", "commit_timestamp": "2013-03-04T22:51:59Z", "files": ["IPython/zmq/iostream.py"]}], "labels": ["bug"], "created_at": "2012-07-30T02:52:04Z", "closed_at": "2012-10-23T16:32:26Z", "method": ["label"]}
{"issue_number": 2213, "title": "Can't trigger startup code in Engines", "body": "Newly launched ipcluster instances don't execute code from the variable c.IPEngineApp.startup_command .  Min suggested that this is from the new forked Kernel implementation, which doesn't share the startup config.\n\nMore context: http://mail.scipy.org/pipermail/ipython-user/2012-July/010769.html\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU4NTE4OjJmZjhhOTBhMDNkMzBiMzVmZTU5YmUwNTRkMTRlYWQ5MzY3YzRkNDI=", "commit_message": "Merge pull request #2214 from minrk/engine_startup\n\nuse KernelApp.exec_lines/files in IPEngineApp\r\n\r\nThis change means that all your startup/exec_lines config is inherited by engines.\r\n\r\nThe real long-term fix for this is to make IPEngineApp a subclass of IPKernelApp, but this should be an adequate band-aid until then.\r\n\r\ncloses #2213", "commit_timestamp": "2012-07-29T23:30:12Z", "files": ["IPython/parallel/apps/ipengineapp.py", "IPython/parallel/engine/engine.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmIxMjQxZDUwNjYzMTM4YjcxNGUzZTE5M2YwODMxMmE4ZGI5Yjg0YWU=", "commit_message": "Backport PR #2214: use KernelApp.exec_lines/files in IPEngineApp\n\nThis change means that all your startup/exec_lines config is inherited by engines.\n\nshould be backported for 0.13.1, because engine startup code is impossible to configure in 0.13.\n\nThe real long-term fix for this is to make IPEngineApp a subclass of IPKernelApp, but this should be an adequate band-aid until then.\n\ncloses #2213", "commit_timestamp": "2012-07-29T23:30:44Z", "files": ["IPython/parallel/apps/ipengineapp.py", "IPython/parallel/engine/engine.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo3ZGJiNTM0YjZjZjhkMWExMGIwMGExN2E5MDY0NTYxMjk3NmFhYmQy", "commit_message": "Merge pull request #2214 from minrk/engine_startup\n\nuse KernelApp.exec_lines/files in IPEngineApp\r\n\r\nThis change means that all your startup/exec_lines config is inherited by engines.\r\n\r\nThe real long-term fix for this is to make IPEngineApp a subclass of IPKernelApp, but this should be an adequate band-aid until then.\r\n\r\ncloses #2213", "commit_timestamp": "2012-07-29T23:30:12Z", "files": ["IPython/parallel/apps/ipengineapp.py", "IPython/parallel/engine/engine.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjJmZjhhOTBhMDNkMzBiMzVmZTU5YmUwNTRkMTRlYWQ5MzY3YzRkNDI=", "commit_message": "Merge pull request #2214 from minrk/engine_startup\n\nuse KernelApp.exec_lines/files in IPEngineApp\r\n\r\nThis change means that all your startup/exec_lines config is inherited by engines.\r\n\r\nThe real long-term fix for this is to make IPEngineApp a subclass of IPKernelApp, but this should be an adequate band-aid until then.\r\n\r\ncloses #2213", "commit_timestamp": "2012-07-29T23:30:12Z", "files": ["IPython/parallel/apps/ipengineapp.py", "IPython/parallel/engine/engine.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjJmZjhhOTBhMDNkMzBiMzVmZTU5YmUwNTRkMTRlYWQ5MzY3YzRkNDI=", "commit_message": "Merge pull request #2214 from minrk/engine_startup\n\nuse KernelApp.exec_lines/files in IPEngineApp\r\n\r\nThis change means that all your startup/exec_lines config is inherited by engines.\r\n\r\nThe real long-term fix for this is to make IPEngineApp a subclass of IPKernelApp, but this should be an adequate band-aid until then.\r\n\r\ncloses #2213", "commit_timestamp": "2012-07-29T23:30:12Z", "files": ["IPython/parallel/apps/ipengineapp.py", "IPython/parallel/engine/engine.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmIxMjQxZDUwNjYzMTM4YjcxNGUzZTE5M2YwODMxMmE4ZGI5Yjg0YWU=", "commit_message": "Backport PR #2214: use KernelApp.exec_lines/files in IPEngineApp\n\nThis change means that all your startup/exec_lines config is inherited by engines.\n\nshould be backported for 0.13.1, because engine startup code is impossible to configure in 0.13.\n\nThe real long-term fix for this is to make IPEngineApp a subclass of IPKernelApp, but this should be an adequate band-aid until then.\n\ncloses #2213", "commit_timestamp": "2012-07-29T23:30:44Z", "files": ["IPython/parallel/apps/ipengineapp.py", "IPython/parallel/engine/engine.py"]}, {"node_id": "MDY6Q29tbWl0MjM0Mzk1OTpmYzdjN2Y1MTJmMGQ0Y2E1OWViNDEzZjAxZGY4MWRmMGEwOGMxMDk5", "commit_message": "Merge commit 'rel-0.13-33-gcfc5692' into debian-01X\n\n* commit 'rel-0.13-33-gcfc5692': (33 commits)\n  Backport PR #2347: adjust division error message checking to account for Python 3\n  Backport PR #2305: RemoteError._render_traceback_ calls self.render_traceback\n  Backport PR #2280: fix SSH passwordless check for OpenSSH\n  Backport PR #2270: SSHLauncher tweaks\n  Backport PR #2261: Fix: longest_substr([]) -> ''\n  Backport PR #2250: fix html in notebook example\n  Backport PR #2235: remove spurious print statement from setupbase.py\n  fixup\n  Backport PR #2223: Custom tracebacks\n  Backport PR #2214: use KernelApp.exec_lines/files in IPEngineApp\n  Backport PR #2212: catch errors in markdown javascript\n  Backport PR #2194: clean nan/inf in json_clean\n  Backport PR #2177: remove numpy install from travis/tox scripts\n  Backport PR #2169: ipdb: pdef, pdoc, pinfo magics all broken\n  Backport PR #2186: removed references to h5py dependence in octave magic documentation\n  Backport PR #2185: added test for %store, fixed storemagic\n  Backport PR #2170: Fix tab completion with IPython.embed_kernel().\n  Backport PR #2163: fix 'remote_profie_dir' typo in SSH launchers\n  Backport PR #2117: use explicit url in notebook example\n  Backport PR #2126: ipcluster broken with any batch (PBS/LSF/SGE)\n  ...", "commit_timestamp": "2012-08-27T16:50:36Z", "files": ["IPython/core/debugger.py", "IPython/core/display.py", "IPython/core/interactiveshell.py", "IPython/core/magics/osm.py", "IPython/core/release.py", "IPython/core/tests/test_debugger.py", "IPython/core/tests/test_interactiveshell.py", "IPython/core/tests/test_magic.py", "IPython/extensions/octavemagic.py", "IPython/extensions/storemagic.py", "IPython/external/ssh/tunnel.py", "IPython/frontend/html/notebook/handlers.py", "IPython/frontend/html/notebook/notebookapp.py", "IPython/frontend/qt/console/console_widget.py", "IPython/parallel/apps/ipengineapp.py", "IPython/parallel/apps/launcher.py", "IPython/parallel/engine/engine.py", "IPython/parallel/error.py", "IPython/parallel/tests/test_view.py", "IPython/utils/jsonutil.py", "IPython/utils/tests/test_text.py", "IPython/utils/text.py", "IPython/zmq/ipkernel.py", "IPython/zmq/zmqshell.py", "setup.py", "setupbase.py", "tools/release_windows.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo3ZGJiNTM0YjZjZjhkMWExMGIwMGExN2E5MDY0NTYxMjk3NmFhYmQy", "commit_message": "Merge pull request #2214 from minrk/engine_startup\n\nuse KernelApp.exec_lines/files in IPEngineApp\r\n\r\nThis change means that all your startup/exec_lines config is inherited by engines.\r\n\r\nThe real long-term fix for this is to make IPEngineApp a subclass of IPKernelApp, but this should be an adequate band-aid until then.\r\n\r\ncloses #2213", "commit_timestamp": "2012-07-29T23:30:12Z", "files": ["IPython/parallel/apps/ipengineapp.py", "IPython/parallel/engine/engine.py"]}], "labels": ["bug", "parallel", "regression"], "created_at": "2012-07-27T21:17:34Z", "closed_at": "2012-07-29T23:30:14Z", "linked_pr_number": [2213], "method": ["label"]}
{"issue_number": 2195, "title": "Unknown option `no-edit` in git-mpr", "body": "This one is mostly for @Carreau: I just tried git mpr again, and this is what I got.  Does it actually work for you on linux? This is on a linux 12.04 box with git 1.7.9.5.\n\n```\n(master)longs[ipython]> git mpr -m 2179\nerror: unknown option `no-edit'\nusage: git fetch [<options>] [<repository> [<refspec>...]]\n   or: git fetch [<options>] <group>\n   or: git fetch --multiple [<options>] [(<repository> | <group>)...]\n   or: git fetch --all [<options>]\n\n    -v, --verbose         be more verbose\n    -q, --quiet           be more quiet\n    --all                 fetch from all remotes\n    -a, --append          append to .git/FETCH_HEAD instead of overwriting\n    --upload-pack <path>  path to upload pack on remote end\n    -f, --force           force overwrite of local branch\n    -m, --multiple        fetch from multiple remotes\n    -t, --tags            fetch all tags and associated objects\n    -n                    do not fetch all tags (--no-tags)\n    -p, --prune           prune remote-tracking branches no longer on remote\n    --recurse-submodules[=<on-demand>]\n                          control recursive fetching of submodules\n    --dry-run             dry run\n    -k, --keep            keep downloaded pack\n    -u, --update-head-ok  allow updating of HEAD ref\n    --progress            force progress reporting\n    --depth <depth>       deepen history of shallow clone\n\nfatal: There is no merge to abort (MERGE_HEAD missing).\nTraceback (most recent call last):\n  File \"/home/fperez/usr/bin//git-mpr\", line 117, in <module>\n    main()\n  File \"/home/fperez/usr/bin//git-mpr\", line 107, in main\n    merge_pr(num)\n  File \"/home/fperez/usr/bin//git-mpr\", line 46, in merge_pr\n    branch=branch,\n  File \"/home/fperez/usr/bin//git-mpr\", line 29, in merge_branch\n    check_call(['git', 'merge', '--abort'])\n  File \"/usr/lib/python2.7/subprocess.py\", line 511, in check_call\n    raise CalledProcessError(retcode, cmd)\nsubprocess.CalledProcessError: Command '['git', 'merge', '--abort']' returned non-zero exit status 128\n```\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU4NTE4OmU5ZDIyYmZmNjg3MTk4YzhkOGIwNGRhNGZmYzI5ZjE3ODRlNWFmNWQ=", "commit_message": "Merge pull request #2198 from Carreau/fix-mpr\n\nfix mpr for earlier git version.\r\n\r\nCloses #2195.", "commit_timestamp": "2012-07-26T17:51:17Z", "files": ["tools/git-mpr.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzphNGIyODBjOTE3ZjQzOWIxNGNlYmIzZWJhZjgxZTBiNGU1ZTJhNmI3", "commit_message": "Merge pull request #2198 from Carreau/fix-mpr\n\nfix mpr for earlier git version.\r\n\r\nCloses #2195.", "commit_timestamp": "2012-07-26T17:51:17Z", "files": ["tools/git-mpr.py"]}], "labels": ["bug"], "created_at": "2012-07-24T00:27:26Z", "closed_at": "2012-07-26T17:51:18Z", "method": ["label"]}
{"issue_number": 2187, "title": "NaN in object_info_reply JSON causes parse error", "body": "When I send `object_info_request` for `pandas.DataFrame.reindex`, I've got the following JSON reply.\n\nPlease look the list at `content.defaults`.  It contains `NaN`.  This causes parse error in Emacs JSON parser I am using for my Emacs Notebook Client tkf/emacs-ipython-notebook#38.\n\n``` js\n{ \"content\" : { \"argspec\" : { \"args\" : [ \"self\",\n              \"index\",\n              \"columns\",\n              \"method\",\n              \"level\",\n              \"fill_value\",\n              \"copy\"\n            ],\n          \"defaults\" : [ null,\n              null,\n              null,\n              null,\n              NaN,\n              true\n            ],\n          \"varargs\" : null,\n          \"varkw\" : null\n        },\n      \"base_class\" : \"<type 'instancemethod'>\",\n      \"call_def\" : null,\n      \"call_docstring\" : null,\n      \"class_docstring\" : null,\n      \"definition\" : \"\\u001b[0mpandas\\u001b[0m\\u001b[1;33m.\\u001b[0m\\u001b[0mDataFrame\\u001b[0m\\u001b[1;33m.\\u001b[0m\\u001b[0mreindex\\u001b[0m\\u001b[1;33m(\\u001b[0m\\u001b[0mself\\u001b[0m\\u001b[1;33m,\\u001b[0m \\u001b[0mindex\\u001b[0m\\u001b[1;33m=\\u001b[0m\\u001b[0mNone\\u001b[0m\\u001b[1;33m,\\u001b[0m \\u001b[0mcolumns\\u001b[0m\\u001b[1;33m=\\u001b[0m\\u001b[0mNone\\u001b[0m\\u001b[1;33m,\\u001b[0m \\u001b[0mmethod\\u001b[0m\\u001b[1;33m=\\u001b[0m\\u001b[0mNone\\u001b[0m\\u001b[1;33m,\\u001b[0m \\u001b[0mlevel\\u001b[0m\\u001b[1;33m=\\u001b[0m\\u001b[0mNone\\u001b[0m\\u001b[1;33m,\\u001b[0m \\u001b[0mfill_value\\u001b[0m\\u001b[1;33m=\\u001b[0m\\u001b[0mnan\\u001b[0m\\u001b[1;33m,\\u001b[0m \\u001b[0mcopy\\u001b[0m\\u001b[1;33m=\\u001b[0m\\u001b[0mTrue\\u001b[0m\\u001b[1;33m)\\u001b[0m\\u001b[1;33m\\u001b[0m\\u001b[0m\\n\",\n      \"docstring\" : \"Conform DataFrame to new index with optional filling logic, placing\\nNA/NaN in locations having no value in the previous index. A new object\\nis produced unless the new index is equivalent to the current one and\\ncopy=False\\n\\nParameters\\n----------\\nindex : array-like, optional\\n    New labels / index to conform to. Preferably an Index object to\\n    avoid duplicating data\\ncolumns : array-like, optional\\n    Same usage as index argument\\nmethod : {'backfill', 'bfill', 'pad', 'ffill', None}, default None\\n    Method to use for filling holes in reindexed DataFrame\\n    pad / ffill: propagate last valid observation forward to next valid\\n    backfill / bfill: use NEXT valid observation to fill gap\\ncopy : boolean, default True\\n    Return a new object, even if the passed indexes are the same\\nlevel : int or name\\n    Broadcast across a level, matching Index values on the\\n    passed MultiIndex level\\nfill_value : scalar, default np.NaN\\n    Value to use for missing values. Defaults to NaN, but can be any\\n    \\\"compatible\\\" value\\n\\nExamples\\n--------\\n>>> df.reindex(index=[date1, date2, date3], columns=['A', 'B', 'C'])\\n\\nReturns\\n-------\\nreindexed : same type as calling instance\",\n      \"file\" : \"/home/takafumi/.virtualenvs/mypy/local/lib/python2.7/site-packages/pandas/core/frame.py\",\n      \"found\" : true,\n      \"init_definition\" : null,\n      \"init_docstring\" : null,\n      \"isalias\" : false,\n      \"isclass\" : null,\n      \"ismagic\" : false,\n      \"length\" : null,\n      \"name\" : \"pandas.DataFrame.reindex\",\n      \"namespace\" : \"Interactive\",\n      \"source\" : null,\n      \"string_form\" : \"<unbound method DataFrame.reindex>\",\n      \"type_name\" : \"instancemethod\"\n    },\n  \"header\" : { \"msg_id\" : \"6c393862-7412-4a5f-a4b2-2993f5430a6d\",\n      \"msg_type\" : \"object_info_reply\",\n      \"session\" : \"ce9c7083-370e-416f-8fe9-111b68410228\",\n      \"username\" : \"kernel\"\n    },\n  \"msg_id\" : \"6c393862-7412-4a5f-a4b2-2993f5430a6d\",\n  \"msg_type\" : \"object_info_reply\",\n  \"parent_header\" : { \"msg_id\" : \"d83e0578-d143-48b6-a672-f123034ed316\",\n      \"msg_type\" : \"object_info_request\",\n      \"session\" : \"55e244de-e83e-496f-805c-883e62c70462\",\n      \"username\" : \"username\"\n    }\n}\n```\n\nYou can check that indeed it's not a valid JSON using http://jsonlint.com/:\n\n```\nParse error on line 17:\n...ll,                NaN,               \n----------------------^\nExpecting 'STRING', 'NUMBER', 'NULL', 'TRUE', 'FALSE', '{', '['\n```\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU4NTE4OjcwNDg0ODc4NzJiODE1MTVkZWY0ZTk0OTYwZjI0ODMzNTQ1YjBhZjU=", "commit_message": "Backport PR #2194: clean nan/inf in json_clean\n\nthese values are not json-compliant\n\ncloses #2187", "commit_timestamp": "2012-07-28T22:51:15Z", "files": ["IPython/utils/jsonutil.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjE1N2Q5OWFmMzRlODdkODBmMGQyZDAyNTIwMTE4OGYzMDA1NzJmNjU=", "commit_message": "Merge pull request #2194 from minrk/clean_nan\n\nClean nan/inf in json_clean.\r\n\r\nThe floating point values NaN and Infinity are not part of the JSON\r\nspecification and causes some parsers to throw errors. Since our\r\nusage is only for things like the display of function defaults, we\r\ncan use a basic string representation ('NaN', 'inf', etc) instead.", "commit_timestamp": "2012-07-27T02:03:31Z", "files": ["IPython/utils/jsonutil.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjE1N2Q5OWFmMzRlODdkODBmMGQyZDAyNTIwMTE4OGYzMDA1NzJmNjU=", "commit_message": "Merge pull request #2194 from minrk/clean_nan\n\nClean nan/inf in json_clean.\r\n\r\nThe floating point values NaN and Infinity are not part of the JSON\r\nspecification and causes some parsers to throw errors. Since our\r\nusage is only for things like the display of function defaults, we\r\ncan use a basic string representation ('NaN', 'inf', etc) instead.", "commit_timestamp": "2012-07-27T02:03:31Z", "files": ["IPython/utils/jsonutil.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjcwNDg0ODc4NzJiODE1MTVkZWY0ZTk0OTYwZjI0ODMzNTQ1YjBhZjU=", "commit_message": "Backport PR #2194: clean nan/inf in json_clean\n\nthese values are not json-compliant\n\ncloses #2187", "commit_timestamp": "2012-07-28T22:51:15Z", "files": ["IPython/utils/jsonutil.py"]}, {"node_id": "MDY6Q29tbWl0MjM0Mzk1OTpmYzdjN2Y1MTJmMGQ0Y2E1OWViNDEzZjAxZGY4MWRmMGEwOGMxMDk5", "commit_message": "Merge commit 'rel-0.13-33-gcfc5692' into debian-01X\n\n* commit 'rel-0.13-33-gcfc5692': (33 commits)\n  Backport PR #2347: adjust division error message checking to account for Python 3\n  Backport PR #2305: RemoteError._render_traceback_ calls self.render_traceback\n  Backport PR #2280: fix SSH passwordless check for OpenSSH\n  Backport PR #2270: SSHLauncher tweaks\n  Backport PR #2261: Fix: longest_substr([]) -> ''\n  Backport PR #2250: fix html in notebook example\n  Backport PR #2235: remove spurious print statement from setupbase.py\n  fixup\n  Backport PR #2223: Custom tracebacks\n  Backport PR #2214: use KernelApp.exec_lines/files in IPEngineApp\n  Backport PR #2212: catch errors in markdown javascript\n  Backport PR #2194: clean nan/inf in json_clean\n  Backport PR #2177: remove numpy install from travis/tox scripts\n  Backport PR #2169: ipdb: pdef, pdoc, pinfo magics all broken\n  Backport PR #2186: removed references to h5py dependence in octave magic documentation\n  Backport PR #2185: added test for %store, fixed storemagic\n  Backport PR #2170: Fix tab completion with IPython.embed_kernel().\n  Backport PR #2163: fix 'remote_profie_dir' typo in SSH launchers\n  Backport PR #2117: use explicit url in notebook example\n  Backport PR #2126: ipcluster broken with any batch (PBS/LSF/SGE)\n  ...", "commit_timestamp": "2012-08-27T16:50:36Z", "files": ["IPython/core/debugger.py", "IPython/core/display.py", "IPython/core/interactiveshell.py", "IPython/core/magics/osm.py", "IPython/core/release.py", "IPython/core/tests/test_debugger.py", "IPython/core/tests/test_interactiveshell.py", "IPython/core/tests/test_magic.py", "IPython/extensions/octavemagic.py", "IPython/extensions/storemagic.py", "IPython/external/ssh/tunnel.py", "IPython/frontend/html/notebook/handlers.py", "IPython/frontend/html/notebook/notebookapp.py", "IPython/frontend/qt/console/console_widget.py", "IPython/parallel/apps/ipengineapp.py", "IPython/parallel/apps/launcher.py", "IPython/parallel/engine/engine.py", "IPython/parallel/error.py", "IPython/parallel/tests/test_view.py", "IPython/utils/jsonutil.py", "IPython/utils/tests/test_text.py", "IPython/utils/text.py", "IPython/zmq/ipkernel.py", "IPython/zmq/zmqshell.py", "setup.py", "setupbase.py", "tools/release_windows.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzoyNmIzNjk3ZTY0NTJjN2FiNzk3MDM1NDA2MmM2YWVlMGVkNzgxNDdj", "commit_message": "Merge pull request #2194 from minrk/clean_nan\n\nClean nan/inf in json_clean.\r\n\r\nThe floating point values NaN and Infinity are not part of the JSON\r\nspecification and causes some parsers to throw errors. Since our\r\nusage is only for things like the display of function defaults, we\r\ncan use a basic string representation ('NaN', 'inf', etc) instead.", "commit_timestamp": "2012-07-27T02:03:31Z", "files": ["IPython/utils/jsonutil.py"]}], "labels": ["bug"], "created_at": "2012-07-22T11:47:41Z", "closed_at": "2012-07-27T05:08:22Z", "linked_pr_number": [2187], "method": ["label"]}
{"issue_number": 2162, "title": "Tab completion does not work with IPython.embed_kernel()", "body": "When I pause a script with IPython.embed_kernel() and connect to the kernel with qtconsole, whil %whos show all the objects correctly, tab completion does not work. \n\nSpecifically, tab completion for any names generated by original script does not work, and also, it does not work for new objects generated in the qtconsole either.  \n", "commits": [{"node_id": "MDY6Q29tbWl0NjU4NTE4OjI5MzNjZGQyMDI2YWMxNzFiZDBkNDViOGZjOTExYTMwNzk5NWY3N2Q=", "commit_message": "Merge pull request #2170 from bfroehle/embed_kernel_completer\n\nFix tab completion with IPython.embed_kernel().\r\n\r\nCloses #2162.", "commit_timestamp": "2012-07-20T07:04:03Z", "files": ["IPython/core/interactiveshell.py", "IPython/zmq/ipkernel.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmY0YmUyOGYwNmMyYjIzY2Q4ZTRhMzY1M2I5ZTg0YmRlNTkzZTRjODY=", "commit_message": "Backport PR #2170: Fix tab completion with IPython.embed_kernel().\n\nCloses #2162.", "commit_timestamp": "2012-07-21T15:05:32Z", "files": ["IPython/core/interactiveshell.py", "IPython/zmq/ipkernel.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzpmMmY1ZDIyNDNjY2RmZDM4NzI2YTZiMmNiODdmMTI1MGZjMGIzZGJl", "commit_message": "Merge pull request #2170 from bfroehle/embed_kernel_completer\n\nFix tab completion with IPython.embed_kernel().\r\n\r\nCloses #2162.", "commit_timestamp": "2012-07-20T07:04:03Z", "files": ["IPython/core/interactiveshell.py", "IPython/zmq/ipkernel.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjI5MzNjZGQyMDI2YWMxNzFiZDBkNDViOGZjOTExYTMwNzk5NWY3N2Q=", "commit_message": "Merge pull request #2170 from bfroehle/embed_kernel_completer\n\nFix tab completion with IPython.embed_kernel().\r\n\r\nCloses #2162.", "commit_timestamp": "2012-07-20T07:04:03Z", "files": ["IPython/core/interactiveshell.py", "IPython/zmq/ipkernel.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjI5MzNjZGQyMDI2YWMxNzFiZDBkNDViOGZjOTExYTMwNzk5NWY3N2Q=", "commit_message": "Merge pull request #2170 from bfroehle/embed_kernel_completer\n\nFix tab completion with IPython.embed_kernel().\r\n\r\nCloses #2162.", "commit_timestamp": "2012-07-20T07:04:03Z", "files": ["IPython/core/interactiveshell.py", "IPython/zmq/ipkernel.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmY0YmUyOGYwNmMyYjIzY2Q4ZTRhMzY1M2I5ZTg0YmRlNTkzZTRjODY=", "commit_message": "Backport PR #2170: Fix tab completion with IPython.embed_kernel().\n\nCloses #2162.", "commit_timestamp": "2012-07-21T15:05:32Z", "files": ["IPython/core/interactiveshell.py", "IPython/zmq/ipkernel.py"]}, {"node_id": "MDY6Q29tbWl0MjM0Mzk1OTpmYzdjN2Y1MTJmMGQ0Y2E1OWViNDEzZjAxZGY4MWRmMGEwOGMxMDk5", "commit_message": "Merge commit 'rel-0.13-33-gcfc5692' into debian-01X\n\n* commit 'rel-0.13-33-gcfc5692': (33 commits)\n  Backport PR #2347: adjust division error message checking to account for Python 3\n  Backport PR #2305: RemoteError._render_traceback_ calls self.render_traceback\n  Backport PR #2280: fix SSH passwordless check for OpenSSH\n  Backport PR #2270: SSHLauncher tweaks\n  Backport PR #2261: Fix: longest_substr([]) -> ''\n  Backport PR #2250: fix html in notebook example\n  Backport PR #2235: remove spurious print statement from setupbase.py\n  fixup\n  Backport PR #2223: Custom tracebacks\n  Backport PR #2214: use KernelApp.exec_lines/files in IPEngineApp\n  Backport PR #2212: catch errors in markdown javascript\n  Backport PR #2194: clean nan/inf in json_clean\n  Backport PR #2177: remove numpy install from travis/tox scripts\n  Backport PR #2169: ipdb: pdef, pdoc, pinfo magics all broken\n  Backport PR #2186: removed references to h5py dependence in octave magic documentation\n  Backport PR #2185: added test for %store, fixed storemagic\n  Backport PR #2170: Fix tab completion with IPython.embed_kernel().\n  Backport PR #2163: fix 'remote_profie_dir' typo in SSH launchers\n  Backport PR #2117: use explicit url in notebook example\n  Backport PR #2126: ipcluster broken with any batch (PBS/LSF/SGE)\n  ...", "commit_timestamp": "2012-08-27T16:50:36Z", "files": ["IPython/core/debugger.py", "IPython/core/display.py", "IPython/core/interactiveshell.py", "IPython/core/magics/osm.py", "IPython/core/release.py", "IPython/core/tests/test_debugger.py", "IPython/core/tests/test_interactiveshell.py", "IPython/core/tests/test_magic.py", "IPython/extensions/octavemagic.py", "IPython/extensions/storemagic.py", "IPython/external/ssh/tunnel.py", "IPython/frontend/html/notebook/handlers.py", "IPython/frontend/html/notebook/notebookapp.py", "IPython/frontend/qt/console/console_widget.py", "IPython/parallel/apps/ipengineapp.py", "IPython/parallel/apps/launcher.py", "IPython/parallel/engine/engine.py", "IPython/parallel/error.py", "IPython/parallel/tests/test_view.py", "IPython/utils/jsonutil.py", "IPython/utils/tests/test_text.py", "IPython/utils/text.py", "IPython/zmq/ipkernel.py", "IPython/zmq/zmqshell.py", "setup.py", "setupbase.py", "tools/release_windows.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzpmMmY1ZDIyNDNjY2RmZDM4NzI2YTZiMmNiODdmMTI1MGZjMGIzZGJl", "commit_message": "Merge pull request #2170 from bfroehle/embed_kernel_completer\n\nFix tab completion with IPython.embed_kernel().\r\n\r\nCloses #2162.", "commit_timestamp": "2012-07-20T07:04:03Z", "files": ["IPython/core/interactiveshell.py", "IPython/zmq/ipkernel.py"]}], "labels": ["bug", "kernel"], "created_at": "2012-07-18T16:23:42Z", "closed_at": "2012-07-20T07:04:04Z", "linked_pr_number": [2162], "method": ["label", "regex"]}
{"issue_number": 2122, "title": "Bug in pretty printing", "body": "The code in `IPython.lib.pretty.RepresentationPrinter.pretty` has a bug: it fails to look in the class `__dict__`s of the classes in the MRO. Fixes this is pretty easy:\n\n```\n--- pretty.py.orig  2012-07-11 15:38:34.000000000 +0200\n+++ pretty.py   2012-07-11 15:32:05.000000000 +0200\n@@ -354,7 +354,7 @@\n                         # Some objects automatically create any requested\n                         # attribute. Try to ignore most of them by checking for\n                         # callability.\n-                        if '_repr_pretty_' in obj_class.__dict__:\n+                        if '_repr_pretty_' in cls.__dict__:\n                             meth = obj_class._repr_pretty_\n                             if isinstance(meth, collections.Callable):\n                                 return meth(obj, self, cycle)\n```\n", "commits": [{"node_id": "MDY6Q29tbWl0MzcyOTY1Mjo4NjU0ZGVlZmNjZGU1ZGM2YjcyYjBmYjIxMDcwNGZmYzdhNjYzMGQ1", "commit_message": "BUG: Look up the `_repr_pretty_` method on the class within the MRO rather than the original leaf class.\n\nThanks, @doerwalter for finding this and suggesting the fix.\n\nfixes #2122", "commit_timestamp": "2012-07-11T13:49:45Z", "files": ["IPython/lib/pretty.py", "IPython/lib/tests/test_pretty.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4Ojg2NTRkZWVmY2NkZTVkYzZiNzJiMGZiMjEwNzA0ZmZjN2E2NjMwZDU=", "commit_message": "BUG: Look up the `_repr_pretty_` method on the class within the MRO rather than the original leaf class.\n\nThanks, @doerwalter for finding this and suggesting the fix.\n\nfixes #2122", "commit_timestamp": "2012-07-11T13:49:45Z", "files": ["IPython/lib/pretty.py", "IPython/lib/tests/test_pretty.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzpmZWNlNTU3ODlkODE2MmRlOGQ0MDZhYzRmZjgxOTk3YTcyZmEyYmEx", "commit_message": "BUG: Look up the `_repr_pretty_` method on the class within the MRO rather than the original leaf class.\n\nThanks, @doerwalter for finding this and suggesting the fix.\n\nfixes #2122", "commit_timestamp": "2012-07-11T13:49:45Z", "files": ["IPython/lib/pretty.py", "IPython/lib/tests/test_pretty.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjRmMTBiZDhhNzk3NjUzNDg1ZGUyODU3NDY1NWU5ZTZiYjdhYzBhNTk=", "commit_message": "Merge pull request #2123 from rkern/fix-pretty\n\nBUG: Look up the `_repr_pretty_` method on the class using the MRO", "commit_timestamp": "2012-07-14T17:32:33Z", "files": ["IPython/lib/pretty.py", "IPython/lib/tests/test_pretty.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjRmMTBiZDhhNzk3NjUzNDg1ZGUyODU3NDY1NWU5ZTZiYjdhYzBhNTk=", "commit_message": "Merge pull request #2123 from rkern/fix-pretty\n\nBUG: Look up the `_repr_pretty_` method on the class using the MRO", "commit_timestamp": "2012-07-14T17:32:33Z", "files": ["IPython/lib/pretty.py", "IPython/lib/tests/test_pretty.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzpiNWZlYjQ4ZGYyZjc5NjE0OWJiZGM2ZGY2ZDk2ZjAwYjdjODM3YjVi", "commit_message": "Merge pull request #2123 from rkern/fix-pretty\n\nBUG: Look up the `_repr_pretty_` method on the class using the MRO", "commit_timestamp": "2012-07-14T17:32:33Z", "files": ["IPython/lib/pretty.py", "IPython/lib/tests/test_pretty.py"]}], "labels": [], "created_at": "2012-07-11T13:41:20Z", "closed_at": "2012-07-14T17:32:34Z", "linked_pr_number": [2122], "method": ["regex"]}
{"issue_number": 2108, "title": "Backslash (\\) at the end of the line behavior different from default Python", "body": "Quite often, I miss the Enter/Return key and press `\\`.  In regular Python, I can enter two newlines, and the expression will be evaluated, like\n\n``` py\n>>> 1\\\n... \n1\n```\n\nBut in IPython, no amount of newlines will terminate it.  And if I do finally terminate it by entering a `;`, the output is not printed (also different from Python).\n\n``` py\n\nIn [1]: 1\\\n   ...: \n   ...: \n   ...: \n   ...: \n   ...: ;\n\nIn [2]: \n```\n\n``` py\n\n>>> 1\\\n... ;\n1\n```\n\nIs this an intended feature caused by some more advanced multiline editing capabilities of IPython, or just a bug?  \n", "commits": [{"node_id": "MDY6Q29tbWl0MjEzNTQxMjo5YmQwYzkwMDkzNjgyOGM4NDgxNzg2NTcyN2JlMjI0YjVjNDRkMTNk", "commit_message": "Line continuations now terminate after one blank line (#2108)\n\nPreviously, we had\n\nIn [1]: 1\\\n...:\n...:\n...:\n...:\n\nIn other words, no amount of blank lines would terminate after a line\ncontinuation, in contrast with regular Python:\n\n>>> 1\\\n...\n1\n\nThis made things really annoying when I typed \\ instead of a newline--quite\neasy to do since they are right next to each other on the keyboard.\n\nNow, we have\n\nIn [1]: 1\\\n...:\nOut[1]: 1\n\nThis also fixes another related behavioral difference between IPython.  If a\nspace follows a line continuation character, it should be a\nSyntaxError(\"unexpected character after line continuation character\"), even if\nthe line is otherwise continuable, according to regular Python (e.g., `1 \\ `\nor `(1 + \\ `).  This now consistent between the two.\n\nCloses #2108", "commit_timestamp": "2012-07-08T04:22:47Z", "files": ["IPython/core/inputsplitter.py", "IPython/core/tests/test_inputsplitter.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjliZDBjOTAwOTM2ODI4Yzg0ODE3ODY1NzI3YmUyMjRiNWM0NGQxM2Q=", "commit_message": "Line continuations now terminate after one blank line (#2108)\n\nPreviously, we had\n\nIn [1]: 1\\\n...:\n...:\n...:\n...:\n\nIn other words, no amount of blank lines would terminate after a line\ncontinuation, in contrast with regular Python:\n\n>>> 1\\\n...\n1\n\nThis made things really annoying when I typed \\ instead of a newline--quite\neasy to do since they are right next to each other on the keyboard.\n\nNow, we have\n\nIn [1]: 1\\\n...:\nOut[1]: 1\n\nThis also fixes another related behavioral difference between IPython.  If a\nspace follows a line continuation character, it should be a\nSyntaxError(\"unexpected character after line continuation character\"), even if\nthe line is otherwise continuable, according to regular Python (e.g., `1 \\ `\nor `(1 + \\ `).  This now consistent between the two.\n\nCloses #2108", "commit_timestamp": "2012-07-08T04:22:47Z", "files": ["IPython/core/inputsplitter.py", "IPython/core/tests/test_inputsplitter.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmM3NDAxYzliMDcxYTZlOTUwZTBlOWZmOTE0OGYzMzIyZGJkMjQ3MzU=", "commit_message": "Merge pull request #2110 from asmeurer/inputsplitter\n\nFixes and improvements to the input splitter\r\n\r\nThis fixes #2108 (see the commit message for more details), and also now break, and continue will automatically deindent.", "commit_timestamp": "2012-07-08T20:15:48Z", "files": ["IPython/core/inputsplitter.py", "IPython/core/tests/test_inputsplitter.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzowZGM2OTAyYWVkNTU1ZjliZjEyM2MxNjVlMmYwODczNzk1MzhmOTBm", "commit_message": "Line continuations now terminate after one blank line (#2108)\n\nPreviously, we had\n\nIn [1]: 1\\\n...:\n...:\n...:\n...:\n\nIn other words, no amount of blank lines would terminate after a line\ncontinuation, in contrast with regular Python:\n\n>>> 1\\\n...\n1\n\nThis made things really annoying when I typed \\ instead of a newline--quite\neasy to do since they are right next to each other on the keyboard.\n\nNow, we have\n\nIn [1]: 1\\\n...:\nOut[1]: 1\n\nThis also fixes another related behavioral difference between IPython.  If a\nspace follows a line continuation character, it should be a\nSyntaxError(\"unexpected character after line continuation character\"), even if\nthe line is otherwise continuable, according to regular Python (e.g., `1 \\ `\nor `(1 + \\ `).  This now consistent between the two.\n\nCloses #2108", "commit_timestamp": "2012-07-08T04:22:47Z", "files": ["IPython/core/inputsplitter.py", "IPython/core/tests/test_inputsplitter.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzphOWUxYmE0N2JkOGJlYTQxOGNlOTQ1OTNhNWJhMGNjZTY1ZWU2Nzcy", "commit_message": "Merge pull request #2110 from asmeurer/inputsplitter\n\nFixes and improvements to the input splitter\r\n\r\nThis fixes #2108 (see the commit message for more details), and also now break, and continue will automatically deindent.", "commit_timestamp": "2012-07-08T20:15:48Z", "files": ["IPython/core/inputsplitter.py", "IPython/core/tests/test_inputsplitter.py"]}], "labels": ["bug"], "created_at": "2012-07-06T20:05:01Z", "closed_at": "2012-07-08T20:15:49Z", "method": ["label", "regex"]}
{"issue_number": 2099, "title": "storemagic needs to use self.shell", "body": "As reported [on the mailing list](http://mail.scipy.org/pipermail/ipython-user/2012-July/010551.html)\n\n```\nAttributeError                            Traceback (most recent call last)\n<ipython-input-3-6795157a19c8> in <module>()\n----> 1 get_ipython().magic(u'store')\n\nC:\\Python26\\ArcGIS10.0\\lib\\site-packages\\IPython\\core\\interactiveshell.pyc in magic(self, arg_s)\n   2159         magic_name, _, magic_arg_s = arg_s.partition(' ')\n   2160         magic_name = magic_name.lstrip(prefilter.ESC_MAGIC)\n-> 2161         return self.run_line_magic(magic_name, magic_arg_s)\n   2162\n   2163     #-------------------------------------------------------------------------\n\nC:\\Python26\\ArcGIS10.0\\lib\\site-packages\\IPython\\core\\interactiveshell.pyc in run_line_magic(self, magic_name, line)\n   2085                 args.append(sys._getframe(stack_depth).f_locals)\n   2086             with self.builtin_trap:\n-> 2087                 result = fn(*args)\n   2088             return result\n   2089\n\nC:\\Python26\\ArcGIS10.0\\lib\\site-packages\\IPython\\extensions\\storemagic.pyc in store(self, parameter_s)\n\nC:\\Python26\\ArcGIS10.0\\lib\\site-packages\\IPython\\core\\magic.pyc in <lambda>(f, *a, **k)\n\n    189     # but it's overkill for just that one bit of state.\n    190     def magic_deco(arg):\n--> 191         call = lambda f, *a, **k: f(*a, **k)\n    192\n    193         if callable(arg):\n\nC:\\Python26\\ArcGIS10.0\\lib\\site-packages\\IPython\\extensions\\storemagic.pyc in store(self, parameter_s)\n\n    141         # run without arguments -> list variables & values\n    142         elif not args:\n--> 143             vars = self.db.keys('autorestore/*')\n    144             vars.sort(\n    145             if vars:\n\nAttributeError: 'StoreMagics' object has no attribute 'db'\n```\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU4NTE4OjdmZWRiNGFlYjEzZWUxZGEyYThmNTA2ODFmYWYzMTNiMjFjOGZhZTA=", "commit_message": "Merge pull request #2185 from cqmckay/magicfix\n\nfix %store, and add test\r\n\r\ncloses #2099", "commit_timestamp": "2012-07-21T16:14:49Z", "files": ["IPython/core/tests/test_magic.py", "IPython/extensions/storemagic.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjkyMzA5YmI0NzdlOWVmMmMxZjkxMjY5MTI4NWM5ODVjOGMzNWZkYjU=", "commit_message": "Backport PR #2185: added test for %store, fixed storemagic\n\ncloses #2099", "commit_timestamp": "2012-07-27T21:58:55Z", "files": ["IPython/core/tests/test_magic.py", "IPython/extensions/storemagic.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzowN2U0ZGM2ZDA4NDE2MzhiMmFlNWM4MTIwMjNhZjdmNjgxN2ViOTg3", "commit_message": "Merge pull request #2185 from cqmckay/magicfix\n\nfix %store, and add test\r\n\r\ncloses #2099", "commit_timestamp": "2012-07-21T16:14:49Z", "files": ["IPython/core/tests/test_magic.py", "IPython/extensions/storemagic.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjdmZWRiNGFlYjEzZWUxZGEyYThmNTA2ODFmYWYzMTNiMjFjOGZhZTA=", "commit_message": "Merge pull request #2185 from cqmckay/magicfix\n\nfix %store, and add test\r\n\r\ncloses #2099", "commit_timestamp": "2012-07-21T16:14:49Z", "files": ["IPython/core/tests/test_magic.py", "IPython/extensions/storemagic.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjdmZWRiNGFlYjEzZWUxZGEyYThmNTA2ODFmYWYzMTNiMjFjOGZhZTA=", "commit_message": "Merge pull request #2185 from cqmckay/magicfix\n\nfix %store, and add test\r\n\r\ncloses #2099", "commit_timestamp": "2012-07-21T16:14:49Z", "files": ["IPython/core/tests/test_magic.py", "IPython/extensions/storemagic.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjkyMzA5YmI0NzdlOWVmMmMxZjkxMjY5MTI4NWM5ODVjOGMzNWZkYjU=", "commit_message": "Backport PR #2185: added test for %store, fixed storemagic\n\ncloses #2099", "commit_timestamp": "2012-07-27T21:58:55Z", "files": ["IPython/core/tests/test_magic.py", "IPython/extensions/storemagic.py"]}, {"node_id": "MDY6Q29tbWl0MjM0Mzk1OTpmYzdjN2Y1MTJmMGQ0Y2E1OWViNDEzZjAxZGY4MWRmMGEwOGMxMDk5", "commit_message": "Merge commit 'rel-0.13-33-gcfc5692' into debian-01X\n\n* commit 'rel-0.13-33-gcfc5692': (33 commits)\n  Backport PR #2347: adjust division error message checking to account for Python 3\n  Backport PR #2305: RemoteError._render_traceback_ calls self.render_traceback\n  Backport PR #2280: fix SSH passwordless check for OpenSSH\n  Backport PR #2270: SSHLauncher tweaks\n  Backport PR #2261: Fix: longest_substr([]) -> ''\n  Backport PR #2250: fix html in notebook example\n  Backport PR #2235: remove spurious print statement from setupbase.py\n  fixup\n  Backport PR #2223: Custom tracebacks\n  Backport PR #2214: use KernelApp.exec_lines/files in IPEngineApp\n  Backport PR #2212: catch errors in markdown javascript\n  Backport PR #2194: clean nan/inf in json_clean\n  Backport PR #2177: remove numpy install from travis/tox scripts\n  Backport PR #2169: ipdb: pdef, pdoc, pinfo magics all broken\n  Backport PR #2186: removed references to h5py dependence in octave magic documentation\n  Backport PR #2185: added test for %store, fixed storemagic\n  Backport PR #2170: Fix tab completion with IPython.embed_kernel().\n  Backport PR #2163: fix 'remote_profie_dir' typo in SSH launchers\n  Backport PR #2117: use explicit url in notebook example\n  Backport PR #2126: ipcluster broken with any batch (PBS/LSF/SGE)\n  ...", "commit_timestamp": "2012-08-27T16:50:36Z", "files": ["IPython/core/debugger.py", "IPython/core/display.py", "IPython/core/interactiveshell.py", "IPython/core/magics/osm.py", "IPython/core/release.py", "IPython/core/tests/test_debugger.py", "IPython/core/tests/test_interactiveshell.py", "IPython/core/tests/test_magic.py", "IPython/extensions/octavemagic.py", "IPython/extensions/storemagic.py", "IPython/external/ssh/tunnel.py", "IPython/frontend/html/notebook/handlers.py", "IPython/frontend/html/notebook/notebookapp.py", "IPython/frontend/qt/console/console_widget.py", "IPython/parallel/apps/ipengineapp.py", "IPython/parallel/apps/launcher.py", "IPython/parallel/engine/engine.py", "IPython/parallel/error.py", "IPython/parallel/tests/test_view.py", "IPython/utils/jsonutil.py", "IPython/utils/tests/test_text.py", "IPython/utils/text.py", "IPython/zmq/ipkernel.py", "IPython/zmq/zmqshell.py", "setup.py", "setupbase.py", "tools/release_windows.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzowN2U0ZGM2ZDA4NDE2MzhiMmFlNWM4MTIwMjNhZjdmNjgxN2ViOTg3", "commit_message": "Merge pull request #2185 from cqmckay/magicfix\n\nfix %store, and add test\r\n\r\ncloses #2099", "commit_timestamp": "2012-07-21T16:14:49Z", "files": ["IPython/core/tests/test_magic.py", "IPython/extensions/storemagic.py"]}], "labels": ["bug", "regression", "good first issue"], "created_at": "2012-07-05T10:39:33Z", "closed_at": "2012-07-21T16:14:51Z", "linked_pr_number": [2099], "method": ["label"]}
{"issue_number": 2097, "title": "Do not crash if history db is corrupted", "body": "For some odd reason my history db is messed up, and that makes ipython crash on start:\n\n```\n(master)dreamweaver[nbconvert]> ip\nTraceback (most recent call last):\n  File \"/home/fperez/usr/bin/ipython\", line 7, in <module>\n    launch_new_instance()\n  File \"/home/fperez/usr/lib/python2.7/site-packages/IPython/frontend/terminal/ipapp.py\", line 388, in launch_new_instance\n    app.initialize()\n  File \"<string>\", line 2, in initialize\n  File \"/home/fperez/usr/lib/python2.7/site-packages/IPython/config/application.py\", line 84, in catch_config_error\n    return method(app, *args, **kwargs)\n  File \"/home/fperez/usr/lib/python2.7/site-packages/IPython/frontend/terminal/ipapp.py\", line 324, in initialize\n    self.init_shell()\n  File \"/home/fperez/usr/lib/python2.7/site-packages/IPython/frontend/terminal/ipapp.py\", line 340, in init_shell\n    ipython_dir=self.ipython_dir)\n  File \"/home/fperez/usr/lib/python2.7/site-packages/IPython/config/configurable.py\", line 318, in instance\n    inst = cls(*args, **kwargs)\n  File \"/home/fperez/usr/lib/python2.7/site-packages/IPython/frontend/terminal/interactiveshell.py\", line 360, in __init__\n    user_module=user_module, custom_exceptions=custom_exceptions\n  File \"/home/fperez/usr/lib/python2.7/site-packages/IPython/core/interactiveshell.py\", line 481, in __init__\n    self.init_readline()\n  File \"/home/fperez/usr/lib/python2.7/site-packages/IPython/core/interactiveshell.py\", line 1868, in init_readline\n    self.refill_readline_hist()\n  File \"/home/fperez/usr/lib/python2.7/site-packages/IPython/core/interactiveshell.py\", line 1880, in refill_readline_hist\n    include_latest=True):\n  File \"/home/fperez/usr/lib/python2.7/site-packages/IPython/core/history.py\", line 252, in get_tail\n    (n,), raw=raw, output=output)\n  File \"/home/fperez/usr/lib/python2.7/site-packages/IPython/core/history.py\", line 197, in _run_sql\n    (toget, sqlfrom) + sql, params)\nDatabaseError: database disk image is malformed\n```\n\nWe should simply print a loud warning, rename the corrupted file (in case the user cares to do forensics on it), inform of the renaming, and move on with a fresh db.\n", "commits": [{"node_id": "MDY6Q29tbWl0MTIzNjAwMzpkMzQ3YzM0N2JhYjkxNWRmNjlkNDk5NTIxYjQ4NzZkM2M5YjE2OGI5", "commit_message": "Catch sqlite DatabaseErrors in more places when reading the history database.\n\nCloses gh-2097", "commit_timestamp": "2012-09-19T14:38:04Z", "files": ["IPython/core/history.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmQzNDdjMzQ3YmFiOTE1ZGY2OWQ0OTk1MjFiNDg3NmQzYzliMTY4Yjk=", "commit_message": "Catch sqlite DatabaseErrors in more places when reading the history database.\n\nCloses gh-2097", "commit_timestamp": "2012-09-19T14:38:04Z", "files": ["IPython/core/history.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzpkOGZjZGRlZjM3YWFiMGVjOTU2MWE3NTQ0YTlhODZhYmI3NTlkYjg2", "commit_message": "Catch sqlite DatabaseErrors in more places when reading the history database.\n\nCloses gh-2097", "commit_timestamp": "2012-09-19T14:38:04Z", "files": ["IPython/core/history.py"]}], "labels": ["bug"], "created_at": "2012-07-05T02:11:55Z", "closed_at": "2012-09-29T12:40:56Z", "method": ["label"]}
{"issue_number": 2085, "title": "%ed magic fails in qtconsole", "body": "%edit works as expected but %ed fails\n\n``` python\n%ed\nIPython will make a temporary file named: /var/folders/gw/ttdxvysn20sf7tspmk384q000000gn/T/ipython_edit_d2eA7c.py\nEditing...---------------------------------------------------------------------------\nAttributeError                            Traceback (most recent call last)\n<ipython-input-1-649c77c2a5b5> in <module>()\n----> 1 get_ipython().magic(u'ed')\n\n/Library/Python/2.7/site-packages/IPython/core/interactiveshell.pyc in magic(self, arg_s)\n   2159         magic_name, _, magic_arg_s = arg_s.partition(' ')\n   2160         magic_name = magic_name.lstrip(prefilter.ESC_MAGIC)\n-> 2161         return self.run_line_magic(magic_name, magic_arg_s)\n   2162 \n   2163     #-------------------------------------------------------------------------\n\n/Library/Python/2.7/site-packages/IPython/core/interactiveshell.pyc in run_line_magic(self, magic_name, line)\n   2085                 args.append(sys._getframe(stack_depth).f_locals)\n   2086             with self.builtin_trap:\n-> 2087                 result = fn(*args)\n   2088             return result\n   2089 \n\n/Library/Python/2.7/site-packages/IPython/core/magics/code.pyc in ed(self, parameter_s)\n\n/Library/Python/2.7/site-packages/IPython/core/magic.pyc in <lambda>(f, *a, **k)\n    189     # but it's overkill for just that one bit of state.\n    190     def magic_deco(arg):\n--> 191         call = lambda f, *a, **k: f(*a, **k)\n    192 \n    193         if callable(arg):\n\n/Library/Python/2.7/site-packages/IPython/core/magics/code.pyc in ed(self, parameter_s)\n    327     def ed(self, parameter_s=''):\n    328         \"\"\"Alias to %edit.\"\"\"\n--> 329         return self.edit(parameter_s)\n    330 \n    331     @skip_doctest\n\n/Library/Python/2.7/site-packages/IPython/core/magics/code.pyc in edit(self, parameter_s, last_call)\n\n/Library/Python/2.7/site-packages/IPython/core/magic.pyc in <lambda>(f, *a, **k)\n    189     # but it's overkill for just that one bit of state.\n    190     def magic_deco(arg):\n--> 191         call = lambda f, *a, **k: f(*a, **k)\n    192 \n    193         if callable(arg):\n\n/Library/Python/2.7/site-packages/IPython/core/magics/code.pyc in edit(self, parameter_s, last_call)\n    490             if ' ' in filename:\n    491                 filename = \"'%s'\" % filename\n--> 492             self.shell.hooks.editor(filename,lineno)\n    493         except TryNext:\n    494             warn('Could not open editor')\n\n/Library/Python/2.7/site-packages/IPython/core/hooks.pyc in __call__(self, *args, **kw)\n    136             #print \"prio\",prio,\"cmd\",cmd #dbg\n    137             try:\n--> 138                 return cmd(*args, **kw)\n    139             except TryNext as exc:\n    140                 last_exc = exc\n\n/Library/Python/2.7/site-packages/IPython/core/hooks.pyc in editor(self, filename, linenum, wait)\n     65     # IPython configures a default editor at startup by reading $EDITOR from\n     66     # the environment, and falling back on vi (unix) or notepad (win32).\n---> 67     editor = self.editor\n     68 \n     69     # marker for at which line to open the file (for existing objects)\n\nAttributeError: 'ZMQInteractiveShell' object has no attribute 'editor'\n```\n", "commits": [{"node_id": "MDY6Q29tbWl0MjM0NDA3MzphOWU3MTQ4MDIzMDI1NTVmOGIzOWRkYzNlNTNmODg0NTRiZDYzZGQ1", "commit_message": "re-aliad %ed to %edit in qtconsole\n\nfixes #2085", "commit_timestamp": "2012-07-10T13:11:06Z", "files": ["IPython/zmq/zmqshell.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmE5ZTcxNDgwMjMwMjU1NWY4YjM5ZGRjM2U1M2Y4ODQ1NGJkNjNkZDU=", "commit_message": "re-aliad %ed to %edit in qtconsole\n\nfixes #2085", "commit_timestamp": "2012-07-10T13:11:06Z", "files": ["IPython/zmq/zmqshell.py"]}, {"node_id": "MDY6Q29tbWl0MjM0NDA3Mzo3NjViYWU4ZWZkNDgxMThkNzY3YjdkMzU3YWQzNTg4ODJhZjI4MGM0", "commit_message": "re-aliad %ed to %edit in qtconsole\n\nfixes #2085\n\nbackported to 0.13.1 from PR #2086", "commit_timestamp": "2012-07-13T12:57:59Z", "files": ["IPython/zmq/zmqshell.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjFjMTIyMmZhMDg0NWFiYjAzY2VlYzU1MzkwNjAwZmUwNzYyOGZhNzk=", "commit_message": "Backport PR #2086: re-aliad %ed to %edit in qtconsole\n\nfixes #2085\n\nshould be backported to 0.13.1", "commit_timestamp": "2012-07-21T15:05:30Z", "files": ["IPython/zmq/zmqshell.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzplNjk1ZDFlYjBmYjExMWExN2NjYWMzOWFkMzVmNGE3MGRhN2U4NzU2", "commit_message": "re-aliad %ed to %edit in qtconsole\n\nfixes #2085", "commit_timestamp": "2012-07-10T13:11:06Z", "files": ["IPython/zmq/zmqshell.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmJmNGFhNmRjNDA2ZjQ2ZjczMDNlMTE4YzZmNGRkZDkyYmQxZTRkMGI=", "commit_message": "Merge pull request #2086 from Carreau/fixes-2085\n\nre-alias %ed to %edit in qtconsole with new alias_magic api.", "commit_timestamp": "2012-07-10T19:53:53Z", "files": ["IPython/zmq/zmqshell.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmJmNGFhNmRjNDA2ZjQ2ZjczMDNlMTE4YzZmNGRkZDkyYmQxZTRkMGI=", "commit_message": "Merge pull request #2086 from Carreau/fixes-2085\n\nre-alias %ed to %edit in qtconsole with new alias_magic api.", "commit_timestamp": "2012-07-10T19:53:53Z", "files": ["IPython/zmq/zmqshell.py"]}, {"node_id": "MDY6Q29tbWl0MjM0NDA3Mzo3NjViYWU4ZWZkNDgxMThkNzY3YjdkMzU3YWQzNTg4ODJhZjI4MGM0", "commit_message": "re-aliad %ed to %edit in qtconsole\n\nfixes #2085\n\nbackported to 0.13.1 from PR #2086", "commit_timestamp": "2012-07-13T12:57:59Z", "files": ["IPython/zmq/zmqshell.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjFjMTIyMmZhMDg0NWFiYjAzY2VlYzU1MzkwNjAwZmUwNzYyOGZhNzk=", "commit_message": "Backport PR #2086: re-aliad %ed to %edit in qtconsole\n\nfixes #2085\n\nshould be backported to 0.13.1", "commit_timestamp": "2012-07-21T15:05:30Z", "files": ["IPython/zmq/zmqshell.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo5N2Y5ZTlkMmJjOWFkMmUyMmM5MDgwZWExZWIwZDM5OWVlNjUyOGEy", "commit_message": "Merge pull request #2086 from Carreau/fixes-2085\n\nre-alias %ed to %edit in qtconsole with new alias_magic api.", "commit_timestamp": "2012-07-10T19:53:53Z", "files": ["IPython/zmq/zmqshell.py"]}], "labels": ["bug"], "created_at": "2012-07-03T12:28:52Z", "closed_at": "2012-07-10T19:53:55Z", "linked_pr_number": [2085], "method": ["label", "regex"]}
{"issue_number": 2082, "title": "Qt Console output spacing", "body": "In IPython (=0.13) Qt Console, there seems to be a missing newline before the Out parameter in the first plot command after running `pylab`.  See, for example `In [2]` and `Out[2]`:\n\n```\nPython 2.7.3 (default, Apr 20 2012, 22:39:59) \nType \"copyright\", \"credits\" or \"license\" for more information.\n\nIPython 0.13 -- An enhanced Interactive Python.\n?         -> Introduction and overview of IPython's features.\n%quickref -> Quick reference.\nhelp      -> Python's own help system.\nobject?   -> Details about 'object', use 'object??' for extra details.\n%guiref   -> A brief reference about the graphical user interface.\n\nIn [1]: pylab\n\nWelcome to pylab, a matplotlib-based Python environment [backend: TkAgg].\nFor more information, type 'help(pylab)'.\n\nIn [2]: plot([1,2,3])Out[2]: [<matplotlib.lines.Line2D at 0x3e40210>]\n\nIn [3]: plot([1,2,3])\nOut[3]: [<matplotlib.lines.Line2D at 0x3e34d10>]\n\nIn [4]: \n```\n", "commits": [{"node_id": "MDY6Q29tbWl0MjM0NDA3MzpkZDVmNjUxYzIzMTAxYmM3MGFiZjhlMTVhOGQwOWY5NGY0ODE4YTY5", "commit_message": "fix completer deletting newline\n\nfixes #2082", "commit_timestamp": "2012-07-05T13:28:11Z", "files": ["IPython/frontend/qt/console/console_widget.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmRkNWY2NTFjMjMxMDFiYzcwYWJmOGUxNWE4ZDA5Zjk0ZjQ4MThhNjk=", "commit_message": "fix completer deletting newline\n\nfixes #2082", "commit_timestamp": "2012-07-05T13:28:11Z", "files": ["IPython/frontend/qt/console/console_widget.py"]}, {"node_id": "MDY6Q29tbWl0MjM0NDA3MzpkM2JkYTgyOGYyMTdkMmFiZmMzZDI3ZjQxNzJhNGNlMGEzNzJmODdi", "commit_message": "fix completer deletting newline\n\nfixes #2082\n\nbackported to 0.13.1 from PR #2101", "commit_timestamp": "2012-07-13T12:58:40Z", "files": ["IPython/frontend/qt/console/console_widget.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmE3ODRlMzI1YTdiZDc3MzMwODJmYWNkNjI5MzlkOTU4MjczYWVhMTY=", "commit_message": "Backport PR #2101: fix completer deletting newline\n\nshould fixes #2082\n\ndo not forget to backport to 0.13.1", "commit_timestamp": "2012-07-21T15:05:30Z", "files": ["IPython/frontend/qt/console/console_widget.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo0YTFlMDRiMzA3ZTU4ZTNiMDc0MjdiMGRiNTNlMWIxOTY2M2JkZDFk", "commit_message": "fix completer deletting newline\n\nfixes #2082", "commit_timestamp": "2012-07-05T13:28:11Z", "files": ["IPython/frontend/qt/console/console_widget.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo1YWQxN2Q2ZWJiYzNiYTYyN2EyNjg3OWZjYzM4YTA5NjA0YWYwNzM3", "commit_message": "Merge pull request #2101 from Carreau/fixes-2082\n\nFix completer deleting newline in qtconsole.\r\n\r\nFixes #2082.", "commit_timestamp": "2012-07-05T16:54:35Z", "files": ["IPython/frontend/qt/console/console_widget.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjgxMTI4M2EzZWI2MWFiZTQ2YTcyN2RkM2I2MGY4ZDBjY2VlZTYyMzU=", "commit_message": "Merge pull request #2101 from Carreau/fixes-2082\n\nFix completer deleting newline in qtconsole.\r\n\r\nFixes #2082.", "commit_timestamp": "2012-07-05T16:54:35Z", "files": ["IPython/frontend/qt/console/console_widget.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjgxMTI4M2EzZWI2MWFiZTQ2YTcyN2RkM2I2MGY4ZDBjY2VlZTYyMzU=", "commit_message": "Merge pull request #2101 from Carreau/fixes-2082\n\nFix completer deleting newline in qtconsole.\r\n\r\nFixes #2082.", "commit_timestamp": "2012-07-05T16:54:35Z", "files": ["IPython/frontend/qt/console/console_widget.py"]}, {"node_id": "MDY6Q29tbWl0MjM0NDA3MzpkM2JkYTgyOGYyMTdkMmFiZmMzZDI3ZjQxNzJhNGNlMGEzNzJmODdi", "commit_message": "fix completer deletting newline\n\nfixes #2082\n\nbackported to 0.13.1 from PR #2101", "commit_timestamp": "2012-07-13T12:58:40Z", "files": ["IPython/frontend/qt/console/console_widget.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmE3ODRlMzI1YTdiZDc3MzMwODJmYWNkNjI5MzlkOTU4MjczYWVhMTY=", "commit_message": "Backport PR #2101: fix completer deletting newline\n\nshould fixes #2082\n\ndo not forget to backport to 0.13.1", "commit_timestamp": "2012-07-21T15:05:30Z", "files": ["IPython/frontend/qt/console/console_widget.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo1YWQxN2Q2ZWJiYzNiYTYyN2EyNjg3OWZjYzM4YTA5NjA0YWYwNzM3", "commit_message": "Merge pull request #2101 from Carreau/fixes-2082\n\nFix completer deleting newline in qtconsole.\r\n\r\nFixes #2082.", "commit_timestamp": "2012-07-05T16:54:35Z", "files": ["IPython/frontend/qt/console/console_widget.py"]}], "labels": ["qtconsole", "bug"], "created_at": "2012-07-02T17:12:55Z", "closed_at": "2012-07-05T16:54:37Z", "linked_pr_number": [2082], "method": ["label"]}
{"issue_number": 2080, "title": "Event loop issues with IPython 0.12 and PyQt4 (QDialog.exec_ and more)", "body": "Using IPython 0.12 (or 0.12.1) and PyQt4 (or even Qt widgets compiled in C++ run from IPython), I get some strange behaviours of the event loop. Typically, QFileDialog.exec_() returns immediately when exec_ is called (and returns 0).\nI also get the main event loop quitting (and finishing with a segfault) in some Qt event processing, but I could not reproduce this problem in a simple program.\nFor the dialog problem, I have found someone else having the same problem:\nhttp://stackoverflow.com/questions/10683594/ipython-0-12-pyqt4-qdialog-qmenu-exec-does-not-block-returns-immedi\nStrangely, the problem does not show up if the QFileDialog is built directly from the Ipython shell, but only when it is built from within a Qt slot (for instance a menu callback).\nI have this problem on Linux (Ubuntu 10.04, using system python 2.6.5, system Qt 4.6.2, system PyQt 4.7.2, and a custom IPython install).\n**I do not get the same problem using IPython 0.11.**\nHere is a small program example displaying the problem. It can be run from a ipython shell (ipython --gui=qt):\n\n``` python\nfrom PyQt4 import QtCore, QtGui\n\nclass CustomWidget( QtGui.QMainWindow ):\n    def __init__( self, parent=None, flags=0 ):\n        QtGui.QMainWindow.__init__( self, parent, QtCore.Qt.WindowFlags( flags ) )\n        menu = self.menuBar()\n        ac = QtGui.QAction( 'open', self )\n        m = menu.addMenu( 'File' )\n        m.addAction( ac )\n        ac.triggered.connect( self.openFile )\n\n  def openFile( self, checked=False ):\n      print 'openFile'\n      dialog=QtGui.QFileDialog(self,'','.')\n      f=dialog.exec_()\n      # returns immediately, the dialog doesn't even show up (or subliminally)\n      print 'file dialog result:', f\n\nw = CustomWidget( None, QtCore.Qt.WA_DeleteOnClose )\nw.show()\n\n# here, the dialog works as expected\n#dialog=QtGui.QFileDialog(w,'','.')\n#f=dialog.exec_()\n#print 'file dialog result from main shell:', f\n```\n", "commits": [{"node_id": "MDY6Q29tbWl0MjkwOTI5MDoyZmMzYTBhOGE0YWQ2YWZkNjFhODRmZWFhZmJjZjAxMTcyNTk4YWRi", "commit_message": "inputhook_qt4: Mimic C-level qtcore_input_hook().\n\nCloses #2080.", "commit_timestamp": "2012-07-11T22:43:20Z", "files": ["IPython/lib/inputhookqt4.py"]}, {"node_id": "MDY6Q29tbWl0MjkwOTI5MDo2NmM3N2ZmMzkyYWQ3NDI1Zjg0NDNlMTM0M2Y1YmY4Yzg0YTdiNWQ3", "commit_message": "inputhook_qt4: Use QEventLoop instead of starting up the QCoreApplication.\n\nCloses #2080.", "commit_timestamp": "2012-09-07T18:40:54Z", "files": ["IPython/lib/inputhookqt4.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjY2Yzc3ZmYzOTJhZDc0MjVmODQ0M2UxMzQzZjViZjhjODRhN2I1ZDc=", "commit_message": "inputhook_qt4: Use QEventLoop instead of starting up the QCoreApplication.\n\nCloses #2080.", "commit_timestamp": "2012-09-07T18:40:54Z", "files": ["IPython/lib/inputhookqt4.py"]}], "labels": ["bug", "regression"], "created_at": "2012-07-02T10:10:45Z", "closed_at": "2012-11-03T15:27:08Z", "method": ["label"]}
{"issue_number": 2075, "title": "Local Mathjax install causes iptest3 error under python3", "body": "The local install of mathjax installs a non python3 compatible \"conf.py\"  file in static/mathjax/docs/source/conf.py \nthis causes an apparent test failure  when running iptest3.py in Ipython.frontend. This is as such a non issue since it only causes\nan error in a non existing test and no functionality is broken but it would be great if the mathjax dir could be excluded from the nose tests.\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU4NTE4OjcwZWE5YTg5OTIwNDVmNTA5Yzk5ZjUwNDZjZjNmNDhjNWMwNWJjZTg=", "commit_message": "Merge pull request #2076 from fperez/exclude-static-tests\n\nSkip notebook 'static' dir in test suite.\r\n\r\nThere's nothing there we should be running python tests on, and\r\noccasionally python files may appear there that cause problems to nose\r\n(e.g. mathjax ships a non-py3 valid conf.py that breaks py3 testing).\r\n\r\nCloses #2075", "commit_timestamp": "2012-07-01T23:21:51Z", "files": ["IPython/testing/iptest.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo2NTQ0YTBhZGZmM2JkNWYzNDVmNGYyMDgzYzY2ZjRiZmMxNGY1NmI3", "commit_message": "Merge pull request #2076 from fperez/exclude-static-tests\n\nSkip notebook 'static' dir in test suite.\r\n\r\nThere's nothing there we should be running python tests on, and\r\noccasionally python files may appear there that cause problems to nose\r\n(e.g. mathjax ships a non-py3 valid conf.py that breaks py3 testing).\r\n\r\nCloses #2075", "commit_timestamp": "2012-07-01T23:21:51Z", "files": ["IPython/testing/iptest.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjcwZWE5YTg5OTIwNDVmNTA5Yzk5ZjUwNDZjZjNmNDhjNWMwNWJjZTg=", "commit_message": "Merge pull request #2076 from fperez/exclude-static-tests\n\nSkip notebook 'static' dir in test suite.\r\n\r\nThere's nothing there we should be running python tests on, and\r\noccasionally python files may appear there that cause problems to nose\r\n(e.g. mathjax ships a non-py3 valid conf.py that breaks py3 testing).\r\n\r\nCloses #2075", "commit_timestamp": "2012-07-01T23:21:51Z", "files": ["IPython/testing/iptest.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjcwZWE5YTg5OTIwNDVmNTA5Yzk5ZjUwNDZjZjNmNDhjNWMwNWJjZTg=", "commit_message": "Merge pull request #2076 from fperez/exclude-static-tests\n\nSkip notebook 'static' dir in test suite.\r\n\r\nThere's nothing there we should be running python tests on, and\r\noccasionally python files may appear there that cause problems to nose\r\n(e.g. mathjax ships a non-py3 valid conf.py that breaks py3 testing).\r\n\r\nCloses #2075", "commit_timestamp": "2012-07-01T23:21:51Z", "files": ["IPython/testing/iptest.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo2NTQ0YTBhZGZmM2JkNWYzNDVmNGYyMDgzYzY2ZjRiZmMxNGY1NmI3", "commit_message": "Merge pull request #2076 from fperez/exclude-static-tests\n\nSkip notebook 'static' dir in test suite.\r\n\r\nThere's nothing there we should be running python tests on, and\r\noccasionally python files may appear there that cause problems to nose\r\n(e.g. mathjax ships a non-py3 valid conf.py that breaks py3 testing).\r\n\r\nCloses #2075", "commit_timestamp": "2012-07-01T23:21:51Z", "files": ["IPython/testing/iptest.py"]}], "labels": ["bug"], "created_at": "2012-07-01T19:57:31Z", "closed_at": "2012-07-01T23:21:53Z", "linked_pr_number": [2075], "method": ["label", "regex"]}
{"issue_number": 2057, "title": "setup fails for python3 with LANG=C", "body": "since J\u00f6rgen was added do release.py python3 fails due to the umlaut on systems with LANG=C\n\n```\n$ LANG=C python3.2 setup.py build\nTraceback (most recent call last):\n  File \"setup.py\", line 61, in <module>\n    from setupbase import target_update\n  File \"/tmp/ipython-ipython-da134db/setupbase.py\", line 74, in <module>\n    execfile(pjoin('IPython','core','release.py'), globals())\n  File \"/tmp/ipython-ipython-da134db/setupbase.py\", line 55, in execfile\n    exec(compile(open(fname).read(), fname, \"exec\"), globs, locs)\n  File \"/usr/lib/python3.2/encodings/ascii.py\", line 26, in decode\n    return codecs.ascii_decode(input, self.errors)[0]\nUnicodeDecodeError: 'ascii' codec can't decode byte 0xc3 in position 4379: ordinal not in range(128)\n```\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU4NzYwOmJhMjkwN2Q0YjkwNmRkYzMyYWQ0ZTVlNTZjZmUwYzU1NjkxMWM4Yjk=", "commit_message": "Remove umlauts so py3 installations on LANG=C systems succeed.\n\nCloses #2057.", "commit_timestamp": "2012-06-30T14:57:02Z", "files": ["IPython/core/release.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmJhMjkwN2Q0YjkwNmRkYzMyYWQ0ZTVlNTZjZmUwYzU1NjkxMWM4Yjk=", "commit_message": "Remove umlauts so py3 installations on LANG=C systems succeed.\n\nCloses #2057.", "commit_timestamp": "2012-06-30T14:57:02Z", "files": ["IPython/core/release.py"]}, {"node_id": "MDY6Q29tbWl0MjM0NDA3MzphNWYxYTBjOWYyMzBhYTE0NmJiOTJjNTgxYmU4YTgwNjc4NTA3M2E0", "commit_message": "Remove umlauts so py3 installations on LANG=C systems succeed.\n\nCloses #2057.\n\nbackported to 0.13.1 from ba2907d4b906ddc32ad4e5e56cfe0c556911c8b9", "commit_timestamp": "2012-07-13T12:40:54Z", "files": ["IPython/core/release.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjQyMThmNDI1ZmY4YTc5M2UxMThlNjBmNDgzNTU3OWJmNmFlMWE1ZDQ=", "commit_message": "Backport PR #2063: Remove umlauts so py3 installations on LANG=C systems succeed.\n\nCloses #2057.", "commit_timestamp": "2012-07-21T15:05:30Z", "files": ["IPython/core/release.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzphMGUxNThmN2RlZDBmYzY2ZWU4NmE2ZGYxZGMxZGMyMGE5NWUxM2Q1", "commit_message": "Remove umlauts so py3 installations on LANG=C systems succeed.\n\nCloses #2057.", "commit_timestamp": "2012-06-30T14:57:02Z", "files": ["IPython/core/release.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4Ojk5NjRmNjY2ZGM1ZTliZWU2ZThlODE5YzhmZWZkZTkyZTQwYTliOTE=", "commit_message": "Merge pull request #2063 from fperez/lang_c_py3\n\nRemove umlauts so py3 installations on LANG=C systems succeed.", "commit_timestamp": "2012-07-01T06:58:42Z", "files": ["IPython/core/release.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4Ojk5NjRmNjY2ZGM1ZTliZWU2ZThlODE5YzhmZWZkZTkyZTQwYTliOTE=", "commit_message": "Merge pull request #2063 from fperez/lang_c_py3\n\nRemove umlauts so py3 installations on LANG=C systems succeed.", "commit_timestamp": "2012-07-01T06:58:42Z", "files": ["IPython/core/release.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjQyMThmNDI1ZmY4YTc5M2UxMThlNjBmNDgzNTU3OWJmNmFlMWE1ZDQ=", "commit_message": "Backport PR #2063: Remove umlauts so py3 installations on LANG=C systems succeed.\n\nCloses #2057.", "commit_timestamp": "2012-07-21T15:05:30Z", "files": ["IPython/core/release.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo4MDQyNTFiMTdiNTMzNmVhZWJhOThiMGUxODkyYTI3YmNiMDJkYmU4", "commit_message": "Merge pull request #2063 from fperez/lang_c_py3\n\nRemove umlauts so py3 installations on LANG=C systems succeed.", "commit_timestamp": "2012-07-01T06:58:42Z", "files": ["IPython/core/release.py"]}], "labels": ["bug"], "created_at": "2012-06-30T10:48:55Z", "closed_at": "2012-07-01T06:58:44Z", "linked_pr_number": [2057], "method": ["label", "regex"]}
{"issue_number": 2056, "title": "except-shadows-builtin osm.py:687", "body": "except ValueError, IOError:\n\nshould be\n\nexcept (ValueError, IOError):\n", "commits": [{"node_id": "MDY6Q29tbWl0MjM0NDA3MzplN2E2NTA2MmUyMWU3YmZkZTE4NGQyMjI5ZjBhODQyYTkxZWFjYzU2", "commit_message": "use explicit tuple in exception\n\nfixes #2056", "commit_timestamp": "2012-06-30T14:29:10Z", "files": ["IPython/core/magics/osm.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmU3YTY1MDYyZTIxZTdiZmRlMTg0ZDIyMjlmMGE4NDJhOTFlYWNjNTY=", "commit_message": "use explicit tuple in exception\n\nfixes #2056", "commit_timestamp": "2012-06-30T14:29:10Z", "files": ["IPython/core/magics/osm.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NzYwOjZkYzExZGM4NjRlMTE1NWFmODNhNmRmOGI1ZGNhMDQ1YWNjZDk3NjM=", "commit_message": "Merge pull request #2061 from Carreau/fixes-2056\n\nuse explicit tuple in exception\r\n\r\nfixes #2056", "commit_timestamp": "2012-06-30T14:39:24Z", "files": ["IPython/core/magics/osm.py"]}, {"node_id": "MDY6Q29tbWl0MjM0NDA3MzoyMDI0Yzg2Yzg3NjQ5NDg0ZDA2ZWM3NzgxODNmY2IyYjIzM2RmY2M0", "commit_message": "use explicit tuple in exception\n\nfixes #2056\n\nbackported to 0.13.1 from PR #2061", "commit_timestamp": "2012-07-13T12:36:59Z", "files": ["IPython/core/magics/osm.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmU0ZWViNjU0MTAzNDZiODM0YmY0NGJjMTNhMTJiZDYzZGZmYzYxODc=", "commit_message": "Backport PR #2061: use explicit tuple in exception\n\nfixes #2056\n\nDo we want to try enforcing [pep 3110](http://www.python.org/dev/peps/pep-3110/) and use `as` in every exceptions that uses `,` ?", "commit_timestamp": "2012-07-21T15:05:28Z", "files": ["IPython/core/magics/osm.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzplMTlhOTYzOTE0MDVkOWVlOTEwOTYwNTAxZWIzMjc2YjI0NzYyMDUw", "commit_message": "use explicit tuple in exception\n\nfixes #2056", "commit_timestamp": "2012-06-30T14:29:10Z", "files": ["IPython/core/magics/osm.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzpmNDdhZjMxYmE1YTJkMzcyNjQ5NzZiZmVmOTMxNzExNzBiZTFlNDg0", "commit_message": "Merge pull request #2061 from Carreau/fixes-2056\n\nuse explicit tuple in exception\r\n\r\nfixes #2056", "commit_timestamp": "2012-06-30T14:39:24Z", "files": ["IPython/core/magics/osm.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjZkYzExZGM4NjRlMTE1NWFmODNhNmRmOGI1ZGNhMDQ1YWNjZDk3NjM=", "commit_message": "Merge pull request #2061 from Carreau/fixes-2056\n\nuse explicit tuple in exception\r\n\r\nfixes #2056", "commit_timestamp": "2012-06-30T14:39:24Z", "files": ["IPython/core/magics/osm.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjZkYzExZGM4NjRlMTE1NWFmODNhNmRmOGI1ZGNhMDQ1YWNjZDk3NjM=", "commit_message": "Merge pull request #2061 from Carreau/fixes-2056\n\nuse explicit tuple in exception\r\n\r\nfixes #2056", "commit_timestamp": "2012-06-30T14:39:24Z", "files": ["IPython/core/magics/osm.py"]}, {"node_id": "MDY6Q29tbWl0MjM0NDA3MzoyMDI0Yzg2Yzg3NjQ5NDg0ZDA2ZWM3NzgxODNmY2IyYjIzM2RmY2M0", "commit_message": "use explicit tuple in exception\n\nfixes #2056\n\nbackported to 0.13.1 from PR #2061", "commit_timestamp": "2012-07-13T12:36:59Z", "files": ["IPython/core/magics/osm.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmU0ZWViNjU0MTAzNDZiODM0YmY0NGJjMTNhMTJiZDYzZGZmYzYxODc=", "commit_message": "Backport PR #2061: use explicit tuple in exception\n\nfixes #2056\n\nDo we want to try enforcing [pep 3110](http://www.python.org/dev/peps/pep-3110/) and use `as` in every exceptions that uses `,` ?", "commit_timestamp": "2012-07-21T15:05:28Z", "files": ["IPython/core/magics/osm.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzpmNDdhZjMxYmE1YTJkMzcyNjQ5NzZiZmVmOTMxNzExNzBiZTFlNDg0", "commit_message": "Merge pull request #2061 from Carreau/fixes-2056\n\nuse explicit tuple in exception\r\n\r\nfixes #2056", "commit_timestamp": "2012-06-30T14:39:24Z", "files": ["IPython/core/magics/osm.py"]}], "labels": ["bug"], "created_at": "2012-06-30T10:29:39Z", "closed_at": "2012-06-30T14:39:25Z", "linked_pr_number": [2056], "method": ["label"]}
{"issue_number": 2054, "title": "sys_info missing git hash in sdists", "body": "#1538 changed how sys_info works, but the way it is done it puts no info in sdists.  This should be fixed, though it is not critical as most sdist installs are from releases.\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU5NDQ2OmU2ODJlOTE5Nzc4ZWEwZTliOTJlZDc1NWFiYTgwMGJmNGIwYTNkZjg=", "commit_message": "record sysinfo in sdist\n\ncloses #2054", "commit_timestamp": "2012-06-30T22:17:46Z", "files": ["setup.py", "setupbase.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmU2ODJlOTE5Nzc4ZWEwZTliOTJlZDc1NWFiYTgwMGJmNGIwYTNkZjg=", "commit_message": "record sysinfo in sdist\n\ncloses #2054", "commit_timestamp": "2012-06-30T22:17:46Z", "files": ["setup.py", "setupbase.py"]}, {"node_id": "MDY6Q29tbWl0MTU3MjY3NTpiMmFiN2Y1M2MxMjQ0YzM5Mzc4ZWM0ZDRhZWE4NjcyYWQ4OWJjYmEy", "commit_message": "Merge pull request #2068 from minrk/sysinfo\n\nrecord sysinfo in sdist\r\n\r\ncloses #2054", "commit_timestamp": "2012-06-30T22:57:23Z", "files": ["setup.py", "setupbase.py"]}, {"node_id": "MDY6Q29tbWl0MjM0NDA3MzpkZDgyMTc1NWVjOGExOTIxZjY5ZTc1ZWIzZjYzZWQ0NGJkYmViNjdm", "commit_message": "record sysinfo in sdist\n\ncloses #2054\n\nbackported to 0.13.1 from PR #2068", "commit_timestamp": "2012-07-13T12:53:28Z", "files": ["setup.py", "setupbase.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjBmZjBmZmNhMzhmOTM3NzI3YTA2YTM0ZTkyOTg2Nzg1ZjA1YzU4ODE=", "commit_message": "Backport PR #2068: record sysinfo in sdist\n\ncloses #2054", "commit_timestamp": "2012-07-21T15:05:29Z", "files": ["setup.py", "setupbase.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzpkZjg2MTBkM2Y4YWZlMThlY2I4NGI0YTg3NTllNmMxM2JhN2MzNDhi", "commit_message": "record sysinfo in sdist\n\ncloses #2054", "commit_timestamp": "2012-06-30T22:17:46Z", "files": ["setup.py", "setupbase.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzplYjEzMDJjYTc3OTcwZDM2YjU5MjNjNTNjYTkxOTg0YzNmNDI3OTAw", "commit_message": "Merge pull request #2068 from minrk/sysinfo\n\nrecord sysinfo in sdist\r\n\r\ncloses #2054", "commit_timestamp": "2012-06-30T22:57:23Z", "files": ["setup.py", "setupbase.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmIyYWI3ZjUzYzEyNDRjMzkzNzhlYzRkNGFlYTg2NzJhZDg5YmNiYTI=", "commit_message": "Merge pull request #2068 from minrk/sysinfo\n\nrecord sysinfo in sdist\r\n\r\ncloses #2054", "commit_timestamp": "2012-06-30T22:57:23Z", "files": ["setup.py", "setupbase.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmIyYWI3ZjUzYzEyNDRjMzkzNzhlYzRkNGFlYTg2NzJhZDg5YmNiYTI=", "commit_message": "Merge pull request #2068 from minrk/sysinfo\n\nrecord sysinfo in sdist\r\n\r\ncloses #2054", "commit_timestamp": "2012-06-30T22:57:23Z", "files": ["setup.py", "setupbase.py"]}, {"node_id": "MDY6Q29tbWl0MjM0NDA3MzpkZDgyMTc1NWVjOGExOTIxZjY5ZTc1ZWIzZjYzZWQ0NGJkYmViNjdm", "commit_message": "record sysinfo in sdist\n\ncloses #2054\n\nbackported to 0.13.1 from PR #2068", "commit_timestamp": "2012-07-13T12:53:28Z", "files": ["setup.py", "setupbase.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjBmZjBmZmNhMzhmOTM3NzI3YTA2YTM0ZTkyOTg2Nzg1ZjA1YzU4ODE=", "commit_message": "Backport PR #2068: record sysinfo in sdist\n\ncloses #2054", "commit_timestamp": "2012-07-21T15:05:29Z", "files": ["setup.py", "setupbase.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzplYjEzMDJjYTc3OTcwZDM2YjU5MjNjNTNjYTkxOTg0YzNmNDI3OTAw", "commit_message": "Merge pull request #2068 from minrk/sysinfo\n\nrecord sysinfo in sdist\r\n\r\ncloses #2054", "commit_timestamp": "2012-06-30T22:57:23Z", "files": ["setup.py", "setupbase.py"]}], "labels": ["bug", "regression"], "created_at": "2012-06-30T08:26:18Z", "closed_at": "2012-06-30T22:57:24Z", "linked_pr_number": [2054], "method": ["label"]}
{"issue_number": 2019, "title": "Windows: home directory expansion test fails", "body": "```\n$ iptest IPython.utils\n.....................................................................................F........SS.....S...S..S..........................\n....................................................................................\n======================================================================\nFAIL: test_get_ipython_dir_7, test home directory expansion on IPYTHONDIR\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"c:\\Python27\\lib\\site-packages\\nose\\case.py\", line 197, in runTest\n    self.test(*self.arg)\n  File \"c:\\documents and settings\\jdm\\ipython\\IPython\\utils\\tests\\test_path.py\", line 293, in test_get_ipython_dir_7\n    nt.assert_equal(ipdir, os.path.join(home_dir, 'somewhere'))\nAssertionError: u'c:\\\\Documents and Settings\\\\JDM\\\\somewhere' != 'c:/Documents and Settings/JDM\\\\somewhere'\n    \"u'c:\\\\\\\\Documents and Settings\\\\\\\\JDM\\\\\\\\somewhere' != 'c:/Documents and Settings/JDM\\\\\\\\somewhere'\" = '%s != %s' % (safe_repr(u'c\n:\\\\Documents and Settings\\\\JDM\\\\somewhere'), safe_repr('c:/Documents and Settings/JDM\\\\somewhere'))\n    \"u'c:\\\\\\\\Documents and Settings\\\\\\\\JDM\\\\\\\\somewhere' != 'c:/Documents and Settings/JDM\\\\\\\\somewhere'\" = self._formatMessage(\"u'c:\\\\\n\\\\Documents and Settings\\\\\\\\JDM\\\\\\\\somewhere' != 'c:/Documents and Settings/JDM\\\\\\\\somewhere'\", \"u'c:\\\\\\\\Documents and Settings\\\\\\\\JDM\\\n\\\\\\somewhere' != 'c:/Documents and Settings/JDM\\\\\\\\somewhere'\")\n>>  raise self.failureException(\"u'c:\\\\\\\\Documents and Settings\\\\\\\\JDM\\\\\\\\somewhere' != 'c:/Documents and Settings/JDM\\\\\\\\somewhere'\")\n\n\n----------------------------------------------------------------------                                                                 R\n```\n", "commits": [{"node_id": "MDY6Q29tbWl0NjcwOTU5OjA2M2YzNGEzMmJlMTU4MjA0YTc0ODY3NzFkMjRiYzZjODQwZmVhZWY=", "commit_message": "Fix home path expansion test in Windows.\n\nFixes #2019", "commit_timestamp": "2012-06-24T02:29:07Z", "files": ["IPython/utils/tests/test_path.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjA2M2YzNGEzMmJlMTU4MjA0YTc0ODY3NzFkMjRiYzZjODQwZmVhZWY=", "commit_message": "Fix home path expansion test in Windows.\n\nFixes #2019", "commit_timestamp": "2012-06-24T02:29:07Z", "files": ["IPython/utils/tests/test_path.py"]}, {"node_id": "MDY6Q29tbWl0MTU3MjY3NTo1YzAyZjlmYjBiMTIzYWZkY2E4ZWFkZTc5MzU1OWFjMzY4MDU0YmVk", "commit_message": "Merge pull request #2020 from jdmarch/fix_home_path_expansion_test_windows\n\nFix home path expansion test in Windows.\r\n\r\nFixes #2019.", "commit_timestamp": "2012-06-24T08:22:39Z", "files": ["IPython/utils/tests/test_path.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzpmZTIwODU3NDI3MjBlZmFjMmM3OGY1ZTc4MWZiZjdjYTUyMTJjM2E5", "commit_message": "Fix home path expansion test in Windows.\n\nFixes #2019", "commit_timestamp": "2012-06-24T02:29:07Z", "files": ["IPython/utils/tests/test_path.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzpiN2Y5MTBhZmYyYTEzYTFkYmNiMmM0YjA3NTdlZTNlMDkzYTVjNDUw", "commit_message": "Merge pull request #2020 from jdmarch/fix_home_path_expansion_test_windows\n\nFix home path expansion test in Windows.\r\n\r\nFixes #2019.", "commit_timestamp": "2012-06-24T08:22:39Z", "files": ["IPython/utils/tests/test_path.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjVjMDJmOWZiMGIxMjNhZmRjYThlYWRlNzkzNTU5YWMzNjgwNTRiZWQ=", "commit_message": "Merge pull request #2020 from jdmarch/fix_home_path_expansion_test_windows\n\nFix home path expansion test in Windows.\r\n\r\nFixes #2019.", "commit_timestamp": "2012-06-24T08:22:39Z", "files": ["IPython/utils/tests/test_path.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjVjMDJmOWZiMGIxMjNhZmRjYThlYWRlNzkzNTU5YWMzNjgwNTRiZWQ=", "commit_message": "Merge pull request #2020 from jdmarch/fix_home_path_expansion_test_windows\n\nFix home path expansion test in Windows.\r\n\r\nFixes #2019.", "commit_timestamp": "2012-06-24T08:22:39Z", "files": ["IPython/utils/tests/test_path.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzpiN2Y5MTBhZmYyYTEzYTFkYmNiMmM0YjA3NTdlZTNlMDkzYTVjNDUw", "commit_message": "Merge pull request #2020 from jdmarch/fix_home_path_expansion_test_windows\n\nFix home path expansion test in Windows.\r\n\r\nFixes #2019.", "commit_timestamp": "2012-06-24T08:22:39Z", "files": ["IPython/utils/tests/test_path.py"]}], "labels": ["windows", "testing"], "created_at": "2012-06-24T02:05:24Z", "closed_at": "2012-06-24T08:22:40Z", "linked_pr_number": [2019], "method": ["regex"]}
{"issue_number": 2006, "title": "Don't crash when starting notebook server if runnable browser not found", "body": "Parking this issue here as it's become very annoying on my Kubuntu system with google-chrome installed. I'll make a PR if no one else gets to it, but I think this should get fixed for 0.13\n\n```\n11:03 ~/code/ipython  (master)$ ipython notebook --pylab=inline\n[NotebookApp] Using existing profile dir: u'/home/wesm/.config/ipython/profile_default'\n[NotebookApp] Serving notebooks from /home/wesm/code/ipython\n[NotebookApp] The IPython Notebook is running at: http://127.0.0.1:8888/\n[NotebookApp] Use Control-C to stop this server and shut down all kernels.\nTraceback (most recent call last):\n  File \"/home/wesm/epd/bin/ipython\", line 9, in <module>\n    load_entry_point('ipython==0.13.dev', 'console_scripts', 'ipython')()\n  File \"/home/wesm/code/ipython/IPython/frontend/terminal/ipapp.py\", line 389, in launch_new_instance\n    app.start()\n  File \"/home/wesm/code/ipython/IPython/frontend/terminal/ipapp.py\", line 359, in start\n    return self.subapp.start()\n  File \"/home/wesm/code/ipython/IPython/frontend/html/notebook/notebookapp.py\", line 557, in start\n    browser = webbrowser.get()\n  File \"/home/wesm/epd/lib/python2.7/webbrowser.py\", line 52, in get\n    raise Error(\"could not locate runnable browser\")\nError: could not locate runnable browser\n\nIf you suspect this is an IPython bug, please report it at:\n    https://github.com/ipython/ipython/issues\nor send an email to the mailing list at ipython-dev@scipy.org\n\nYou can print a more detailed traceback right now with \"%tb\", or use \"%debug\"\nto interactively debug it.\n\nExtra-detailed tracebacks for bug-reporting purposes can be enabled via:\n    c.Application.verbose_crash=True\n```\n\nThis also doesn't work:\n\n```\n11:05 ~/code/ipython  (master)$ ipython notebook --pylab=inline --browser=google-chrome[NotebookApp] Using existing profile dir: u'/home/wesm/.config/ipython/profile_default'\n[NotebookApp] Serving notebooks from /home/wesm/code/ipython\n[NotebookApp] The IPython Notebook is running at: http://127.0.0.1:8888/\n[NotebookApp] Use Control-C to stop this server and shut down all kernels.\nTraceback (most recent call last):\n  File \"/home/wesm/epd/bin/ipython\", line 9, in <module>\n    load_entry_point('ipython==0.13.dev', 'console_scripts', 'ipython')()\n  File \"/home/wesm/code/ipython/IPython/frontend/terminal/ipapp.py\", line 389, in launch_new_instance\n    app.start()\n  File \"/home/wesm/code/ipython/IPython/frontend/terminal/ipapp.py\", line 359, in start\n    return self.subapp.start()\n  File \"/home/wesm/code/ipython/IPython/frontend/html/notebook/notebookapp.py\", line 555, in start\n    browser = webbrowser.get(self.browser)\n  File \"/home/wesm/epd/lib/python2.7/webbrowser.py\", line 52, in get\n    raise Error(\"could not locate runnable browser\")\nError: could not locate runnable browser\n\nIf you suspect this is an IPython bug, please report it at:\n    https://github.com/ipython/ipython/issues\nor send an email to the mailing list at ipython-dev@scipy.org\n\nYou can print a more detailed traceback right now with \"%tb\", or use \"%debug\"\nto interactively debug it.\n\nExtra-detailed tracebacks for bug-reporting purposes can be enabled via:\n    c.Application.verbose_crash=True\n```\n", "commits": [{"node_id": "MDY6Q29tbWl0MjkwOTI5MDplNjM2YzA0OTQxZjBmMWU4YTE0ZDVkYzcwZWE1NGI1YTc2YTY1NzY0", "commit_message": "notebook: Print a warning (but do not abort) if no webbrowser can be found.\n\nCloses gh-2006.", "commit_timestamp": "2012-06-23T00:39:15Z", "files": ["IPython/frontend/html/notebook/notebookapp.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmU2MzZjMDQ5NDFmMGYxZThhMTRkNWRjNzBlYTU0YjVhNzZhNjU3NjQ=", "commit_message": "notebook: Print a warning (but do not abort) if no webbrowser can be found.\n\nCloses gh-2006.", "commit_timestamp": "2012-06-23T00:39:15Z", "files": ["IPython/frontend/html/notebook/notebookapp.py"]}, {"node_id": "MDY6Q29tbWl0NjU5NDQ2OmU5NmExMjc5NGUzNzhjNmM4ZmE0MGM3YWRkYzZiYTkwZTlhOWY2N2E=", "commit_message": "Merge pull request #2010 from bfroehle/webbrowser_missing\n\nnotebook: Print a warning (but do not abort) if no webbrowser can be found.\r\n\r\nCloses gh-2006.", "commit_timestamp": "2012-06-23T00:51:34Z", "files": ["IPython/frontend/html/notebook/notebookapp.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzpjOGJhNWVkODdiNTk0ZDkyMTg3MTExMDllOGU3M2ZmOGQxMWJmMGVi", "commit_message": "notebook: Print a warning (but do not abort) if no webbrowser can be found.\n\nCloses gh-2006.", "commit_timestamp": "2012-06-23T00:39:15Z", "files": ["IPython/frontend/html/notebook/notebookapp.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzpmZjRhODM2ZjVkMTBhY2RhOWYxYzFlMGI1MzBmNTgxODg0MTI2ZjVm", "commit_message": "Merge pull request #2010 from bfroehle/webbrowser_missing\n\nnotebook: Print a warning (but do not abort) if no webbrowser can be found.\r\n\r\nCloses gh-2006.", "commit_timestamp": "2012-06-23T00:51:34Z", "files": ["IPython/frontend/html/notebook/notebookapp.py"]}], "labels": ["important", "notebook"], "created_at": "2012-06-22T15:04:57Z", "closed_at": "2012-06-23T00:51:35Z", "method": ["regex"]}
{"issue_number": 1982, "title": "Shutdown qtconsole problem?", "body": "The following from the windows console, after starting, then stopping a qtconsole session with cntrl-D, \n\nC:\\Users\\burnett>ipython qtconsole --pylab\n[IPKernelApp] To connect another client to this kernel, use:\n[IPKernelApp] --existing kernel-5140.json\nTraceback (most recent call last):\n  File \"c:\\python27\\lib\\site-packages\\IPython\\frontend\\qt\\console\\mainwindow.py\", line 853, in update_restart_checkbox\n    self.confirm_restart_kernel_action.setChecked(widget.confirm_restart)\nAttributeError: 'NoneType' object has no attribute 'confirm_restart'\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU5NDQ2OmNiMzA1ZmMwMTJmOTE3ODI2MmYxMjdiNjA3N2NmMTllZTQ5ODMwMDk=", "commit_message": "check for active frontend in update_restart_checkbox\n\ncloses #1982", "commit_timestamp": "2012-06-18T23:33:02Z", "files": ["IPython/frontend/qt/console/mainwindow.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmNiMzA1ZmMwMTJmOTE3ODI2MmYxMjdiNjA3N2NmMTllZTQ5ODMwMDk=", "commit_message": "check for active frontend in update_restart_checkbox\n\ncloses #1982", "commit_timestamp": "2012-06-18T23:33:02Z", "files": ["IPython/frontend/qt/console/mainwindow.py"]}, {"node_id": "MDY6Q29tbWl0NjU5NDQ2OjBlOTJiZThhOWYxY2IxODEzMGYxZGFmN2E5NTFkNTUyZmE1MjEzYTE=", "commit_message": "Merge pull request #1988 from minrk/active_restart\n\ncheck for active frontend in update_restart_checkbox\r\n\r\ncloses #1982", "commit_timestamp": "2012-06-20T03:38:21Z", "files": ["IPython/frontend/qt/console/mainwindow.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzpmZDhjZTVkYzE4YjdlYzdlMmY2ZjMwY2IzYjRjODgxMzlhMDRkN2Ey", "commit_message": "check for active frontend in update_restart_checkbox\n\ncloses #1982", "commit_timestamp": "2012-06-18T23:33:02Z", "files": ["IPython/frontend/qt/console/mainwindow.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo0YTI4MGFmMTYxMDdmMjdiMGQ0OWRmZmFhMjIyYjk5OGM4MmVlMTc2", "commit_message": "Merge pull request #1988 from minrk/active_restart\n\ncheck for active frontend in update_restart_checkbox\r\n\r\ncloses #1982", "commit_timestamp": "2012-06-20T03:38:21Z", "files": ["IPython/frontend/qt/console/mainwindow.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjBlOTJiZThhOWYxY2IxODEzMGYxZGFmN2E5NTFkNTUyZmE1MjEzYTE=", "commit_message": "Merge pull request #1988 from minrk/active_restart\n\ncheck for active frontend in update_restart_checkbox\r\n\r\ncloses #1982", "commit_timestamp": "2012-06-20T03:38:21Z", "files": ["IPython/frontend/qt/console/mainwindow.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjBlOTJiZThhOWYxY2IxODEzMGYxZGFmN2E5NTFkNTUyZmE1MjEzYTE=", "commit_message": "Merge pull request #1988 from minrk/active_restart\n\ncheck for active frontend in update_restart_checkbox\r\n\r\ncloses #1982", "commit_timestamp": "2012-06-20T03:38:21Z", "files": ["IPython/frontend/qt/console/mainwindow.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo0YTI4MGFmMTYxMDdmMjdiMGQ0OWRmZmFhMjIyYjk5OGM4MmVlMTc2", "commit_message": "Merge pull request #1988 from minrk/active_restart\n\ncheck for active frontend in update_restart_checkbox\r\n\r\ncloses #1982", "commit_timestamp": "2012-06-20T03:38:21Z", "files": ["IPython/frontend/qt/console/mainwindow.py"]}], "labels": ["qtconsole", "bug"], "created_at": "2012-06-18T17:35:28Z", "closed_at": "2012-06-20T03:38:22Z", "linked_pr_number": [1982], "method": ["label"]}
{"issue_number": 1963, "title": "styling prompt, {color.Normal} excepts", "body": "version: ipython 0.12\n\nWith my prompt set to:\n`c.PromptManager.in_template  = '{color.LightGreen} \\T {color.Normal}\\Y2 {color.LightGreen}\\$'`\nI get an `AttributeError: NoColors instance has no attribute 'Normal'`\n\nBut I checked:\n\n```\n>>> from IPython.utils.coloransi import InputTermColors\n>>> InputTermColors.Normal  # color has Normal, which is supposed to reset\n'\\x01\\x1b[0m\\x02'\n```\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU5NDQ2OjY5Mjc2NjA0MTIyNWE1ZWQzMDMyNGE4YjAzYTgwOGNjOGM0OTNjNTM=", "commit_message": "add missing Normal on NoColors\n\ncloses #1963", "commit_timestamp": "2012-06-14T21:46:46Z", "files": ["IPython/utils/coloransi.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjY5Mjc2NjA0MTIyNWE1ZWQzMDMyNGE4YjAzYTgwOGNjOGM0OTNjNTM=", "commit_message": "add missing Normal on NoColors\n\ncloses #1963", "commit_timestamp": "2012-06-14T21:46:46Z", "files": ["IPython/utils/coloransi.py"]}, {"node_id": "MDY6Q29tbWl0NzUzNzY4OjRlYjVkYjIyZTY5YjhiZjEzODFjYTBmYjYyZTUxMWZkMDdhODQ0M2Q=", "commit_message": "Merge pull request #1962 from minrk/uprompt\n\nSupport unicode prompts\r\n\r\nfixes potential issues when cwd/USER/HOME might have been unicode.\r\n\r\ncloses #1961\r\ncloses #1963", "commit_timestamp": "2012-06-15T00:53:57Z", "files": ["IPython/core/prompts.py", "IPython/core/tests/test_prompts.py", "IPython/frontend/terminal/interactiveshell.py", "IPython/utils/coloransi.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzpkYzVkMDIwMmU4ZjhlZmNiY2IzNmI2N2VlYjU5YzlkM2YxN2NjZjc5", "commit_message": "add missing Normal on NoColors\n\ncloses #1963", "commit_timestamp": "2012-06-14T21:46:46Z", "files": ["IPython/utils/coloransi.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo2ZmViM2Q2NmVlNjkyY2IzZjY3NTcwMGYxMDM4M2MxNTdmMjFjYmQ2", "commit_message": "Merge pull request #1962 from minrk/uprompt\n\nSupport unicode prompts\r\n\r\nfixes potential issues when cwd/USER/HOME might have been unicode.\r\n\r\ncloses #1961\r\ncloses #1963", "commit_timestamp": "2012-06-15T00:53:57Z", "files": ["IPython/core/prompts.py", "IPython/core/tests/test_prompts.py", "IPython/frontend/terminal/interactiveshell.py", "IPython/utils/coloransi.py"]}], "labels": ["bug"], "created_at": "2012-06-14T17:57:33Z", "closed_at": "2012-06-15T00:53:59Z", "method": ["label"]}
{"issue_number": 1961, "title": "UnicodeDecodeError on directory with unicode chars in prompt", "body": "Version: ipython 0.12\n\nWith prompt set to:\n\n```\nc.PromptManager.in_template = u'\\r \\w \\$ '  # \\r needed so prompt doesn't hang in the middle in some cases, \n                                            # \\w prints current dir, \n                                            # u\"\u2190string modifier\" doesn't really help at all\n```\n\nwhen I try to cd into a directory with unicode character in its name, a UnicodeDecodeError gets thrown.\n\nHow to reproduce:\n1. set above prompt\n2. `/home/user $ mkdir \u010d`\n3. `/home/user $ cd \u010d`\n\nExpected:\n`/home/user/\u010d`\n\nInstead:\n`UnicodeDecodeError: 'ascii' codec can't decode byte 0xc4 in position 9: ordinal not in range(128)`\n\nRemarks:\nWith no \\w in prompt, it works as expected.\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU4NTE4OjRlYjVkYjIyZTY5YjhiZjEzODFjYTBmYjYyZTUxMWZkMDdhODQ0M2Q=", "commit_message": "Merge pull request #1962 from minrk/uprompt\n\nSupport unicode prompts\r\n\r\nfixes potential issues when cwd/USER/HOME might have been unicode.\r\n\r\ncloses #1961\r\ncloses #1963", "commit_timestamp": "2012-06-15T00:53:57Z", "files": ["IPython/core/prompts.py", "IPython/core/tests/test_prompts.py", "IPython/frontend/terminal/interactiveshell.py", "IPython/utils/coloransi.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo2ZmViM2Q2NmVlNjkyY2IzZjY3NTcwMGYxMDM4M2MxNTdmMjFjYmQ2", "commit_message": "Merge pull request #1962 from minrk/uprompt\n\nSupport unicode prompts\r\n\r\nfixes potential issues when cwd/USER/HOME might have been unicode.\r\n\r\ncloses #1961\r\ncloses #1963", "commit_timestamp": "2012-06-15T00:53:57Z", "files": ["IPython/core/prompts.py", "IPython/core/tests/test_prompts.py", "IPython/frontend/terminal/interactiveshell.py", "IPython/utils/coloransi.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjRlYjVkYjIyZTY5YjhiZjEzODFjYTBmYjYyZTUxMWZkMDdhODQ0M2Q=", "commit_message": "Merge pull request #1962 from minrk/uprompt\n\nSupport unicode prompts\r\n\r\nfixes potential issues when cwd/USER/HOME might have been unicode.\r\n\r\ncloses #1961\r\ncloses #1963", "commit_timestamp": "2012-06-15T00:53:57Z", "files": ["IPython/core/prompts.py", "IPython/core/tests/test_prompts.py", "IPython/frontend/terminal/interactiveshell.py", "IPython/utils/coloransi.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjRlYjVkYjIyZTY5YjhiZjEzODFjYTBmYjYyZTUxMWZkMDdhODQ0M2Q=", "commit_message": "Merge pull request #1962 from minrk/uprompt\n\nSupport unicode prompts\r\n\r\nfixes potential issues when cwd/USER/HOME might have been unicode.\r\n\r\ncloses #1961\r\ncloses #1963", "commit_timestamp": "2012-06-15T00:53:57Z", "files": ["IPython/core/prompts.py", "IPython/core/tests/test_prompts.py", "IPython/frontend/terminal/interactiveshell.py", "IPython/utils/coloransi.py"]}], "labels": ["unicode", "bug"], "created_at": "2012-06-14T16:33:36Z", "closed_at": "2012-06-15T00:53:59Z", "linked_pr_number": [1961], "method": ["label", "regex"]}
{"issue_number": 1960, "title": "%page not working", "body": "```\n    %page\n    ---------------------------------------------------------------------------\n    AttributeError                            Traceback (most recent call last)\n    <ipython-input-336-e5a187ccb094> in <module>()\n    ----> 1 get_ipython().magic(u'page')\n\n    c:\\python26\\lib\\site-packages\\ipython-0.13.dev-py2.6.egg\\IPython\\core\\interactiveshell.pyc in magic(self, arg_s)\n       2150         magic_name, _, magic_arg_s = arg_s.partition(' ')\n       2151         magic_name = magic_name.lstrip(prefilter.ESC_MAGIC)\n    -> 2152         return self.run_line_magic(magic_name, magic_arg_s)\n       2153 \n       2154     #-------------------------------------------------------------------------\n\n    c:\\python26\\lib\\site-packages\\ipython-0.13.dev-py2.6.egg\\IPython\\core\\interactiveshell.pyc in run_line_magic(self, magic_name, line)\n       2076                 args.append(sys._getframe(stack_depth).f_locals)\n       2077             with self.builtin_trap:\n    -> 2078                 result = fn(*args)\n       2079             return result\n       2080 \n\n    c:\\python26\\lib\\site-packages\\ipython-0.13.dev-py2.6.egg\\IPython\\core\\magics\\basic.pyc in page(self, parameter_s)\n\n    c:\\python26\\lib\\site-packages\\ipython-0.13.dev-py2.6.egg\\IPython\\core\\magic.pyc in <lambda>(f, *a, **k)\n        188     # but it's overkill for just that one bit of state.\n        189     def magic_deco(arg):\n    --> 190         call = lambda f, *a, **k: f(*a, **k)\n        191 \n        192         if callable(arg):\n\n    c:\\python26\\lib\\site-packages\\ipython-0.13.dev-py2.6.egg\\IPython\\core\\magics\\basic.pyc in page(self, parameter_s)\n        186 \n        187         oname = args and args or '_'\n    --> 188         info = self._ofind(oname)\n        189         if info['found']:\n        190             txt = (raw and str or pformat)( info['obj'] )\n\n    AttributeError: 'BasicMagics' object has no attribute '_ofind'\n```\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU5NDQ2OmI0ZTU2NThlNTNhZTFhOWFiYWExMDI5OGY0ZWUyYzc0OTliNDUyMWI=", "commit_message": "fix _ofind attr in %page\n\n_ofind is a shell attr, not Magics attr\n\ncloses #1960", "commit_timestamp": "2012-06-20T04:30:51Z", "files": ["IPython/core/magics/basic.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmI0ZTU2NThlNTNhZTFhOWFiYWExMDI5OGY0ZWUyYzc0OTliNDUyMWI=", "commit_message": "fix _ofind attr in %page\n\n_ofind is a shell attr, not Magics attr\n\ncloses #1960", "commit_timestamp": "2012-06-20T04:30:51Z", "files": ["IPython/core/magics/basic.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzpjMDM3NGFjZDdhN2MxMTFjMzE3Nzk2NDQ4MzQ2ZTQwMTU3YzBkNDEz", "commit_message": "fix _ofind attr in %page\n\n_ofind is a shell attr, not Magics attr\n\ncloses #1960", "commit_timestamp": "2012-06-20T04:30:51Z", "files": ["IPython/core/magics/basic.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmI3ZThhZDhlMjBjZTMwOTQxZjFlZGMwMDE4MTU5NjIyM2UwZThmYzQ=", "commit_message": "Merge pull request #1991 from minrk/ofind\n\nfix _ofind attr in %page, which belongs to the shell object and not the magic one.", "commit_timestamp": "2012-06-20T05:40:19Z", "files": ["IPython/core/magics/basic.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmI3ZThhZDhlMjBjZTMwOTQxZjFlZGMwMDE4MTU5NjIyM2UwZThmYzQ=", "commit_message": "Merge pull request #1991 from minrk/ofind\n\nfix _ofind attr in %page, which belongs to the shell object and not the magic one.", "commit_timestamp": "2012-06-20T05:40:19Z", "files": ["IPython/core/magics/basic.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo5YmY4ZmQ3OGQ4ZTQzYjViMjAxNWNhMTNhMjhhNWM0ODg0YjJlMWNi", "commit_message": "Merge pull request #1991 from minrk/ofind\n\nfix _ofind attr in %page, which belongs to the shell object and not the magic one.", "commit_timestamp": "2012-06-20T05:40:19Z", "files": ["IPython/core/magics/basic.py"]}], "labels": [], "created_at": "2012-06-14T15:29:46Z", "closed_at": "2012-06-20T05:40:20Z", "linked_pr_number": [1960], "method": ["regex"]}
{"issue_number": 1941, "title": "script magics cause terminal spam", "body": "since the addition of script magics in cdde5bba8 one gets a _which_ error message outputted to the terminal on each start:\ne.g. if no python3 is available:\n\n```\n$ ipython\nwhich: no python3 in (/scratch/jtaylor/progs/localinst/lib/ccache:/scratch/jtaylor/progs/localinst/bin:/scratch/jtaylor/progs/Reflex/software/bin:/usr/lib/qt-3.3/bin:/usr/kerberos/bin:/usr/local/bin:/usr/bin:/bin:/usr/local/sbin:/usr/sbin:/sbin:/home/jtaylor/gasgano/bin:/scisoft/bin:/home/jtaylor/scripts:/scratch/jtaylor/progs/root/bin)\n```\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU5NDQ2OjM2MDYyMDUzNTI5OWE3MWEyNTMzMTJhYjBmZmVhYmUxZWYxM2QyMzk=", "commit_message": "swallow stderr of which in utils.process.find_cmd\n\ncloses #1941", "commit_timestamp": "2012-06-13T09:35:48Z", "files": ["IPython/utils/_process_posix.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjM2MDYyMDUzNTI5OWE3MWEyNTMzMTJhYjBmZmVhYmUxZWYxM2QyMzk=", "commit_message": "swallow stderr of which in utils.process.find_cmd\n\ncloses #1941", "commit_timestamp": "2012-06-13T09:35:48Z", "files": ["IPython/utils/_process_posix.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo4N2YxNjU5ZWZhMmYwODA2YTgyMzU5N2M1YmFlZjVkMDUzNTlhNWYw", "commit_message": "swallow stderr of which in utils.process.find_cmd\n\ncloses #1941", "commit_timestamp": "2012-06-13T09:35:48Z", "files": ["IPython/utils/_process_posix.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo0OGVhNjc4YjExNjI5NWRiMzljNmY0NDQ4MTc5ODM3YzhiMWU4N2E4", "commit_message": "Merge pull request #1942 from minrk/i1941\n\nswallow stderr of `which` in utils.process.find_cmd\r\n\r\ncloses #1941", "commit_timestamp": "2012-06-13T09:38:58Z", "files": ["IPython/utils/_process_posix.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjVkZTQ2MTEyY2RlZTg3MDBiYzFkMDQxNzBiYTRmMDYxNWIzMWRjNDA=", "commit_message": "Merge pull request #1942 from minrk/i1941\n\nswallow stderr of `which` in utils.process.find_cmd\r\n\r\ncloses #1941", "commit_timestamp": "2012-06-13T09:38:58Z", "files": ["IPython/utils/_process_posix.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjVkZTQ2MTEyY2RlZTg3MDBiYzFkMDQxNzBiYTRmMDYxNWIzMWRjNDA=", "commit_message": "Merge pull request #1942 from minrk/i1941\n\nswallow stderr of `which` in utils.process.find_cmd\r\n\r\ncloses #1941", "commit_timestamp": "2012-06-13T09:38:58Z", "files": ["IPython/utils/_process_posix.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo0OGVhNjc4YjExNjI5NWRiMzljNmY0NDQ4MTc5ODM3YzhiMWU4N2E4", "commit_message": "Merge pull request #1942 from minrk/i1941\n\nswallow stderr of `which` in utils.process.find_cmd\r\n\r\ncloses #1941", "commit_timestamp": "2012-06-13T09:38:58Z", "files": ["IPython/utils/_process_posix.py"]}], "labels": ["bug"], "created_at": "2012-06-13T09:28:04Z", "closed_at": "2012-06-13T09:39:00Z", "linked_pr_number": [1941], "method": ["label"]}
{"issue_number": 1916, "title": "%paste doesn't work on py3", "body": "``` python\n.../lib/python/site-packages/ipython-0.13.dev-py3.2.egg/IPython/core/hooks.py in add(self, func, priority)\n    149     def add(self, func, priority=0):\n    150         \"\"\" Add a func to the cmd chain with given priority \"\"\"\n--> 151         bisect.insort(self.chain,(priority,func))\n    152 \n    153     def __iter__(self):\n\nTypeError: unorderable types: function() < function()\n```\n\nFunctions are no longer orderable, so sorting `[(1,func), (1,funcB)]` fails.\n", "commits": [{"node_id": "MDY6Q29tbWl0MTIzNjAwMzoyZTI4YzdiNDJlYjUzOGIxZmJmZjk5N2Y0YTYwZDNmY2NmOWE0YzQy", "commit_message": "Fix adding functions to CommandChainDispatcher with equal priority on Python 3.\n\nCloses gh-1916", "commit_timestamp": "2012-06-12T22:17:28Z", "files": ["IPython/core/hooks.py", "IPython/core/tests/test_hooks.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjJlMjhjN2I0MmViNTM4YjFmYmZmOTk3ZjRhNjBkM2ZjY2Y5YTRjNDI=", "commit_message": "Fix adding functions to CommandChainDispatcher with equal priority on Python 3.\n\nCloses gh-1916", "commit_timestamp": "2012-06-12T22:17:28Z", "files": ["IPython/core/hooks.py", "IPython/core/tests/test_hooks.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzphYWFlNmNjNDc5ODdmZDM5NzFiZTg5ZGRhZWZlODAxMDRhNWJlY2Ex", "commit_message": "Fix adding functions to CommandChainDispatcher with equal priority on Python 3.\n\nCloses gh-1916", "commit_timestamp": "2012-06-12T22:17:28Z", "files": ["IPython/core/hooks.py", "IPython/core/tests/test_hooks.py"]}], "labels": ["bug"], "created_at": "2012-06-11T21:07:57Z", "closed_at": "2012-06-12T22:39:15Z", "method": ["label", "regex"]}
{"issue_number": 1914, "title": "%pdef failing on python3", "body": "This is on windows\nOn python2:\n\n```\nIn [1]: def a(): pass\n\nIn [2]: %pdef a\n a()\n```\n\nOn Python3:\n\n```\nIn [5]: def a(): pass\n\nIn [6]: %pdef a\n---------------------------------------------------------------------------\nAttributeError                            Traceback (most recent call last)\nC:\\python\\ipydevel\\VENV\\\u00e5\u00e4\u00f6\\error3.py in <module>()\n----> 1 get_ipython().magic('pdef a')\n\nC:\\python\\ipydevel\\VENV\\py32\\lib\\site-packages\\ipython-0.13.dev-py3.2.egg\\IPython\\core\\interactiveshell.py in magic(self, arg_s)\n   2140         magic_name, _, magic_arg_s = arg_s.partition(' ')\n   2141         magic_name = magic_name.lstrip(prefilter.ESC_MAGIC)\n-> 2142         return self.run_line_magic(magic_name, magic_arg_s)\n   2143\n   2144     #-------------------------------------------------------------------------\n\nC:\\python\\ipydevel\\VENV\\py32\\lib\\site-packages\\ipython-0.13.dev-py3.2.egg\\IPython\\core\\interactiveshell.py in run_line_magic(self, magic_name, line)\n   2066                 args.append(sys._getframe(stack_depth).f_locals)\n   2067             with self.builtin_trap:\n-> 2068                 result = fn(*args)\n   2069             return result\n   2070\n\nC:\\python\\ipydevel\\VENV\\py32\\lib\\site-packages\\ipython-0.13.dev-py3.2.egg\\IPython\\core\\magics\\namespace.py in pdef(self, parameter_s, namespaces)\n\nC:\\python\\ipydevel\\VENV\\py32\\lib\\site-packages\\ipython-0.13.dev-py3.2.egg\\IPython\\core\\magic.py in <lambda>(f, *a, **k)\n    189     # but it's overkill for just that one bit of state.\n    190     def magic_deco(arg):\n--> 191         call = lambda f, *a, **k: f(*a, **k)\n    192\n    193         if isinstance(arg, collections.Callable):\n\nC:\\python\\ipydevel\\VENV\\py32\\lib\\site-packages\\ipython-0.13.dev-py3.2.egg\\IPython\\core\\magics\\namespace.py in pdef(self, parameter_s, namespaces)\n     80           urllib.urlopen(url, data=None, proxies=None)\n     81         \"\"\"\n---> 82         self.shell._inspect('pdef',parameter_s, namespaces)\n     83\n     84     @line_magic\n\nC:\\python\\ipydevel\\VENV\\py32\\lib\\site-packages\\ipython-0.13.dev-py3.2.egg\\IPython\\core\\interactiveshell.py in _inspect(self, meth, oname, namespaces, **kw)\n   1477                 pmethod(info.obj, oname, formatter, info, **kw)\n   1478             else:\n-> 1479                 pmethod(info.obj, oname)\n   1480         else:\n   1481             print('Object `%s` not found.' % oname)\n\nC:\\python\\ipydevel\\VENV\\py32\\lib\\site-packages\\ipython-0.13.dev-py3.2.egg\\IPython\\core\\oinspect.py in pdef(self, obj, oname)\n    356             header = self.__head('Class constructor information:\\n')\n    357             obj = obj.__init__\n--> 358         elif type(obj) is types.InstanceType:\n    359             obj = obj.__call__\n    360\n\nAttributeError: 'module' object has no attribute 'InstanceType'\n```\n", "commits": [{"node_id": "MDY6Q29tbWl0MTIzNjAwMzpkMjk1MWY2MmIzMzM4NDhjYmFjNzYzODMyODE2OGU1ZmQ3NDgyMTQ1", "commit_message": "Add failing test for gh-1914", "commit_timestamp": "2012-06-11T21:07:51Z", "files": ["IPython/core/tests/test_oinspect.py"]}, {"node_id": "MDY6Q29tbWl0MTIzNjAwMzowODQwMmY5ZTY0MDlmNjE0OTFkYTYxMGM1ZTBiMGE5NDBiNTk0MTU1", "commit_message": "In pdef, only check for old style class instances on Python 2.\n\nCloses gh-1914", "commit_timestamp": "2012-06-11T21:09:57Z", "files": ["IPython/core/oinspect.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjA4NDAyZjllNjQwOWY2MTQ5MWRhNjEwYzVlMGIwYTk0MGI1OTQxNTU=", "commit_message": "In pdef, only check for old style class instances on Python 2.\n\nCloses gh-1914", "commit_timestamp": "2012-06-11T21:09:57Z", "files": ["IPython/core/oinspect.py"]}, {"node_id": "MDY6Q29tbWl0MTU3MjY3NTowMWQ3YjkzMzNjZDQ0OWUwZWFmOGFiYWU0N2FmYzM4N2RlYTE2Nzc3", "commit_message": "Merge pull request #1917 from takluyver/i1914\n\nFix for %pdef on Python 3\r\n\r\nA nice simple one - types.InstanceType is for old style classes, so we don't check against it on Python 3.\r\n\r\ncloses #1914", "commit_timestamp": "2012-06-11T21:23:08Z", "files": ["IPython/core/oinspect.py", "IPython/core/tests/test_oinspect.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo3Y2U2NzYxOWE1MDBmMWE0YjJmZTU0MzIyMTBlZjBkZjE0YWM0NDAz", "commit_message": "Add failing test for gh-1914", "commit_timestamp": "2012-06-11T21:07:51Z", "files": ["IPython/core/tests/test_oinspect.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo3Y2VmYWJiNGU2ZDcxZjM4N2IxNmUwZTdiZGRkNjM4MjVkMGEyZmFh", "commit_message": "In pdef, only check for old style class instances on Python 2.\n\nCloses gh-1914", "commit_timestamp": "2012-06-11T21:09:57Z", "files": ["IPython/core/oinspect.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo5MzQ5OGU2ZTMxOTE4NjI5M2VhOTc3ZmExODcwYmFmNDdkYzFkZjZi", "commit_message": "Merge pull request #1917 from takluyver/i1914\n\nFix for %pdef on Python 3\r\n\r\nA nice simple one - types.InstanceType is for old style classes, so we don't check against it on Python 3.\r\n\r\ncloses #1914", "commit_timestamp": "2012-06-11T21:23:08Z", "files": ["IPython/core/oinspect.py", "IPython/core/tests/test_oinspect.py"]}], "labels": ["bug"], "created_at": "2012-06-11T20:38:37Z", "closed_at": "2012-06-11T21:23:09Z", "method": ["label"]}
{"issue_number": 1912, "title": "Move all autoreload tests to their own group", "body": "As noted in #1911, they can confuse cython extension tests. We've disabled them for now because breaking the rest of the test suite is way too serious of a problem, but the real fix is to run them, just in their own test group.\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU4NTE4OjIyODdiMzhlYmUzYTAwNzViNjBmNWU3ZTU2Nzk3YTY3YzI5MDZlN2Y=", "commit_message": "Merge pull request #1911 from minrk/skipreload\n\nTemporarily skip autoreload tests, as they were breaking Cython tests.\r\n\r\n#1912 was created to track the issue that they need to be re-enabled, but isolated to their own group.", "commit_timestamp": "2012-06-11T19:44:38Z", "files": ["IPython/testing/iptest.py"]}, {"node_id": "MDY6Q29tbWl0MTIzNjAwMzpjNDg0MWU4YzIzMzYwNGRhYThkZGNiMTkyZDA3MDg3MmM5ZTRmNDY5", "commit_message": "Add test suite for autoreload extension\n\nCloses gh-1912", "commit_timestamp": "2013-06-29T21:29:51Z", "files": ["IPython/testing/iptest.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo3YWMzYjVlN2ZlZTg3NTk3Y2E2MjUxY2ZkYzdmYzU5YjE4OTY5OWNh", "commit_message": "Merge pull request #1911 from minrk/skipreload\n\nTemporarily skip autoreload tests, as they were breaking Cython tests.\r\n\r\n#1912 was created to track the issue that they need to be re-enabled, but isolated to their own group.", "commit_timestamp": "2012-06-11T19:44:38Z", "files": ["IPython/testing/iptest.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzozNDUzNTBmMTliMWVjMjhiM2FjMjhkMzUyYTMzOGNkYmQzZGMxMjZl", "commit_message": "Add test suite for autoreload extension\n\nCloses gh-1912", "commit_timestamp": "2013-06-29T21:29:51Z", "files": ["IPython/testing/iptest.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmM4ZGNhMTE3Njc3NjYzZjFiOGExNDgyODM3Yzc2Y2UwMDQ3YWFhY2M=", "commit_message": "Merge pull request #3488 from takluyver/test_autoreload\n\nAdd test suite for autoreload extension", "commit_timestamp": "2013-07-01T04:42:40Z", "files": ["IPython/testing/iptest.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmM4ZGNhMTE3Njc3NjYzZjFiOGExNDgyODM3Yzc2Y2UwMDQ3YWFhY2M=", "commit_message": "Merge pull request #3488 from takluyver/test_autoreload\n\nAdd test suite for autoreload extension", "commit_timestamp": "2013-07-01T04:42:40Z", "files": ["IPython/testing/iptest.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo2NzY2MTI2NTNkMzdhOGI0ZTc4Y2Y0YTQ2N2VhMDNlNzA0ZjAyZjhk", "commit_message": "Merge pull request #3488 from takluyver/test_autoreload\n\nAdd test suite for autoreload extension", "commit_timestamp": "2013-07-01T04:42:40Z", "files": ["IPython/testing/iptest.py"]}], "labels": ["bug", "testing"], "created_at": "2012-06-11T19:43:18Z", "closed_at": "2013-07-01T04:42:40Z", "linked_pr_number": [1912], "method": ["label"]}
{"issue_number": 1908, "title": "find_file errors on windows", "body": "Commit 275c90e introduced a failing test. \n\n```\n======================================================================\nFAIL: IPython.core.tests.test_oinspect.test_find_file\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"C:\\python27\\lib\\site-packages\\nose\\case.py\", line 197, in runTest\n    self.test(*self.arg)\n  File \"C:\\python27\\lib\\site-packages\\ipython-0.13.dev-py2.7.egg\\IPython\\core\\tests\\test_oinspect.py\", line 53, in test_find_file\n    os.path.abspath(__file__))\nAssertionError: 'c:\\\\python27\\\\lib\\\\site-packages\\\\ipython-0.13.dev-py2.7.egg\\\\ipython\\\\core\\\\tests\\\\test_oinspect.py' != 'C:\\\\python27\\\\lib\\\\site-packages\\\\ipython-0.13.dev-py2.7.egg\\\\IPython\\\\core\\\\tests\\\\test_oinspect.pyc'\n    \"'c:\\\\\\\\python27\\\\\\\\lib\\\\\\\\site-packages\\\\\\\\ipython-0.13.dev-py2.7.egg\\\\\\\\ipython\\\\\\\\core\\\\\\\\tests\\\\\\\\test_oinspect.py' != 'C:\\\\\\\\python27\\\\\\\\lib\\\\\\\\site-packages\\\\\\\\ipython-0.13.dev-py2.7.egg\\\\\\\\IPython\\\\\\\\core\\\\\\\\tests\\\\\\\\test_oinspect.pyc'\" = '%s != %s' % (safe_repr('c:\\\\python27\\\\lib\\\\site-packages\\\\ipython-0.13.dev-py2.7.egg\\\\ipython\\\\core\\\\tests\\\\test_oinspect.py'), safe_repr('C:\\\\python27\\\\lib\\\\site-packages\\\\ipython-0.13.dev-py2.7.egg\\\\IPython\\\\core\\\\tests\\\\test_oinspect.pyc'))\n    \"'c:\\\\\\\\python27\\\\\\\\lib\\\\\\\\site-packages\\\\\\\\ipython-0.13.dev-py2.7.egg\\\\\\\\ipython\\\\\\\\core\\\\\\\\tests\\\\\\\\test_oinspect.py' != 'C:\\\\\\\\python27\\\\\\\\lib\\\\\\\\site-packages\\\\\\\\ipython-0.13.dev-py2.7.egg\\\\\\\\IPython\\\\\\\\core\\\\\\\\tests\\\\\\\\test_oinspect.pyc'\" = self._formatMessage(\"'c:\\\\\\\\python27\\\\\\\\lib\\\\\\\\site-packages\\\\\\\\ipython-0.13.dev-py2.7.egg\\\\\\\\ipython\\\\\\\\core\\\\\\\\tests\\\\\\\\test_oinspect.py' != 'C:\\\\\\\\python27\\\\\\\\lib\\\\\\\\site-packages\\\\\\\\ipython-0.13.dev-py2.7.egg\\\\\\\\IPython\\\\\\\\core\\\\\\\\tests\\\\\\\\test_oinspect.pyc'\", \"'c:\\\\\\\\python27\\\\\\\\lib\\\\\\\\site-packages\\\\\\\\ipython-0.13.dev-py2.7.egg\\\\\\\\ipython\\\\\\\\core\\\\\\\\tests\\\\\\\\test_oinspect.py' != 'C:\\\\\\\\python27\\\\\\\\lib\\\\\\\\site-packages\\\\\\\\ipython-0.13.dev-py2.7.egg\\\\\\\\IPython\\\\\\\\core\\\\\\\\tests\\\\\\\\test_oinspect.pyc'\")\n>>  raise self.failureException(\"'c:\\\\\\\\python27\\\\\\\\lib\\\\\\\\site-packages\\\\\\\\ipython-0.13.dev-py2.7.egg\\\\\\\\ipython\\\\\\\\core\\\\\\\\tests\\\\\\\\test_oinspect.py' != 'C:\\\\\\\\python27\\\\\\\\lib\\\\\\\\site-packages\\\\\\\\ipython-0.13.dev-py2.7.egg\\\\\\\\IPython\\\\\\\\core\\\\\\\\tests\\\\\\\\test_oinspect.pyc'\")\n```\n", "commits": [{"node_id": "MDY6Q29tbWl0MTUwNzk1NzphMzUzMzE2OGJmZGI2N2JhOGY3NmFmZDIxODY0NWEwOWUwYzRjN2Uw", "commit_message": "Fix for #1908, use os.path.normcase for safe filename comparisons", "commit_timestamp": "2012-06-11T18:40:02Z", "files": ["IPython/core/tests/test_oinspect.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjRhZjNhNmE3OGRhM2M1ODdjNzEwODRjNGVhMzBhMDdkZWRmZTg5ODc=", "commit_message": "Merge pull request #1909 from jstenar/fixfor-1908\n\nUse os.path.normcase for safe filename comparisons.\r\n\r\nCloses #1908.", "commit_timestamp": "2012-06-11T19:31:03Z", "files": ["IPython/core/tests/test_oinspect.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzphOWRmZTk2ZjY0YjhjZTU2ZDk1YjE3NDMxOGI1MmEzNTJjMjA4MzEx", "commit_message": "Fix for #1908, use os.path.normcase for safe filename comparisons", "commit_timestamp": "2012-06-11T18:40:02Z", "files": ["IPython/core/tests/test_oinspect.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzozY2I2OWUwMzNjNWViZDQwMGY0M2E5YTkxNzQxMThlYjBhODUwYWZl", "commit_message": "Merge pull request #1909 from jstenar/fixfor-1908\n\nUse os.path.normcase for safe filename comparisons.\r\n\r\nCloses #1908.", "commit_timestamp": "2012-06-11T19:31:03Z", "files": ["IPython/core/tests/test_oinspect.py"]}], "labels": ["windows", "bug", "testing"], "created_at": "2012-06-11T17:52:24Z", "closed_at": "2012-06-11T19:31:04Z", "method": ["label"]}
{"issue_number": 1904, "title": "%%px? doesn't work, shows info for %px, general cell magic problem", "body": "The px cell magic was implemented as a different function than the line magic.  At first I thought this shouldn't work, but in fact it does.  However, the introspection machinery gets completely confused, meaning that the %%px magic is much harder to use than it should, since users can't easily read its docstring.\n\nThe problem is NOT in the magic itself, it's in the introspection code that didn't take this case into consideration.\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU5NDQ2OmNmNDQ0N2I5MTRlYjZiZTVhYjUzZmMwMzNiNGI0NTQzNTY0YTEyODk=", "commit_message": "oinfo finds cell magics with same name as line magics\n\ncloses #1904", "commit_timestamp": "2012-06-11T07:39:49Z", "files": ["IPython/core/interactiveshell.py", "IPython/core/prefilter.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmNmNDQ0N2I5MTRlYjZiZTVhYjUzZmMwMzNiNGI0NTQzNTY0YTEyODk=", "commit_message": "oinfo finds cell magics with same name as line magics\n\ncloses #1904", "commit_timestamp": "2012-06-11T07:39:49Z", "files": ["IPython/core/interactiveshell.py", "IPython/core/prefilter.py"]}, {"node_id": "MDY6Q29tbWl0MTUwNzk1NzphN2QzM2U2ZTg2ZDFkOTU5YzZmYWI3YTNlZTc4OTE4N2UyM2VlNzUy", "commit_message": "Merge pull request #1906 from minrk/magic_info\n\nFixes logic in `Shell._ofind` to differentiate cell magics from line magics.\r\n\r\nAlso changes preemptive not-found to not fire in case of magics, as it has been pointed out elsewhere that magic names need only not contain spaces, they need not be valid identifiers.\r\n\r\nCloses #1904.", "commit_timestamp": "2012-06-11T07:51:56Z", "files": ["IPython/core/completer.py", "IPython/core/inputsplitter.py", "IPython/core/interactiveshell.py", "IPython/core/magic.py", "IPython/core/magics/basic.py", "IPython/core/prefilter.py", "IPython/core/tests/test_magic.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzplMmRhODgxN2I0YzgyNDUyMDA1OTU1MGMzMDY1OTU5NzAxMjk5OTlj", "commit_message": "oinfo finds cell magics with same name as line magics\n\ncloses #1904", "commit_timestamp": "2012-06-11T07:39:49Z", "files": ["IPython/core/interactiveshell.py", "IPython/core/prefilter.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzphNGE0MzgzMzY2MWNiZGYzZmIyOTVmNjhlMWY4OTYxYTg1YTQ4NTM1", "commit_message": "Merge pull request #1906 from minrk/magic_info\n\nFixes logic in `Shell._ofind` to differentiate cell magics from line magics.\r\n\r\nAlso changes preemptive not-found to not fire in case of magics, as it has been pointed out elsewhere that magic names need only not contain spaces, they need not be valid identifiers.\r\n\r\nCloses #1904.", "commit_timestamp": "2012-06-11T07:51:56Z", "files": ["IPython/core/completer.py", "IPython/core/inputsplitter.py", "IPython/core/interactiveshell.py", "IPython/core/magic.py", "IPython/core/magics/basic.py", "IPython/core/prefilter.py", "IPython/core/tests/test_magic.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmE3ZDMzZTZlODZkMWQ5NTljNmZhYjdhM2VlNzg5MTg3ZTIzZWU3NTI=", "commit_message": "Merge pull request #1906 from minrk/magic_info\n\nFixes logic in `Shell._ofind` to differentiate cell magics from line magics.\r\n\r\nAlso changes preemptive not-found to not fire in case of magics, as it has been pointed out elsewhere that magic names need only not contain spaces, they need not be valid identifiers.\r\n\r\nCloses #1904.", "commit_timestamp": "2012-06-11T07:51:56Z", "files": ["IPython/core/completer.py", "IPython/core/inputsplitter.py", "IPython/core/interactiveshell.py", "IPython/core/magic.py", "IPython/core/magics/basic.py", "IPython/core/prefilter.py", "IPython/core/tests/test_magic.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmE3ZDMzZTZlODZkMWQ5NTljNmZhYjdhM2VlNzg5MTg3ZTIzZWU3NTI=", "commit_message": "Merge pull request #1906 from minrk/magic_info\n\nFixes logic in `Shell._ofind` to differentiate cell magics from line magics.\r\n\r\nAlso changes preemptive not-found to not fire in case of magics, as it has been pointed out elsewhere that magic names need only not contain spaces, they need not be valid identifiers.\r\n\r\nCloses #1904.", "commit_timestamp": "2012-06-11T07:51:56Z", "files": ["IPython/core/completer.py", "IPython/core/inputsplitter.py", "IPython/core/interactiveshell.py", "IPython/core/magic.py", "IPython/core/magics/basic.py", "IPython/core/prefilter.py", "IPython/core/tests/test_magic.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzphNGE0MzgzMzY2MWNiZGYzZmIyOTVmNjhlMWY4OTYxYTg1YTQ4NTM1", "commit_message": "Merge pull request #1906 from minrk/magic_info\n\nFixes logic in `Shell._ofind` to differentiate cell magics from line magics.\r\n\r\nAlso changes preemptive not-found to not fire in case of magics, as it has been pointed out elsewhere that magic names need only not contain spaces, they need not be valid identifiers.\r\n\r\nCloses #1904.", "commit_timestamp": "2012-06-11T07:51:56Z", "files": ["IPython/core/completer.py", "IPython/core/inputsplitter.py", "IPython/core/interactiveshell.py", "IPython/core/magic.py", "IPython/core/magics/basic.py", "IPython/core/prefilter.py", "IPython/core/tests/test_magic.py"]}], "labels": ["bug"], "created_at": "2012-06-11T06:36:41Z", "closed_at": "2012-06-11T07:51:57Z", "linked_pr_number": [1904], "method": ["label", "regex"]}
{"issue_number": 1901, "title": "Windows: parallel test fails assert, leaves 14 python processes alive", "body": "Running from master, WinXP-32\n\n$ iptest IPython.parallel\n.................................................................................................S.....................................\n...........Assertion failed: Address already in use (......\\src\\signaler.cpp:260)\n", "commits": [{"node_id": "MDY6Q29tbWl0NjcwOTU5OmJiYzg2MTk5MTcwYzI4NTQ2OWRiYzkyZWM4YzE3OGUwOTM0OGU2ZTM=", "commit_message": "Fix parallel test on WinXP - wait for resource cleanup.\n\nFixes #1901", "commit_timestamp": "2012-06-24T15:50:49Z", "files": ["IPython/parallel/tests/test_view.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmJiYzg2MTk5MTcwYzI4NTQ2OWRiYzkyZWM4YzE3OGUwOTM0OGU2ZTM=", "commit_message": "Fix parallel test on WinXP - wait for resource cleanup.\n\nFixes #1901", "commit_timestamp": "2012-06-24T15:50:49Z", "files": ["IPython/parallel/tests/test_view.py"]}, {"node_id": "MDY6Q29tbWl0NjU5NDQ2OmIxZWFlMjQ2NTlmZmY2NjhmMDI2MzA3YmU1NDUwNDIyODJmZWQ0NGE=", "commit_message": "Merge pull request #2025 from jdmarch/win_xp_parallel_test_wait_for_cleanup\n\nAdd a bunch of time.sleep to IPython.parallel tests on XP-only\r\n\r\nCloses #1901", "commit_timestamp": "2012-06-24T23:48:59Z", "files": ["IPython/parallel/tests/test_view.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzoxZWY5ZGQ0ODNjOGYzNDU0MjRiZmQ4NDAwMGFlNjlhYTMyOWQyOTYz", "commit_message": "Fix parallel test on WinXP - wait for resource cleanup.\n\nFixes #1901", "commit_timestamp": "2012-06-24T15:50:49Z", "files": ["IPython/parallel/tests/test_view.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo1NWQyMjIwMTIyYWQxMTNlYmVkYTM4NzI4Nzg3NzQwMTYyOTgzNjky", "commit_message": "Merge pull request #2025 from jdmarch/win_xp_parallel_test_wait_for_cleanup\n\nAdd a bunch of time.sleep to IPython.parallel tests on XP-only\r\n\r\nCloses #1901", "commit_timestamp": "2012-06-24T23:48:59Z", "files": ["IPython/parallel/tests/test_view.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmIxZWFlMjQ2NTlmZmY2NjhmMDI2MzA3YmU1NDUwNDIyODJmZWQ0NGE=", "commit_message": "Merge pull request #2025 from jdmarch/win_xp_parallel_test_wait_for_cleanup\n\nAdd a bunch of time.sleep to IPython.parallel tests on XP-only\r\n\r\nCloses #1901", "commit_timestamp": "2012-06-24T23:48:59Z", "files": ["IPython/parallel/tests/test_view.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmIxZWFlMjQ2NTlmZmY2NjhmMDI2MzA3YmU1NDUwNDIyODJmZWQ0NGE=", "commit_message": "Merge pull request #2025 from jdmarch/win_xp_parallel_test_wait_for_cleanup\n\nAdd a bunch of time.sleep to IPython.parallel tests on XP-only\r\n\r\nCloses #1901", "commit_timestamp": "2012-06-24T23:48:59Z", "files": ["IPython/parallel/tests/test_view.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo1NWQyMjIwMTIyYWQxMTNlYmVkYTM4NzI4Nzg3NzQwMTYyOTgzNjky", "commit_message": "Merge pull request #2025 from jdmarch/win_xp_parallel_test_wait_for_cleanup\n\nAdd a bunch of time.sleep to IPython.parallel tests on XP-only\r\n\r\nCloses #1901", "commit_timestamp": "2012-06-24T23:48:59Z", "files": ["IPython/parallel/tests/test_view.py"]}], "labels": ["windows", "bug", "parallel"], "created_at": "2012-06-11T03:30:49Z", "closed_at": "2012-06-24T23:49:01Z", "linked_pr_number": [1901], "method": ["label", "regex"]}
{"issue_number": 1890, "title": "Docstrings for magics that use @magic_arguments are rendered wrong", "body": "For example, see the [Rmagic docstring](http://ipython.org/ipython-doc/dev/config/extensions/rmagic.html).  The decorator destroys all linebreaks.  See [this response](http://mail.scipy.org/pipermail/ipython-dev/2012-June/009424.html) by @rkern on the list for details of a possible solution approach.\n", "commits": [{"node_id": "MDY6Q29tbWl0MjkwOTI5MDpkZjk3ZjJkZDFjY2E3N2EyZDYwNjY1NmNmNWRlMjMyMDcxZmQ2M2Nm", "commit_message": "magic_arguments: dedent but otherwise preserve indentation.\n\nPreviously magic_arguments stripped all whitespace at the beginning of\neach line, interfering with formatting syntax which relies on indentation\nto give context (e.g., code blocks). Now the docstring text is passed\nthrough dedent to strip the global indentation before being handed off\nto RawDescriptionHelpFormatter which preserves any remaining indentation.\n\nThanks to @rkern for suggesting the solution approach.\n\nCloses gh-1890.", "commit_timestamp": "2012-06-12T03:44:38Z", "files": ["IPython/core/magic_arguments.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmRmOTdmMmRkMWNjYTc3YTJkNjA2NjU2Y2Y1ZGUyMzIwNzFmZDYzY2Y=", "commit_message": "magic_arguments: dedent but otherwise preserve indentation.\n\nPreviously magic_arguments stripped all whitespace at the beginning of\neach line, interfering with formatting syntax which relies on indentation\nto give context (e.g., code blocks). Now the docstring text is passed\nthrough dedent to strip the global indentation before being handed off\nto RawDescriptionHelpFormatter which preserves any remaining indentation.\n\nThanks to @rkern for suggesting the solution approach.\n\nCloses gh-1890.", "commit_timestamp": "2012-06-12T03:44:38Z", "files": ["IPython/core/magic_arguments.py"]}, {"node_id": "MDY6Q29tbWl0MTIzNjAwMzo2NzNlNTMzMTBjZTE2MjIwY2NjMjM1ZWIwZGE1NmRmOWY2NTRkZjRm", "commit_message": "Merge pull request #1921 from bfroehle/_1890_magic_arguments_docstring\n\nmagic_arguments: dedent but otherwise preserve indentation.\r\n\r\nPreviously magic_arguments stripped all whitespace at the beginning of each line, interfering with formatting syntax which relies on indentation to give context (e.g., code blocks). Now the docstring text is passed through dedent to strip the global indentation before being handed off to `RawDescriptionHelpFormatter` which preserves any remaining indentation.\r\n\r\nThanks to @rkern for suggesting the solution approach.\r\n\r\nCloses gh-1890.", "commit_timestamp": "2012-06-12T04:14:18Z", "files": ["IPython/core/magic_arguments.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo4MWJjYTg4YjU2N2FhZGE4NzgxZjMxNWYxODI1ZGJkMGM0YTE2YjJh", "commit_message": "magic_arguments: dedent but otherwise preserve indentation.\n\nPreviously magic_arguments stripped all whitespace at the beginning of\neach line, interfering with formatting syntax which relies on indentation\nto give context (e.g., code blocks). Now the docstring text is passed\nthrough dedent to strip the global indentation before being handed off\nto RawDescriptionHelpFormatter which preserves any remaining indentation.\n\nThanks to @rkern for suggesting the solution approach.\n\nCloses gh-1890.", "commit_timestamp": "2012-06-12T03:44:38Z", "files": ["IPython/core/magic_arguments.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzowNTgxYzIyZWExODAwNGViZDU3ZmU5OWI3MDU0MTViYWY4ZmNlYjJk", "commit_message": "Merge pull request #1921 from bfroehle/_1890_magic_arguments_docstring\n\nmagic_arguments: dedent but otherwise preserve indentation.\r\n\r\nPreviously magic_arguments stripped all whitespace at the beginning of each line, interfering with formatting syntax which relies on indentation to give context (e.g., code blocks). Now the docstring text is passed through dedent to strip the global indentation before being handed off to `RawDescriptionHelpFormatter` which preserves any remaining indentation.\r\n\r\nThanks to @rkern for suggesting the solution approach.\r\n\r\nCloses gh-1890.", "commit_timestamp": "2012-06-12T04:14:18Z", "files": ["IPython/core/magic_arguments.py"]}], "labels": ["documentation", "bug"], "created_at": "2012-06-09T05:04:06Z", "closed_at": "2012-06-12T04:14:19Z", "method": ["label"]}
{"issue_number": 1885, "title": "handle too old wx", "body": "the wx gui integration does not seem to work with wx 2.6 see this bug:\nhttps://bugs.launchpad.net/bugs/998716\n\nthe version should be checked and error should be displayed, currently it spams the terminal with exceptions\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU5NDQ2OjQ4ZDQ4OTY1MDAxYTI4MzNjYWFhZWZmZDY0YTkzNzA3ZTE2MGYyYTg=", "commit_message": "check wxPython version in inputhook\n\ngives clearer error on old wxPython than before\n\ncloses #1885", "commit_timestamp": "2012-06-24T22:25:30Z", "files": ["IPython/lib/inputhook.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjQ4ZDQ4OTY1MDAxYTI4MzNjYWFhZWZmZDY0YTkzNzA3ZTE2MGYyYTg=", "commit_message": "check wxPython version in inputhook\n\ngives clearer error on old wxPython than before\n\ncloses #1885", "commit_timestamp": "2012-06-24T22:25:30Z", "files": ["IPython/lib/inputhook.py"]}, {"node_id": "MDY6Q29tbWl0NjU5NDQ2OjBmOGFlZGUyNDIwNzgzMTVlNDJhMjNjNDk5NGQwNDdlZDMxNGMzZDc=", "commit_message": "Merge pull request #2030 from minrk/wx2.6\n\nCheck wxPython version in inputhook, giving clearer error on old wxPython than before.\r\n\r\ncloses #1885", "commit_timestamp": "2012-06-25T01:53:59Z", "files": ["IPython/lib/inputhook.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo4MzQzMGJkNDVjN2I2ZTVkYWQyNjNiZTVlMjA1OTc3NTEwYjZlYWI1", "commit_message": "check wxPython version in inputhook\n\ngives clearer error on old wxPython than before\n\ncloses #1885", "commit_timestamp": "2012-06-24T22:25:30Z", "files": ["IPython/lib/inputhook.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo1M2EzNjA3ZWJhYzE2ZjdjMGQ0M2YwNjBmZGJiNTJhMTFkOGMyNzM5", "commit_message": "Merge pull request #2030 from minrk/wx2.6\n\nCheck wxPython version in inputhook, giving clearer error on old wxPython than before.\r\n\r\ncloses #1885", "commit_timestamp": "2012-06-25T01:53:59Z", "files": ["IPython/lib/inputhook.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjBmOGFlZGUyNDIwNzgzMTVlNDJhMjNjNDk5NGQwNDdlZDMxNGMzZDc=", "commit_message": "Merge pull request #2030 from minrk/wx2.6\n\nCheck wxPython version in inputhook, giving clearer error on old wxPython than before.\r\n\r\ncloses #1885", "commit_timestamp": "2012-06-25T01:53:59Z", "files": ["IPython/lib/inputhook.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjBmOGFlZGUyNDIwNzgzMTVlNDJhMjNjNDk5NGQwNDdlZDMxNGMzZDc=", "commit_message": "Merge pull request #2030 from minrk/wx2.6\n\nCheck wxPython version in inputhook, giving clearer error on old wxPython than before.\r\n\r\ncloses #1885", "commit_timestamp": "2012-06-25T01:53:59Z", "files": ["IPython/lib/inputhook.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo1M2EzNjA3ZWJhYzE2ZjdjMGQ0M2YwNjBmZGJiNTJhMTFkOGMyNzM5", "commit_message": "Merge pull request #2030 from minrk/wx2.6\n\nCheck wxPython version in inputhook, giving clearer error on old wxPython than before.\r\n\r\ncloses #1885", "commit_timestamp": "2012-06-25T01:53:59Z", "files": ["IPython/lib/inputhook.py"]}], "labels": ["bug"], "created_at": "2012-06-08T17:26:22Z", "closed_at": "2012-06-25T01:54:00Z", "linked_pr_number": [1885], "method": ["label", "regex"]}
{"issue_number": 1884, "title": "IPython.embed changes color on error", "body": "`IPython.embed` does something weird when you raise an error: it changes color!\n\nIn your config, set colors to non-default:\n\n```\nc.TerminalInteractiveShell.colors = 'Linux' # or 'LightBG' on Linux\n```\n\nThen embed IPython anywhere, and raise an exception (just 1/0 is enough).  After the traceback, the color scheme will have reverted to the default (confirmed on both Linux and OS X, with different defaults).\n\nI imagine this is due to lacking a `Singleton.instance()` somewhere, which does not exist when IPython is embedded, but does from a normal entry point.\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU5NDQ2OmMxZDBiNjlhNTk3Njg0N2IxOWRkYmM0NTllOTBlNWZkMGUxNTM4NjY=", "commit_message": "use Singleton.instance() for embed() instead of manual global\n\nAny use of get_ipython() could cause funky misbehaving,\npotentially invoking another InteractiveShell instance.\n\nOne change is calling IPython.embed() from inside a running IPython session will now result in a MultipleInstanceError.\n\ncloses #1884", "commit_timestamp": "2012-09-04T00:20:03Z", "files": ["IPython/frontend/terminal/embed.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmMxZDBiNjlhNTk3Njg0N2IxOWRkYmM0NTllOTBlNWZkMGUxNTM4NjY=", "commit_message": "use Singleton.instance() for embed() instead of manual global\n\nAny use of get_ipython() could cause funky misbehaving,\npotentially invoking another InteractiveShell instance.\n\nOne change is calling IPython.embed() from inside a running IPython session will now result in a MultipleInstanceError.\n\ncloses #1884", "commit_timestamp": "2012-09-04T00:20:03Z", "files": ["IPython/frontend/terminal/embed.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzowNzhjZGQ3YjhlMGQzYTlhMTVmOWE5NDcwYmJiM2MxNDcxZmJjOTkx", "commit_message": "use Singleton.instance() for embed() instead of manual global\n\nAny use of get_ipython() could cause funky misbehaving,\npotentially invoking another InteractiveShell instance.\n\nOne change is calling IPython.embed() from inside a running IPython session will now result in a MultipleInstanceError.\n\ncloses #1884", "commit_timestamp": "2012-09-04T00:20:03Z", "files": ["IPython/frontend/terminal/embed.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmY5M2Y1ODNmMzFkM2RhZTJkNGUzYzk2NTMyNjlhMzQ0MThjNzhjNTU=", "commit_message": "Merge pull request #2378 from minrk/embed_instance\n\nuse Singleton.instance() for embed() instead of manual global", "commit_timestamp": "2012-09-06T02:44:32Z", "files": ["IPython/frontend/terminal/embed.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmY5M2Y1ODNmMzFkM2RhZTJkNGUzYzk2NTMyNjlhMzQ0MThjNzhjNTU=", "commit_message": "Merge pull request #2378 from minrk/embed_instance\n\nuse Singleton.instance() for embed() instead of manual global", "commit_timestamp": "2012-09-06T02:44:32Z", "files": ["IPython/frontend/terminal/embed.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzozMGQzNjM2ZGQxMGNiYmE4OTQ4YTc3N2MyZGIxNGQwMGQ5YjRhNTY2", "commit_message": "Merge pull request #2378 from minrk/embed_instance\n\nuse Singleton.instance() for embed() instead of manual global", "commit_timestamp": "2012-09-06T02:44:32Z", "files": ["IPython/frontend/terminal/embed.py"]}], "labels": ["bug"], "created_at": "2012-06-08T10:32:38Z", "closed_at": "2012-09-06T02:44:34Z", "linked_pr_number": [1884], "method": ["label"]}
{"issue_number": 1878, "title": "shell access using ! will not fill class or function scope vars", "body": "the ! to access the shell is not filling scoped variables.\n\n```\ndef test():\n  defvar='true'\n  !echo def Test worked? {defvar}\ntest()\n# def Test worked? {defvar}\n\nclass cTest:\n   classvar='true'\n   def test(self):\n      !echo class Test worked? {self.classvar}\nctest = cTest()\nctest.test()\n```\n\nI feel this should be rather high priority since this issue makes writing Ipython shell scripts a PITA..\n\nIRC dump\n\n```\n[10:45] == steverweber [81617c7d@gateway/web/freenode/ip.129.97.124.125] has joined #ipython\n[10:46] <steverweber> using ipython3\n[10:46] <steverweber> def test():\n[10:46] <steverweber>     defvar='true'\n[10:46] <steverweber>     !echo def Test worked? {defvar}\n[10:46] <steverweber> test()\n[10:47] <steverweber> :( def Test worked? {defvar}\n[10:48] <steverweber> how do i pass function or class scope variables to the shell?\n[10:50] <btiffin> Try  !echo \"def Test worked? {defvar}\"\n[10:52] <steverweber> same.\n[10:53] <btiffin> Hmm, worked here.  Even without quotes.\n[10:54] <steverweber> r u running trunk?\n[10:54] <steverweber> ill try the latest release.. brb\n[10:55] <btiffin> 0.12 from the Fedora 16 repos\n[10:56] <steverweber> one more test plez\n[10:56] <steverweber> ---------\n[10:56] <steverweber> class cTest:\n[10:56] <steverweber>   classvar='true'\n[10:56] <steverweber>     def test(self):\n[10:57] <steverweber>     !echo class Test worked? {self.classvar}\n[10:57] <steverweber> ctest = cTest()\n[10:57] <steverweber> ctest.test()\n[10:57] <steverweber> -----------\n[11:01] <jtaylor> you could just do os.system(\"echo class Test worked? \" + defvar)\n[11:02] <steverweber> yes... but it would be nice if the ! worked...\n[11:04] <jtaylor> not sure how that works, I guess it just picks the variable from the global namespace\n[11:04] <jtaylor> so doesn#T work for local ones\n[11:05] <steverweber> i think btiffin was mistaken and never preformed the function scope test\n[11:06] <steverweber> could you confirm that it as well will not work\\\n[11:07] == zendeavor has changed nick to meskaprune\n[11:07] <jtaylor> it doesn'T work with git, I also don't think it works with 0.12.1 but I can try\n[11:07] <steverweber> i tried latest.. it dont work\n[11:08] == meskaprune has changed nick to meskaHAIRYLEGS\n[11:09] <jtaylor> doesn't work in 0.12.1\n[11:09] == meskaHAIRYLEGS has changed nick to automage\n[11:10] <steverweber> adding as issue to git hub\n[11:15] <btiffin> steverweber: could be, plus I'm 2.7.3 and not 3, so  I'm likely chucking red herrings\n[11:15] <steverweber> thanks\n```\n", "commits": [{"node_id": "MDY6Q29tbWl0MTIzNjAwMzpjMzRjNDljMzJjOGQ0NjdiZTQ1NjExNThmMzNmMWQxZDMxMDY1NDY4", "commit_message": "Add failing test for issue gh-1878", "commit_timestamp": "2012-06-07T19:19:50Z", "files": ["IPython/core/tests/test_interactiveshell.py"]}, {"node_id": "MDY6Q29tbWl0MTIzNjAwMzozOWYxYzkyODkzY2RlMGEzNDRiODQwN2FkOGQ4YWU1ZWM5ZjlkNTM2", "commit_message": "Correct stack depth for !system calls\n\nCloses gh-1878", "commit_timestamp": "2012-06-07T19:24:13Z", "files": ["IPython/core/interactiveshell.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjM5ZjFjOTI4OTNjZGUwYTM0NGI4NDA3YWQ4ZDhhZTVlYzlmOWQ1MzY=", "commit_message": "Correct stack depth for !system calls\n\nCloses gh-1878", "commit_timestamp": "2012-06-07T19:24:13Z", "files": ["IPython/core/interactiveshell.py"]}, {"node_id": "MDY6Q29tbWl0MjM0NDA3Mzo5M2U2NjcyZmVhYTU2Mzg4MTIwOWU4ZjY2ZGE0NjU2MTlkMzU2MWI4", "commit_message": "Merge pull request #1879 from takluyver/i1878\n\nCorrect stack depth for variable expansion in !system commands\r\n\r\nCloses #1878.", "commit_timestamp": "2012-06-08T03:20:24Z", "files": ["IPython/core/interactiveshell.py", "IPython/core/tests/test_interactiveshell.py"]}], "labels": [], "created_at": "2012-06-07T15:19:12Z", "closed_at": "2012-08-14T17:44:12Z", "method": ["regex"]}
{"issue_number": 1874, "title": "cython_magic uses importlib, which doesn't ship with py2.6", "body": "Sorry, I don't have time to fix this right now, but wanted to leave a report.\n\n`importlib` was not in the standard library for python2.6, though [it has been backported](http://pypi.python.org/pypi/importlib/1.0.1).\n\nTrying to run `%load_ext cythonmagic` results in this traceback:\n\n```\n/ipython/IPython/extensions/cythonmagic.py in <module>()\n     18 import io\n     19 import os, sys\n---> 20 from importlib import import_module\n     21 import imp\n     22 \n\nImportError: No module named importlib\n```\n\nnot sure if we should make people install it themselves, or if it's better to just put a copy in `IPython.external`\n", "commits": [{"node_id": "MDY6Q29tbWl0MjkwOTI5MDo3MDY3YzE3MzAyZDJmNDA2ZDQ2MGQwMzU3NWQ3MzE5ZDdhOGI3M2I4", "commit_message": "Remove importlib dependency which not available in Python 2.6.\n\nSince we are only doing an absolute import, it suffices to just run\n`__import__(name)` and then find the module in `sys.modules`.\n\nCloses #1874.", "commit_timestamp": "2012-06-08T00:21:31Z", "files": ["IPython/extensions/cythonmagic.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjcwNjdjMTczMDJkMmY0MDZkNDYwZDAzNTc1ZDczMTlkN2E4YjczYjg=", "commit_message": "Remove importlib dependency which not available in Python 2.6.\n\nSince we are only doing an absolute import, it suffices to just run\n`__import__(name)` and then find the module in `sys.modules`.\n\nCloses #1874.", "commit_timestamp": "2012-06-08T00:21:31Z", "files": ["IPython/extensions/cythonmagic.py"]}, {"node_id": "MDY6Q29tbWl0MjM0NDA3Mzo3YTUwZGU5MjVkYTA5Nzk1NTk0NGEzMWFiNWNiMGJlODljMjc5YTk1", "commit_message": "Merge pull request #1882 from bfroehle/_1874_import_module\n\nRemove importlib dependency which not available in Python 2.6.\r\n\r\nSince we are only doing an absolute import, it suffices to just run\r\n__import__(name) and then find the module in sys.modules.\r\n\r\nCloses #1874.", "commit_timestamp": "2012-06-08T04:10:45Z", "files": ["IPython/extensions/cythonmagic.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzphZjRmMWFiNjQ5NjczZmIyYjQ2NjI5ZjZmN2FiYTEzNDU1YWQ0MTg5", "commit_message": "Remove importlib dependency which not available in Python 2.6.\n\nSince we are only doing an absolute import, it suffices to just run\n`__import__(name)` and then find the module in `sys.modules`.\n\nCloses #1874.", "commit_timestamp": "2012-06-08T00:21:31Z", "files": ["IPython/extensions/cythonmagic.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzpjZmVjMWRmOWVmMTllNzhjNzhiN2UzMzU4OTFiNmVhNjE1M2RhYWU0", "commit_message": "Merge pull request #1882 from bfroehle/_1874_import_module\n\nRemove importlib dependency which not available in Python 2.6.\r\n\r\nSince we are only doing an absolute import, it suffices to just run\r\n__import__(name) and then find the module in sys.modules.\r\n\r\nCloses #1874.", "commit_timestamp": "2012-06-08T04:10:45Z", "files": ["IPython/extensions/cythonmagic.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjdhNTBkZTkyNWRhMDk3OTU1OTQ0YTMxYWI1Y2IwYmU4OWMyNzlhOTU=", "commit_message": "Merge pull request #1882 from bfroehle/_1874_import_module\n\nRemove importlib dependency which not available in Python 2.6.\r\n\r\nSince we are only doing an absolute import, it suffices to just run\r\n__import__(name) and then find the module in sys.modules.\r\n\r\nCloses #1874.", "commit_timestamp": "2012-06-08T04:10:45Z", "files": ["IPython/extensions/cythonmagic.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjdhNTBkZTkyNWRhMDk3OTU1OTQ0YTMxYWI1Y2IwYmU4OWMyNzlhOTU=", "commit_message": "Merge pull request #1882 from bfroehle/_1874_import_module\n\nRemove importlib dependency which not available in Python 2.6.\r\n\r\nSince we are only doing an absolute import, it suffices to just run\r\n__import__(name) and then find the module in sys.modules.\r\n\r\nCloses #1874.", "commit_timestamp": "2012-06-08T04:10:45Z", "files": ["IPython/extensions/cythonmagic.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzpjZmVjMWRmOWVmMTllNzhjNzhiN2UzMzU4OTFiNmVhNjE1M2RhYWU0", "commit_message": "Merge pull request #1882 from bfroehle/_1874_import_module\n\nRemove importlib dependency which not available in Python 2.6.\r\n\r\nSince we are only doing an absolute import, it suffices to just run\r\n__import__(name) and then find the module in sys.modules.\r\n\r\nCloses #1874.", "commit_timestamp": "2012-06-08T04:10:45Z", "files": ["IPython/extensions/cythonmagic.py"]}], "labels": ["bug"], "created_at": "2012-06-07T06:08:46Z", "closed_at": "2012-06-08T04:10:46Z", "linked_pr_number": [1874], "method": ["label"]}
{"issue_number": 1860, "title": "IPython.utils.columnize sometime wrong...", "body": "``` python\nIn [1]: import IPython.utils.text as ut\n   ...: len(ut.columnize(['x'*40,'x'*40],displaywidth=80).split('\\n')[0])\nOut[1]: 82 # should be < 80\n```\n\ntwo 40 letters words separated by 2 char could not enter on a 80 char line.\nshould be 2 times 40(+separator size maybe) \n", "commits": [{"node_id": "MDY6Q29tbWl0MjM0NDA3Mzo5ODFlZjVjODA3YTY1MTFiMTc0ZGIyNjY4NGQ1MjNiODQ4N2Y1MjZm", "commit_message": "re-write columnize, with intermediate step.\n\nfix test that where wrong, add some others.\n\nfix #1860", "commit_timestamp": "2012-06-10T17:46:30Z", "files": ["IPython/utils/tests/test_text.py", "IPython/utils/text.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4Ojk4MWVmNWM4MDdhNjUxMWIxNzRkYjI2Njg0ZDUyM2I4NDg3ZjUyNmY=", "commit_message": "re-write columnize, with intermediate step.\n\nfix test that where wrong, add some others.\n\nfix #1860", "commit_timestamp": "2012-06-10T17:46:30Z", "files": ["IPython/utils/tests/test_text.py", "IPython/utils/text.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzphMWRkYjg2YWJlZTBjZmFkZmQ5NDBmMjQ3N2UwMzM1ZTYyNjdkZTE0", "commit_message": "re-write columnize, with intermediate step.\n\nfix test that where wrong, add some others.\n\nfix #1860", "commit_timestamp": "2012-06-10T17:46:30Z", "files": ["IPython/utils/tests/test_text.py", "IPython/utils/text.py"]}], "labels": ["bug", "tab-completion"], "created_at": "2012-06-05T20:04:13Z", "closed_at": "2012-06-10T19:22:49Z", "method": ["label"]}
{"issue_number": 1848, "title": "task fails with \"AssertionError: not enough buffers!\" after second resubmit", "body": "When I create a task and resubmit it after it has completed, it runs a second time as expected. But when a resubmit it once again, the task fails with \"AssertionError: not enough buffers!\":\n\n``` python\nIn [15]: client.db_query({\"msg_id\" : \"68a7868d-e3b1-407e-a208-cc0464019e7c\"})\nOut[15]: \n[{u'client_uuid': None,\n  u'completed': datetime.datetime(2012, 6, 4, 8, 37, 21, 960000),\n  u'content': {},\n  u'engine_uuid': u'1b2756fe-bc92-46bd-b3cd-4679ccb2d664',\n  u'header': {u'after': [],\n   u'date': datetime.datetime(2012, 6, 4, 8, 37, 21, 951000),\n   u'follow': [],\n   u'msg_id': u'68a7868d-e3b1-407e-a208-cc0464019e7c',\n   u'msg_type': u'apply_request',\n   u'retries': 0,\n   u'session': u'4fcc572653c27b0d89000000',\n   u'targets': [],\n   u'timeout': 0.0,\n   u'username': u'kaazoo'},\n  u'msg_id': u'68a7868d-e3b1-407e-a208-cc0464019e7c',\n  u'pyerr': {u'ename': u'AssertionError',\n   u'engine_info': {u'engine_id': 0,\n    u'engine_uuid': u'1b2756fe-bc92-46bd-b3cd-4679ccb2d664',\n    u'method': u'apply'},\n   u'evalue': u'not enough buffers!',\n   u'status': u'error',\n   u'traceback': [u'Traceback (most recent call last):\\n',\n    u'  File \"/opt/local/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/IPython/zmq/ipkernel.py\", line 547, in apply_request\\n    f,args,kwargs = unpack_apply_message(bufs, working, copy=False)\\n',\n    u'  File \"/opt/local/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/IPython/zmq/serialize.py\", line 130, in unpack_apply_message\\n    assert len(bufs) >= 3, \"not enough buffers!\"\\n',\n    u'AssertionError: not enough buffers!\\n']},\n  u'pyin': None,\n  u'pyout': None,\n  u'queue': None,\n  u'received': datetime.datetime(2012, 6, 4, 8, 37, 21, 979000),\n  u'resubmitted': None,\n  u'result_content': {u'ename': u'AssertionError',\n   u'engine_info': {u'engine_id': 0,\n    u'engine_uuid': u'1b2756fe-bc92-46bd-b3cd-4679ccb2d664',\n    u'method': u'apply'},\n   u'evalue': u'not enough buffers!',\n   u'status': u'error',\n   u'traceback': [u'Traceback (most recent call last):\\n',\n    u'  File \"/opt/local/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/IPython/zmq/ipkernel.py\", line 547, in apply_request\\n    f,args,kwargs = unpack_apply_message(bufs, working, copy=False)\\n',\n    u'  File \"/opt/local/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/IPython/zmq/serialize.py\", line 130, in unpack_apply_message\\n    assert len(bufs) >= 3, \"not enough buffers!\"\\n',\n    u'AssertionError: not enough buffers!\\n']},\n  u'result_header': {u'date': datetime.datetime(2012, 6, 4, 8, 37, 21, 960000),\n   u'dependencies_met': True,\n   u'engine': u'1b2756fe-bc92-46bd-b3cd-4679ccb2d664',\n   u'msg_id': u'cb464dc5-c473-49e7-aaf0-81e894f75390',\n   u'msg_type': u'apply_reply',\n   u'session': u'1b2756fe-bc92-46bd-b3cd-4679ccb2d664',\n   u'started': datetime.datetime(2012, 6, 4, 8, 37, 21, 960000),\n   u'status': u'error',\n   u'username': u'kaazoo'},\n  u'started': datetime.datetime(2012, 6, 4, 8, 37, 21, 960000),\n  u'stderr': u'',\n  u'stdout': u'',\n  u'submitted': datetime.datetime(2012, 6, 4, 8, 37, 21, 951000)}]\n```\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU5NDQ2OjczYTczNWMzZTgwYzUwN2YwMDc2ODkwMTBiZWFhYWVkZGRjZTU3YmM=", "commit_message": "add missing buffers to resubmitted tasks\n\nallows chained resubmission\n\ncloses #1848", "commit_timestamp": "2012-06-04T21:57:45Z", "files": ["IPython/parallel/controller/hub.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjczYTczNWMzZTgwYzUwN2YwMDc2ODkwMTBiZWFhYWVkZGRjZTU3YmM=", "commit_message": "add missing buffers to resubmitted tasks\n\nallows chained resubmission\n\ncloses #1848", "commit_timestamp": "2012-06-04T21:57:45Z", "files": ["IPython/parallel/controller/hub.py"]}, {"node_id": "MDY6Q29tbWl0MzQzNjM3MTozNDRlNTQzNTU0MGVkZjUyOTdmMmI2MTZjMjExYTllNmEzN2M5OWZi", "commit_message": "Merge pull request #1852 from minrk/resubmitbufs\n\nFix chained resubmissions, tiny fix for missing buffers, and test.\r\n\r\ncloses #1848", "commit_timestamp": "2012-06-05T00:43:54Z", "files": ["IPython/parallel/controller/hub.py", "IPython/parallel/tests/test_client.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzozNDY4ZDY0N2UxNjRmODk1NzExNzFiMDE4NDRjOGJiZDVmYTI3NTA4", "commit_message": "add missing buffers to resubmitted tasks\n\nallows chained resubmission\n\ncloses #1848", "commit_timestamp": "2012-06-04T21:57:45Z", "files": ["IPython/parallel/controller/hub.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzphYzgyY2Y5MjRkNDk1YmRhNWQzOWYzMzhhMDk4MWMwOGZhZmFjMTI3", "commit_message": "Merge pull request #1852 from minrk/resubmitbufs\n\nFix chained resubmissions, tiny fix for missing buffers, and test.\r\n\r\ncloses #1848", "commit_timestamp": "2012-06-05T00:43:54Z", "files": ["IPython/parallel/controller/hub.py", "IPython/parallel/tests/test_client.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjM0NGU1NDM1NTQwZWRmNTI5N2YyYjYxNmMyMTFhOWU2YTM3Yzk5ZmI=", "commit_message": "Merge pull request #1852 from minrk/resubmitbufs\n\nFix chained resubmissions, tiny fix for missing buffers, and test.\r\n\r\ncloses #1848", "commit_timestamp": "2012-06-05T00:43:54Z", "files": ["IPython/parallel/controller/hub.py", "IPython/parallel/tests/test_client.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjM0NGU1NDM1NTQwZWRmNTI5N2YyYjYxNmMyMTFhOWU2YTM3Yzk5ZmI=", "commit_message": "Merge pull request #1852 from minrk/resubmitbufs\n\nFix chained resubmissions, tiny fix for missing buffers, and test.\r\n\r\ncloses #1848", "commit_timestamp": "2012-06-05T00:43:54Z", "files": ["IPython/parallel/controller/hub.py", "IPython/parallel/tests/test_client.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzphYzgyY2Y5MjRkNDk1YmRhNWQzOWYzMzhhMDk4MWMwOGZhZmFjMTI3", "commit_message": "Merge pull request #1852 from minrk/resubmitbufs\n\nFix chained resubmissions, tiny fix for missing buffers, and test.\r\n\r\ncloses #1848", "commit_timestamp": "2012-06-05T00:43:54Z", "files": ["IPython/parallel/controller/hub.py", "IPython/parallel/tests/test_client.py"]}], "labels": [], "created_at": "2012-06-04T06:40:36Z", "closed_at": "2012-06-05T00:43:55Z", "linked_pr_number": [1848], "method": ["regex"]}
{"issue_number": 1837, "title": "edit magic broken in head", "body": "a82dc7efca3f52\n\ncaused by 31bcb3c7e4bd2935d74164c4b52be908165b662e\n\n```\nIn [1]: %edit\n---------------------------------------------------------------------------\nTypeError                                 Traceback (most recent call last)\n<ipython-input-1-107a4967e4b8> in <module>()\n----> 1 get_ipython().magic(u'edit')\n\n/usr/lib/python2.7/dist-packages/IPython/core/interactiveshell.pyc in magic(self, arg_s)\n   2129         magic_name, _, magic_arg_s = arg_s.partition(' ')\n   2130         magic_name = magic_name.lstrip(prefilter.ESC_MAGIC)\n-> 2131         return self.run_line_magic(magic_name, magic_arg_s)\n   2132 \n   2133     #-------------------------------------------------------------------------\n\n/usr/lib/python2.7/dist-packages/IPython/core/interactiveshell.pyc in run_line_magic(self, magic_name, line)\n   2055                 args.append(sys._getframe(stack_depth).f_locals)\n   2056             with self.builtin_trap:\n-> 2057                 result = fn(*args)\n   2058             return result\n   2059 \n\n/usr/lib/python2.7/dist-packages/IPython/core/magics/code.pyc in edit(self, parameter_s, last_call)\n\n/usr/lib/python2.7/dist-packages/IPython/core/magic.pyc in <lambda>(f, *a, **k)\n    188     # but it's overkill for just that one bit of state.\n    189     def magic_deco(arg):\n--> 190         call = lambda f, *a, **k: f(*a, **k)\n    191 \n    192         if callable(arg):\n\n/usr/lib/python2.7/dist-packages/IPython/core/magics/code.pyc in edit(self, parameter_s, last_call)\n    464 \n    465         try:\n--> 466             filename, lineno, is_temp = self._find_edit_target(args, opts, last_call)\n    467         except MacroToEdit as e:\n    468             self._edit_macro(args, e.args[0])\n\nTypeError: _find_edit_target() takes exactly 4 arguments (3 given)\n```\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU4NTE4OmMxZTNmNGE2MTBmODU3ZWYyMjk3YjM4YmQyYzYwZGU4NTJhNWI5YzI=", "commit_message": "Fix %edit which got broken in magics refactoring.\n\nCloses #1837.", "commit_timestamp": "2012-06-03T05:14:24Z", "files": ["IPython/core/magics/code.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzphZTQzMDJiYzc4ZjI5OGIwZTQ2MTI1NDIyMzFmZjk2ZTcxODU1YjY5", "commit_message": "Fix %edit which got broken in magics refactoring.\n\nCloses #1837.", "commit_timestamp": "2012-06-03T05:14:24Z", "files": ["IPython/core/magics/code.py"]}], "labels": [], "created_at": "2012-06-02T12:28:57Z", "closed_at": "2012-06-03T05:14:52Z", "method": ["regex"]}
{"issue_number": 1827, "title": "Sending tracebacks over ZMQ should protect against unicode failure", "body": "An exception with non-ascii characters may cause another exception when `unicode()` is called on it. This represents a bug elsewhere, but we should protect against it.\n\n```\nUnicodeDecodeError Traceback (most recent call last)\n/Users/jonathantaylor/ipython/IPython/core/interactiveshell.pyc in run_code(self, code_obj)\n2722 self.CustomTB(etype,value,tb)\n2723 except:\n-> 2724 self.showtraceback()\n2725 else:\n2726 outflag = 0\n\n/Users/jonathantaylor/ipython/IPython/core/interactiveshell.pyc in showtraceback(self, exc_tuple, filename, tb_offset, exception_only)\n1713 value, tb, tb_offset=tb_offset)\n1714 \n-> 1715 self._showtraceback(etype, value, stb)\n1716 if self.call_pdb:\n1717 # drop into debugger\n\n/Users/jonathantaylor/ipython/IPython/zmq/zmqshell.pyc in showtraceback(self, etype, evalue, stb)\n505 u'traceback' : stb,\n506 u'ename' : unicode(etype.name_),\n--> 507 u'evalue' : unicode(evalue)\n508 }\n509\n\nUnicodeDecodeError: 'ascii' codec can't decode byte 0xe2 in position 132: ordinal not in range(128)'\n```\n\nDiscovered here: https://github.com/ipython/ipython/pull/1780#discussion_r911934\n", "commits": [{"node_id": "MDY6Q29tbWl0MTIzNjAwMzpiY2ZiMzBkOGQxMGU2ZWVjMTk2YmIwZmU5M2I3MzJhNmQxMDljMGVj", "commit_message": "Protect zmqshell against non-unicode safe exceptions.\n\nCloses gh-1827", "commit_timestamp": "2012-06-06T19:07:51Z", "files": ["IPython/zmq/zmqshell.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmJjZmIzMGQ4ZDEwZTZlZWMxOTZiYjBmZTkzYjczMmE2ZDEwOWMwZWM=", "commit_message": "Protect zmqshell against non-unicode safe exceptions.\n\nCloses gh-1827", "commit_timestamp": "2012-06-06T19:07:51Z", "files": ["IPython/zmq/zmqshell.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzpkYWFhZTJkOTM4ZTdlZjdlNjcxMzFmNGNkZWJjOWVlNmVhNWI0ODBk", "commit_message": "Protect zmqshell against non-unicode safe exceptions.\n\nCloses gh-1827", "commit_timestamp": "2012-06-06T19:07:51Z", "files": ["IPython/zmq/zmqshell.py"]}], "labels": ["unicode", "bug"], "created_at": "2012-06-01T09:46:15Z", "closed_at": "2012-06-08T21:12:26Z", "method": ["label", "regex"]}
{"issue_number": 1824, "title": "Exception before prompting for password during ssh connection", "body": "### Setup\n\nWin 7 x64\n\nipython==0.12.1\nparamiko==1.7.7.2\npyzmq==2.2.0\n### Issue\n\nI want to connect an IPython qtconsole on Windows to an IPython kernel on a remote linux box through ssh2.\n\nI made the following changes in `ipython_qtconsole_config.py`:\n\n``` python\n#### Path to the ssh key to use for logging in to the ssh server.\nimport os\nc.IPythonQtConsoleApp.sshkey = os.path.expanduser('~')+'\\\\.ssh\\\\id_dsa'\n```\n\nWhen I run\n`ipython qtconsole --IPythonQtConsoleApp.sshserver='user@hostname' --existing kernel-21449.json`\n\nI receive:\n\n```\n[IPythonQtConsoleApp] Could not setup tunnels\nTraceback (most recent call last):\n  File \"C:\\Python27\\lib\\site-packages\\IPython\\frontend\\consoleapp.py\", line 289, in init_ssh\n    newports = tunnel_to_kernel(info, self.sshserver, self.sshkey)\n  File \"C:\\Python27\\lib\\site-packages\\IPython\\lib\\kernel.py\", line 248, in tunnel_to_kernel\n    password = getpass(\"SSH Password for %s: \"%sshserver)\n  File \"C:\\Python27\\lib\\getpass.py\", line 95, in win_getpass\n    msvcrt.putch(c)\nTypeError: must be char, not unicode\n```\n\nFor now, I edited IPython/lib/kernel.py:248 as a temporary workaround in the following way:\n\n``` python\npassword = getpass(\"SSH Password for %s: \"%sshserver.encode('ascii','ignore'))\n```\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU4NTE4OmY1ODkxZTk2OGE0ZmUzMWQwYWY1NTZiMGIyMGFjZGNhYTRjNzY3Njg=", "commit_message": "Backport PR #4346: getpass() on Windows & Python 2 needs bytes prompt\n\nSupersedes #4221.\n\nCloses #1824.\n\nBackport candidate for 1.2.", "commit_timestamp": "2013-10-07T21:34:09Z", "files": ["IPython/kernel/connect.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmEzNDQ3OWI5MDdjMTI0ZjMxZmU3YjVhYzQxNDhhZWMzYWMxZDc4NTc=", "commit_message": "Merge pull request #4346 from takluyver/win-kernel-getpass\n\ngetpass() on Windows & Python 2 needs bytes prompt", "commit_timestamp": "2013-10-06T19:45:12Z", "files": ["IPython/kernel/connect.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmEzNDQ3OWI5MDdjMTI0ZjMxZmU3YjVhYzQxNDhhZWMzYWMxZDc4NTc=", "commit_message": "Merge pull request #4346 from takluyver/win-kernel-getpass\n\ngetpass() on Windows & Python 2 needs bytes prompt", "commit_timestamp": "2013-10-06T19:45:12Z", "files": ["IPython/kernel/connect.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmY1ODkxZTk2OGE0ZmUzMWQwYWY1NTZiMGIyMGFjZGNhYTRjNzY3Njg=", "commit_message": "Backport PR #4346: getpass() on Windows & Python 2 needs bytes prompt\n\nSupersedes #4221.\n\nCloses #1824.\n\nBackport candidate for 1.2.", "commit_timestamp": "2013-10-07T21:34:09Z", "files": ["IPython/kernel/connect.py"]}, {"node_id": "MDY6Q29tbWl0MjM0Mzk1OTowYTMyZTA1ZWZlM2VmMDI0NTgzMWNhMTVkMzYyZGU5OWZjN2Y5YWY3", "commit_message": "Merge commit 'rel-1.1.0-7-gf5891e9' into debian-1X\n\n* commit 'rel-1.1.0-7-gf5891e9':\n  Backport PR #4346: getpass() on Windows & Python 2 needs bytes prompt\n  Backport PR #4336: use simple replacement rather than string formatting in format_kernel_cmd\n  Backport PR #4316: underscore missing on notebook_p4\n  Backport PR #4257: fix unicode argv parsing", "commit_timestamp": "2013-11-01T19:13:35Z", "files": ["IPython/config/application.py", "IPython/config/tests/test_application.py", "IPython/kernel/connect.py", "IPython/kernel/manager.py"]}, {"node_id": "MDY6Q29tbWl0MjM0Mzk1OTozOGUwNGQwNzQwZmQxYmEyMWRkNzQzYjYyYWZlZmRlNTkzYjU0MjFl", "commit_message": "Merge commit 'rel-1.1.0-7-gf5891e9' into releases\n\n* commit 'rel-1.1.0-7-gf5891e9': (70 commits)\n  Backport PR #4346: getpass() on Windows & Python 2 needs bytes prompt\n  Backport PR #4336: use simple replacement rather than string formatting in format_kernel_cmd\n  Backport PR #4316: underscore missing on notebook_p4\n  Backport PR #4257: fix unicode argv parsing\n  Backport PR #4209: Magic doc fixes\n  Backport PR #4204: remove some extraneous print statements from IPython.parallel\n  back to dev\n  release 1.1.0\n  don't upload to GitHub in release script\n  1.1 backport stats\n  Backport PR #4188: Allow user_ns trait to be None\n  Backport PR #4189: always fire LOCAL_IPS.extend(PUBLIC_IPS)\n  Backport PR #4174: various issues in markdown and rst templates\n  Backport PR #4181: nbconvert: Fix, sphinx template not removing new lines from headers\n  Backport PR #4043: don't 'restore_bytes' in from_JSON\n  Backport PR #4178: add missing data_javascript\n  Backport PR #4136: catch javascript errors in any output\n  Backport PR #4163: Fix for incorrect default encoding on Windows.\n  Backport PR #4171: add nbconvert config file when creating profiles\n  Backport PR #4159: don't split `.cell` and `div.cell` CSS\n  ...", "commit_timestamp": "2014-03-18T03:23:33Z", "files": ["IPython/config/application.py", "IPython/config/tests/test_application.py", "IPython/consoleapp.py", "IPython/core/application.py", "IPython/core/inputtransformer.py", "IPython/core/interactiveshell.py", "IPython/core/magics/execution.py", "IPython/core/profileapp.py", "IPython/core/profiledir.py", "IPython/core/release.py", "IPython/core/shellapp.py", "IPython/core/tests/test_completerlib.py", "IPython/core/tests/test_inputtransformer.py", "IPython/core/tests/test_interactiveshell.py", "IPython/core/tests/test_magic.py", "IPython/core/tests/test_profile.py", "IPython/core/tests/test_prompts.py", "IPython/core/tests/test_ultratb.py", "IPython/extensions/cythonmagic.py", "IPython/extensions/octavemagic.py", "IPython/extensions/rmagic.py", "IPython/extensions/storemagic.py", "IPython/extensions/tests/test_storemagic.py", "IPython/external/mathjax.py", "IPython/html/notebookapp.py", "IPython/html/tests/test_notebookapp.py", "IPython/kernel/client.py", "IPython/kernel/connect.py", "IPython/kernel/manager.py", "IPython/kernel/tests/test_connect.py", "IPython/kernel/tests/test_kernel.py", "IPython/kernel/tests/test_message_spec.py", "IPython/kernel/zmq/heartbeat.py", "IPython/kernel/zmq/ipkernel.py", "IPython/kernel/zmq/kernelapp.py", "IPython/kernel/zmq/serialize.py", "IPython/kernel/zmq/tests/test_start_kernel.py", "IPython/lib/inputhook.py", "IPython/nbconvert/exporters/exporter.py", "IPython/nbconvert/exporters/markdown.py", "IPython/nbconvert/filters/strings.py", "IPython/nbconvert/nbconvertapp.py", "IPython/nbconvert/tests/base.py", "IPython/nbconvert/tests/test_nbconvertapp.py", "IPython/nbconvert/transformers/base.py", "IPython/nbconvert/transformers/coalescestreams.py", "IPython/nbconvert/transformers/sphinx.py", "IPython/nbformat/v3/nbbase.py", "IPython/nbformat/v3/nbjson.py", "IPython/nbformat/v3/nbpy.py", "IPython/nbformat/v3/rwbase.py", "IPython/nbformat/v3/tests/nbexamples.py", "IPython/nbformat/v3/tests/test_json.py", "IPython/nbformat/v3/tests/test_nbbase.py", "IPython/parallel/apps/baseapp.py", "IPython/parallel/client/client.py", "IPython/parallel/client/remotefunction.py", "IPython/parallel/client/view.py", "IPython/parallel/controller/mongodb.py", "IPython/parallel/error.py", "IPython/parallel/tests/__init__.py", "IPython/parallel/tests/test_client.py", "IPython/parallel/tests/test_view.py", "IPython/qt/console/frontend_widget.py", "IPython/qt/console/qtconsoleapp.py", "IPython/qt/console/rich_ipython_widget.py", "IPython/qt/console/tests/test_app.py", "IPython/qt/rich_text.py", "IPython/terminal/console/tests/test_console.py", "IPython/terminal/ipapp.py", "IPython/terminal/tests/test_help.py", "IPython/testing/tools.py", "IPython/utils/encoding.py", "IPython/utils/localinterfaces.py", "IPython/utils/py3compat.py", "IPython/utils/tempdir.py", "IPython/utils/tests/test_path.py", "IPython/utils/text.py", "tools/backport_pr.py", "tools/gh_api.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzpjNjAzMTBmZjc1NGU4ZjZhOTQ4ZTNlMjA0ZDJiZWZjYmNlMjZkYzMz", "commit_message": "Merge pull request #4346 from takluyver/win-kernel-getpass\n\ngetpass() on Windows & Python 2 needs bytes prompt", "commit_timestamp": "2013-10-06T19:45:12Z", "files": ["IPython/kernel/connect.py"]}], "labels": ["unicode", "windows", "bug"], "created_at": "2012-06-01T04:13:04Z", "closed_at": "2013-10-06T19:45:12Z", "linked_pr_number": [1824], "method": ["label"]}
{"issue_number": 1801, "title": "Client.queue_status info gets confused by retried tasks", "body": "The Hub doesn't get notified of tasks that fail on an engine but are awaiting resubmission, so it thinks the task is perpetually pending on the engine on which it failed.\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU5NDQ2OmZiMmRkOGU2OTY1ZjA4MGY4ODg0YjZiYjY5NWE0Y2QxZTg0MGZmY2M=", "commit_message": "fill out client.shutdown docstring\n\ncloses #1801", "commit_timestamp": "2012-06-12T03:05:59Z", "files": ["IPython/parallel/client/client.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmZiMmRkOGU2OTY1ZjA4MGY4ODg0YjZiYjY5NWE0Y2QxZTg0MGZmY2M=", "commit_message": "fill out client.shutdown docstring\n\ncloses #1801", "commit_timestamp": "2012-06-12T03:05:59Z", "files": ["IPython/parallel/client/client.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzpiOTU4MjU3YTFhMDJhMzVhMjM4MTdmNDAzYjczNzJjYzRiOTc4YmMx", "commit_message": "fill out client.shutdown docstring\n\ncloses #1801", "commit_timestamp": "2012-06-12T03:05:59Z", "files": ["IPython/parallel/client/client.py"]}], "labels": ["bug", "parallel"], "created_at": "2012-05-31T09:18:03Z", "closed_at": "2017-07-20T17:01:26Z", "method": ["label"]}
{"issue_number": 1799, "title": "Source file not found for magics", "body": "After the refactoring of the magics, the display of their source files stopped working:\n\n```\nType:       Magic function\nBase Class: <type 'instancemethod'>\nString Form:<bound method ExecutionMagics.run of <IPython.core.magics.execution.ExecutionMagics object at 0x90daf2c>>\nNamespace:  IPython internal\nFile:       Dynamically generated function. No source code available.\n```\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU4NTE4OjQ0YjgxMjE4YTI0M2E3ZjQ1NzAyM2IzMjI0Yzg1MDU0YmI4ZTNlYjY=", "commit_message": "Merge pull request #1845 from fperez/magic_inspect\n\nFixes to inspection machinery for magics\r\n\r\nNow that magics are generated via decorators, the inspection machinery wasn't finding data about them such as source code. Fixes that along with some refactoring, cleanup and test additions.\r\n\r\nCloses gh-1799.", "commit_timestamp": "2012-06-11T06:11:44Z", "files": ["IPython/core/magics/namespace.py", "IPython/core/oinspect.py", "IPython/core/tests/test_oinspect.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo0MTUzZDIwM2M1NDFjNzZlYTZhZWM5ZmJjMzNmZmNhMjFhZjJhMDlj", "commit_message": "Merge pull request #1845 from fperez/magic_inspect\n\nFixes to inspection machinery for magics\r\n\r\nNow that magics are generated via decorators, the inspection machinery wasn't finding data about them such as source code. Fixes that along with some refactoring, cleanup and test additions.\r\n\r\nCloses gh-1799.", "commit_timestamp": "2012-06-11T06:11:44Z", "files": ["IPython/core/magics/namespace.py", "IPython/core/oinspect.py", "IPython/core/tests/test_oinspect.py"]}], "labels": ["bug"], "created_at": "2012-05-31T05:35:38Z", "closed_at": "2012-06-11T06:11:45Z", "method": ["label"]}
{"issue_number": 1777, "title": "ipython crash on wrong encoding", "body": "Python 2.7.3 (default, Apr 20 2012, 22:39:59) \nType \"copyright\", \"credits\" or \"license\" for more information.\n\nIPython 0.13.dev -- An enhanced Interactive Python.\n\nIn [1]: echo \u00c4\u00fd\u00ed | iconv -f utf8 -t cp1252 | iconv -f cp1251\nTraceback (most recent call last):\n  File \"/usr/local/bin/ipython\", line 9, in <module>\n    load_entry_point('ipython==0.13.dev', 'console_scripts', 'ipython')()\n  File \"/usr/local/lib/python2.7/dist-packages/IPython/frontend/terminal/ipapp.py\", line 408, in launch_new_instance\n    app.start()\n  File \"/usr/local/lib/python2.7/dist-packages/IPython/frontend/terminal/ipapp.py\", line 382, in start\n    self.shell.mainloop()\n  File \"/usr/local/lib/python2.7/dist-packages/IPython/frontend/terminal/interactiveshell.py\", line 424, in mainloop\n    self.interact(display_banner=display_banner)\n  File \"/usr/local/lib/python2.7/dist-packages/IPython/frontend/terminal/interactiveshell.py\", line 543, in interact\n    self.run_cell(source_raw, store_history=True)\n  File \"/usr/local/lib/python2.7/dist-packages/IPython/core/interactiveshell.py\", line 2557, in run_cell\n    self.logger.log(cell, raw_cell)\n  File \"/usr/local/lib/python2.7/dist-packages/IPython/core/logger.py\", line 181, in log\n    self.log_write(line_ori)\n  File \"/usr/local/lib/python2.7/dist-packages/IPython/core/logger.py\", line 195, in log_write\n    write(data)\nUnicodeEncodeError: 'ascii' codec can't encode characters in position 5-7: ordinal not in range(128)\n\nIf you suspect this is an IPython bug, please report it at:\n    https://github.com/ipython/ipython/issues\nor send an email to the mailing list at ipython-dev@scipy.org\n\nYou can print a more detailed traceback right now with \"%tb\", or use \"%debug\"\nto interactively debug it.\n\nExtra-detailed tracebacks for bug-reporting purposes can be enabled via:\n    %config Application.verbose_crash=True\n", "commits": [{"node_id": "MDY6Q29tbWl0MTIzNjAwMzowZWVmZjIxYjY0YjM4YTg4ODZhN2Q4Mjk0ZDM5MGYyZDZkNmNiNGYy", "commit_message": "Make logging unicode-aware\n\nCloses gh-1777", "commit_timestamp": "2012-05-30T21:05:01Z", "files": ["IPython/core/logger.py", "IPython/core/magics/logging.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjBlZWZmMjFiNjRiMzhhODg4NmE3ZDgyOTRkMzkwZjJkNmQ2Y2I0ZjI=", "commit_message": "Make logging unicode-aware\n\nCloses gh-1777", "commit_timestamp": "2012-05-30T21:05:01Z", "files": ["IPython/core/logger.py", "IPython/core/magics/logging.py"]}, {"node_id": "MDY6Q29tbWl0NjU5NDQ2OmU3Zjg5ODExMzA0YjBlMjU3ZmI4YTJhZDA0NjFmZDgzYWQxYzRkYTU=", "commit_message": "Merge pull request #1792 from takluyver/i1777\n\nFix logger to be Unicode-aware: logging could crash ipython if there was unicode in the input.\r\n\r\nCloses #1777.", "commit_timestamp": "2012-05-31T00:55:54Z", "files": ["IPython/core/logger.py", "IPython/core/magics/logging.py", "IPython/core/tests/test_logger.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzpiOThkODUxYmYwYWM0NGVjZDUwMjU3Yjg3YTlhNDVjZThjZTZlYzY4", "commit_message": "Make logging unicode-aware\n\nCloses gh-1777", "commit_timestamp": "2012-05-30T21:05:01Z", "files": ["IPython/core/logger.py", "IPython/core/magics/logging.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzoyNDZkOWZmM2Y1NmQ1MTk0Mjg0NGNiZDQ5NzAwYzJiN2M1YmE2YTU5", "commit_message": "Merge pull request #1792 from takluyver/i1777\n\nFix logger to be Unicode-aware: logging could crash ipython if there was unicode in the input.\r\n\r\nCloses #1777.", "commit_timestamp": "2012-05-31T00:55:54Z", "files": ["IPython/core/logger.py", "IPython/core/magics/logging.py", "IPython/core/tests/test_logger.py"]}], "labels": ["unicode", "bug"], "created_at": "2012-05-28T14:21:24Z", "closed_at": "2012-05-31T00:55:56Z", "method": ["label", "regex"]}
{"issue_number": 1775, "title": "assert_in not present on Python 2.6", "body": "We've added some tests that use `assert_in`, but that doesn't exist on Python 2.6. We need to either remove this, our carry our own implementation until we drop Python 2.6 support.\n\nhttps://jenkins.shiningpanda.com/ipython/job/ipython-multi/PLATFORM=debian6,PYTHON=CPython-2.6/110/\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU4NTE4OjhhNDM4YjQ5ZjZhODNjYjkxNGM2ZGNjNTFiZDFlOTIxYTQxYTQ1ZDI=", "commit_message": "Merge pull request #1813 from takluyver/nose-assert-methods\n\nAdd assert_in method to nose for Python 2.6.\r\n\r\nCloses #1775.", "commit_timestamp": "2012-06-01T01:02:32Z", "files": ["IPython/testing/iptest.py", "IPython/testing/nose_assert_methods.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo3NDZkODA4NWRkMTE3ZWY0N2Y2YWI1Mjc1MGZjOTQxYmE5NDAyZjQ3", "commit_message": "Merge pull request #1813 from takluyver/nose-assert-methods\n\nAdd assert_in method to nose for Python 2.6.\r\n\r\nCloses #1775.", "commit_timestamp": "2012-06-01T01:02:32Z", "files": ["IPython/testing/iptest.py", "IPython/testing/nose_assert_methods.py"]}], "labels": ["important", "bug", "testing"], "created_at": "2012-05-28T10:37:26Z", "closed_at": "2012-06-01T01:02:34Z", "method": ["label"]}
{"issue_number": 1774, "title": "Some magics seems broken", "body": "Following the merge of cell magic it seems like some of the magics are broken.  At \n 6cb2026f76d00422b9daa55ed590c9ab16f71ec6 the %qtconsole magic from the notebook \nand the list of all magics in the qtconsole works. In current master 89c23370cacc3bdee12af9a199656e83a387df5b \nthey are broken. Could this be an issue with the merge of the merge kernel branch and the cell magic branch?\n\n The list of all magics is now:\n\n```\n%ERROR\n%AttributeError\n%ZMQInteractiveShell\n%object\n%has\n%no\n%attribute\n%lsmagic\n```\n\nwhere lsmagic is the only genuine one.  It seems like an error message leaks into the list. \n", "commits": [{"node_id": "MDY6Q29tbWl0MjM0NDA3MzpjZmZmY2YyN2M5NDMyZjBlNDFhMjVjYTY1ODA1N2IwYTc5N2YwNGJj", "commit_message": "fix magic menu in qtconsole\n\nfix #1774", "commit_timestamp": "2012-05-28T13:07:23Z", "files": ["IPython/frontend/qt/console/mainwindow.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjhiMDBhMzBkOGMyNjE4NWZkZTIyYzBmZjM0YTBiYmNiNjMxZWYxOTc=", "commit_message": "Merge pull request #1782 from Carreau/magiclistinfo\n\nfix Magic menu in qtconsole, split in groups", "commit_timestamp": "2012-06-06T10:39:48Z", "files": ["IPython/core/magic.py", "IPython/frontend/qt/console/mainwindow.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjhiMDBhMzBkOGMyNjE4NWZkZTIyYzBmZjM0YTBiYmNiNjMxZWYxOTc=", "commit_message": "Merge pull request #1782 from Carreau/magiclistinfo\n\nfix Magic menu in qtconsole, split in groups", "commit_timestamp": "2012-06-06T10:39:48Z", "files": ["IPython/core/magic.py", "IPython/frontend/qt/console/mainwindow.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzpiZmE2OGI5NDc2MmMxNDI5NzU0MjI2N2YzOGRjZDNjNDEyYjA4ZDlm", "commit_message": "Merge pull request #1782 from Carreau/magiclistinfo\n\nfix Magic menu in qtconsole, split in groups", "commit_timestamp": "2012-06-06T10:39:48Z", "files": ["IPython/core/magic.py", "IPython/frontend/qt/console/mainwindow.py"]}], "labels": ["important", "qtconsole", "bug"], "created_at": "2012-05-28T10:00:43Z", "closed_at": "2012-06-11T05:14:28Z", "linked_pr_number": [1774], "method": ["label", "regex"]}
{"issue_number": 1767, "title": "Tab completion problems with cell magics", "body": "As mentioned by @takluyver in #1732:\n\nOne small flaw I've noticed: if you start the Qt console, and type `%ti<TAB>`, it shows the new `%%timeit` as an option for tab completion, but it reduces the command at the prompt to the longest common prefix, which is now just `%`. It ought to be smarter about that. (This isn't specific to Python 3)\n\n---\n\nWhile the problem right now appears only in the Qt console, I'm pondering whether we should also change the policy in the terminal, so that the behavior is uniform as it comes from the completer and we don't need custom client-side logic.\n\nI'll work a bit on it and will see if I can come up with something sensible.\n", "commits": [{"node_id": "MDY6Q29tbWl0MjM0NDA3MzozZWU5MWMzNjE5NGMyZjhjYjQxYzljODFmOWMwMzRkY2E5YzE5ZGFm", "commit_message": "take #!%...  prefix into account for completion\n\nfixes #1767", "commit_timestamp": "2012-06-13T20:26:16Z", "files": ["IPython/core/inputsplitter.py", "IPython/frontend/qt/console/console_widget.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjNlZTkxYzM2MTk0YzJmOGNiNDFjOWM4MWY5YzAzNGRjYTljMTlkYWY=", "commit_message": "take #!%...  prefix into account for completion\n\nfixes #1767", "commit_timestamp": "2012-06-13T20:26:16Z", "files": ["IPython/core/inputsplitter.py", "IPython/frontend/qt/console/console_widget.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo1ZTc3ZjJjZWNkM2U3MWFlNjhmYTI2ZDBkZDUzMWQ1MDRmZTYyMmY4", "commit_message": "take #!%...  prefix into account for completion\n\nfixes #1767", "commit_timestamp": "2012-06-13T20:26:16Z", "files": ["IPython/core/inputsplitter.py", "IPython/frontend/qt/console/console_widget.py"]}], "labels": ["qtconsole", "bug", "tab-completion"], "created_at": "2012-05-27T21:58:22Z", "closed_at": "2012-06-17T14:42:39Z", "method": ["label"]}
{"issue_number": 1730, "title": "Warning from qtconsole when %autocall enabled", "body": "If autocall is enabled (1 or 2), ipython gives this warning whenever a function is called without parens:\n\n```\nWarning: received unknown payload of type u'IPython.zmq.zmqshell.ZMQInteractiveShell.auto_rewrite_input'\n```\n\nTo reproduce: start ipython with\n\n```\nipython qtconsole --pylab=inline\n```\n\nIn the qtconsole, type \n\n```\nautocall 2\nlen 'test'\n```\n\nThe terminal ipython was started in will show the above warning.\n", "commits": [{"node_id": "MDY6Q29tbWl0MjkwOTI5MDozNWIwYTlhMjIyOTcwN2M1OGU1MTMyMTlmMGMyN2RmZTg1ODE3ZTk2", "commit_message": "WIP: Print autocall rewrite in Qt console.\n\nCloses #1730.", "commit_timestamp": "2012-05-15T01:27:02Z", "files": ["IPython/frontend/qt/console/ipython_widget.py", "IPython/zmq/zmqshell.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmUzOGRjZWM0ZDRiZTk1NGI2MzZjYTA5ZTQ0NzMwNjcxZDNlZTc0OGI=", "commit_message": "Merge pull request #7005 from minrk/payloads-3.0\n\nupdate payloads for msg spec 5", "commit_timestamp": "2014-11-24T20:28:40Z", "files": ["IPython/core/payloadpage.py", "IPython/kernel/zmq/zmqshell.py", "IPython/qt/console/ipython_widget.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmUzOGRjZWM0ZDRiZTk1NGI2MzZjYTA5ZTQ0NzMwNjcxZDNlZTc0OGI=", "commit_message": "Merge pull request #7005 from minrk/payloads-3.0\n\nupdate payloads for msg spec 5", "commit_timestamp": "2014-11-24T20:28:40Z", "files": ["IPython/core/payloadpage.py", "IPython/kernel/zmq/zmqshell.py", "IPython/qt/console/ipython_widget.py"]}], "labels": ["qtconsole", "bug"], "created_at": "2012-05-13T21:05:08Z", "closed_at": "2014-11-24T20:28:40Z", "linked_pr_number": [1730], "method": ["label", "regex"]}
{"issue_number": 1723, "title": "scatter/gather fail with targets='all'", "body": "``` python\ndview = rc.direct_view(targets='all')\ndview.scatter('x', range(16))\n```\n\ngives:\n\n```\nTypeError: 'a' not valid str target, must be 'all'\n```\n\nBecause it is trying to scatter across targets `['a', 'l', 'l']`.\n\nFix coming...\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU4NTE4OjY4ZmEyNjM4NDUxODRmZTNkMjViZGYzZjRjZTRlOWM5M2IwZmE0Zjc=", "commit_message": "Merge pull request #1724 from minrk/lazyscatter\n\nfix scatter/gather with targets='all'\r\n\r\ncloses #1723", "commit_timestamp": "2012-05-11T01:17:50Z", "files": ["IPython/parallel/client/view.py", "IPython/parallel/tests/test_view.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzpkOTY1MGFmM2EzMDVlOWExYmU5OTdhNGYxNDQ4MzM2M2U3YmU4YWQx", "commit_message": "Merge pull request #1724 from minrk/lazyscatter\n\nfix scatter/gather with targets='all'\r\n\r\ncloses #1723", "commit_timestamp": "2012-05-11T01:17:50Z", "files": ["IPython/parallel/client/view.py", "IPython/parallel/tests/test_view.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjY4ZmEyNjM4NDUxODRmZTNkMjViZGYzZjRjZTRlOWM5M2IwZmE0Zjc=", "commit_message": "Merge pull request #1724 from minrk/lazyscatter\n\nfix scatter/gather with targets='all'\r\n\r\ncloses #1723", "commit_timestamp": "2012-05-11T01:17:50Z", "files": ["IPython/parallel/client/view.py", "IPython/parallel/tests/test_view.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjY4ZmEyNjM4NDUxODRmZTNkMjViZGYzZjRjZTRlOWM5M2IwZmE0Zjc=", "commit_message": "Merge pull request #1724 from minrk/lazyscatter\n\nfix scatter/gather with targets='all'\r\n\r\ncloses #1723", "commit_timestamp": "2012-05-11T01:17:50Z", "files": ["IPython/parallel/client/view.py", "IPython/parallel/tests/test_view.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzpkOTY1MGFmM2EzMDVlOWExYmU5OTdhNGYxNDQ4MzM2M2U3YmU4YWQx", "commit_message": "Merge pull request #1724 from minrk/lazyscatter\n\nfix scatter/gather with targets='all'\r\n\r\ncloses #1723", "commit_timestamp": "2012-05-11T01:17:50Z", "files": ["IPython/parallel/client/view.py", "IPython/parallel/tests/test_view.py"]}], "labels": ["bug", "parallel"], "created_at": "2012-05-11T00:56:01Z", "closed_at": "2012-05-11T01:17:51Z", "linked_pr_number": [1723], "method": ["label"]}
{"issue_number": 1699, "title": "Test failure in IPython.parallel w/ Python 3", "body": "Not showing up on ShiningPanda, because it doesn't have numpy installed, but I see one failure:\n\n```\n======================================================================\nFAIL: test_push_numpy_nocopy (IPython.parallel.tests.test_view.TestView)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"<string>\", line 2, in test_push_numpy_nocopy\n  File \"/home/thomas/.ipy_pr_tests/venv-python3.2/lib/python3.2/site-packages/ipython-0.13.dev-py3.2.egg/IPython/parallel/tests/clienttest.py\", line 73, in skip_without_names\n    return f(*args, **kwargs)\n  File \"/home/thomas/.ipy_pr_tests/venv-python3.2/lib/python3.2/site-packages/ipython-0.13.dev-py3.2.egg/IPython/parallel/tests/test_view.py\", line 248, in test_push_numpy_nocopy\n    self.assertFalse(flag, \"array is writeable, push shouldn't have pickled it\")\nAssertionError: True is not false : array is writeable, push shouldn't have pickled it\n    \"True is not false : array is writeable, push shouldn't have pickled it\" = self._formatMessage(\"True is not false : array is writeable, push shouldn't have pickled it\", \"%s is not false\" % safe_repr(True))\n>>  raise self.failureException(\"True is not false : array is writeable, push shouldn't have pickled it\")\n```\n", "commits": [{"node_id": "MDY6Q29tbWl0MTIzNjAwMzpjM2UxOTAxNWMwZTlhZTc1MjVmNjNkNTE0OTExYWUxM2E4NTgyMjkw", "commit_message": "Mark test_push_numpy_nocopy as a known failure for Python 3 (gh-1699)", "commit_timestamp": "2012-05-07T17:51:41Z", "files": ["IPython/parallel/tests/test_view.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzphYzZjOTRlMWE3YTA2ZTczMDJlNTc4ZDU1NWU0OTI5OWIwYTZjNjE1", "commit_message": "Mark test_push_numpy_nocopy as a known failure for Python 3 (gh-1699)", "commit_timestamp": "2012-05-07T17:51:41Z", "files": ["IPython/parallel/tests/test_view.py"]}], "labels": ["bug", "parallel"], "created_at": "2012-05-04T11:08:28Z", "closed_at": "2017-09-12T10:24:20Z", "method": ["label"]}
{"issue_number": 1688, "title": "unicode exception when using %run with failing script", "body": "When I %run the script below in a path containing  non-ascii characters the traceback of a failing script is clobbered by a UnicodeDecodeError in IPython code.\n\n```\nimport pdb\ndef a():\n    a=1+2\n    1/0\n    b=2+4\n\na()\n```\n\nCorrect behaviour  when running in ascii path\n\n```\nIn [1]: %run err.py\n---------------------------------------------------------------------------\nZeroDivisionError                         Traceback (most recent call last)\nC:\\python\\ipydevel\\VENV\\Py27\\lib\\site-packages\\ipython-0.13.dev-py2.7.egg\\IPython\\utils\\py3compat.pyc in execfile(fname, glob, loc)\n    166             else:\n    167                 filename = fname\n--> 168             exec compile(scripttext, filename, 'exec') in glob, loc\n    169     else:\n    170         def execfile(fname, *where):\n\nC:\\python\\ipydevel\\err.py in <module>()\n      5     b=2+4\n      6\n----> 7 a()\n\nC:\\python\\ipydevel\\err.py in a()\n      2 def a():\n      3     a=1+2\n----> 4     1/0\n      5     b=2+4\n      6\n\nZeroDivisionError: integer division or modulo by zero\n```\n\nincorrect behaviour when running in non-ascii path\n\n```\nIn [4]: %run err.py\n---------------------------------------------------------------------------\nUnicodeDecodeError                        Traceback (most recent call last)\nC:\\python\\ipydevel\\VENV\\Py27\\lib\\site-packages\\ipython-0.13.dev-py2.7.egg\\IPython\\core\\interactiveshell.pyc in run_code(self, code_obj)\n   2623             self.CustomTB(etype,value,tb)\n   2624         except:\n-> 2625             self.showtraceback()\n   2626         else:\n   2627             outflag = 0\n\nC:\\python\\ipydevel\\VENV\\Py27\\lib\\site-packages\\ipython-0.13.dev-py2.7.egg\\IPython\\core\\interactiveshell.pyc in showtraceback(self, exc_tuple, filename, tb_offset, exception_only)\n   1699                     else:\n   1700                         stb = self.InteractiveTB.structured_traceback(etype,\n-> 1701                                                 value, tb, tb_offset=tb_offset)\n   1702\n   1703                         self._showtraceback(etype, value, stb)\n\nC:\\python\\ipydevel\\VENV\\Py27\\lib\\site-packages\\ipython-0.13.dev-py2.7.egg\\IPython\\core\\ultratb.pyc in structured_traceback(self, etype, value, tb, tb_offset, context)\n   1163         self.tb = tb\n   1164         return FormattedTB.structured_traceback(\n-> 1165             self, etype, value, tb, tb_offset, context)\n   1166\n   1167 #---------------------------------------------------------------------------\n\nC:\\python\\ipydevel\\VENV\\Py27\\lib\\site-packages\\ipython-0.13.dev-py2.7.egg\\IPython\\core\\ultratb.pyc in structured_traceback(self, etype, value, tb, tb_offset, context)\n   1071             # Verbose modes need a full traceback\n   1072             return VerboseTB.structured_traceback(\n-> 1073                 self, etype, value, tb, tb_offset, context\n   1074             )\n   1075         else:\n\nC:\\python\\ipydevel\\VENV\\Py27\\lib\\site-packages\\ipython-0.13.dev-py2.7.egg\\IPython\\core\\ultratb.pyc in structured_traceback(self, etype, evalue, etb, tb_offset, context)\n    917                 frames.append('%s%s' % (level,''.join(\n    918                     _format_traceback_lines(lnum,index,lines,Colors,lvals,\n--> 919                                             col_scheme))))\n    920\n    921         # Get (safely) a string form of the exception info\n\nUnicodeDecodeError: 'ascii' codec can't decode byte 0xe5 in position 26: ordinal not in range(128)\n```\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU4NTE4OjAyOWJiYWQxMjZmYjQ5N2VhMDhhOTAwZjBjMGM4YTgxNWQxMGM1NGQ=", "commit_message": "Merge pull request #1759 from Carreau/mpr\n\nAdd git-mpr, to merge PR(s) from github just by number(s).\r\n\r\nInspired by git-mrb and test_pr, I thougth it would be usefull to be able to merge PR only by giving their number. Hence `git merge-pull-request`or `git-mpr`.\r\n\r\nusage: \r\n```bash\r\n$ git mpr -h                                                                          ~/ipython/tools\r\nusage: git-mpr [-h] [-l | -a | -m [pr-number [pr-number ...]]]\r\n\r\nMerge (one|many) github pull request by their number. If pull request can't be\r\nmerge as is, cancel merge, and continue to the next if any.\r\n\r\noptional arguments:\r\n  -h, --help            show this help message and exit\r\n  -l, --list            list PR, their number and their mergeability\r\n  -a, --merge-all       try to merge as many PR as possible, one by one\r\n  -m [pr-number [pr-number ...]], --merge [pr-number [pr-number ...]]\r\n                        The pull request numbers\r\n```\r\n\r\nexamples :\r\n```bash\r\n$ git mpr --list  \r\n* #1758 [\u221a]:  test_pr, fallback on http if git protocol fail, and SSL errors...\r\n* #1755 [\u221a]:  test for pygments before running qt tests\r\n* #1715 [\u221a]:  Fix for #1688, traceback-unicode issue\r\n[...]\r\n* #1493 [\u221a]:  Selenium web tests proof-of-concept\r\n* #1471 [ ]:  simplify IPython.parallel connections and enable Controller Resume\r\n* #1343 [ ]:  Add prototype shutdown button to Notebook dashboard\r\n* #1285 [\u221a]:  Implementation of grepping the input history using several patterns\r\n* #1215 [\u221a]:  updated %quickref to show short-hand for %sc and %sx\r\n```\r\nPR number, mergeability and title\r\nQuite slow, as it does 1 api call by PR, since api does not give mergeability anymore if you ask for the list of all PRs at once.\r\n\r\nmerge one or more PR (skip the ones with conflict and present a nice list to copy and past to do it by hand) \r\n\r\n```bash\r\n$ git mpr --merge [pr-number [pr-number ...]]]\r\n[...]\r\n*************************************************************************************\r\nthe following branch have not been merged automatically, considere doing it by hand :\r\nPR 1630: git pull https://github.com/minrk/ipython.git mergekernel\r\nPR 1343: git pull https://github.com/takluyver/ipython.git notebook-shutdown\r\nPR 1715: git pull https://github.com/jstenar/ipython.git ultratb-pycolorize-unicode\r\nPR 1732: git pull https://github.com/fperez/ipython.git cellmagics\r\nPR 1471: git pull https://github.com/minrk/ipython.git connection\r\nPR 1674: git pull https://github.com/mdboom/ipython.git notebook-carriage-return\r\n*************************************************************************************\r\n```\r\n\r\nAnd last, \r\n```\r\ngit mpr --merge-all\r\n```\r\n\r\nThat is pretty self explainatory", "commit_timestamp": "2012-06-13T06:40:38Z", "files": ["tools/gh_api.py", "tools/git-mpr.py"]}, {"node_id": "MDY6Q29tbWl0NjU5NDQ2OjRhN2EwNTZjMjBkOTY3ZWRiNTc0ZGQ4MGZlYjA5MmIyMzlkYjE4NGY=", "commit_message": "move RemoteError import to top-level\n\nStill inside function to prevent circular imports\n\nA better fix is to fold parallel.error into core.error,\nbut I don't want to do that this close to 0.13 release.\n\nshould fix #1688", "commit_timestamp": "2012-06-26T19:50:52Z", "files": ["IPython/core/interactiveshell.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjRhN2EwNTZjMjBkOTY3ZWRiNTc0ZGQ4MGZlYjA5MmIyMzlkYjE4NGY=", "commit_message": "move RemoteError import to top-level\n\nStill inside function to prevent circular imports\n\nA better fix is to fold parallel.error into core.error,\nbut I don't want to do that this close to 0.13 release.\n\nshould fix #1688", "commit_timestamp": "2012-06-26T19:50:52Z", "files": ["IPython/core/interactiveshell.py"]}], "labels": ["unicode", "bug"], "created_at": "2012-05-02T16:49:37Z", "closed_at": "2012-09-06T13:05:23Z", "method": ["label"]}
{"issue_number": 1679, "title": "List command doesn't work in ipdb debugger the first time", "body": "When starting a debug session, if the very first command issued is `l` (`list`), it doesn't work.  Once at least one statement has been executed, then it's OK:\n\n```\nIn [1]: run -d -b50 ~/scratch/error.py\nBreakpoint 1 at /home/fperez/scratch/error.py:50\nNOTE: Enter 'c' at the ipdb>  prompt to start your script.\n> <string>(1)<module>()\n\nipdb> l\n\nipdb> n\n> /home/fperez/scratch/error.py(50)main()\n     49     size = 6\n1--> 50     reps = 5\n     51     import pdb; pdb.set_trace()\n\nipdb> l\n     45     result[:] = arange(size)*step + start\n     46 \n     47 def main():\n     48     #print 'hi'\n     49     size = 6\n1--> 50     reps = 5\n     51     import pdb; pdb.set_trace()\n     52     print 'reps:',reps\n     53     array_normal = [0]*size\n     54     t0=time.clock()\n     55     for i in xrange(reps):    # <<<<< ERROR (fork instead of for)\n\nipdb> \n```\n\nThere's likely a file cache loading that isn't happening at the start, which we need to do.\n", "commits": [{"node_id": "MDY6Q29tbWl0MjkwOTI5MDo2M2RmYTIwNDQ1N2VhOWZmMzE0ZjA1MWI1NDdhODM3NjE3YjU5MTc1", "commit_message": "Avoid stopping in ipdb until we reach the main script.\n\nFor example::\n\n    In [1]: %run -d -b 52 setup.py\n    Breakpoint 1 at /tmp/ipython/setup.py:52\n    NOTE: Enter 'c' at the ipdb>  prompt to start your script.\n    > /tmp/ipython/setup.py(7)<module>()\n          6 Under Windows, the command sdist is not supported, since IPython\n    ----> 7 requires utilities which are not available under Windows.\"\"\"\n          8\n\ncompared to the previous behavior::\n\n    In [1]: %run -d -b 52 setup.py\n    Breakpoint 1 at /tmp/ipython/setup.py:52\n    NOTE: Enter 'c' at the ipdb>  prompt to start your script.\n    > <string>(1)<module>()\n\nCloses #1679 (\"List command desn't work in ipdb debugger the first time\")", "commit_timestamp": "2012-11-06T23:43:07Z", "files": ["IPython/core/magics/execution.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjYzZGZhMjA0NDU3ZWE5ZmYzMTRmMDUxYjU0N2E4Mzc2MTdiNTkxNzU=", "commit_message": "Avoid stopping in ipdb until we reach the main script.\n\nFor example::\n\n    In [1]: %run -d -b 52 setup.py\n    Breakpoint 1 at /tmp/ipython/setup.py:52\n    NOTE: Enter 'c' at the ipdb>  prompt to start your script.\n    > /tmp/ipython/setup.py(7)<module>()\n          6 Under Windows, the command sdist is not supported, since IPython\n    ----> 7 requires utilities which are not available under Windows.\"\"\"\n          8\n\ncompared to the previous behavior::\n\n    In [1]: %run -d -b 52 setup.py\n    Breakpoint 1 at /tmp/ipython/setup.py:52\n    NOTE: Enter 'c' at the ipdb>  prompt to start your script.\n    > <string>(1)<module>()\n\nCloses #1679 (\"List command desn't work in ipdb debugger the first time\")", "commit_timestamp": "2012-11-06T23:43:07Z", "files": ["IPython/core/magics/execution.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjQ1YTZlOGQzYTA3YzFkY2JmZjhmNTQyODg2ZmQyOTA4MzAxYWQxNDA=", "commit_message": "Backport PR #2554: Avoid stopping in ipdb until we reach the main script.\n\nFor example:\n\n```\nIn [1]: %run -d -b 52 setup.py\nBreakpoint 1 at /tmp/ipython/setup.py:52\nNOTE: Enter 'c' at the ipdb>  prompt to start your script.\n> /tmp/ipython/setup.py(7)<module>()\n      6 Under Windows, the command sdist is not supported, since IPython\n----> 7 requires utilities which are not available under Windows.\"\"\"\n      8\n```\n\ncompared to the previous behavior:\n\n```\nIn [1]: %run -d -b 52 setup.py\nBreakpoint 1 at /tmp/ipython/setup.py:52\nNOTE: Enter 'c' at the ipdb>  prompt to start your script.\n> <string>(1)<module>()\n```\n\nCloses #1679 (\"List command desn't work in ipdb debugger the first time\")", "commit_timestamp": "2013-03-04T22:54:42Z", "files": ["IPython/core/magics/execution.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo2NWFiYzAyMGEyNmZkNTY4MDE1OThjNTI2NGY5MjEwMmVmMmJlMTRk", "commit_message": "Avoid stopping in ipdb until we reach the main script.\n\nFor example::\n\n    In [1]: %run -d -b 52 setup.py\n    Breakpoint 1 at /tmp/ipython/setup.py:52\n    NOTE: Enter 'c' at the ipdb>  prompt to start your script.\n    > /tmp/ipython/setup.py(7)<module>()\n          6 Under Windows, the command sdist is not supported, since IPython\n    ----> 7 requires utilities which are not available under Windows.\"\"\"\n          8\n\ncompared to the previous behavior::\n\n    In [1]: %run -d -b 52 setup.py\n    Breakpoint 1 at /tmp/ipython/setup.py:52\n    NOTE: Enter 'c' at the ipdb>  prompt to start your script.\n    > <string>(1)<module>()\n\nCloses #1679 (\"List command desn't work in ipdb debugger the first time\")", "commit_timestamp": "2012-11-06T23:43:07Z", "files": ["IPython/core/magics/execution.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmYzMmE2NDY3YWU4ODJlN2FkM2I1M2NkMjZmMzkzMzY2ZTUwYThhNDA=", "commit_message": "Merge pull request #2554 from bfroehle/pdb_break\n\nAvoid stopping in ipdb until we reach the main script.", "commit_timestamp": "2012-11-08T18:11:56Z", "files": ["IPython/core/magics/execution.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmYzMmE2NDY3YWU4ODJlN2FkM2I1M2NkMjZmMzkzMzY2ZTUwYThhNDA=", "commit_message": "Merge pull request #2554 from bfroehle/pdb_break\n\nAvoid stopping in ipdb until we reach the main script.", "commit_timestamp": "2012-11-08T18:11:56Z", "files": ["IPython/core/magics/execution.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjQ1YTZlOGQzYTA3YzFkY2JmZjhmNTQyODg2ZmQyOTA4MzAxYWQxNDA=", "commit_message": "Backport PR #2554: Avoid stopping in ipdb until we reach the main script.\n\nFor example:\n\n```\nIn [1]: %run -d -b 52 setup.py\nBreakpoint 1 at /tmp/ipython/setup.py:52\nNOTE: Enter 'c' at the ipdb>  prompt to start your script.\n> /tmp/ipython/setup.py(7)<module>()\n      6 Under Windows, the command sdist is not supported, since IPython\n----> 7 requires utilities which are not available under Windows.\"\"\"\n      8\n```\n\ncompared to the previous behavior:\n\n```\nIn [1]: %run -d -b 52 setup.py\nBreakpoint 1 at /tmp/ipython/setup.py:52\nNOTE: Enter 'c' at the ipdb>  prompt to start your script.\n> <string>(1)<module>()\n```\n\nCloses #1679 (\"List command desn't work in ipdb debugger the first time\")", "commit_timestamp": "2013-03-04T22:54:42Z", "files": ["IPython/core/magics/execution.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzplM2U0NGI4ZDVjOGY2ZDQ0NmY5YjUzYjQ4ZTE5OTczMjQyZjMwZGYz", "commit_message": "Merge pull request #2554 from bfroehle/pdb_break\n\nAvoid stopping in ipdb until we reach the main script.", "commit_timestamp": "2012-11-08T18:11:56Z", "files": ["IPython/core/magics/execution.py"]}], "labels": ["bug"], "created_at": "2012-05-01T22:13:40Z", "closed_at": "2012-11-08T18:11:58Z", "linked_pr_number": [1679], "method": ["label", "regex"]}
{"issue_number": 1673, "title": "Display of chained exception broken", "body": "On Python 3 IPython doesn't support displaying chained exceptions. The following script (`bug.py`):\n\n``` python\ntry:\n    raise ValueError(17)\nexcept Exception as exc:\n    raise ValueError(23) from exc\n```\n\nwhen run with `python3.2 bug.py` properly dumps the exception chain:\n\n```\n$ python3.2 bug.py\nTraceback (most recent call last):\n  File \"/Users/walter/bug.py\", line 2, in <module>\n    raise ValueError(17)\nValueError: 17\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/Users/walter/bug.py\", line 4, in <module>\n    raise ValueError(23) from exc\nValueError: 23\n```\n\nHowever, when run with IPython, the exception cause is not displayed:\n\n```\n$ ipython3 bug.py\n---------------------------------------------------------------------------\nValueError                                Traceback (most recent call last)\n/Users/walter/.local/lib/python3.2/site-packages/ipython-0.12.1-py3.2.egg/IPython/utils/py3compat.py in execfile(fname, glob, loc)\n     71     def execfile(fname, glob, loc=None):\n     72         loc = loc if (loc is not None) else glob\n---> 73         exec(compile(open(fname).read(), fname, 'exec'), glob, loc)\n     74 \n     75     # Refactor print statements in doctests.\n\n\n/Users/walter/bug.py in <module>()\n      2         raise ValueError(17)\n      3 except Exception as exc:\n----> 4         raise ValueError(23) from exc\n\nValueError: 23\n```\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU4NTE4OjJiZjM1ZjkyMWI1MzBkZGZiOGUzYmY3YTc3MjcxNTg3NTk4YWZlZTE=", "commit_message": "Merge pull request #6065 from atteroTheGreatest/i1673\n\n#1673 Display of chained exception", "commit_timestamp": "2014-07-08T02:32:23Z", "files": ["IPython/core/interactiveshell.py", "IPython/core/tests/test_ultratb.py", "IPython/core/ultratb.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo0NDg5MjRmYjg1ZmI5Y2I4MmQ0YTY5MWFkNGQ0OGEyZGNiMjY5NGZi", "commit_message": "Merge pull request #6065 from atteroTheGreatest/i1673\n\n#1673 Display of chained exception", "commit_timestamp": "2014-07-08T02:32:23Z", "files": ["IPython/core/interactiveshell.py", "IPython/core/tests/test_ultratb.py", "IPython/core/ultratb.py"]}], "labels": [], "created_at": "2012-04-30T10:59:09Z", "closed_at": "2014-07-08T02:32:23Z", "method": ["regex"]}
{"issue_number": 1667, "title": "Test failure in test_message_spec", "body": "```\nTraceback (most recent call last):\n  File \"/home/slave/jenkins/shiningpanda/jobs/04a2e2a5/virtualenvs/ff035a1d/lib/python2.7/site-packages/IPython/testing/_paramtestpy2.py\", line 54, in run_parametric\n    testgen.next()\n  File \"/home/slave/jenkins/shiningpanda/jobs/04a2e2a5/virtualenvs/ff035a1d/lib/python2.7/site-packages/IPython/zmq/tests/test_message_spec.py\", line 398, in test_complete\n    msg_id, reply = execute(code=\"alpha = albert = 5\")\n  File \"/home/slave/jenkins/shiningpanda/jobs/04a2e2a5/virtualenvs/ff035a1d/lib/python2.7/site-packages/IPython/zmq/tests/test_message_spec.py\", line 66, in execute\n    nt.assert_equals(busy['content']['execution_state'], 'busy')\n  File \"/sp/lib/python/cpython-2.7/lib/python2.7/unittest/case.py\", line 509, in assertEqual\n    assertion_func(first, second, msg=msg)\n  File \"/sp/lib/python/cpython-2.7/lib/python2.7/unittest/case.py\", line 502, in _baseAssertEqual\n    raise self.failureException(msg)\nAssertionError: u'idle' != 'busy'\n    \"u'idle' != 'busy'\" = '%s != %s' % (safe_repr(u'idle'), safe_repr('busy'))\n    \"u'idle' != 'busy'\" = self._formatMessage(\"u'idle' != 'busy'\", \"u'idle' != 'busy'\")\n>>  raise self.failureException(\"u'idle' != 'busy'\")\n```\n\nhttps://jenkins.shiningpanda.com/ipython/job/ipython/87/testReport/IPython.zmq.tests.test_message_spec/test_complete/test/\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU4NTE4OmZlZmY5Mjg1MmY5YmYzODA5YjU0YmVjM2I5YWU1ZjdmZjI1NWJjZTA=", "commit_message": "Merge pull request #1669 from minrk/pyout\n\nhandle pyout messages in test_message_spec\r\n\r\nand wait for kernel to start, so side effects of startup do not pollute the first test.\r\n\r\ncloses #1668\r\ncloses #1667", "commit_timestamp": "2012-04-28T19:45:37Z", "files": ["IPython/zmq/tests/test_message_spec.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo0ZmVlMzI5MDE5NTIxNzQ2MDRjZWNkZmNiMDA1ZmY3NWIxNWMyOTE4", "commit_message": "Merge pull request #1669 from minrk/pyout\n\nhandle pyout messages in test_message_spec\r\n\r\nand wait for kernel to start, so side effects of startup do not pollute the first test.\r\n\r\ncloses #1668\r\ncloses #1667", "commit_timestamp": "2012-04-28T19:45:37Z", "files": ["IPython/zmq/tests/test_message_spec.py"]}], "labels": ["bug", "testing"], "created_at": "2012-04-28T10:51:55Z", "closed_at": "2012-04-28T19:45:39Z", "method": ["label"]}
{"issue_number": 1661, "title": "%paste still bugs about IndentationError and says to use %paste", "body": "``` py\nIn [8]: %paste\n sum([1, 2,\n3, 4])\n## -- End pasted text --\nIndentationError: unexpected indent\n\nIf you want to paste code into IPython, try the %paste and %cpaste magic functions.\n```\n\nThe IndentationError is legitimate, but it shouldn't tell me to use %paste when I already am.\n", "commits": [{"node_id": "MDY6Q29tbWl0NzM3NjIxOTpjYzY2NTA2ODY4MDQyMzEwZmJkMTI0MGQ4NWMyMGRhNDljYjZiYjE3", "commit_message": "Don't show 'try %paste' message while using magics\n\nFixes #1661.", "commit_timestamp": "2013-01-04T23:25:05Z", "files": ["IPython/frontend/terminal/interactiveshell.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmNjNjY1MDY4NjgwNDIzMTBmYmQxMjQwZDg1YzIwZGE0OWNiNmJiMTc=", "commit_message": "Don't show 'try %paste' message while using magics\n\nFixes #1661.", "commit_timestamp": "2013-01-04T23:25:05Z", "files": ["IPython/frontend/terminal/interactiveshell.py"]}, {"node_id": "MDY6Q29tbWl0NjU5NDQ2OmZhMzVlYTYzMDZkZDEwMTUwNTcyNjRiMTEyMzdjOWIyYzNlYjI2OGY=", "commit_message": "Don't show 'try %paste' message while using magics\n\nFixes #1661.", "commit_timestamp": "2013-01-25T21:27:20Z", "files": ["IPython/frontend/terminal/interactiveshell.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzpkYzJlMmQ0ODczYWE5M2I4NWEzZjgwZDMxZGFhNDU0ODFkOWUyMzQ5", "commit_message": "Don't show 'try %paste' message while using magics\n\nFixes #1661.", "commit_timestamp": "2013-01-04T23:25:05Z", "files": ["IPython/frontend/terminal/interactiveshell.py"]}], "labels": [], "created_at": "2012-04-25T19:32:59Z", "closed_at": "2013-01-05T16:31:49Z", "method": ["regex"]}
{"issue_number": 1653, "title": "Test failure in IPython.zmq", "body": "Our test suites failed today with this traceback:\n\n```\nTraceback (most recent call last):\n  File \"/sp/lib/python/cpython-2.7/lib/python2.7/unittest/case.py\", line 356, in run\n    self.tearDown()\n  File \"/home/slave/jenkins/shiningpanda/jobs/04a2e2a5/virtualenvs/ff035a1d/lib/python2.7/site-packages/zmq/tests/__init__.py\", line 71, in tearDown\n    raise RuntimeError(\"context could not terminate, open sockets likely remain in test\")\nRuntimeError: context could not terminate, open sockets likely remain in test\n```\n\nhttps://jenkins.shiningpanda.com/ipython/job/ipython/82/testReport/IPython.zmq.tests.test_session/TestSession/test_args/\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU4NTE4OjhiZmNhMTAxNWYwNjE3ZTRmMWI1NjRmYjE2YzBkMTFhZTg1ZTNkYWY=", "commit_message": "Merge pull request #1656 from minrk/embed_kernel_tests\n\nensure kernels are cleaned up in embed_kernel tests\r\n\r\nuse contextmanager to ensure kernel manager sockets are closed at the end of tests, preventing delayed 'could not close sockets' errors in later tests.\r\n\r\ncloses #1653", "commit_timestamp": "2012-04-27T19:40:39Z", "files": ["IPython/zmq/tests/test_embed_kernel.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzoyZjg4NmFlMzhjYWQzOTBjYzljYTM3NmZmMmM0ZjQ0ZDE0ZDQyZTI4", "commit_message": "Merge pull request #1656 from minrk/embed_kernel_tests\n\nensure kernels are cleaned up in embed_kernel tests\r\n\r\nuse contextmanager to ensure kernel manager sockets are closed at the end of tests, preventing delayed 'could not close sockets' errors in later tests.\r\n\r\ncloses #1653", "commit_timestamp": "2012-04-27T19:40:39Z", "files": ["IPython/zmq/tests/test_embed_kernel.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjhiZmNhMTAxNWYwNjE3ZTRmMWI1NjRmYjE2YzBkMTFhZTg1ZTNkYWY=", "commit_message": "Merge pull request #1656 from minrk/embed_kernel_tests\n\nensure kernels are cleaned up in embed_kernel tests\r\n\r\nuse contextmanager to ensure kernel manager sockets are closed at the end of tests, preventing delayed 'could not close sockets' errors in later tests.\r\n\r\ncloses #1653", "commit_timestamp": "2012-04-27T19:40:39Z", "files": ["IPython/zmq/tests/test_embed_kernel.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjhiZmNhMTAxNWYwNjE3ZTRmMWI1NjRmYjE2YzBkMTFhZTg1ZTNkYWY=", "commit_message": "Merge pull request #1656 from minrk/embed_kernel_tests\n\nensure kernels are cleaned up in embed_kernel tests\r\n\r\nuse contextmanager to ensure kernel manager sockets are closed at the end of tests, preventing delayed 'could not close sockets' errors in later tests.\r\n\r\ncloses #1653", "commit_timestamp": "2012-04-27T19:40:39Z", "files": ["IPython/zmq/tests/test_embed_kernel.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzoyZjg4NmFlMzhjYWQzOTBjYzljYTM3NmZmMmM0ZjQ0ZDE0ZDQyZTI4", "commit_message": "Merge pull request #1656 from minrk/embed_kernel_tests\n\nensure kernels are cleaned up in embed_kernel tests\r\n\r\nuse contextmanager to ensure kernel manager sockets are closed at the end of tests, preventing delayed 'could not close sockets' errors in later tests.\r\n\r\ncloses #1653", "commit_timestamp": "2012-04-27T19:40:39Z", "files": ["IPython/zmq/tests/test_embed_kernel.py"]}], "labels": ["bug"], "created_at": "2012-04-24T09:50:27Z", "closed_at": "2012-04-27T19:40:41Z", "linked_pr_number": [1653], "method": ["label"]}
{"issue_number": 1647, "title": "Aborted parallel tasks can't be resubmitted", "body": "I'm using IPython from current Git and created some parallel tasks which are queued one after the other to one engine (HWM = 1).\nAfter that I abort one of them:\n\n```\nIn [12]: client.abort(\"2e8e2c96-1767-4c7e-b26c-498682fa4c85\")\n```\n\nNow the task looks as follows:\n\n```\nIn [13]: client.db_query({'msg_id' : \"2e8e2c96-1767-4c7e-b26c-498682fa4c85\" })\nOut[13]: \n[{u'client_uuid': u'0b138971-90a2-48c6-8f03-77a1a3434667',\n  u'completed': None,\n  u'content': {},\n  u'engine_uuid': u'7040bc13-0809-4fc6-bb68-d4344d6e5e61',\n  u'header': {u'after': [],\n   u'date': datetime.datetime(2012, 3, 1, 22, 41, 44, 342000),\n   u'follow': [],\n   u'msg_id': u'2e8e2c96-1767-4c7e-b26c-498682fa4c85',\n   u'msg_type': u'apply_request',\n   u'retries': 1000,\n   u'session': u'4f4fed1853c27b709f000000',\n   u'targets': [],\n   u'timeout': 0.0,\n   u'username': u'4f44271053c27b135e000004'},\n  u'msg_id': u'2e8e2c96-1767-4c7e-b26c-498682fa4c85',\n  u'pyerr': None,\n  u'pyin': None,\n  u'pyout': None,\n  u'queue': u'task',\n  u'received': None,\n  u'resubmitted': datetime.datetime(2012, 4, 23, 14, 54, 36, 86000),\n  u'result_content': None,\n  u'result_header': None,\n  u'started': None,\n  u'stderr': u'',\n  u'stdout': u'',\n  u'submitted': datetime.datetime(2012, 3, 1, 22, 41, 44, 342000)}]\n```\n\nWhen I now try to resubmit that aborted task I get the following exception:\n\n```\nIn [14]: client.resubmit(\"2e8e2c96-1767-4c7e-b26c-498682fa4c85\")\n---------------------------------------------------------------------------\nRemoteError                               Traceback (most recent call last)\n/Users/kaazoo/<ipython-input-15-bd12698bd336> in <module>()\n----> 1 client.resubmit(\"2e8e2c96-1767-4c7e-b26c-498682fa4c85\")\n\n/Users/kaazoo/<string> in resubmit(self, indices_or_msg_ids, subheader, block)\n\n/opt/local/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/IPython/parallel/client/client.pyc in spin_first(f, self, *args, **kwargs)\n     65     \"\"\"Call spin() to sync state prior to calling the method.\"\"\"\n     66     self.spin()\n---> 67     return f(self, *args, **kwargs)\n     68 \n     69 \n\n/opt/local/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/IPython/parallel/client/client.pyc in resubmit(self, indices_or_msg_ids, subheader, block)\n   1238         content = msg['content']\n   1239         if content['status'] != 'ok':\n-> 1240             raise self._unwrap_exception(content)\n   1241 \n   1242         ar = AsyncHubResult(self, msg_ids=theids)\n\nRemoteError: ValueError(Task u'2e8e2c96-1767-4c7e-b26c-498682fa4c85' appears to be inflight)\nTraceback (most recent call last):\n  File \"/opt/local/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/IPython/parallel/controller/hub.py\", line 1149, in resubmit_task\n    raise ValueError(\"Task %r appears to be inflight\" % msg_id)\nValueError: Task u'2e8e2c96-1767-4c7e-b26c-498682fa4c85' appears to be inflight\n```\n\nWhy is that task still inflight? It shouldn't be sitting on the engine anymore.\n\nBut it seems as if the engine still has that task:\n\n```\nIn [27]: client.queue_status(\"All\", True)\nOut[27]: \n{2: {u'completed': [u'3a09be07-00ff-4f5e-b1b9-6909c73a005e',\n   u'9f5ce31a-e97f-4aff-831a-c4f0b2ff2de4',\n   u'db9ea4d0-e861-4e2f-952d-1b53f75ffd54',\n   u'2368e382-f0d6-4677-b3a7-67194834a6a4',\n   u'0cc2593b-6189-44f0-b8c5-f9594d037121',\n   u'357b7c65-ac62-4b72-81d9-7ccf110c663c',\n   u'f8adf60a-73f0-4634-9dc0-5ea620bbbcae',\n   u'cf2e30b1-1a53-4d3f-83bf-56b182207bb5',\n   u'8843d70a-008f-4cb4-9836-01836bc0666a',\n   u'd78a02df-3e63-4cc3-86f5-32b52ff75cfb',\n   u'cad9d610-04a4-4cfc-90a2-9cf1e9c4819c',\n   u'65abf0fa-57ce-4615-9f40-9ba672650b26',\n   u'a41de711-8ad3-4876-979b-94627291b14c',\n   u'287d6068-585e-4d46-82f6-542e28e8abde',\n   u'e776bac6-90cd-4593-8fb0-a05eb4ecf2f8',\n   u'4e125e84-3cab-4e8f-a4b7-ac84fbdd46cc',\n   u'86753b71-c232-4a66-93ce-c71461937a32',\n   u'82b21f2a-7ce5-4dcb-b690-f570d96a546d',\n   u'7456404f-0f6a-4a67-85e9-04f4fe45ead5',\n   u'8545ec24-24be-4d3f-bf07-264c5b2a20aa',\n   u'4a418dc3-47bf-4554-b3b6-8f645580760e'],\n  u'queue': [],\n  u'tasks': [u'2e8e2c96-1767-4c7e-b26c-498682fa4c85']},\n u'unassigned': []}\n```\n\nAm I missing something?\nIs this correct behavior?\nHow can I get rid of inflight tasks without restarting the engine?\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU5NDQ2OjVjYzYwMmJlMDYxNDViMjlhNTMxNjY3NGQ2YjFmZTlkNjRlY2JlYzU=", "commit_message": "fix subheaders for execute_reply and aborted messages\n\nref: #1647", "commit_timestamp": "2012-05-13T22:09:38Z", "files": ["IPython/parallel/controller/hub.py", "IPython/zmq/ipkernel.py"]}, {"node_id": "MDY6Q29tbWl0NjU5NDQ2OjM1MzEyMTM0MDBhZTI3MTZhMGFlMjhlMmNhZTZkNjM5OGVlNzUyMmY=", "commit_message": "test resubmit of aborted tasks (#1647)", "commit_timestamp": "2012-05-13T22:09:38Z", "files": ["IPython/parallel/tests/test_client.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo3NzIwMjBiM2Q4OGE0OGJmNWIzY2UyMzA0Y2Y0NzMwYmNmY2UwYjM2", "commit_message": "fix subheaders for execute_reply and aborted messages\n\nref: #1647", "commit_timestamp": "2012-05-13T22:09:38Z", "files": ["IPython/parallel/controller/hub.py", "IPython/zmq/ipkernel.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo0OTAzOGRmY2I2ZDA4MWRmOTMxMWI5ZmIxMDY5MGE2ZjJhMjkyOTZh", "commit_message": "test resubmit of aborted tasks (#1647)", "commit_timestamp": "2012-05-13T22:09:38Z", "files": ["IPython/parallel/tests/test_client.py"]}], "labels": ["bug", "parallel"], "created_at": "2012-04-23T13:51:41Z", "closed_at": "2012-05-31T21:30:54Z", "method": ["label"]}
{"issue_number": 1636, "title": "Test_deepreload breaks pylab irunner tests", "body": "On master the two pylab_import_all tests are broken by the addition of test_deepreload. \nPylab_import_all still works as expected but the tests fail. This is tested on Ubuntu 11.10 and 12.04 using python 2.7 and the head of the mpl 1.1.x branch.\n\nIt results in the following error and an identical one for False. Note that the code works as expected when running \nwith irunner outside the testing env. Removing the test_deepreload.py file from the lib test dir also makes the pylab tests pass again. \n\n```\n======================================================================\nERROR: Verify that plot is available when pylab_import_all = True\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/local/lib/python2.7/dist-packages/IPython/testing/decorators.py\", line 228, in skipper_func\n    return f(*args, **kwargs)\n  File \"/usr/local/lib/python2.7/dist-packages/IPython/testing/decorators.py\", line 225, in skipper_func\n    if skip_val():\n  File \"/usr/local/lib/python2.7/dist-packages/IPython/lib/tests/test_irunner_pylab_magic.py\", line 21, in pylab_not_importable\n    import pylab\n  File \"/usr/local/lib/python2.7/dist-packages/pylab.py\", line 1, in <module>\n    from matplotlib.pylab import *\n  File \"/usr/local/lib/python2.7/dist-packages/matplotlib/pylab.py\", line 221, in <module>\n    from matplotlib import mpl  # pulls in most modules\n  File \"/usr/local/lib/python2.7/dist-packages/matplotlib/mpl.py\", line 1, in <module>\n    from matplotlib import artist\n  File \"/usr/local/lib/python2.7/dist-packages/matplotlib/artist.py\", line 6, in <module>\n    from transforms import Bbox, IdentityTransform, TransformedBbox, TransformedPath\n  File \"/usr/local/lib/python2.7/dist-packages/matplotlib/transforms.py\", line 45, in <module>\n    from path import Path\n  File \"/usr/local/lib/python2.7/dist-packages/matplotlib/path.py\", line 18, in <module>\n    class Path(object):\n  File \"/usr/local/lib/python2.7/dist-packages/matplotlib/path.py\", line 400, in Path\n    _unit_regular_polygons = WeakValueDictionary()\n  File \"/usr/lib/python2.7/weakref.py\", line 53, in __init__\n    UserDict.UserDict.__init__(self, *args, **kw)\nTypeError: unbound method __init__() must be called with UserDict instance as first argument (got WeakValueDictionary instance instead)\n```\n", "commits": [{"node_id": "MDY6Q29tbWl0MjkwOTI5MDo5YjVhYmUxNGFmNjE1YTVhYmRjZDc1Y2NmNjNlZmFkMDUxMWJmNGIy", "commit_message": "Exclude UserDict when deep reloading NumPy.\n\nThis prevents another test failure in IPython.lib.tests.test_irunner_pylab_magic::\n\n    Traceback (most recent call last):\n    ...\n      File \"/usr/lib/python2.7/weakref.py\", line 53, in __init__\n        UserDict.UserDict.__init__(self, *args, **kw)\n    TypeError: unbound method __init__() must be called with UserDict instance as first argument (got WeakValueDictionary instance instead)\n\nCloses #1636.", "commit_timestamp": "2012-04-23T01:08:53Z", "files": ["IPython/lib/tests/test_deepreload.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjliNWFiZTE0YWY2MTVhNWFiZGNkNzVjY2Y2M2VmYWQwNTExYmY0YjI=", "commit_message": "Exclude UserDict when deep reloading NumPy.\n\nThis prevents another test failure in IPython.lib.tests.test_irunner_pylab_magic::\n\n    Traceback (most recent call last):\n    ...\n      File \"/usr/lib/python2.7/weakref.py\", line 53, in __init__\n        UserDict.UserDict.__init__(self, *args, **kw)\n    TypeError: unbound method __init__() must be called with UserDict instance as first argument (got WeakValueDictionary instance instead)\n\nCloses #1636.", "commit_timestamp": "2012-04-23T01:08:53Z", "files": ["IPython/lib/tests/test_deepreload.py"]}, {"node_id": "MDY6Q29tbWl0MjA4MDg0MzplNTQ0YzZkZmI0OWJmNzJkYzA0MjI0YzE2MzhiNDk1ODg1ZmY3MzY3", "commit_message": "Merge pull request #1645 from bfroehle/test_deepreload\n\nExclude UserDict when deep reloading NumPy.\r\n\r\nCloses #1636.", "commit_timestamp": "2012-04-23T02:36:53Z", "files": ["IPython/lib/tests/test_deepreload.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo2MTJkM2I4YzcyOTMzZTgzYmI4NjE3NDJhZGVmZGZhYjI4NjY5MjE0", "commit_message": "Exclude UserDict when deep reloading NumPy.\n\nThis prevents another test failure in IPython.lib.tests.test_irunner_pylab_magic::\n\n    Traceback (most recent call last):\n    ...\n      File \"/usr/lib/python2.7/weakref.py\", line 53, in __init__\n        UserDict.UserDict.__init__(self, *args, **kw)\n    TypeError: unbound method __init__() must be called with UserDict instance as first argument (got WeakValueDictionary instance instead)\n\nCloses #1636.", "commit_timestamp": "2012-04-23T01:08:53Z", "files": ["IPython/lib/tests/test_deepreload.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzpmYjE3MzM1ZGFkZTFjYmQ3ODMyZmQ2ZDdjZDJmNjVhMzhlMTM3YzA1", "commit_message": "Merge pull request #1645 from bfroehle/test_deepreload\n\nExclude UserDict when deep reloading NumPy.\r\n\r\nCloses #1636.", "commit_timestamp": "2012-04-23T02:36:53Z", "files": ["IPython/lib/tests/test_deepreload.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmU1NDRjNmRmYjQ5YmY3MmRjMDQyMjRjMTYzOGI0OTU4ODVmZjczNjc=", "commit_message": "Merge pull request #1645 from bfroehle/test_deepreload\n\nExclude UserDict when deep reloading NumPy.\r\n\r\nCloses #1636.", "commit_timestamp": "2012-04-23T02:36:53Z", "files": ["IPython/lib/tests/test_deepreload.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmU1NDRjNmRmYjQ5YmY3MmRjMDQyMjRjMTYzOGI0OTU4ODVmZjczNjc=", "commit_message": "Merge pull request #1645 from bfroehle/test_deepreload\n\nExclude UserDict when deep reloading NumPy.\r\n\r\nCloses #1636.", "commit_timestamp": "2012-04-23T02:36:53Z", "files": ["IPython/lib/tests/test_deepreload.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzpmYjE3MzM1ZGFkZTFjYmQ3ODMyZmQ2ZDdjZDJmNjVhMzhlMTM3YzA1", "commit_message": "Merge pull request #1645 from bfroehle/test_deepreload\n\nExclude UserDict when deep reloading NumPy.\r\n\r\nCloses #1636.", "commit_timestamp": "2012-04-23T02:36:53Z", "files": ["IPython/lib/tests/test_deepreload.py"]}], "labels": ["bug", "testing"], "created_at": "2012-04-20T06:44:40Z", "closed_at": "2012-04-23T02:36:56Z", "linked_pr_number": [1636], "method": ["label", "regex"]}
{"issue_number": 1635, "title": "test_prun_quotes fails on Windows", "body": "Introduced by PR #1306, this test is failing on Windows, because `'\\t'` is being converted into `' '`.\n\nFails:\n\n```\n_ip.magic(\"prun -q x = '\\t'\")\nnt.assert_equal(_ip.user_ns['x'], '\\t')\n```\n\nSucceeds (raw-string):\n\n```\n_ip.magic(r\"prun -q x = '\\t'\")\nnt.assert_equal(_ip.user_ns['x'], '\\t')\n```\n\nI'm not yet sure if this is revealing yet another bug in our magic arg-parsing on Windows.\n\nI discovered this because it is included in 0.12.1, and this is the only failing test on my Windows VM.  I don't actually know what should be done here, but I'm fine making the raw_string fix for 0.12.1 at least.\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU4NTE4OjQ1M2NkNmI4ODI2NjlkYWZlNTcxMDIwNTViYWQ4YzQyMGMxN2Y4MGM=", "commit_message": "use raw-string in test_prun_quotes\n\nband-aid for #1635", "commit_timestamp": "2012-04-19T22:24:50Z", "files": ["IPython/core/tests/test_magic.py"]}], "labels": ["windows", "bug", "testing"], "created_at": "2012-04-19T21:57:49Z", "closed_at": "2012-06-20T20:53:11Z", "method": ["label", "regex"]}
{"issue_number": 1632, "title": "Win32 shell interactivity apparently broke qtconsole \"cd\" magic", "body": "PR #1424, Win32 shell interactivity, was accepted as not enhancing qtconsole, but was not thought to break it. It seems to have. This was reproduced on several different systems.  Located the breakage by bisection at 4953f2d\n\n@mwiebe, @minrk could you have a look?\n\nOn a Win7-64 native box, with no recent history of running \"ipython kernel\", the following commands immediately after qtconsole startup\n\n```\nls\ncd ..\n```\n\nreliably caused the following traceback, followed by general odd behavior, apparent corruption, until restart qtconsole.\n\n```\nTypeError                                 Traceback (most recent call last)\nc:\\Users\\jmarch\\<ipython-input-2-56af63bcfcf6> in <module>()\n----> 1 get_ipython().magic(u'cd ..')\n\nc:\\users\\jmarch\\ipython\\IPython\\core\\interactiveshell.pyc in magic(self, arg_s, next_input)\n   2034                 self._magic_locals = sys._getframe(1).f_locals\n   2035             with self.builtin_trap:\n-> 2036                 result = fn(magic_args)\n   2037             # Ensure we're not keeping object references around:\n   2038             self._magic_locals = {}\n\nc:\\users\\jmarch\\ipython\\IPython\\core\\magic.pyc in magic_cd(self, parameter_s)\n   2953             # for c:\\windows\\directory\\names\\\n   2954             parameter_s = re.sub(r'\\\\(?! )','/', parameter_s)\n-> 2955             opts,ps = self.parse_options(parameter_s,'qb',mode='string')\n   2956         # jump to previous\n   2957         if ps == '-':\n\nc:\\users\\jmarch\\ipython\\IPython\\core\\magic.pyc in parse_options(self, arg_str, opt_str, *long_opts, **kw)\n    279             # If the list of inputs only has 0 or 1 thing in it, there's no\n    280             # need to look for options\n--> 281             argv = arg_split(arg_str, posix, strict)\n    282             # Do regular option processing\n    283             try:\n\nc:\\users\\jmarch\\ipython\\IPython\\utils\\_process_win32.pyc in arg_split(commandline, posix, strict)\n    178         result_pointer = CommandLineToArgvW(py3compat.cast_unicode(commandline.lstrip()), ctypes.byref(argvn))\n    179         result_array_type = LPCWSTR * argvn.value\n--> 180         result = [arg for arg in result_array_type.from_address(result_pointer)]\n    181         retval = LocalFree(result_pointer)\n    182         return result\n\nTypeError: integer expected\n```\n\nAfter running \"ipython kernel\" to test this on a 2-process terminal, I was unable to again reproduce the problem on this system even in a simple qtconsole. Have not yet rebooted.\n\nEasiest short-term workaround may be to revert to previous behavior in _process_win32.system when running qtconsole?\n", "commits": [{"node_id": "MDY6Q29tbWl0NjcwOTU5OjMwYjY5MTIwMGEzNmY5MzFkZGIyZDlmY2UxYzU2MjE5YzUxMDNhMTU=", "commit_message": "Fixes gh-1632; minimal revert of gh-1424\nWin32 shell interactivity broke qtconsole cd magic", "commit_timestamp": "2012-04-26T01:52:46Z", "files": ["IPython/utils/_process_win32.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjZmNjFjYjBmN2M4ZjAyMmE1NWE0MWQyZjhkMTU5MDQ2NzMxMjkwZmU=", "commit_message": "Merge pull request #1902 from jdmarch/win32-shell-revert\n\nWorkaround fix for gh-1632, using a minimal revert of gh-1424.\r\n\r\nWin32 shell interactivity broke qtconsole cd magic, this restores it.\r\n\r\ncloses #1632", "commit_timestamp": "2012-06-11T04:14:56Z", "files": ["IPython/utils/_process_win32.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjZmNjFjYjBmN2M4ZjAyMmE1NWE0MWQyZjhkMTU5MDQ2NzMxMjkwZmU=", "commit_message": "Merge pull request #1902 from jdmarch/win32-shell-revert\n\nWorkaround fix for gh-1632, using a minimal revert of gh-1424.\r\n\r\nWin32 shell interactivity broke qtconsole cd magic, this restores it.\r\n\r\ncloses #1632", "commit_timestamp": "2012-06-11T04:14:56Z", "files": ["IPython/utils/_process_win32.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo0ZDBmNzMxMzIwZDA4ZjlkMWMzZjc1ZDc4MDZlN2M3NjE1NDMzYjY3", "commit_message": "Merge pull request #1902 from jdmarch/win32-shell-revert\n\nWorkaround fix for gh-1632, using a minimal revert of gh-1424.\r\n\r\nWin32 shell interactivity broke qtconsole cd magic, this restores it.\r\n\r\ncloses #1632", "commit_timestamp": "2012-06-11T04:14:56Z", "files": ["IPython/utils/_process_win32.py"]}], "labels": ["important", "qtconsole", "windows", "bug", "zmq-console"], "created_at": "2012-04-19T17:41:13Z", "closed_at": "2012-06-11T04:14:57Z", "linked_pr_number": [1632], "method": ["label"]}
{"issue_number": 1628, "title": "error: QApplication already exists in TestKillRing", "body": "I'm seeing:\n\n```\n$> iptest -vx IPython.frontend.qt.console.tests\nAre backspace characters processed correctly? ... ok\nAre beep characters processed correctly? ... ok\nAre carriage return characters processed correctly? ... ok\ntransform CRLF to LF ... ok\nDo control sequences for clearing the console work? ... ok\nDo basic controls sequences for colors work? ... ok\nDo xterm-specific control sequences for colors work? ... ok\nAre CR and BS characters processed correctly in combination? ... ok\nAre formfeed characters processed correctly? ... ok\nDo control sequences for scrolling the buffer work? ... ok\nDoes the CompletionLexer work for C/C++? ... ok\nDoes the CompletionLexer work for Python? ... ok\nAre special characters displayed correctly? ... ok\nERROR\n\n======================================================================\nERROR: test suite for <class 'IPython.frontend.qt.console.tests.test_kill_ring.TestKillRing'>\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/Users/minrk/Library/Python/2.7/lib/python/site-packages/nose/suite.py\", line 208, in run\n    self.setUp()\n  File \"/Users/minrk/Library/Python/2.7/lib/python/site-packages/nose/suite.py\", line 291, in setUp\n    self.setupContext(ancestor)\n  File \"/Users/minrk/Library/Python/2.7/lib/python/site-packages/nose/suite.py\", line 314, in setupContext\n    try_run(context, names)\n  File \"/Users/minrk/Library/Python/2.7/lib/python/site-packages/nose/util.py\", line 478, in try_run\n    return func()\n  File \"/Users/minrk/dev/ip/mine/IPython/frontend/qt/console/tests/test_kill_ring.py\", line 17, in setUpClass\n    cls._app = QtGui.QApplication([])\nRuntimeError: A QApplication instance already exists.\n\n----------------------------------------------------------------------\nRan 13 tests in 1.690s\n\nFAILED (errors=1)\n```\n\n``` python\nPySide.__version__ = '1.1.0'\nPySide.QtCore.__version__ = '4.8.1'\n```\n\nboth from Nokia binaries\n\nOSX 10.7.3, System Python 2.7.1, IPython master, etc.\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU4NTE4OmUzZTcxMzQ2YmJiMmFlODU3MjhiMmFiNjBiODFmN2ZmM2FlODE0YzA=", "commit_message": "TST: QApplication doesn't quit early enough with PySide.\n\nFixes #1628.  This commits adds a check in tests, to see if there's\nalready a QApplication and use it, instead of creating a new one each\ntime.", "commit_timestamp": "2012-04-19T04:55:06Z", "files": ["IPython/frontend/qt/console/tests/test_console_widget.py", "IPython/frontend/qt/console/tests/test_kill_ring.py"]}, {"node_id": "MDY6Q29tbWl0MTIzNjAwMzo5ZTQ0NzliNmZkYTMwMWQzNzk0NTYzNTcxZTE2MTE2MDU1NGNiYjI1", "commit_message": "Merge pull request #1631 from punchagan/qapplication-exists-test-error\n\nTST: QApplication doesn't quit early enough with PySide\r\n\r\nIn both tests which create a QApplication, first check whether one already exists, and if so use it. This is an issue with PySide, which unlike PyQt does not delete the QApplication when expected.\r\n\r\nCloses #1628", "commit_timestamp": "2012-04-19T18:56:42Z", "files": ["IPython/frontend/qt/console/tests/test_console_widget.py", "IPython/frontend/qt/console/tests/test_kill_ring.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzpkZmQxMmJhYzE0ODg0NGQ4ZWExYTdlZTYyYmVkNjUxMjMxMjY4NjQ3", "commit_message": "TST: QApplication doesn't quit early enough with PySide.\n\nFixes #1628.  This commits adds a check in tests, to see if there's\nalready a QApplication and use it, instead of creating a new one each\ntime.", "commit_timestamp": "2012-04-19T04:55:06Z", "files": ["IPython/frontend/qt/console/tests/test_console_widget.py", "IPython/frontend/qt/console/tests/test_kill_ring.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzpiYzBiOTZlNzBkNzgxOTU5YzQwY2M5NGIwOTM2OTM4NGIxMTFkN2Q0", "commit_message": "Merge pull request #1631 from punchagan/qapplication-exists-test-error\n\nTST: QApplication doesn't quit early enough with PySide\r\n\r\nIn both tests which create a QApplication, first check whether one already exists, and if so use it. This is an issue with PySide, which unlike PyQt does not delete the QApplication when expected.\r\n\r\nCloses #1628", "commit_timestamp": "2012-04-19T18:56:42Z", "files": ["IPython/frontend/qt/console/tests/test_console_widget.py", "IPython/frontend/qt/console/tests/test_kill_ring.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjllNDQ3OWI2ZmRhMzAxZDM3OTQ1NjM1NzFlMTYxMTYwNTU0Y2JiMjU=", "commit_message": "Merge pull request #1631 from punchagan/qapplication-exists-test-error\n\nTST: QApplication doesn't quit early enough with PySide\r\n\r\nIn both tests which create a QApplication, first check whether one already exists, and if so use it. This is an issue with PySide, which unlike PyQt does not delete the QApplication when expected.\r\n\r\nCloses #1628", "commit_timestamp": "2012-04-19T18:56:42Z", "files": ["IPython/frontend/qt/console/tests/test_console_widget.py", "IPython/frontend/qt/console/tests/test_kill_ring.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjllNDQ3OWI2ZmRhMzAxZDM3OTQ1NjM1NzFlMTYxMTYwNTU0Y2JiMjU=", "commit_message": "Merge pull request #1631 from punchagan/qapplication-exists-test-error\n\nTST: QApplication doesn't quit early enough with PySide\r\n\r\nIn both tests which create a QApplication, first check whether one already exists, and if so use it. This is an issue with PySide, which unlike PyQt does not delete the QApplication when expected.\r\n\r\nCloses #1628", "commit_timestamp": "2012-04-19T18:56:42Z", "files": ["IPython/frontend/qt/console/tests/test_console_widget.py", "IPython/frontend/qt/console/tests/test_kill_ring.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzpiYzBiOTZlNzBkNzgxOTU5YzQwY2M5NGIwOTM2OTM4NGIxMTFkN2Q0", "commit_message": "Merge pull request #1631 from punchagan/qapplication-exists-test-error\n\nTST: QApplication doesn't quit early enough with PySide\r\n\r\nIn both tests which create a QApplication, first check whether one already exists, and if so use it. This is an issue with PySide, which unlike PyQt does not delete the QApplication when expected.\r\n\r\nCloses #1628", "commit_timestamp": "2012-04-19T18:56:42Z", "files": ["IPython/frontend/qt/console/tests/test_console_widget.py", "IPython/frontend/qt/console/tests/test_kill_ring.py"]}], "labels": ["qtconsole", "bug", "testing"], "created_at": "2012-04-18T23:10:14Z", "closed_at": "2012-04-19T18:56:44Z", "linked_pr_number": [1628], "method": ["label"]}
{"issue_number": 1622, "title": "deepreload fails on Python 3", "body": "Verbose traceback (including variables) is available here: https://gist.github.com/2413637\n\nIt looks like there's a couple of issues. First,  `imp.find_module('B')` seems to be trying to import other modules, because the next visible stack frame is the `__import__` hook being called for the `io` module. We may have to replace the original `__import__` hook while we call that.\n\nSecondly, it seems to hit a bump with the `sys.modules` modification in `os`. `os` imports `path` from elsewhere, and adds it to `sys.modules` as `'os.path'`.\n", "commits": [{"node_id": "MDY6Q29tbWl0MTIzNjAwMzo3NGY1ZGIzMzQzNGEwNjRmMWQ2NTA3MGEzN2ZhOTY4NGQ1Y2I1MDNl", "commit_message": "Fix deepreload on Python 3.\n\nCloses gh-1622", "commit_timestamp": "2012-04-18T18:47:26Z", "files": ["IPython/lib/deepreload.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4Ojc0ZjVkYjMzNDM0YTA2NGYxZDY1MDcwYTM3ZmE5Njg0ZDVjYjUwM2U=", "commit_message": "Fix deepreload on Python 3.\n\nCloses gh-1622", "commit_timestamp": "2012-04-18T18:47:26Z", "files": ["IPython/lib/deepreload.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjBlYjJhZTk2MjBhMDNlMzI5ZGRhOTBhNDZhZWNjMDJlNTEyYjk0OGQ=", "commit_message": "Merge pull request #1625 from takluyver/i1622\n\nFix deepreload on Python 3.\r\n\r\nAs described in #1622, it seems that `imp.find_module()` on Python 3.2 imports other modules, like `io`, while running. We don't want deepreload to catch those, so this restores the original import hook for `find_module`.\r\n\r\nIt's not terribly neat, but I don't currently see a better way of doing it. Ideally, we'd just delay installing our `__import__` until after `find_module` had run, but our implementation of `__import__` can itself call `find_module`, so this little dance seems to be necessary.\r\n\r\nCloses gh-1622.", "commit_timestamp": "2012-04-18T20:04:31Z", "files": ["IPython/lib/deepreload.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzoyYzM1ZjRlMjJkY2YxYmI3YTM2OTJhYzEzNmJjN2M0YmVlNmFlNzdm", "commit_message": "Fix deepreload on Python 3.\n\nCloses gh-1622", "commit_timestamp": "2012-04-18T18:47:26Z", "files": ["IPython/lib/deepreload.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo0YWRiMDRkNjI4NjgyN2MxZWZhYzlkZGFlMzQ3MjM0M2RiZDEyNzVm", "commit_message": "Merge pull request #1625 from takluyver/i1622\n\nFix deepreload on Python 3.\r\n\r\nAs described in #1622, it seems that `imp.find_module()` on Python 3.2 imports other modules, like `io`, while running. We don't want deepreload to catch those, so this restores the original import hook for `find_module`.\r\n\r\nIt's not terribly neat, but I don't currently see a better way of doing it. Ideally, we'd just delay installing our `__import__` until after `find_module` had run, but our implementation of `__import__` can itself call `find_module`, so this little dance seems to be necessary.\r\n\r\nCloses gh-1622.", "commit_timestamp": "2012-04-18T20:04:31Z", "files": ["IPython/lib/deepreload.py"]}], "labels": ["bug"], "created_at": "2012-04-18T13:50:03Z", "closed_at": "2012-04-18T20:04:32Z", "method": ["label", "regex"]}
{"issue_number": 1619, "title": "pyin messages should have execution_count", "body": "@ivanov keeps bugging me about this one but never opens an Issue for it when I ask, so I'll just assign it to him ;)\n\nIt does hightly the issue that has been raised in the past that our message spec may want to be versioned somehow, and folding that versioning into the spec itself (presumably as a field in the header).\n", "commits": [{"node_id": "MDY6Q29tbWl0NzUzNzY4OjAyY2Q1MzhhYjdmYWViZmNlMTBjZDViMzZkMjZiYzAyOTViNWM1YWY=", "commit_message": "include execution_count in pyin msgs, closes #1619", "commit_timestamp": "2012-04-18T00:56:41Z", "files": ["IPython/zmq/ipkernel.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjAyY2Q1MzhhYjdmYWViZmNlMTBjZDViMzZkMjZiYzAyOTViNWM1YWY=", "commit_message": "include execution_count in pyin msgs, closes #1619", "commit_timestamp": "2012-04-18T00:56:41Z", "files": ["IPython/zmq/ipkernel.py"]}, {"node_id": "MDY6Q29tbWl0NjU5NDQ2Ojc5ZDdiMWNhZDVmZDllODA5OTEwNjQ5Y2M4YjY4ZmJmYWQ2NTYzNjQ=", "commit_message": "Merge pull request #1620 from ivanov/pyin-execution-count\n\nSet the `execution_count` field for pyin messages.\r\n\r\nCloses #1619.", "commit_timestamp": "2012-04-18T19:53:18Z", "files": ["IPython/zmq/ipkernel.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzpkZGNmMzkzZjhmZTIzM2U5Njg3YTcxMTkyZTQzYTUzYWFkOWQwMzFh", "commit_message": "include execution_count in pyin msgs, closes #1619", "commit_timestamp": "2012-04-18T00:56:41Z", "files": ["IPython/zmq/ipkernel.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo2MzMxNDA4ZDc2NjMzNzExMTlkMTMwNDIwMjM4NTI5MjY2NDg5NjAy", "commit_message": "Merge pull request #1620 from ivanov/pyin-execution-count\n\nSet the `execution_count` field for pyin messages.\r\n\r\nCloses #1619.", "commit_timestamp": "2012-04-18T19:53:18Z", "files": ["IPython/zmq/ipkernel.py"]}], "labels": [], "created_at": "2012-04-17T23:31:35Z", "closed_at": "2012-04-18T19:53:19Z", "method": ["regex"]}
{"issue_number": 1601, "title": "Security file is not removed after shutdown by Ctrl+C or kill -INT", "body": "I am using IPython 0.12 (Ubuntu 11.10, Python 2.7.2+).\nThis is how to reproduce. I just open one new notebook after starting the server.\n\n```\n% ipython profile create test\n[ProfileCreate] Generating default config file: u'/home/takafumi/.config/ipython/p\nrofile_test/ipython_config.py'\n[ProfileCreate] Generating default config file: u'/home/takafumi/.config/ipython/p\nrofile_test/ipython_qtconsole_config.py'\n[ProfileCreate] Generating default config file: u'/home/takafumi/.config/ipython/p\nrofile_test/ipython_notebook_config.py'\n% ipython notebook --profile=test\n[NotebookApp] Using existing profile dir: u'/home/takafumi/.config/ipython/profile_test'\n[NotebookApp] The IPython Notebook is running at: http://127.0.0.1:8888\n[NotebookApp] Use Control-C to stop this server and shut down all kernels.\nCreated new window in existing browser session.\n[NotebookApp] Using MathJax from CDN\n[NotebookApp] Kernel started: 5946f2c5-4a2f-434f-8962-ef379d7969a0\n[NotebookApp] Connecting to: tcp://127.0.0.1:42572\n[NotebookApp] Connecting to: tcp://127.0.0.1:39724\n[NotebookApp] Connecting to: tcp://127.0.0.1:54142\n[IPKernelApp] To connect another client to this kernel, use:\n[IPKernelApp] --existing kernel-5946f2c5-4a2f-434f-8962-ef379d7969a0.json --profile test\n^C\n% ls ~/.config/ipython/profile_test/security/\nkernel-5946f2c5-4a2f-434f-8962-ef379d7969a0.json\n```\n\nBTW, is it safe to do `rm ~/.config/ipython/profile_*/security/*` when there is no IPython instance running?\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU4NzYwOjRmOWIyMzQ4ZjIxZDEyODFiYzg3MDAxOTQ2YmUxNGRhMWI0MDk3MDk=", "commit_message": "Merge pull request #1609 from minrk/sigterm\n\nexit notebook cleanly on SIGINT, SIGTERM, and add a safety (text) dialog to ask for exit confirmation.  This prevents an accidental Ctrl-C in the wrong window from destroying a user's potentially large set of notebooks that could have taken a long time to create.\r\n\r\nCloses #1601", "commit_timestamp": "2012-04-16T19:32:18Z", "files": ["IPython/frontend/html/notebook/notebookapp.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzoxZTdiOWQ3Zjk3YzdjNGFlOTIzNWJhNWI0ODgyYmUzMmEwMTBmZjAy", "commit_message": "Merge pull request #1609 from minrk/sigterm\n\nexit notebook cleanly on SIGINT, SIGTERM, and add a safety (text) dialog to ask for exit confirmation.  This prevents an accidental Ctrl-C in the wrong window from destroying a user's potentially large set of notebooks that could have taken a long time to create.\r\n\r\nCloses #1601", "commit_timestamp": "2012-04-16T19:32:18Z", "files": ["IPython/frontend/html/notebook/notebookapp.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjRmOWIyMzQ4ZjIxZDEyODFiYzg3MDAxOTQ2YmUxNGRhMWI0MDk3MDk=", "commit_message": "Merge pull request #1609 from minrk/sigterm\n\nexit notebook cleanly on SIGINT, SIGTERM, and add a safety (text) dialog to ask for exit confirmation.  This prevents an accidental Ctrl-C in the wrong window from destroying a user's potentially large set of notebooks that could have taken a long time to create.\r\n\r\nCloses #1601", "commit_timestamp": "2012-04-16T19:32:18Z", "files": ["IPython/frontend/html/notebook/notebookapp.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjRmOWIyMzQ4ZjIxZDEyODFiYzg3MDAxOTQ2YmUxNGRhMWI0MDk3MDk=", "commit_message": "Merge pull request #1609 from minrk/sigterm\n\nexit notebook cleanly on SIGINT, SIGTERM, and add a safety (text) dialog to ask for exit confirmation.  This prevents an accidental Ctrl-C in the wrong window from destroying a user's potentially large set of notebooks that could have taken a long time to create.\r\n\r\nCloses #1601", "commit_timestamp": "2012-04-16T19:32:18Z", "files": ["IPython/frontend/html/notebook/notebookapp.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzoxZTdiOWQ3Zjk3YzdjNGFlOTIzNWJhNWI0ODgyYmUzMmEwMTBmZjAy", "commit_message": "Merge pull request #1609 from minrk/sigterm\n\nexit notebook cleanly on SIGINT, SIGTERM, and add a safety (text) dialog to ask for exit confirmation.  This prevents an accidental Ctrl-C in the wrong window from destroying a user's potentially large set of notebooks that could have taken a long time to create.\r\n\r\nCloses #1601", "commit_timestamp": "2012-04-16T19:32:18Z", "files": ["IPython/frontend/html/notebook/notebookapp.py"]}], "labels": [], "created_at": "2012-04-15T11:14:56Z", "closed_at": "2012-04-15T19:19:20Z", "linked_pr_number": [1601], "method": ["regex"]}
{"issue_number": 1591, "title": "Keying 'q' doesn't quit the interactive help in Wins7", "body": "Hi,\n\nWhen I use ? or %magic where there'll be a list of help text displayed, pressing the 'q' to quit the help text doesn't work. It will continue with the next section of help text of iPyhton3 in Wins7.\n", "commits": [{"node_id": "MDY6Q29tbWl0MTIzNjAwMzo2MDcyMzI3ZGM1ZGMzYzJkN2EwNDU3MTJhMjFkN2VkNzNiOWE1NDU2", "commit_message": "Use msvcrt.getwch() for Windows pager.\n\nCloses gh-1591", "commit_timestamp": "2013-08-21T17:55:36Z", "files": ["IPython/core/page.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjYwNzIzMjdkYzVkYzNjMmQ3YTA0NTcxMmEyMWQ3ZWQ3M2I5YTU0NTY=", "commit_message": "Use msvcrt.getwch() for Windows pager.\n\nCloses gh-1591", "commit_timestamp": "2013-08-21T17:55:36Z", "files": ["IPython/core/page.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzpkODY3NGE0NWU1OWQ1M2RiMTdjMDBjYjBhMTRlYTYyN2JkMjg4NTEz", "commit_message": "Use msvcrt.getwch() for Windows pager.\n\nCloses gh-1591", "commit_timestamp": "2013-08-21T17:55:36Z", "files": ["IPython/core/page.py"]}], "labels": ["windows", "bug"], "created_at": "2012-04-13T05:50:54Z", "closed_at": "2013-08-21T19:17:02Z", "method": ["label", "regex"]}
{"issue_number": 1589, "title": "Test failures and docs don't build on Mac OS X Lion", "body": "I have installed the latest ipython from github (f30a572977be51a1b928788540e323ab9bc9c58f) via `python setup.py install --user`.\n\nThere are a few test failures and the docs don't build:\nhttp://dl.dropbox.com/u/4923986/bug_reports/ipython-tests.log\nhttp://dl.dropbox.com/u/4923986/bug_reports/ipython-docs.log\n\nLet me know if I should create separate tickets for some of these issues. It's hard for me to tell which are known and which are new. I know that the docs v3 problem wasn't there a few weeks ago. \n\nNote that I am using iterm2 (http://www.iterm2.com/, Build 1.0.0.20110821) instead of the default Apple terminal, in case it matters.\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU5NDQ2OmMyNjJmNjdjYTMxMWQ2MThiMzVmZWY1YzEyMjJkYmI5ZTRjZTUwODk=", "commit_message": "match encoding in rlhistory tests\n\naddresses mismatched comparison when locale cannot handle unicode (e.g. ascii)\n\ncloses #1589", "commit_timestamp": "2012-06-21T04:46:23Z", "files": ["IPython/frontend/terminal/tests/test_interactivshell.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmMyNjJmNjdjYTMxMWQ2MThiMzVmZWY1YzEyMjJkYmI5ZTRjZTUwODk=", "commit_message": "match encoding in rlhistory tests\n\naddresses mismatched comparison when locale cannot handle unicode (e.g. ascii)\n\ncloses #1589", "commit_timestamp": "2012-06-21T04:46:23Z", "files": ["IPython/frontend/terminal/tests/test_interactivshell.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjNjMmNlMjBkYzgzOTAzNjA1ZmM2OWY0MWQ2ODhlNjdiOTcyY2E4Yjg=", "commit_message": "Merge pull request #1996 from minrk/ascii\n\nfrontend test tweaks for ASCII locale\r\n\r\nadd some encoding to readline history tests that would fail in casting locales (ascii), so that the expected output really matches what should happen.\r\n\r\nalso relaxes a few timeouts in another test, which were seen to fail while poking around, to avoid spurious failures.\r\n\r\ncloses #1589", "commit_timestamp": "2012-06-24T04:16:26Z", "files": ["IPython/core/tests/test_history.py", "IPython/frontend/terminal/console/tests/test_console.py", "IPython/frontend/terminal/tests/test_interactivshell.py", "IPython/utils/sysinfo.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjNjMmNlMjBkYzgzOTAzNjA1ZmM2OWY0MWQ2ODhlNjdiOTcyY2E4Yjg=", "commit_message": "Merge pull request #1996 from minrk/ascii\n\nfrontend test tweaks for ASCII locale\r\n\r\nadd some encoding to readline history tests that would fail in casting locales (ascii), so that the expected output really matches what should happen.\r\n\r\nalso relaxes a few timeouts in another test, which were seen to fail while poking around, to avoid spurious failures.\r\n\r\ncloses #1589", "commit_timestamp": "2012-06-24T04:16:26Z", "files": ["IPython/core/tests/test_history.py", "IPython/frontend/terminal/console/tests/test_console.py", "IPython/frontend/terminal/tests/test_interactivshell.py", "IPython/utils/sysinfo.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzowYjBmM2MwNmQ3YjY3ZDk1OTU5NjE2MWZkNDI4OWMxMTljMmE0NDM3", "commit_message": "Merge pull request #1996 from minrk/ascii\n\nfrontend test tweaks for ASCII locale\r\n\r\nadd some encoding to readline history tests that would fail in casting locales (ascii), so that the expected output really matches what should happen.\r\n\r\nalso relaxes a few timeouts in another test, which were seen to fail while poking around, to avoid spurious failures.\r\n\r\ncloses #1589", "commit_timestamp": "2012-06-24T04:16:26Z", "files": ["IPython/core/tests/test_history.py", "IPython/frontend/terminal/console/tests/test_console.py", "IPython/frontend/terminal/tests/test_interactivshell.py", "IPython/utils/sysinfo.py"]}], "labels": ["osx", "testing", "needs-info"], "created_at": "2012-04-13T00:01:04Z", "closed_at": "2012-06-24T04:16:29Z", "linked_pr_number": [1589], "method": ["regex"]}
{"issue_number": 1572, "title": "pyreadline version dependency not correctly checked", "body": "Installing IPython on windows with `python setup.py install` and pyreadline 1.5:\n\n<pre>\nC:\\code\\dev_trees\\ipython [main-master]> ipython\nPython 2.6.5 (r265:79096, Mar 19 2010, 21:48:26) [MSC v.1500 32 bit (Intel)]\nType \"copyright\", \"credits\" or \"license\" for more information.\n\nIPython 0.13.dev -- An enhanced Interactive Python.\n?         -> Introduction and overview of IPython's features.\n%quickref -> Quick reference.\nhelp      -> Python's own help system.\nobject?   -> Details about 'object', use 'object??' for extra details.\nTraceback (most recent call last):\n  File \"C:\\Python26\\Scripts\\ipython-script.py\", line 9, in <module>\n    load_entry_point('ipython==0.13.dev', 'console_scripts', 'ipython')()\n  File \"C:\\Python26\\lib\\site-packages\\ipython-0.13.dev-py2.6.egg\\IPython\\frontend\\terminal\\ipapp.py\", line 409, in launch_new_instance\n    app.start()\n  File \"C:\\Python26\\lib\\site-packages\\ipython-0.13.dev-py2.6.egg\\IPython\\frontend\\terminal\\ipapp.py\", line 383, in start\n    self.shell.mainloop()\n  File \"C:\\Python26\\lib\\site-packages\\ipython-0.13.dev-py2.6.egg\\IPython\\frontend\\terminal\\interactiveshell.py\", line 290, in mainloop\n    self.interact(display_banner=display_banner)\n  File \"C:\\Python26\\lib\\site-packages\\ipython-0.13.dev-py2.6.egg\\IPython\\frontend\\terminal\\interactiveshell.py\", line 346, in interact\n    hlen_b4_cell = self.readline.get_current_history_length()\nAttributeError: 'module' object has no attribute 'get_current_history_length'\n</pre>\n\n\nI see that `setup.py` `requires` pyreadline >= 1.7.1, iff `setupext.check_for_readline()` returns False.  However, in my case, it returns True because the function does not check the version, and I have version 1.5.   I wasn't sure how best to put the version dependency into the function.\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU5NDQ2OmVlMjg2ODljMWVhY2YxYTJmNzBkYWEwYmI5YTU1YWMwMGIyNWE3N2U=", "commit_message": "add version checking to pyreadline import test\n\ncloses #1572", "commit_timestamp": "2012-06-13T02:41:20Z", "files": ["setupext/setupext.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmVlMjg2ODljMWVhY2YxYTJmNzBkYWEwYmI5YTU1YWMwMGIyNWE3N2U=", "commit_message": "add version checking to pyreadline import test\n\ncloses #1572", "commit_timestamp": "2012-06-13T02:41:20Z", "files": ["setupext/setupext.py"]}, {"node_id": "MDY6Q29tbWl0NjU5NDQ2OmZjN2IyYTRmOGRjMmM5YWQzOWU0YWU4OTAyNTNlMmRjNzgwZWEwZjA=", "commit_message": "Merge pull request #1935 from minrk/pyreadline\n\nAdd version checking to pyreadline import test, as we depend on specific pyreadline versions.\r\n\r\ncloses #1572", "commit_timestamp": "2012-06-13T07:09:39Z", "files": ["setupext/setupext.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo3NzU3ZTM4NGUwZTczOWJmOWQwNTgzYjgxZDk0YTRjOTBkZGU5NzEy", "commit_message": "add version checking to pyreadline import test\n\ncloses #1572", "commit_timestamp": "2012-06-13T02:41:20Z", "files": ["setupext/setupext.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo2MzAwYzZlNDFmYjQ3ZjAzN2EwODYzYTc0N2UxZmYxNmYxOGJjYzQ5", "commit_message": "Merge pull request #1935 from minrk/pyreadline\n\nAdd version checking to pyreadline import test, as we depend on specific pyreadline versions.\r\n\r\ncloses #1572", "commit_timestamp": "2012-06-13T07:09:39Z", "files": ["setupext/setupext.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmZjN2IyYTRmOGRjMmM5YWQzOWU0YWU4OTAyNTNlMmRjNzgwZWEwZjA=", "commit_message": "Merge pull request #1935 from minrk/pyreadline\n\nAdd version checking to pyreadline import test, as we depend on specific pyreadline versions.\r\n\r\ncloses #1572", "commit_timestamp": "2012-06-13T07:09:39Z", "files": ["setupext/setupext.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmZjN2IyYTRmOGRjMmM5YWQzOWU0YWU4OTAyNTNlMmRjNzgwZWEwZjA=", "commit_message": "Merge pull request #1935 from minrk/pyreadline\n\nAdd version checking to pyreadline import test, as we depend on specific pyreadline versions.\r\n\r\ncloses #1572", "commit_timestamp": "2012-06-13T07:09:39Z", "files": ["setupext/setupext.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo2MzAwYzZlNDFmYjQ3ZjAzN2EwODYzYTc0N2UxZmYxNmYxOGJjYzQ5", "commit_message": "Merge pull request #1935 from minrk/pyreadline\n\nAdd version checking to pyreadline import test, as we depend on specific pyreadline versions.\r\n\r\ncloses #1572", "commit_timestamp": "2012-06-13T07:09:39Z", "files": ["setupext/setupext.py"]}], "labels": ["windows", "bug"], "created_at": "2012-04-11T22:16:54Z", "closed_at": "2012-06-13T07:09:56Z", "linked_pr_number": [1572], "method": ["label"]}
{"issue_number": 1561, "title": "Qtconsole - nonstandard \\a and \\b", "body": "Issue #1089 reported lack of support for \\b (backspace) and \\r (return)\nPR #629 purported to fix these, and did fix \\r, but it mapped \\b to bell rather than to backspace.\nThe standard mapping for bell is \\a.\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU4NTE4OjkyNDk1NzZkMjdmNzZlMWE3NDBiMmY5MDdjMTZmNTBlNGNhYTMwOGM=", "commit_message": "BUG: qtconsole -- non-standard handling of \\a and \\b. [Fixes #1561]", "commit_timestamp": "2012-04-14T02:16:24Z", "files": ["IPython/frontend/qt/console/ansi_code_processor.py", "IPython/frontend/qt/console/console_widget.py", "IPython/frontend/qt/console/tests/test_ansi_code_processor.py"]}, {"node_id": "MDY6Q29tbWl0NjU5NDQ2OmVkNGZlOTA1NjlmMGI3ODkwZjI3YTFiNzExOWQyNDAzNjU3ZGJmNDE=", "commit_message": "Merge pull request #1569 from punchagan/support-backspace-and-beep-sequences\n\nBUG: qtconsole -- non-standard handling of \\a and \\b. This makes the behavior of the Qt console match that of an ANSI terminal with regards to \\a and \\b.\r\n\r\nFixes #1561.", "commit_timestamp": "2012-04-14T03:29:58Z", "files": ["IPython/frontend/qt/console/ansi_code_processor.py", "IPython/frontend/qt/console/console_widget.py", "IPython/frontend/qt/console/tests/test_ansi_code_processor.py", "IPython/frontend/qt/console/tests/test_console_widget.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo0Y2IyNGQ4NjIzZTdhNGYwM2ZjNDcyOWQ1YjhmYTYwYmJlN2JiNGQ2", "commit_message": "BUG: qtconsole -- non-standard handling of \\a and \\b. [Fixes #1561]", "commit_timestamp": "2012-04-14T02:16:24Z", "files": ["IPython/frontend/qt/console/ansi_code_processor.py", "IPython/frontend/qt/console/console_widget.py", "IPython/frontend/qt/console/tests/test_ansi_code_processor.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzpkNTk3YzQ0MjE2ZTYxNDNkMzQyMTA1YjM1NmNhNGFlYzhiM2I1NTg1", "commit_message": "Merge pull request #1569 from punchagan/support-backspace-and-beep-sequences\n\nBUG: qtconsole -- non-standard handling of \\a and \\b. This makes the behavior of the Qt console match that of an ANSI terminal with regards to \\a and \\b.\r\n\r\nFixes #1561.", "commit_timestamp": "2012-04-14T03:29:58Z", "files": ["IPython/frontend/qt/console/ansi_code_processor.py", "IPython/frontend/qt/console/console_widget.py", "IPython/frontend/qt/console/tests/test_ansi_code_processor.py", "IPython/frontend/qt/console/tests/test_console_widget.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmVkNGZlOTA1NjlmMGI3ODkwZjI3YTFiNzExOWQyNDAzNjU3ZGJmNDE=", "commit_message": "Merge pull request #1569 from punchagan/support-backspace-and-beep-sequences\n\nBUG: qtconsole -- non-standard handling of \\a and \\b. This makes the behavior of the Qt console match that of an ANSI terminal with regards to \\a and \\b.\r\n\r\nFixes #1561.", "commit_timestamp": "2012-04-14T03:29:58Z", "files": ["IPython/frontend/qt/console/ansi_code_processor.py", "IPython/frontend/qt/console/console_widget.py", "IPython/frontend/qt/console/tests/test_ansi_code_processor.py", "IPython/frontend/qt/console/tests/test_console_widget.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmVkNGZlOTA1NjlmMGI3ODkwZjI3YTFiNzExOWQyNDAzNjU3ZGJmNDE=", "commit_message": "Merge pull request #1569 from punchagan/support-backspace-and-beep-sequences\n\nBUG: qtconsole -- non-standard handling of \\a and \\b. This makes the behavior of the Qt console match that of an ANSI terminal with regards to \\a and \\b.\r\n\r\nFixes #1561.", "commit_timestamp": "2012-04-14T03:29:58Z", "files": ["IPython/frontend/qt/console/ansi_code_processor.py", "IPython/frontend/qt/console/console_widget.py", "IPython/frontend/qt/console/tests/test_ansi_code_processor.py", "IPython/frontend/qt/console/tests/test_console_widget.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzpkNTk3YzQ0MjE2ZTYxNDNkMzQyMTA1YjM1NmNhNGFlYzhiM2I1NTg1", "commit_message": "Merge pull request #1569 from punchagan/support-backspace-and-beep-sequences\n\nBUG: qtconsole -- non-standard handling of \\a and \\b. This makes the behavior of the Qt console match that of an ANSI terminal with regards to \\a and \\b.\r\n\r\nFixes #1561.", "commit_timestamp": "2012-04-14T03:29:58Z", "files": ["IPython/frontend/qt/console/ansi_code_processor.py", "IPython/frontend/qt/console/console_widget.py", "IPython/frontend/qt/console/tests/test_ansi_code_processor.py", "IPython/frontend/qt/console/tests/test_console_widget.py"]}], "labels": ["bug"], "created_at": "2012-04-09T18:48:24Z", "closed_at": "2012-04-14T03:30:00Z", "linked_pr_number": [1561], "method": ["label"]}
{"issue_number": 1550, "title": "Crash when starting notebook in a non-ascii path", "body": "Ipython crashes when I try to start notebook at a path containging non-ascii characters.\n\nExample with ascii path:\n\n```\nC:\\python\\bugreports\\ipython> ipython notebook\n[NotebookApp] Using existing profile dir: u'C:\\\\Users\\\\jorgenst\\\\.ipython\\\\profile_default'\n[NotebookApp] The IPython Notebook is running at: http://127.0.0.1:8888/\n[NotebookApp] Use Control-C to stop this server and shut down all kernels.\n```\n\nExample with non-ascii path:\n\n```\nC:\\python\\bugreports\\ipython\\\u00e5\u00e4\u00f6> ipython notebook\n\n\nipython-script.py : [NotebookApp] Using existing profile dir: u'C:\\\\Users\\\\jorgenst\\\\.ipython\\\\profile_default'\nAt C:\\Users\\jorgenst\\Documents\\WindowsPowerShell\\profile.ps1:91 char:18\n+ ipython-script.py <<<<  $args\n    + CategoryInfo          : NotSpecified: ([NotebookApp] U...rofile_default':String) [], RemoteException\n    + FullyQualifiedErrorId : NativeCommandError\n\nTraceback (most recent call last):\n  File \"c:\\python27\\scripts\\ipython-script.py\", line 9, in <module>\n    load_entry_point('ipython==0.13.dev', 'console_scripts', 'ipython')()\n  File \"c:\\python27\\lib\\site-packages\\ipython-0.13.dev-py2.7.egg\\IPython\\frontend\\terminal\\ipapp.py\", line 408, in launch_new_instance\n    app.initialize()\n  File \"<string>\", line 2, in initialize\n  File \"c:\\python27\\lib\\site-packages\\ipython-0.13.dev-py2.7.egg\\IPython\\config\\application.py\", line 84, in catch_config_error\n    return method(app, *args, **kwargs)\n  File \"c:\\python27\\lib\\site-packages\\ipython-0.13.dev-py2.7.egg\\IPython\\frontend\\terminal\\ipapp.py\", line 308, in initialize\n    super(TerminalIPythonApp, self).initialize(argv)\n  File \"<string>\", line 2, in initialize\n  File \"c:\\python27\\lib\\site-packages\\ipython-0.13.dev-py2.7.egg\\IPython\\config\\application.py\", line 84, in catch_config_error\n    return method(app, *args, **kwargs)\n  File \"c:\\python27\\lib\\site-packages\\ipython-0.13.dev-py2.7.egg\\IPython\\core\\application.py\", line 325, in initialize\n    self.parse_command_line(argv)\n  File \"c:\\python27\\lib\\site-packages\\ipython-0.13.dev-py2.7.egg\\IPython\\frontend\\terminal\\ipapp.py\", line 303, in parse_command_line\n    return super(TerminalIPythonApp, self).parse_command_line(argv)\n  File \"<string>\", line 2, in parse_command_line\n  File \"c:\\python27\\lib\\site-packages\\ipython-0.13.dev-py2.7.egg\\IPython\\config\\application.py\", line 84, in catch_config_error\n    return method(app, *args, **kwargs)\n  File \"c:\\python27\\lib\\site-packages\\ipython-0.13.dev-py2.7.egg\\IPython\\config\\application.py\", line 417, in parse_command_line\n    return self.initialize_subcommand(subc, subargv)\n  File \"<string>\", line 2, in initialize_subcommand\n  File \"c:\\python27\\lib\\site-packages\\ipython-0.13.dev-py2.7.egg\\IPython\\config\\application.py\", line 84, in catch_config_error\n    return method(app, *args, **kwargs)\n  File \"c:\\python27\\lib\\site-packages\\ipython-0.13.dev-py2.7.egg\\IPython\\config\\application.py\", line 356, in initialize_subcommand\n    self.subapp.initialize(argv)\n  File \"<string>\", line 2, in initialize\n  File \"c:\\python27\\lib\\site-packages\\ipython-0.13.dev-py2.7.egg\\IPython\\config\\application.py\", line 84, in catch_config_error\n    return method(app, *args, **kwargs)\n  File \"c:\\python27\\lib\\site-packages\\ipython-0.13.dev-py2.7.egg\\IPython\\frontend\\html\\notebook\\notebookapp.py\", line 455, in initialize\n    self.init_configurables()\n  File \"c:\\python27\\lib\\site-packages\\ipython-0.13.dev-py2.7.egg\\IPython\\frontend\\html\\notebook\\notebookapp.py\", line 406, in init_configurables\n    self.notebook_manager = NotebookManager(config=self.config, log=self.log)\n  File \"c:\\python27\\lib\\site-packages\\ipython-0.13.dev-py2.7.egg\\IPython\\utils\\traitlets.py\", line 412, in __new__\n    value.instance_init(inst)\n  File \"c:\\python27\\lib\\site-packages\\ipython-0.13.dev-py2.7.egg\\IPython\\utils\\traitlets.py\", line 243, in instance_init\n    self.set_default_value(obj)\n  File \"c:\\python27\\lib\\site-packages\\ipython-0.13.dev-py2.7.egg\\IPython\\utils\\traitlets.py\", line 263, in set_default_value\n    newdv = self._validate(obj, dv)\n  File \"c:\\python27\\lib\\site-packages\\ipython-0.13.dev-py2.7.egg\\IPython\\utils\\traitlets.py\", line 311, in _validate\n    return self.validate(obj, value)\n  File \"c:\\python27\\lib\\site-packages\\ipython-0.13.dev-py2.7.egg\\IPython\\utils\\traitlets.py\", line 1012, in validate\n    return unicode(value)\nUnicodeDecodeError: 'ascii' codec can't decode byte 0xe5 in position 29: ordinal not in range(128)\n\nIf you suspect this is an IPython bug, please report it at:\n    https://github.com/ipython/ipython/issues\nor send an email to the mailing list at ipython-dev@scipy.org\n\nYou can print a more detailed traceback right now with \"%tb\", or use \"%debug\"\nto interactively debug it.\n\nExtra-detailed tracebacks for bug-reporting purposes can be enabled via:\n    c.Application.verbose_crash=True\n```\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU4NTE4OjRjMmMzY2ExZjAyMzI5MTBjNTdmOWJhYjVlMTAwZjdjNmM0NDk0MzE=", "commit_message": "Merge pull request #1552 from minrk/fix1550\n\nuse os.getcwdu in NotebookManager\r\n\r\nprevents unicode error when starting in non-unicode path.\r\n\r\ncloses #1550", "commit_timestamp": "2012-04-10T00:37:08Z", "files": ["IPython/frontend/html/notebook/notebookmanager.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzozYjM0ZmE5YjI0M2UxMWE3OTUzZWFmMDNkYjNiOTVkYjg4NmIzNmEw", "commit_message": "Merge pull request #1552 from minrk/fix1550\n\nuse os.getcwdu in NotebookManager\r\n\r\nprevents unicode error when starting in non-unicode path.\r\n\r\ncloses #1550", "commit_timestamp": "2012-04-10T00:37:08Z", "files": ["IPython/frontend/html/notebook/notebookmanager.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjRjMmMzY2ExZjAyMzI5MTBjNTdmOWJhYjVlMTAwZjdjNmM0NDk0MzE=", "commit_message": "Merge pull request #1552 from minrk/fix1550\n\nuse os.getcwdu in NotebookManager\r\n\r\nprevents unicode error when starting in non-unicode path.\r\n\r\ncloses #1550", "commit_timestamp": "2012-04-10T00:37:08Z", "files": ["IPython/frontend/html/notebook/notebookmanager.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjRjMmMzY2ExZjAyMzI5MTBjNTdmOWJhYjVlMTAwZjdjNmM0NDk0MzE=", "commit_message": "Merge pull request #1552 from minrk/fix1550\n\nuse os.getcwdu in NotebookManager\r\n\r\nprevents unicode error when starting in non-unicode path.\r\n\r\ncloses #1550", "commit_timestamp": "2012-04-10T00:37:08Z", "files": ["IPython/frontend/html/notebook/notebookmanager.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzozYjM0ZmE5YjI0M2UxMWE3OTUzZWFmMDNkYjNiOTVkYjg4NmIzNmEw", "commit_message": "Merge pull request #1552 from minrk/fix1550\n\nuse os.getcwdu in NotebookManager\r\n\r\nprevents unicode error when starting in non-unicode path.\r\n\r\ncloses #1550", "commit_timestamp": "2012-04-10T00:37:08Z", "files": ["IPython/frontend/html/notebook/notebookmanager.py"]}], "labels": [], "created_at": "2012-04-04T11:49:19Z", "closed_at": "2012-04-10T00:37:09Z", "linked_pr_number": [1550], "method": ["regex"]}
{"issue_number": 1545, "title": "trailing newline not preserved in splitline ipynb", "body": "We use `splitlines()` on probable multi-line blocks for nicer ipynb files.  But there is a small ambiguity, in that 0 or 1 trailing newlines produce identical output.  The only place this really matters is multiple sequential stdout messages.\n\nFor instance, run a notebook with the following cell:\n\n``` python\nfor i in range(5):\n    print i,\n    sys.stdout.flush()\n\nprint '--'\n\nfor i in range(5,10):\n    print i\n    sys.stdout.flush()\n```\n\nThen save & reload.  The new output will have 56789 on one line, instead of on 5 lines like the original output.  \n\nPR #1480 now contains a fix, which is replacing `item.splitlines()` with `(item+'\\n').splitlines()`, which is the true inverse of `'\\n'.join(lines)`.\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU4NTE4OmM0Y2Y5NDAzNTE1NWQ4MjU0MDI5MzhjNTQzYWUxOWQ4M2FhNGNlMmY=", "commit_message": "Merge pull request #1480 from minrk/npmagic\n\nFix %notebook magic, etc. nbformat unicode tests and fixes.\r\n\r\n* json.writes always gives unicode, so that `current.writes` can be trusted to give the same interface\r\n* setup base TestCase for nbformat tests, to consolidate code, and better test both file formats\r\n* add tests for reading/writing to files\r\n* allow `name` as kwarg to new_notebook to avoid unnecessary breakage of previous API.\r\n* remove fallback to xml, which would hide corrupt notebook files behind a nonsensical 'xml unsupported' message.\r\n\r\nCloses #1545, #1487.", "commit_timestamp": "2012-04-15T00:20:48Z", "files": ["IPython/core/magic.py", "IPython/core/tests/test_magic.py", "IPython/nbformat/v3/nbbase.py", "IPython/nbformat/v3/nbjson.py", "IPython/nbformat/v3/rwbase.py", "IPython/nbformat/v3/tests/formattest.py", "IPython/nbformat/v3/tests/nbexamples.py", "IPython/nbformat/v3/tests/test_json.py", "IPython/nbformat/v3/tests/test_nbbase.py", "IPython/nbformat/v3/tests/test_nbpy.py", "IPython/utils/py3compat.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzpkM2I4NThlMzNhZmQ5MzM3MDE3ODQwOGQwYzIzNDA0YWNhYTlmMDE3", "commit_message": "Merge pull request #1480 from minrk/npmagic\n\nFix %notebook magic, etc. nbformat unicode tests and fixes.\r\n\r\n* json.writes always gives unicode, so that `current.writes` can be trusted to give the same interface\r\n* setup base TestCase for nbformat tests, to consolidate code, and better test both file formats\r\n* add tests for reading/writing to files\r\n* allow `name` as kwarg to new_notebook to avoid unnecessary breakage of previous API.\r\n* remove fallback to xml, which would hide corrupt notebook files behind a nonsensical 'xml unsupported' message.\r\n\r\nCloses #1545, #1487.", "commit_timestamp": "2012-04-15T00:20:48Z", "files": ["IPython/core/magic.py", "IPython/core/tests/test_magic.py", "IPython/nbformat/v3/nbbase.py", "IPython/nbformat/v3/nbjson.py", "IPython/nbformat/v3/rwbase.py", "IPython/nbformat/v3/tests/formattest.py", "IPython/nbformat/v3/tests/nbexamples.py", "IPython/nbformat/v3/tests/test_json.py", "IPython/nbformat/v3/tests/test_nbbase.py", "IPython/nbformat/v3/tests/test_nbpy.py", "IPython/utils/py3compat.py"]}], "labels": ["bug", "notebook"], "created_at": "2012-04-02T18:47:52Z", "closed_at": "2012-04-15T00:20:50Z", "method": ["label"]}
{"issue_number": 1542, "title": "%save magic fails in clients without stdin if file already exists", "body": "`%save` fails in the nb/qtconsole if a file already exists, because it tries to ask the user interactively and this produces a `StdinNotImplementedError`.  We should in that case capture the exception, print instead a message and offer a -f option to support forced writes.\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU5NDQ2OjhkNTNmOWFiYTdhN2VlY2ZmNTNjZjYzZWM1NzFkZjRkZjUyZjQ4MWU=", "commit_message": "add %save -f\n\nadds force flag, and displays message about -f when ask_yes_no fails\ndue to no stdin (Notebook).\n\ncloses #1542", "commit_timestamp": "2012-06-13T03:48:38Z", "files": ["IPython/core/magics/code.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjhkNTNmOWFiYTdhN2VlY2ZmNTNjZjYzZWM1NzFkZjRkZjUyZjQ4MWU=", "commit_message": "add %save -f\n\nadds force flag, and displays message about -f when ask_yes_no fails\ndue to no stdin (Notebook).\n\ncloses #1542", "commit_timestamp": "2012-06-13T03:48:38Z", "files": ["IPython/core/magics/code.py"]}, {"node_id": "MDY6Q29tbWl0NjU5NDQ2OjQ2OGE4ZmRiMWFiODYwOTBhMjE5YzdkOTViYjQ3ZjA3NDBlOGMzZmQ=", "commit_message": "Merge pull request #1937 from minrk/save\n\nAdd -f (force) flag to %save, and display message about -f when ask_yes_no fails due to no stdin (Notebook).\r\n\r\ncloses #1542", "commit_timestamp": "2012-06-13T07:18:54Z", "files": ["IPython/core/magics/code.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzphY2VjYTU1OWEwODBlZTVhYWJkNGYzY2M5NWQ0YmY2YTcwMGE4YTgz", "commit_message": "add %save -f\n\nadds force flag, and displays message about -f when ask_yes_no fails\ndue to no stdin (Notebook).\n\ncloses #1542", "commit_timestamp": "2012-06-13T03:48:38Z", "files": ["IPython/core/magics/code.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo0MmJjOTI1NTdkNjQ2MDg0OWI1ZWE5OTgxZGRmYjg5ZmM1MDFkNmE4", "commit_message": "Merge pull request #1937 from minrk/save\n\nAdd -f (force) flag to %save, and display message about -f when ask_yes_no fails due to no stdin (Notebook).\r\n\r\ncloses #1542", "commit_timestamp": "2012-06-13T07:18:54Z", "files": ["IPython/core/magics/code.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjQ2OGE4ZmRiMWFiODYwOTBhMjE5YzdkOTViYjQ3ZjA3NDBlOGMzZmQ=", "commit_message": "Merge pull request #1937 from minrk/save\n\nAdd -f (force) flag to %save, and display message about -f when ask_yes_no fails due to no stdin (Notebook).\r\n\r\ncloses #1542", "commit_timestamp": "2012-06-13T07:18:54Z", "files": ["IPython/core/magics/code.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjQ2OGE4ZmRiMWFiODYwOTBhMjE5YzdkOTViYjQ3ZjA3NDBlOGMzZmQ=", "commit_message": "Merge pull request #1937 from minrk/save\n\nAdd -f (force) flag to %save, and display message about -f when ask_yes_no fails due to no stdin (Notebook).\r\n\r\ncloses #1542", "commit_timestamp": "2012-06-13T07:18:54Z", "files": ["IPython/core/magics/code.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo0MmJjOTI1NTdkNjQ2MDg0OWI1ZWE5OTgxZGRmYjg5ZmM1MDFkNmE4", "commit_message": "Merge pull request #1937 from minrk/save\n\nAdd -f (force) flag to %save, and display message about -f when ask_yes_no fails due to no stdin (Notebook).\r\n\r\ncloses #1542", "commit_timestamp": "2012-06-13T07:18:54Z", "files": ["IPython/core/magics/code.py"]}], "labels": ["qtconsole", "bug", "notebook"], "created_at": "2012-03-31T23:03:32Z", "closed_at": "2012-06-13T07:18:55Z", "linked_pr_number": [1542], "method": ["label", "regex"]}
{"issue_number": 1532, "title": "qtconsole does not accept --gui switch", "body": "As suggested by Min, as \"silly oversight that `--gui=foo` is not available at the command-line for the qtconsole\", I'm opening this issue for \"tiny fix\" ;)\n\nCheers\n", "commits": [{"node_id": "MDY6Q29tbWl0MjkwOTI5MDowOTBmNzE4NTAyODEyNmVkOGRlNWJjYWY0MTNlYWU0NWUwNzAwOGE0", "commit_message": "Accept --gui=<...> switch in IPython qtconsole.\n\nIf both --gui and --pylab are given, we use the value in --pylab, just\nlike the terminal IPython application.\n\nCloses #1532.", "commit_timestamp": "2012-05-31T02:21:26Z", "files": ["IPython/zmq/ipkernel.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjA5MGY3MTg1MDI4MTI2ZWQ4ZGU1YmNhZjQxM2VhZTQ1ZTA3MDA4YTQ=", "commit_message": "Accept --gui=<...> switch in IPython qtconsole.\n\nIf both --gui and --pylab are given, we use the value in --pylab, just\nlike the terminal IPython application.\n\nCloses #1532.", "commit_timestamp": "2012-05-31T02:21:26Z", "files": ["IPython/zmq/ipkernel.py"]}, {"node_id": "MDY6Q29tbWl0MjM0NDA3MzpiZDFkYTEzY2IwZTNhNjhjYmJhYWYzMWEwYWFhOWMyN2NkZTI1ZDVm", "commit_message": "Merge pull request #1707 from bfroehle/_1532_qtconsole_gui_switch\n\nmove gui/pylab to shellapp base class\r\n\r\nIf both --gui and --pylab are given, we use the value in --pylab, just\r\nlike the terminal IPython application.\r\n\r\nCloses #1532", "commit_timestamp": "2012-05-31T03:13:17Z", "files": ["IPython/core/magics/basic.py", "IPython/core/shellapp.py", "IPython/frontend/terminal/console/app.py", "IPython/frontend/terminal/ipapp.py", "IPython/zmq/ipkernel.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzoxMmI4YjE0OGQ2ZDQ0MjIxNzNjZTBiZTdjNzg1ZWE4ZDU5MDg4ZDNj", "commit_message": "Accept --gui=<...> switch in IPython qtconsole.\n\nIf both --gui and --pylab are given, we use the value in --pylab, just\nlike the terminal IPython application.\n\nCloses #1532.", "commit_timestamp": "2012-05-31T02:21:26Z", "files": ["IPython/zmq/ipkernel.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo0ZTc2YzhkYzk3NzYyYjg5Yzk0NmEyNWMwNmE1OTU4YTNjMWJmZTc5", "commit_message": "Merge pull request #1707 from bfroehle/_1532_qtconsole_gui_switch\n\nmove gui/pylab to shellapp base class\r\n\r\nIf both --gui and --pylab are given, we use the value in --pylab, just\r\nlike the terminal IPython application.\r\n\r\nCloses #1532", "commit_timestamp": "2012-05-31T03:13:17Z", "files": ["IPython/core/magics/basic.py", "IPython/core/shellapp.py", "IPython/frontend/terminal/console/app.py", "IPython/frontend/terminal/ipapp.py", "IPython/zmq/ipkernel.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmJkMWRhMTNjYjBlM2E2OGNiYmFhZjMxYTBhYWE5YzI3Y2RlMjVkNWY=", "commit_message": "Merge pull request #1707 from bfroehle/_1532_qtconsole_gui_switch\n\nmove gui/pylab to shellapp base class\r\n\r\nIf both --gui and --pylab are given, we use the value in --pylab, just\r\nlike the terminal IPython application.\r\n\r\nCloses #1532", "commit_timestamp": "2012-05-31T03:13:17Z", "files": ["IPython/core/magics/basic.py", "IPython/core/shellapp.py", "IPython/frontend/terminal/console/app.py", "IPython/frontend/terminal/ipapp.py", "IPython/zmq/ipkernel.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmJkMWRhMTNjYjBlM2E2OGNiYmFhZjMxYTBhYWE5YzI3Y2RlMjVkNWY=", "commit_message": "Merge pull request #1707 from bfroehle/_1532_qtconsole_gui_switch\n\nmove gui/pylab to shellapp base class\r\n\r\nIf both --gui and --pylab are given, we use the value in --pylab, just\r\nlike the terminal IPython application.\r\n\r\nCloses #1532", "commit_timestamp": "2012-05-31T03:13:17Z", "files": ["IPython/core/magics/basic.py", "IPython/core/shellapp.py", "IPython/frontend/terminal/console/app.py", "IPython/frontend/terminal/ipapp.py", "IPython/zmq/ipkernel.py"]}], "labels": ["qtconsole", "bug"], "created_at": "2012-03-28T06:14:45Z", "closed_at": "2012-05-31T03:13:19Z", "linked_pr_number": [1532], "method": ["label"]}
{"issue_number": 1520, "title": "kernel crash when showing tooltip (?)", "body": "I originally posted this as a pandas bug, but realized this must be on the IPython side. More details are at https://github.com/pydata/pandas/issues/960 \n\nBasic repro on IPython 0.12 with pandas 0.7.1 or 0.7.2 is\n\n```\nimport pandas\npandas.DataFrame.reindex(\n```\n\nkernel crashes when you open the parenthesis on reindex.\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU4NTE4OjY0YTUwNjE5ZWZiNzkyN2RhMmY5YjI3MjkzNzNiMzI3NDVhYjY4Mzc=", "commit_message": "Merge pull request #1652 from minrk/zmqcompat\n\nadd patch_pyzmq() for backporting a few changes from newer pyzmq\r\n\r\n* fixes missing constants in super-old pyzmq\r\n* define ioloop.install if not defined\r\n* never allow jsonlib to be used by zmq.utils.jsonapi (#1520).\r\n\r\nCloses #1520.", "commit_timestamp": "2012-04-24T05:59:07Z", "files": ["IPython/frontend/html/notebook/__init__.py", "IPython/frontend/html/notebook/notebookapp.py", "IPython/zmq/__init__.py", "IPython/zmq/session.py"]}], "labels": ["qtconsole", "bug"], "created_at": "2012-03-23T17:42:48Z", "closed_at": "2012-04-24T05:59:07Z", "method": ["label", "regex"]}
{"issue_number": 1516, "title": "ipython-qtconsole script isn't installed for Python 2.x", "body": "Please see bug https://bugs.gentoo.org/show_bug.cgi?id=407823\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU4NTE4Ojk0YTk2YjhmY2JlNWY2M2IzNWE5N2IwNWMyNzU1NzI3OTliODUzMzI=", "commit_message": "Merge pull request #2037 from minrk/qtconsole\n\nFor Windows installation, remove `ipython-qtconsole` gui-script and simply use `ipython qtconsole`.\r\n\r\nQtConsole entry in the Windows Start Menu is updated appropriately.\r\n\r\nCloses #1516.", "commit_timestamp": "2012-06-25T19:07:47Z", "files": ["scripts/ipython_win_post_install.py", "setupbase.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo3M2VkYjRmMzhiNDIzODQ2ZjNjOWRhNTk0OWNlY2JiMWJjNmRkYzNl", "commit_message": "Merge pull request #2037 from minrk/qtconsole\n\nFor Windows installation, remove `ipython-qtconsole` gui-script and simply use `ipython qtconsole`.\r\n\r\nQtConsole entry in the Windows Start Menu is updated appropriately.\r\n\r\nCloses #1516.", "commit_timestamp": "2012-06-25T19:07:47Z", "files": ["scripts/ipython_win_post_install.py", "setupbase.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4Ojk0YTk2YjhmY2JlNWY2M2IzNWE5N2IwNWMyNzU1NzI3OTliODUzMzI=", "commit_message": "Merge pull request #2037 from minrk/qtconsole\n\nFor Windows installation, remove `ipython-qtconsole` gui-script and simply use `ipython qtconsole`.\r\n\r\nQtConsole entry in the Windows Start Menu is updated appropriately.\r\n\r\nCloses #1516.", "commit_timestamp": "2012-06-25T19:07:47Z", "files": ["scripts/ipython_win_post_install.py", "setupbase.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4Ojk0YTk2YjhmY2JlNWY2M2IzNWE5N2IwNWMyNzU1NzI3OTliODUzMzI=", "commit_message": "Merge pull request #2037 from minrk/qtconsole\n\nFor Windows installation, remove `ipython-qtconsole` gui-script and simply use `ipython qtconsole`.\r\n\r\nQtConsole entry in the Windows Start Menu is updated appropriately.\r\n\r\nCloses #1516.", "commit_timestamp": "2012-06-25T19:07:47Z", "files": ["scripts/ipython_win_post_install.py", "setupbase.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo3M2VkYjRmMzhiNDIzODQ2ZjNjOWRhNTk0OWNlY2JiMWJjNmRkYzNl", "commit_message": "Merge pull request #2037 from minrk/qtconsole\n\nFor Windows installation, remove `ipython-qtconsole` gui-script and simply use `ipython qtconsole`.\r\n\r\nQtConsole entry in the Windows Start Menu is updated appropriately.\r\n\r\nCloses #1516.", "commit_timestamp": "2012-06-25T19:07:47Z", "files": ["scripts/ipython_win_post_install.py", "setupbase.py"]}], "labels": ["qtconsole", "windows"], "created_at": "2012-03-23T10:15:11Z", "closed_at": "2012-06-25T19:07:48Z", "linked_pr_number": [1516], "method": ["regex"]}
{"issue_number": 1512, "title": "`print stuff,` should avoid newline", "body": "In an IPython interpreter:\n\n``` py\nIn [4]: print 1,\n1\n\nIn [5]: print 1\n1\n\nIn [6]: print 1,; print 2\n1\n2\n```\n\nIn a regular Python interpreter:\n\n``` py\n>>> print 1,\n1\n>>> print 1\n1\n>>> print 1,;print 2\n1 2\n```\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU4NTE4OjUzOGJjNWFmZjM0MTQ3ZGZlZjcxM2FiNmZjYmIxYTZlNzcyMmQ3ZmQ=", "commit_message": "Merge pull request #1662 from bfroehle/flush_softspace\n\nmove flushing softspace to run_cell from run_code\r\n\r\ncalled only once per cell\r\n\r\ncloses #1512", "commit_timestamp": "2012-04-26T00:45:30Z", "files": ["IPython/core/interactiveshell.py", "IPython/core/tests/test_interactiveshell.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzpkNGU1NTUxNDdjMDNmNWI1MjRjNjRiY2M3MmYwNGU5MzgzYWYwZjdi", "commit_message": "Merge pull request #1662 from bfroehle/flush_softspace\n\nmove flushing softspace to run_cell from run_code\r\n\r\ncalled only once per cell\r\n\r\ncloses #1512", "commit_timestamp": "2012-04-26T00:45:30Z", "files": ["IPython/core/interactiveshell.py", "IPython/core/tests/test_interactiveshell.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjUzOGJjNWFmZjM0MTQ3ZGZlZjcxM2FiNmZjYmIxYTZlNzcyMmQ3ZmQ=", "commit_message": "Merge pull request #1662 from bfroehle/flush_softspace\n\nmove flushing softspace to run_cell from run_code\r\n\r\ncalled only once per cell\r\n\r\ncloses #1512", "commit_timestamp": "2012-04-26T00:45:30Z", "files": ["IPython/core/interactiveshell.py", "IPython/core/tests/test_interactiveshell.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjUzOGJjNWFmZjM0MTQ3ZGZlZjcxM2FiNmZjYmIxYTZlNzcyMmQ3ZmQ=", "commit_message": "Merge pull request #1662 from bfroehle/flush_softspace\n\nmove flushing softspace to run_cell from run_code\r\n\r\ncalled only once per cell\r\n\r\ncloses #1512", "commit_timestamp": "2012-04-26T00:45:30Z", "files": ["IPython/core/interactiveshell.py", "IPython/core/tests/test_interactiveshell.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzpkNGU1NTUxNDdjMDNmNWI1MjRjNjRiY2M3MmYwNGU5MzgzYWYwZjdi", "commit_message": "Merge pull request #1662 from bfroehle/flush_softspace\n\nmove flushing softspace to run_cell from run_code\r\n\r\ncalled only once per cell\r\n\r\ncloses #1512", "commit_timestamp": "2012-04-26T00:45:30Z", "files": ["IPython/core/interactiveshell.py", "IPython/core/tests/test_interactiveshell.py"]}], "labels": ["bug"], "created_at": "2012-03-21T22:50:56Z", "closed_at": "2012-04-26T00:45:31Z", "linked_pr_number": [1512], "method": ["label"]}
{"issue_number": 1507, "title": "python3 notebook: TypeError: unorderable types", "body": "I got this traceback when starting an python3 notebook on current git head:\n\n```\nTraceback (most recent call last):\n  File \"/usr/lib/python3/dist-packages/tornado/web.py\", line 954, in _execute\n    getattr(self, self.request.method.lower())(*args, **kwargs)\n  File \"/usr/lib/python3/dist-packages/tornado/web.py\", line 1667, in wrapper\n    return method(self, *args, **kwargs)\n  File \"/usr/lib/python3/dist-packages/IPython/frontend/html/notebook/handlers.py\", line 676, in get\n    self.finish(jsonapi.dumps(cm.list_profiles()))\n  File \"/usr/lib/python3/dist-packages/IPython/frontend/html/notebook/clustermanager.py\", line 95, in list_profiles\n    result.sort()\nTypeError: unorderable types: dict() < dict()\n```\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU4NTE4OjdkYjE4ZjhhY2RjOWIxMzAxNzUyZGY3MThkNmVmNzkyMDE0N2U3YWU=", "commit_message": "Merge pull request #1508 from minrk/i1507\n\nfix sorting profiles in clustermanager\r\n\r\ndicts aren't orderable on Python3. In any case, these should be sorted by name, not by the ordering of the dicts themselves.\r\n\r\ncloses #1507", "commit_timestamp": "2012-03-16T23:30:00Z", "files": ["IPython/frontend/html/notebook/clustermanager.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo5YjdhMDIwOWU2MmZkNzU4NmU1YWJhYmQ4NmZlMWY0YTMzMjQ5YmY5", "commit_message": "Merge pull request #1508 from minrk/i1507\n\nfix sorting profiles in clustermanager\r\n\r\ndicts aren't orderable on Python3. In any case, these should be sorted by name, not by the ordering of the dicts themselves.\r\n\r\ncloses #1507", "commit_timestamp": "2012-03-16T23:30:00Z", "files": ["IPython/frontend/html/notebook/clustermanager.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjdkYjE4ZjhhY2RjOWIxMzAxNzUyZGY3MThkNmVmNzkyMDE0N2U3YWU=", "commit_message": "Merge pull request #1508 from minrk/i1507\n\nfix sorting profiles in clustermanager\r\n\r\ndicts aren't orderable on Python3. In any case, these should be sorted by name, not by the ordering of the dicts themselves.\r\n\r\ncloses #1507", "commit_timestamp": "2012-03-16T23:30:00Z", "files": ["IPython/frontend/html/notebook/clustermanager.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjdkYjE4ZjhhY2RjOWIxMzAxNzUyZGY3MThkNmVmNzkyMDE0N2U3YWU=", "commit_message": "Merge pull request #1508 from minrk/i1507\n\nfix sorting profiles in clustermanager\r\n\r\ndicts aren't orderable on Python3. In any case, these should be sorted by name, not by the ordering of the dicts themselves.\r\n\r\ncloses #1507", "commit_timestamp": "2012-03-16T23:30:00Z", "files": ["IPython/frontend/html/notebook/clustermanager.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo5YjdhMDIwOWU2MmZkNzU4NmU1YWJhYmQ4NmZlMWY0YTMzMjQ5YmY5", "commit_message": "Merge pull request #1508 from minrk/i1507\n\nfix sorting profiles in clustermanager\r\n\r\ndicts aren't orderable on Python3. In any case, these should be sorted by name, not by the ordering of the dicts themselves.\r\n\r\ncloses #1507", "commit_timestamp": "2012-03-16T23:30:00Z", "files": ["IPython/frontend/html/notebook/clustermanager.py"]}], "labels": ["bug", "notebook"], "created_at": "2012-03-16T21:19:07Z", "closed_at": "2012-03-16T23:30:00Z", "linked_pr_number": [1507], "method": ["label"]}
{"issue_number": 1499, "title": "various pyflakes issues", "body": "I tried out a new debian package qc tool which runs pyflakes, and it reported many issues.\nI filtered out a bunch of false positives, I think the remaining should be fixed, even though not all are real errors:\n\nRan on today's daily build (~3912ea7cf62)\n\n```\nw: ipython: pyflakes-redefined-function IPython/config/loader.py:654: _convert_to_config line 621\ne: ipython: pyflakes-undefined-name IPython/core/debugger.py:107: get_ipython\ne: ipython: pyflakes-undefined-name IPython/core/magic.py:942: Numeric\ne: ipython: pyflakes-undefined-name IPython/core/magic.py:2324: parameter_s\ne: ipython: pyflakes-undefined-name IPython/frontend/terminal/interactiveshell.py:113: UsageError\ne: ipython: pyflakes-undefined-name IPython/frontend/terminal/interactiveshell.py:115: UsageError\ne: ipython: pyflakes-undefined-name IPython/lib/backgroundjobs.py:394: get_ipython\ne: ipython: pyflakes-undefined-name IPython/lib/demo.py:246: get_ipython\ne: ipython: pyflakes-undefined-name IPython/parallel/client/view.py:781: get_ipython\ne: ipython: pyflakes-undefined-name IPython/parallel/controller/scheduler.py:515: blacklist\ne: ipython: pyflakes-undefined-name IPython/parallel/engine/kernelstarter.py:83: LOCAL_IPS\ne: ipython: pyflakes-undefined-name IPython/parallel/engine/kernelstarter.py:96: Process\ne: ipython: pyflakes-undefined-name IPython/parallel/engine/kernelstarter.py:96: make_kernel\ne: ipython: pyflakes-undefined-name IPython/parallel/engine/kernelstarter.py:104: sys\ne: ipython: pyflakes-undefined-name IPython/parallel/engine/kernelstarter.py:114: time\ne: ipython: pyflakes-undefined-name IPython/parallel/engine/kernelstarter.py:150: sys\ne: ipython: pyflakes-undefined-name IPython/parallel/engine/kernelstarter.py:151: time\ne: ipython: pyflakes-undefined-name IPython/parallel/engine/kernelstarter.py:173: sys\ne: ipython: pyflakes-undefined-name IPython/parallel/engine/kernelstarter.py:184: sys\ne: ipython: pyflakes-undefined-name IPython/parallel/engine/kernelstarter.py:188: signal\ne: ipython: pyflakes-undefined-name IPython/parallel/engine/kernelstarter.py:220: zmq\ne: ipython: pyflakes-undefined-name IPython/parallel/engine/kernelstarter.py:222: zmqstream\ne: ipython: pyflakes-undefined-name IPython/parallel/engine/kernelstarter.py:222: zmq\ne: ipython: pyflakes-undefined-name IPython/parallel/engine/kernelstarter.py:224: zmqstream\ne: ipython: pyflakes-undefined-name IPython/parallel/engine/kernelstarter.py:224: zmq\ne: ipython: pyflakes-undefined-name IPython/testing/plugin/ipdoctest.py:275: _ip\ne: ipython: pyflakes-undefined-name IPython/testing/plugin/ipdoctest.py:276: _ip\ne: ipython: pyflakes-undefined-name IPython/testing/plugin/ipdoctest.py:277: _ip\ne: ipython: pyflakes-undefined-name IPython/testing/plugin/ipdoctest.py:281: _ip\ne: ipython: pyflakes-undefined-name IPython/testing/plugin/ipdoctest.py:291: _ip\ne: ipython: pyflakes-undefined-name IPython/testing/plugin/ipdoctest.py:292: _ip\ne: ipython: pyflakes-undefined-name IPython/testing/plugin/ipdoctest.py:295: _ip\ne: ipython: pyflakes-undefined-name IPython/testing/plugin/ipdoctest.py:393: _ip\ne: ipython: pyflakes-undefined-name IPython/testing/plugin/ipdoctest.py:588: _ip\ne: ipython: pyflakes-undefined-name IPython/testing/tools.py:211: get_ipython\ne: ipython: pyflakes-undefined-name IPython/utils/pickleshare.py:194: keys\ne: ipython: pyflakes-undefined-name IPython/utils/pickleshare.py:197: keys\ne: ipython: pyflakes-undefined-name IPython/zmq/completer.py:62: Message\ne: ipython: pyflakes-undefined-name IPython/zmq/frontend.py:98: Message\ne: ipython: pyflakes-undefined-name IPython/zmq/frontend.py:118: Message\ne: ipython: pyflakes-undefined-name IPython/zmq/pylab/backend_inline.py:159: get_ipython\ne: ipython: pyflakes-undefined-name IPython/zmq/pylab/backend_inline.py:163: get_ipython\ne: ipython: pyflakes-undefined-name IPython/zmq/pylab/backend_inline.py:174: get_ipython\ne: ipython: pyflakes-undefined-name IPython/zmq/pylab/backend_inline.py:178: get_ipython\n```\n\nFor the vim users I highly recommend vim's pyflakes plugin, it really helps a lot and is very fast.\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU4NTE4OmQxM2JiYWYzMDVhNzJmNTRjNTNhZThmOWQ4OTczMDE2YjEyZjVjMzc=", "commit_message": "Merge pull request #1502 from minrk/pyflakes\n\nsmall changes in response to pyflakes pass\r\n\r\nOnly significant change: removes incomplete kernelstarter file, which shouldn't have been in the repo at all.\r\n\r\ncloses #1499", "commit_timestamp": "2012-04-14T09:33:29Z", "files": ["IPython/config/loader.py", "IPython/core/magic.py", "IPython/frontend/html/notebook/clustermanager.py", "IPython/frontend/terminal/interactiveshell.py", "IPython/parallel/controller/scheduler.py", "IPython/parallel/engine/kernelstarter.py", "IPython/parallel/tests/__init__.py", "IPython/utils/pickleshare.py", "IPython/utils/tests/test_traitlets.py", "IPython/zmq/completer.py", "IPython/zmq/frontend.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzphNzFkMGUwNTJlNmU3NTVlZmMzOGJhYWU3ODBmYTg3ZjY4YzE2NDNl", "commit_message": "Merge pull request #1502 from minrk/pyflakes\n\nsmall changes in response to pyflakes pass\r\n\r\nOnly significant change: removes incomplete kernelstarter file, which shouldn't have been in the repo at all.\r\n\r\ncloses #1499", "commit_timestamp": "2012-04-14T09:33:29Z", "files": ["IPython/config/loader.py", "IPython/core/magic.py", "IPython/frontend/html/notebook/clustermanager.py", "IPython/frontend/terminal/interactiveshell.py", "IPython/parallel/controller/scheduler.py", "IPython/parallel/engine/kernelstarter.py", "IPython/parallel/tests/__init__.py", "IPython/utils/pickleshare.py", "IPython/utils/tests/test_traitlets.py", "IPython/zmq/completer.py", "IPython/zmq/frontend.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmQxM2JiYWYzMDVhNzJmNTRjNTNhZThmOWQ4OTczMDE2YjEyZjVjMzc=", "commit_message": "Merge pull request #1502 from minrk/pyflakes\n\nsmall changes in response to pyflakes pass\r\n\r\nOnly significant change: removes incomplete kernelstarter file, which shouldn't have been in the repo at all.\r\n\r\ncloses #1499", "commit_timestamp": "2012-04-14T09:33:29Z", "files": ["IPython/config/loader.py", "IPython/core/magic.py", "IPython/frontend/html/notebook/clustermanager.py", "IPython/frontend/terminal/interactiveshell.py", "IPython/parallel/controller/scheduler.py", "IPython/parallel/engine/kernelstarter.py", "IPython/parallel/tests/__init__.py", "IPython/utils/pickleshare.py", "IPython/utils/tests/test_traitlets.py", "IPython/zmq/completer.py", "IPython/zmq/frontend.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmQxM2JiYWYzMDVhNzJmNTRjNTNhZThmOWQ4OTczMDE2YjEyZjVjMzc=", "commit_message": "Merge pull request #1502 from minrk/pyflakes\n\nsmall changes in response to pyflakes pass\r\n\r\nOnly significant change: removes incomplete kernelstarter file, which shouldn't have been in the repo at all.\r\n\r\ncloses #1499", "commit_timestamp": "2012-04-14T09:33:29Z", "files": ["IPython/config/loader.py", "IPython/core/magic.py", "IPython/frontend/html/notebook/clustermanager.py", "IPython/frontend/terminal/interactiveshell.py", "IPython/parallel/controller/scheduler.py", "IPython/parallel/engine/kernelstarter.py", "IPython/parallel/tests/__init__.py", "IPython/utils/pickleshare.py", "IPython/utils/tests/test_traitlets.py", "IPython/zmq/completer.py", "IPython/zmq/frontend.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzphNzFkMGUwNTJlNmU3NTVlZmMzOGJhYWU3ODBmYTg3ZjY4YzE2NDNl", "commit_message": "Merge pull request #1502 from minrk/pyflakes\n\nsmall changes in response to pyflakes pass\r\n\r\nOnly significant change: removes incomplete kernelstarter file, which shouldn't have been in the repo at all.\r\n\r\ncloses #1499", "commit_timestamp": "2012-04-14T09:33:29Z", "files": ["IPython/config/loader.py", "IPython/core/magic.py", "IPython/frontend/html/notebook/clustermanager.py", "IPython/frontend/terminal/interactiveshell.py", "IPython/parallel/controller/scheduler.py", "IPython/parallel/engine/kernelstarter.py", "IPython/parallel/tests/__init__.py", "IPython/utils/pickleshare.py", "IPython/utils/tests/test_traitlets.py", "IPython/zmq/completer.py", "IPython/zmq/frontend.py"]}], "labels": ["bug", "testing"], "created_at": "2012-03-15T20:16:54Z", "closed_at": "2012-04-14T09:33:30Z", "linked_pr_number": [1499], "method": ["label", "regex"]}
{"issue_number": 1487, "title": "%notebook fails in qtconsole", "body": "```\n%notebook -e foo.py\n---------------------------------------------------------------------------\nTypeError                                 Traceback (most recent call last)\n/opt/source/packaging/pandas/pandas_build_virtenv/<ipython-input-245-d2b2edf081ed> in <module>()\n----> 1 get_ipython().magic(u'notebook -e foo.py')\n\n/usr/lib/python2.7/dist-packages/IPython/core/interactiveshell.pyc in magic(self, arg_s, next_input)\n   1996                 self._magic_locals = sys._getframe(1).f_locals\n   1997             with self.builtin_trap:\n-> 1998                 result = fn(magic_args)\n   1999             # Ensure we're not keeping object references around:\n\n   2000             self._magic_locals = {}\n\n/usr/lib/python2.7/dist-packages/IPython/core/magic.pyc in magic_notebook(self, s)\n   3547                 cells.append(current.new_code_cell(prompt_number=prompt_number, input=input))\n   3548             worksheet = current.new_worksheet(cells=cells)\n-> 3549             nb = current.new_notebook(name=name,worksheets=[worksheet])\n   3550             with open(fname, 'w') as f:\n   3551                 current.write(nb, f, format);\n\nTypeError: new_notebook() got an unexpected keyword argument 'name'\n\n\n```\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU4NTE4OmM0Y2Y5NDAzNTE1NWQ4MjU0MDI5MzhjNTQzYWUxOWQ4M2FhNGNlMmY=", "commit_message": "Merge pull request #1480 from minrk/npmagic\n\nFix %notebook magic, etc. nbformat unicode tests and fixes.\r\n\r\n* json.writes always gives unicode, so that `current.writes` can be trusted to give the same interface\r\n* setup base TestCase for nbformat tests, to consolidate code, and better test both file formats\r\n* add tests for reading/writing to files\r\n* allow `name` as kwarg to new_notebook to avoid unnecessary breakage of previous API.\r\n* remove fallback to xml, which would hide corrupt notebook files behind a nonsensical 'xml unsupported' message.\r\n\r\nCloses #1545, #1487.", "commit_timestamp": "2012-04-15T00:20:48Z", "files": ["IPython/core/magic.py", "IPython/core/tests/test_magic.py", "IPython/nbformat/v3/nbbase.py", "IPython/nbformat/v3/nbjson.py", "IPython/nbformat/v3/rwbase.py", "IPython/nbformat/v3/tests/formattest.py", "IPython/nbformat/v3/tests/nbexamples.py", "IPython/nbformat/v3/tests/test_json.py", "IPython/nbformat/v3/tests/test_nbbase.py", "IPython/nbformat/v3/tests/test_nbpy.py", "IPython/utils/py3compat.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzpkM2I4NThlMzNhZmQ5MzM3MDE3ODQwOGQwYzIzNDA0YWNhYTlmMDE3", "commit_message": "Merge pull request #1480 from minrk/npmagic\n\nFix %notebook magic, etc. nbformat unicode tests and fixes.\r\n\r\n* json.writes always gives unicode, so that `current.writes` can be trusted to give the same interface\r\n* setup base TestCase for nbformat tests, to consolidate code, and better test both file formats\r\n* add tests for reading/writing to files\r\n* allow `name` as kwarg to new_notebook to avoid unnecessary breakage of previous API.\r\n* remove fallback to xml, which would hide corrupt notebook files behind a nonsensical 'xml unsupported' message.\r\n\r\nCloses #1545, #1487.", "commit_timestamp": "2012-04-15T00:20:48Z", "files": ["IPython/core/magic.py", "IPython/core/tests/test_magic.py", "IPython/nbformat/v3/nbbase.py", "IPython/nbformat/v3/nbjson.py", "IPython/nbformat/v3/rwbase.py", "IPython/nbformat/v3/tests/formattest.py", "IPython/nbformat/v3/tests/nbexamples.py", "IPython/nbformat/v3/tests/test_json.py", "IPython/nbformat/v3/tests/test_nbbase.py", "IPython/nbformat/v3/tests/test_nbpy.py", "IPython/utils/py3compat.py"]}], "labels": ["bug"], "created_at": "2012-03-10T13:11:59Z", "closed_at": "2012-04-15T00:33:15Z", "method": ["label", "regex"]}
{"issue_number": 1484, "title": "unhide .git_commit_info.ini", "body": ".git_commit_info is installed into system paths by setup.py\nsome security audit tools do not like this.\n\nI see no reason why this file should be hidden, can the dot be removed?\n\nsee http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=663256\n", "commits": [{"node_id": "MDY6Q29tbWl0MjA2NTk3MTpiNmYxYjZlNTFkMmI1NjJmYmZiZjI0NGI0N2U0NWQ4NmY1ZjU1MmFm", "commit_message": "unhide git_commit_info.ini\n\ninstalling hidden files in system paths is bad style\ncloses #1484", "commit_timestamp": "2012-03-25T13:16:47Z", "files": ["IPython/utils/sysinfo.py", "setupbase.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjU3NmY2Zjk1NGRkYjBjZjY4OTQzODJkNmNkYmQzODNkNWVlZmE0ODA=", "commit_message": "Merge pull request #1538 from minrk/git_info\n\nstore git commit hash in utils._sysinfo instead of hidden data file\r\n\r\nBehavior is essentially unchanged, but the hash is stored in a generated Python file instead of hidden data file.\r\n\r\nCloses #1484.", "commit_timestamp": "2012-04-14T05:54:05Z", "files": ["IPython/utils/_sysinfo.py", "IPython/utils/sysinfo.py", "setupbase.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzowNTcxZGE5MDRmZjY1NjUzMjRmNDVlOTE1M2RlMTdjN2JjNjIzOGQz", "commit_message": "Merge pull request #1538 from minrk/git_info\n\nstore git commit hash in utils._sysinfo instead of hidden data file\r\n\r\nBehavior is essentially unchanged, but the hash is stored in a generated Python file instead of hidden data file.\r\n\r\nCloses #1484.", "commit_timestamp": "2012-04-14T05:54:05Z", "files": ["IPython/utils/_sysinfo.py", "IPython/utils/sysinfo.py", "setupbase.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjU3NmY2Zjk1NGRkYjBjZjY4OTQzODJkNmNkYmQzODNkNWVlZmE0ODA=", "commit_message": "Merge pull request #1538 from minrk/git_info\n\nstore git commit hash in utils._sysinfo instead of hidden data file\r\n\r\nBehavior is essentially unchanged, but the hash is stored in a generated Python file instead of hidden data file.\r\n\r\nCloses #1484.", "commit_timestamp": "2012-04-14T05:54:05Z", "files": ["IPython/utils/_sysinfo.py", "IPython/utils/sysinfo.py", "setupbase.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjU3NmY2Zjk1NGRkYjBjZjY4OTQzODJkNmNkYmQzODNkNWVlZmE0ODA=", "commit_message": "Merge pull request #1538 from minrk/git_info\n\nstore git commit hash in utils._sysinfo instead of hidden data file\r\n\r\nBehavior is essentially unchanged, but the hash is stored in a generated Python file instead of hidden data file.\r\n\r\nCloses #1484.", "commit_timestamp": "2012-04-14T05:54:05Z", "files": ["IPython/utils/_sysinfo.py", "IPython/utils/sysinfo.py", "setupbase.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4Ojc0YzEwYjNjMDNlMzc3NjEyYjU0ZWFjOGViMTlmZTBjOTU5MzA2ODM=", "commit_message": "Emergency fix for py3 breakage introduced in 576f6f (merge of #1538)\n\nUnicode literals (u'foo') aren't valid in Python 3.{1,2} (they will be\nagain in 3.3, and I failed to notice this.  This is a quick fix, will\ndiscuss further on-list.  But I want master to remain working for py3\nusers.", "commit_timestamp": "2012-04-14T09:10:58Z", "files": ["IPython/utils/_sysinfo.py", "setupbase.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmM1OTg3YzA2NjRjMGZlMzZkMjFmMzZkZjc4ZDU5NTI4NjM5MDA0NDY=", "commit_message": "Emergency fix for py3 breakage introduced in 576f6f (merge of #1538)\n\nUnicode literals (u'foo') aren't valid in Python 3.{1,2} (they will be\nagain in 3.3, and I failed to notice this.  This is a quick fix, will\ndiscuss further on-list.  But I want master to remain working for py3\nusers.", "commit_timestamp": "2012-04-17T02:01:00Z", "files": ["IPython/utils/_sysinfo.py", "setupbase.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzowNTcxZGE5MDRmZjY1NjUzMjRmNDVlOTE1M2RlMTdjN2JjNjIzOGQz", "commit_message": "Merge pull request #1538 from minrk/git_info\n\nstore git commit hash in utils._sysinfo instead of hidden data file\r\n\r\nBehavior is essentially unchanged, but the hash is stored in a generated Python file instead of hidden data file.\r\n\r\nCloses #1484.", "commit_timestamp": "2012-04-14T05:54:05Z", "files": ["IPython/utils/_sysinfo.py", "IPython/utils/sysinfo.py", "setupbase.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzplMzRlNWRlZTdkOTUyMjA3ZjM0NmI0ODE0ZDcwZTc4YmMwNGVmZWFm", "commit_message": "Emergency fix for py3 breakage introduced in 576f6f (merge of #1538)\n\nUnicode literals (u'foo') aren't valid in Python 3.{1,2} (they will be\nagain in 3.3, and I failed to notice this.  This is a quick fix, will\ndiscuss further on-list.  But I want master to remain working for py3\nusers.", "commit_timestamp": "2012-04-14T09:10:58Z", "files": ["IPython/utils/_sysinfo.py", "setupbase.py"]}], "labels": [], "created_at": "2012-03-10T00:21:10Z", "closed_at": "2012-04-14T05:54:08Z", "linked_pr_number": [1484], "method": ["regex"]}
{"issue_number": 1479, "title": "test_extension failing in Windows", "body": "https://jenkins.shiningpanda.com/ipython/job/ipython-windows-py27/3/testReport/junit/IPython.core.tests/test_magic/test_extension/\n\n%install_ext uses urlparse and urlretrieve to handle a URL. On POSIX systems these handle local file paths, like the one used in the test, as well. On Windows, at least urlretrieve fails with a local path. Our code should detect this case and use `shutil.copy` (or something similar) to move the file instead.\n", "commits": [{"node_id": "MDY6Q29tbWl0MTIzNjAwMzo3MmQ1MTA3MzMwNWJjYWNkMTM1ZWQ5ZTk3OGVjY2EyNDFjOWYxNDZh", "commit_message": "Fix installing extension from local file on Windows.\n\nCloses gh-1479", "commit_timestamp": "2012-04-19T20:16:35Z", "files": ["IPython/core/extensions.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjcyZDUxMDczMzA1YmNhY2QxMzVlZDllOTc4ZWNjYTI0MWM5ZjE0NmE=", "commit_message": "Fix installing extension from local file on Windows.\n\nCloses gh-1479", "commit_timestamp": "2012-04-19T20:16:35Z", "files": ["IPython/core/extensions.py"]}, {"node_id": "MDY6Q29tbWl0MjA4MDg0MzphZGQwMTYxZDM3MzY5Yzc3MzkzMGU2NWMwMGQ2YTg0ZDYzYmQyZjU0", "commit_message": "Merge pull request #1633 from takluyver/i1479\n\nFix installing extension from local file on Windows.\r\n\r\nCloses gh-1479", "commit_timestamp": "2012-04-23T14:22:09Z", "files": ["IPython/core/extensions.py", "IPython/core/magic.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo1YjljYWIwN2MxODRiZmRkZDI4OTYxODJlMzA0MDhjYWI1NDcxODVi", "commit_message": "Fix installing extension from local file on Windows.\n\nCloses gh-1479", "commit_timestamp": "2012-04-19T20:16:35Z", "files": ["IPython/core/extensions.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzpmMGM3OTdlY2ZiMjQyYTUyM2ViOWQyNGE4MDc3MzQ0M2Y3OTcxNDJj", "commit_message": "Merge pull request #1633 from takluyver/i1479\n\nFix installing extension from local file on Windows.\r\n\r\nCloses gh-1479", "commit_timestamp": "2012-04-23T14:22:09Z", "files": ["IPython/core/extensions.py", "IPython/core/magic.py"]}], "labels": ["windows", "bug"], "created_at": "2012-03-08T21:56:55Z", "closed_at": "2012-04-23T14:22:10Z", "method": ["label", "regex"]}
{"issue_number": 1470, "title": "SyntaxError on setup.py install with Python 3", "body": "Running `python setup.py install` with Python 3 shows a load of syntaxerrors from example .py files in the docs, although it still completes successfully. It seems to try to byte-compile all .py files in the installation directory, even if they're not part of the package, but 2to3 only runs on files that are in the package.\n\nWe should either ensure 2to3 runs on the examples during installation, or stop it trying to byte-compile them. At present, I'm not quite sure how to achieve either.\n", "commits": [{"node_id": "MDY6Q29tbWl0MTIzNjAwMzo5NzVlOGM0ZDEwMDJjZjAxYzUzMWFmOTg2OTFmZjZkNGFkN2I0NDM3", "commit_message": "Force setuptools to skip byte compilation when installing on Python 3.\n\nCloses gh-1470", "commit_timestamp": "2012-04-18T13:02:29Z", "files": ["setup.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4Ojk3NWU4YzRkMTAwMmNmMDFjNTMxYWY5ODY5MWZmNmQ0YWQ3YjQ0Mzc=", "commit_message": "Force setuptools to skip byte compilation when installing on Python 3.\n\nCloses gh-1470", "commit_timestamp": "2012-04-18T13:02:29Z", "files": ["setup.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjdjMGExMGJkMzZkMGFjODViMmJjMzc5YjA5NGM2ZGZmMzA4ODEyMGI=", "commit_message": "Merge pull request #1624 from takluyver/i1470\n\nTwo distinct but related fixes for byte-compilation on Python 3.\r\n\r\n* A slight hack so setuptools refrains from trying to byte-compile everything - issue #1470. The actual modules are still compiled by another step when I do `python3 setup.py install`, but that step is smart enough not to try to compile the examples as well.\r\n\r\n* A workaround for a bug in Python 3.1 - py_compile had only partly implemented PEP 263, so it recognises `coding:`, but not `encoding:` to specify a file encoding. This was causing build failures since my `nonascii.py` test sample was merged.\r\n\r\nCloses #1470.", "commit_timestamp": "2012-04-18T20:08:54Z", "files": ["IPython/core/tests/nonascii.py", "setup.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzoxNTI4ZjMzNTU2MzliNmE4OGFiZGEzMDQxYjU3YTYzZTQxNzE2MTcz", "commit_message": "Force setuptools to skip byte compilation when installing on Python 3.\n\nCloses gh-1470", "commit_timestamp": "2012-04-18T13:02:29Z", "files": ["setup.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzpiNmE4MTJmMDM0ZGYyYjIwMjNjZjcyNDI1YTY1ZjU4NmUzZmI0MWVh", "commit_message": "Merge pull request #1624 from takluyver/i1470\n\nTwo distinct but related fixes for byte-compilation on Python 3.\r\n\r\n* A slight hack so setuptools refrains from trying to byte-compile everything - issue #1470. The actual modules are still compiled by another step when I do `python3 setup.py install`, but that step is smart enough not to try to compile the examples as well.\r\n\r\n* A workaround for a bug in Python 3.1 - py_compile had only partly implemented PEP 263, so it recognises `coding:`, but not `encoding:` to specify a file encoding. This was causing build failures since my `nonascii.py` test sample was merged.\r\n\r\nCloses #1470.", "commit_timestamp": "2012-04-18T20:08:54Z", "files": ["IPython/core/tests/nonascii.py", "setup.py"]}], "labels": ["bug"], "created_at": "2012-03-04T14:23:13Z", "closed_at": "2012-04-18T20:08:56Z", "method": ["label"]}
{"issue_number": 1456, "title": "ERROR: Internal Python error in the inspect module.", "body": "Looks like this is related to issue #53. I just got the following in the notebook:\n\n```\nIn [33]:\n\n# Switch to NumPy\npw.prtparam = p\n```\n\n```\nTraceback (most recent call last):\n  File \"C:\\Python27\\lib\\site-packages\\ipython-0.13.dev-py2.7.egg\\IPython\\core\\ultratb.py\", line 756, in structured_traceback\n    records = _fixed_getinnerframes(etb, context, tb_offset)\n  File \"C:\\Python27\\lib\\site-packages\\ipython-0.13.dev-py2.7.egg\\IPython\\core\\ultratb.py\", line 242, in _fixed_getinnerframes\n    records  = fix_frame_records_filenames(inspect.getinnerframes(etb, context))\n  File \"C:\\Python27\\lib\\inspect.py\", line 1041, in getinnerframes\n    framelist.append((tb.tb_frame,) + getframeinfo(tb, context))\n  File \"C:\\Python27\\lib\\inspect.py\", line 1005, in getframeinfo\n    lines, lnum = findsource(frame)\n  File \"C:\\Python27\\lib\\inspect.py\", line 578, in findsource\n    if pat.match(lines[lnum]): break\nIndexError: list index out of range\nERROR: Internal Python error in the inspect module.\nBelow is the traceback from this internal error.\n\nUnfortunately, your original traceback can not be constructed.\n```\n", "commits": [{"node_id": "MDY6Q29tbWl0MTIzNjAwMzpiNDIzMWE0OWExOTNkYTI3YTY1YjNlZmNlMTExOWVmYjdmOGI0NDIz", "commit_message": "Add failing test for issue gh-1456", "commit_timestamp": "2012-08-01T19:13:13Z", "files": ["IPython/core/tests/test_ultratb.py", "IPython/testing/tools.py"]}, {"node_id": "MDY6Q29tbWl0MTIzNjAwMzoyOThmZGFiNTAyNTc0NWNkMjVmN2Y0ODE0N2Q4YmM0YzY1YmU5ZDRh", "commit_message": "Reapply our monkeypatch to inspect.findsource().\n\nCloses gh-1456", "commit_timestamp": "2012-08-01T19:19:50Z", "files": ["IPython/core/ultratb.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjI5OGZkYWI1MDI1NzQ1Y2QyNWY3ZjQ4MTQ3ZDhiYzRjNjViZTlkNGE=", "commit_message": "Reapply our monkeypatch to inspect.findsource().\n\nCloses gh-1456", "commit_timestamp": "2012-08-01T19:19:50Z", "files": ["IPython/core/ultratb.py"]}, {"node_id": "MDY6Q29tbWl0MjM0NDA3MzoyYTcxZTExY2EwYzM4MGI4ODQ0OGE5ZGM4MWJjN2NlYjA1NDdjNTg3", "commit_message": "Add failing test for issue gh-1456", "commit_timestamp": "2012-09-05T12:45:55Z", "files": ["IPython/core/tests/test_ultratb.py", "IPython/testing/tools.py"]}, {"node_id": "MDY6Q29tbWl0MjM0NDA3MzpjMzE3MmVmMTIyYzA3ZGM0NGQyODgwOWRjNzIyMGMyOGU3YTI0NjRh", "commit_message": "Reapply our monkeypatch to inspect.findsource().\n\nCloses gh-1456", "commit_timestamp": "2012-09-05T12:45:55Z", "files": ["IPython/core/ultratb.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzplZDg3NjhhMWU4M2E5NmYyMGJmNmMxMDA0NWNiZWRjZmY5Mzc5ZTU3", "commit_message": "Add failing test for issue gh-1456", "commit_timestamp": "2012-08-01T19:13:13Z", "files": ["IPython/core/tests/test_ultratb.py", "IPython/testing/tools.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzoyNzIyMWMyYjVkYzY3YWEwY2M0NmE3MjIwNjg4NjRkOTlmYzc0NTZm", "commit_message": "Reapply our monkeypatch to inspect.findsource().\n\nCloses gh-1456", "commit_timestamp": "2012-08-01T19:19:50Z", "files": ["IPython/core/ultratb.py"]}, {"node_id": "MDY6Q29tbWl0MTc0ODk5MjM5OjhmNTQ4NzA1NmVlYzA2ZGJmMDUwYjAyOWI3MTJiNmI0MzhmYjIxNzc=", "commit_message": "base: Implement (im)mutable config properties\n\nAs defined by arch/0003-Config-Property-Mutable-vs-Immutable.rst\n\nRelated: https://github.com/ipython/ipython/issues/1456\n\nSigned-off-by: John Andersen <johnandersenpdx@gmail.com>", "commit_timestamp": "2021-08-04T11:49:30Z", "files": ["dffml/base.py", "dffml/df/memory.py", "dffml/model/model.py", "dffml/source/df.py", "dffml/source/dir.py", "dffml/source/file.py", "dffml/util/python.py", "model/vowpalWabbit/dffml_model_vowpalWabbit/vw_base.py"]}, {"node_id": "MDY6Q29tbWl0MTc0ODk5MjM5OjBlMjQ1NzM0OGZiMDA2N2RmYTUyM2ZiN2FlNTkzYTA4ODYxMjIxMjA=", "commit_message": "base: Implement (im)mutable config properties\n\nAs defined by arch/0003-Config-Property-Mutable-vs-Immutable.rst\n\nRelated: https://github.com/ipython/ipython/issues/1456\n\nSigned-off-by: John Andersen <johnandersenpdx@gmail.com>", "commit_timestamp": "2021-08-04T16:37:08Z", "files": ["dffml/base.py", "dffml/df/memory.py", "dffml/model/model.py", "dffml/source/df.py", "dffml/source/dir.py", "dffml/source/file.py", "model/vowpalWabbit/dffml_model_vowpalWabbit/vw_base.py"]}, {"node_id": "MDY6Q29tbWl0MTc0ODk5MjM5OmY4ZDIwMzc2YTRmZTgwYzkyMGUwZGU0OTMwODQ5MDEyMzdkZTNhZTU=", "commit_message": "base: Implement (im)mutable config properties\n\nAs defined by arch/0003-Config-Property-Mutable-vs-Immutable.rst\n\nRelated: https://github.com/ipython/ipython/issues/1456\n\nSigned-off-by: John Andersen <johnandersenpdx@gmail.com>", "commit_timestamp": "2021-08-04T16:40:01Z", "files": ["dffml/base.py", "dffml/df/memory.py", "dffml/model/model.py", "dffml/source/df.py", "dffml/source/dir.py", "dffml/source/file.py", "model/vowpalWabbit/dffml_model_vowpalWabbit/vw_base.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjY0MjZiNDFkZmVlNWYzZGIxNDc4MzFkZGQ3MWY3MTkwOWIzOWRhZjg=", "commit_message": "Merge pull request #2232 from takluyver/i1456\n\nReapply monkeypatch to inspect.findsource()", "commit_timestamp": "2012-08-02T09:36:17Z", "files": ["IPython/core/tests/test_ultratb.py", "IPython/core/ultratb.py", "IPython/testing/tools.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjY0MjZiNDFkZmVlNWYzZGIxNDc4MzFkZGQ3MWY3MTkwOWIzOWRhZjg=", "commit_message": "Merge pull request #2232 from takluyver/i1456\n\nReapply monkeypatch to inspect.findsource()", "commit_timestamp": "2012-08-02T09:36:17Z", "files": ["IPython/core/tests/test_ultratb.py", "IPython/core/ultratb.py", "IPython/testing/tools.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzowM2FmN2M3MzA2Y2M3ZTE4OWIxYzE4YzM4OTJlYjQ3MDZjZDk3N2Mw", "commit_message": "Merge pull request #2232 from takluyver/i1456\n\nReapply monkeypatch to inspect.findsource()", "commit_timestamp": "2012-08-02T09:36:17Z", "files": ["IPython/core/tests/test_ultratb.py", "IPython/core/ultratb.py", "IPython/testing/tools.py"]}], "labels": ["bug", "needs-info"], "created_at": "2012-02-29T23:49:46Z", "closed_at": "2012-08-02T09:36:19Z", "linked_pr_number": [1456], "method": ["label"]}
{"issue_number": 1442, "title": "cache-size issue in qtconsole", "body": "When the qtconsole is started with the option --cache-size=0, the return values of the functions become \"None\".\nVersion :0.12\nOS: Both in Windows Xp and 7\n\nNote: The same problem does not exist in the terminal.\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU4NTE4OjZjYmU1MDdhNjA4NDY1ZmNjMTk3OTM0ZDczYjVjNzdmMzEyZmY1NTU=", "commit_message": "Merge pull request #1691 from minrk/1442\n\nCloses #1442: bug in messaging when cache size is set to 0.", "commit_timestamp": "2012-05-10T00:07:25Z", "files": ["IPython/frontend/qt/console/ipython_widget.py", "IPython/frontend/qt/console/rich_ipython_widget.py", "IPython/zmq/displayhook.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzoyMTVlMWZmYmMwMzZlNWNkZTk4Mjc3MDM1ODYxMjkxZTU2MzgzZWMw", "commit_message": "Merge pull request #1691 from minrk/1442\n\nCloses #1442: bug in messaging when cache size is set to 0.", "commit_timestamp": "2012-05-10T00:07:25Z", "files": ["IPython/frontend/qt/console/ipython_widget.py", "IPython/frontend/qt/console/rich_ipython_widget.py", "IPython/zmq/displayhook.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjZjYmU1MDdhNjA4NDY1ZmNjMTk3OTM0ZDczYjVjNzdmMzEyZmY1NTU=", "commit_message": "Merge pull request #1691 from minrk/1442\n\nCloses #1442: bug in messaging when cache size is set to 0.", "commit_timestamp": "2012-05-10T00:07:25Z", "files": ["IPython/frontend/qt/console/ipython_widget.py", "IPython/frontend/qt/console/rich_ipython_widget.py", "IPython/zmq/displayhook.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjZjYmU1MDdhNjA4NDY1ZmNjMTk3OTM0ZDczYjVjNzdmMzEyZmY1NTU=", "commit_message": "Merge pull request #1691 from minrk/1442\n\nCloses #1442: bug in messaging when cache size is set to 0.", "commit_timestamp": "2012-05-10T00:07:25Z", "files": ["IPython/frontend/qt/console/ipython_widget.py", "IPython/frontend/qt/console/rich_ipython_widget.py", "IPython/zmq/displayhook.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzoyMTVlMWZmYmMwMzZlNWNkZTk4Mjc3MDM1ODYxMjkxZTU2MzgzZWMw", "commit_message": "Merge pull request #1691 from minrk/1442\n\nCloses #1442: bug in messaging when cache size is set to 0.", "commit_timestamp": "2012-05-10T00:07:25Z", "files": ["IPython/frontend/qt/console/ipython_widget.py", "IPython/frontend/qt/console/rich_ipython_widget.py", "IPython/zmq/displayhook.py"]}], "labels": ["qtconsole", "bug"], "created_at": "2012-02-28T07:44:24Z", "closed_at": "2012-05-10T00:07:26Z", "linked_pr_number": [1442], "method": ["label"]}
{"issue_number": 1421, "title": "ipython32 %run -d breaks with NameError name 'execfile' is not defined", "body": "``` python\nIn [175]: %run -d -b109 parser\nBreakpoint 1 at /Users/ShereKahn/Prog/Clojure/Alatar/Data/parser.py:109\nNOTE: Enter 'c' at the ipdb>  prompt to start your script.\n> <string>(1)<module>()\n\nipdb> c\n---------------------------------------------------------------------------\nNameError                                 Traceback (most recent call last)\nNameError: name 'execfile' is not defined\n```\n", "commits": [{"node_id": "MDY6Q29tbWl0MTIzNjAwMzozZTFhNTA5MjA5MzgwNjJhNzhjM2RiYWI4MzM2NmRjNTBjMWYyZDJk", "commit_message": "Fix for %run -d on Python 3\n\nCloses gh-1421", "commit_timestamp": "2012-04-15T10:55:52Z", "files": ["IPython/core/magic.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjNlMWE1MDkyMDkzODA2MmE3OGMzZGJhYjgzMzY2ZGM1MGMxZjJkMmQ=", "commit_message": "Fix for %run -d on Python 3\n\nCloses gh-1421", "commit_timestamp": "2012-04-15T10:55:52Z", "files": ["IPython/core/magic.py"]}, {"node_id": "MDY6Q29tbWl0MTU3MjY3NTo5YjlmYjllNzNmZTc0NTFhNDU0MzA5ZDI0NGU1NzViMzYyMDk2YTgz", "commit_message": "Merge pull request #1599 from takluyver/run-d-py3\n\nFix for %run -d on Python 3.\r\n\r\nCloses gh-1421.", "commit_timestamp": "2012-04-15T21:52:44Z", "files": ["IPython/core/magic.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzpjZmJlMmM0ODA4ZDcxYTE4NjBiOGE4NWM5ODA0YzI4NWVhMmQyNjdi", "commit_message": "Fix for %run -d on Python 3\n\nCloses gh-1421", "commit_timestamp": "2012-04-15T10:55:52Z", "files": ["IPython/core/magic.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzphOTY5YWU4MWMzZmU0OTE5MWM0MWE0MjdjMjAwOTdmZGU0ODhjMWI4", "commit_message": "Merge pull request #1599 from takluyver/run-d-py3\n\nFix for %run -d on Python 3.\r\n\r\nCloses gh-1421.", "commit_timestamp": "2012-04-15T21:52:44Z", "files": ["IPython/core/magic.py"]}], "labels": ["bug"], "created_at": "2012-02-19T22:01:51Z", "closed_at": "2012-04-15T21:52:45Z", "method": ["label"]}
{"issue_number": 1412, "title": "Input parsing issue with %prun", "body": "```\nIn [5]: %prun grouped.agg({'value1' : 'mean', 'value2' : 'var', 'value3' : 'sum'})\n  File \"<string>\", line 1\n    'value1' : 'mean', 'value2' : 'var', 'value3' : 'sum'\n             ^\nSyntaxError: invalid syntax\n```\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU4NTE4OjQ0ODAyOTk5NTA0ODRiMzg4Mjk2OTEyYjQ5MmUyNzU0NWRhYzQ1YzQ=", "commit_message": "Merge pull request #1414 from minrk/var_expand\n\nignore errors in shell.var_expand\r\n\r\nIf an error is raised in the formatter, leave it untransformed. This means that var_expand(\"$foo\") will return \"$foo\" if foo is undefined, but more importantly it will not raise when var_expand is used on literal code that doesn't expect to be expanded (e.g. %prun arguments).\r\n\r\ncloses #1412", "commit_timestamp": "2012-02-27T21:20:48Z", "files": ["IPython/core/interactiveshell.py", "IPython/core/tests/test_interactiveshell.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo4ZTI4NzgyNzA1NjNhYjg0MjIyZjUyZmU0NzY1ZjNiOTk5YjQ2ODUy", "commit_message": "Merge pull request #1414 from minrk/var_expand\n\nignore errors in shell.var_expand\r\n\r\nIf an error is raised in the formatter, leave it untransformed. This means that var_expand(\"$foo\") will return \"$foo\" if foo is undefined, but more importantly it will not raise when var_expand is used on literal code that doesn't expect to be expanded (e.g. %prun arguments).\r\n\r\ncloses #1412", "commit_timestamp": "2012-02-27T21:20:48Z", "files": ["IPython/core/interactiveshell.py", "IPython/core/tests/test_interactiveshell.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjQ0ODAyOTk5NTA0ODRiMzg4Mjk2OTEyYjQ5MmUyNzU0NWRhYzQ1YzQ=", "commit_message": "Merge pull request #1414 from minrk/var_expand\n\nignore errors in shell.var_expand\r\n\r\nIf an error is raised in the formatter, leave it untransformed. This means that var_expand(\"$foo\") will return \"$foo\" if foo is undefined, but more importantly it will not raise when var_expand is used on literal code that doesn't expect to be expanded (e.g. %prun arguments).\r\n\r\ncloses #1412", "commit_timestamp": "2012-02-27T21:20:48Z", "files": ["IPython/core/interactiveshell.py", "IPython/core/tests/test_interactiveshell.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjQ0ODAyOTk5NTA0ODRiMzg4Mjk2OTEyYjQ5MmUyNzU0NWRhYzQ1YzQ=", "commit_message": "Merge pull request #1414 from minrk/var_expand\n\nignore errors in shell.var_expand\r\n\r\nIf an error is raised in the formatter, leave it untransformed. This means that var_expand(\"$foo\") will return \"$foo\" if foo is undefined, but more importantly it will not raise when var_expand is used on literal code that doesn't expect to be expanded (e.g. %prun arguments).\r\n\r\ncloses #1412", "commit_timestamp": "2012-02-27T21:20:48Z", "files": ["IPython/core/interactiveshell.py", "IPython/core/tests/test_interactiveshell.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo4ZTI4NzgyNzA1NjNhYjg0MjIyZjUyZmU0NzY1ZjNiOTk5YjQ2ODUy", "commit_message": "Merge pull request #1414 from minrk/var_expand\n\nignore errors in shell.var_expand\r\n\r\nIf an error is raised in the formatter, leave it untransformed. This means that var_expand(\"$foo\") will return \"$foo\" if foo is undefined, but more importantly it will not raise when var_expand is used on literal code that doesn't expect to be expanded (e.g. %prun arguments).\r\n\r\ncloses #1412", "commit_timestamp": "2012-02-27T21:20:48Z", "files": ["IPython/core/interactiveshell.py", "IPython/core/tests/test_interactiveshell.py"]}], "labels": ["important", "bug", "regression"], "created_at": "2012-02-18T19:44:56Z", "closed_at": "2012-02-27T21:20:51Z", "linked_pr_number": [1412], "method": ["label"]}
{"issue_number": 1401, "title": "numpy arrays cannot be used with View.apply() in Python 3", "body": "In Python 3, numpy arrays cannot be passed to `apply()`, due to explicit use of `buffer` instead of `memoryview`.\n\nTested on:\nPython 3.2.1 (default, Jul 18 2011, 16:24:40) [GCC]\nIPython 0.13.dev, 0.12\n\n``` python\nfrom IPython.parallel import Client\nimport numpy\n\ndef test(arr):\n    return arr[0]\n\nif __name__ == '__main__':\n    dview = Client(profile = 'local')\n    arr = numpy.arange(10)\n\n    res = dview[0].apply(test, arr)\n    print(res.get())\n```\n\nThe following error occurs:\n\n``` python\nTraceback (most recent call last):\n  File \"/home/aver/git/sdp/test(emd).py\", line 21, in <module>\n    res = call_emd(lst, parallel_profile = 'local')\n  File \"/home/aver/git/sdp/sdp/decorator/parallel.py\", line 16, in wrapper\n    async_result.append(engines_view.apply_sync(func, i, **kwargs))\n  File \"<string>\", line 2, in apply_sync\n  File \"/usr/local/lib/python3.2/site-packages/ipython-0.13.dev-py3.2.egg/IPython/parallel/client/view.py\", line 70, in spin_after\n    ret = f(self, *args, **kwargs)\n  File \"/usr/local/lib/python3.2/site-packages/ipython-0.13.dev-py3.2.egg/IPython/parallel/client/view.py\", line 227, in apply_sync\n    return self._really_apply(f, args, kwargs, block=True)\n  File \"<string>\", line 2, in _really_apply\n  File \"/usr/local/lib/python3.2/site-packages/ipython-0.13.dev-py3.2.egg/IPython/parallel/client/view.py\", line 59, in sync_results\n    ret = f(self, *args, **kwargs)\n  File \"<string>\", line 2, in _really_apply\n  File \"/usr/local/lib/python3.2/site-packages/ipython-0.13.dev-py3.2.egg/IPython/parallel/client/view.py\", line 48, in save_ids\n    ret = f(self, *args, **kwargs)\n  File \"/usr/local/lib/python3.2/site-packages/ipython-0.13.dev-py3.2.egg/IPython/parallel/client/view.py\", line 997, in _really_apply\n    return ar.get()\n  File \"/usr/local/lib/python3.2/site-packages/ipython-0.13.dev-py3.2.egg/IPython/parallel/client/asyncresult.py\", line 104, in get\n    raise self._exception\n  File \"/usr/local/lib/python3.2/site-packages/ipython-0.13.dev-py3.2.egg/IPython/parallel/client/asyncresult.py\", line 129, in wait\n    raise r\nIPython.parallel.error.RemoteError: NameError(global name 'buffer' is not defined)\nTraceback (most recent call last):\n  File \"/usr/local/lib/python3.2/site-packages/ipython-0.13.dev-py3.2.egg/IPython/parallel/engine/streamkernel.py\", line 320, in apply_request\n    f,args,kwargs = unpack_apply_message(bufs, working, copy=False)\n  File \"/usr/local/lib/python3.2/site-packages/ipython-0.13.dev-py3.2.egg/IPython/parallel/util.py\", line 305, in unpack_apply_message\n    sa.data = buffer(m)\nNameError: global name 'buffer' is not defined\n```\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU4NTE4OmJiY2M0ZWQ5NGFiOGE3YjU2YzMzYTEzNjgyYjU5NTA4NDRiZDc0YTY=", "commit_message": "Merge pull request #1477 from minrk/py3numpy\n\nfix dangling `buffer` in IPython.parallel.util, which should be memoryview on py3\r\n\r\nPreviously failing test included.\r\n\r\ncloses #1401", "commit_timestamp": "2012-03-25T06:49:19Z", "files": ["IPython/parallel/tests/test_view.py", "IPython/parallel/util.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo0ODA4ZmUxMmJiODE4MjA1MjFmNjRiYWNhYjFlMGUwODcwYTUxZTgz", "commit_message": "Merge pull request #1477 from minrk/py3numpy\n\nfix dangling `buffer` in IPython.parallel.util, which should be memoryview on py3\r\n\r\nPreviously failing test included.\r\n\r\ncloses #1401", "commit_timestamp": "2012-03-25T06:49:19Z", "files": ["IPython/parallel/tests/test_view.py", "IPython/parallel/util.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmJiY2M0ZWQ5NGFiOGE3YjU2YzMzYTEzNjgyYjU5NTA4NDRiZDc0YTY=", "commit_message": "Merge pull request #1477 from minrk/py3numpy\n\nfix dangling `buffer` in IPython.parallel.util, which should be memoryview on py3\r\n\r\nPreviously failing test included.\r\n\r\ncloses #1401", "commit_timestamp": "2012-03-25T06:49:19Z", "files": ["IPython/parallel/tests/test_view.py", "IPython/parallel/util.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmJiY2M0ZWQ5NGFiOGE3YjU2YzMzYTEzNjgyYjU5NTA4NDRiZDc0YTY=", "commit_message": "Merge pull request #1477 from minrk/py3numpy\n\nfix dangling `buffer` in IPython.parallel.util, which should be memoryview on py3\r\n\r\nPreviously failing test included.\r\n\r\ncloses #1401", "commit_timestamp": "2012-03-25T06:49:19Z", "files": ["IPython/parallel/tests/test_view.py", "IPython/parallel/util.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo0ODA4ZmUxMmJiODE4MjA1MjFmNjRiYWNhYjFlMGUwODcwYTUxZTgz", "commit_message": "Merge pull request #1477 from minrk/py3numpy\n\nfix dangling `buffer` in IPython.parallel.util, which should be memoryview on py3\r\n\r\nPreviously failing test included.\r\n\r\ncloses #1401", "commit_timestamp": "2012-03-25T06:49:19Z", "files": ["IPython/parallel/tests/test_view.py", "IPython/parallel/util.py"]}], "labels": ["bug", "parallel"], "created_at": "2012-02-13T03:32:46Z", "closed_at": "2012-03-25T06:49:20Z", "linked_pr_number": [1401], "method": ["label"]}
{"issue_number": 1359, "title": "[sympyprinting] MathJax can't render \\root{m}{n}", "body": "When running IPython notebook (0.12 or git) with sympy profile, latex representation of higher order roots in the output cell doesn't get rendered. To reproduce the problem, run `$ ipython2 notebook --profile=sympy` and then execute\n\n``` python\nIn [6]: a = 3**(S(1)/4) \na\n\nOut[6]: \\root{4}{3}  # I should see nicely rendered root here, not LaTex code.\n```\n\nSymPy 0.7.1. is used for this examples. The problem is that sympyprinting extension uses iTex markup instead of regular Latex. Why is that good? Here's the difference in root representation:\n\n``` python\nIn [7]: latex(a)\nOut[7]: \\sqrt[4]{3}   # MathJax can render this.\n\nIn [8]: latex(a, itex=True)\nOut[8]: \\root{4}{3}   # MathJax can't render this.\n```\n\nThere are two workarounds:\n- You can set `itex=False` in `extensions.sympyprinting.print_latex()`, but that will probably break something else, or\n- add a line that replaces iTex form with LaTex form, `import re; s = re.sub(r'\\\\root\\{(.*?)\\}\\{(.*?)\\}', r'\\\\sqrt[\\1]{\\2}', s)`\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU4ODMwOjVjZjI5NGM1ZWMxYjdmZGNjY2JmZDBmOGVmYTkzMjAxMTg1MDEyYWI=", "commit_message": "Fixing #1359. We are not using itex mode in sympyprinting.\n\nPreviuosly we were using itex=True in the sympy latex printer.\nI don't know why where were doing this but we should use regular\nprinting mode and put the $$ around the equations ourselves.", "commit_timestamp": "2012-02-01T18:16:14Z", "files": ["IPython/extensions/sympyprinting.py"]}, {"node_id": "MDY6Q29tbWl0NjU4ODMwOjgyNDdjYjE1NzQ0NTg3MGRmYmJmYjVkODNjYWUxMDYwZmQyYTgzNmQ=", "commit_message": "Related to #1359. Removing extra $ that older versions sympy add.\n\nOlder versions of sympy put in an extra $ when using\nlatex(e, mode='plain'). We are removing those before we add our\nown to make sure it works.", "commit_timestamp": "2012-02-02T17:33:41Z", "files": ["IPython/extensions/sympyprinting.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjU0YzNlMDYxZTFiM2VhYWNmYzY3NGE5Y2RmMDQ0YmQwZGY4NTQ0YWQ=", "commit_message": "Merge pull request #1361 from ellisonbg/nbissues\n\nA number of bug fixes for notebook issues that had crept up recently with all the major improvements done on multiple fronts.\r\n\r\nIn closing #1359, we've changed slightly how Math() works: it now unconditionally surrounds its input with $$...$$, so that it always appears in displayed math mode.  We have also introduced a new display object, Latex(), which does *not* add any latex markup, for other constructs beyond simple math expressions.  This change makes Math() friendlier to use in simple cases and means that Math(sympy.latex(foo)) will produce the expected displayed math results without the user having to add any $ markup.\r\n\r\nSummary of fixes:\r\n\r\nFixes #1344: Ctrl + M + L does not toggle line numbering in htmlnotebook.\r\n\r\nFixes #1337: Tab in the notebook after `(` should not indent, only give a tooltip.\r\n\r\nFixes #1339: Notebook printing broken.\r\n\r\nFixes #1348: `Ctrl-m-Ctrl-m` does not switch to markdown cell\r\n\r\nFixes #1359: [sympyprinting] MathJax can't render \\root{m}{n}", "commit_timestamp": "2012-02-02T21:41:01Z", "files": ["IPython/core/display.py", "IPython/core/formatters.py", "IPython/extensions/sympyprinting.py", "IPython/nbformat/current.py", "IPython/nbformat/v3/__init__.py", "IPython/nbformat/v3/convert.py", "IPython/nbformat/v3/nbbase.py", "IPython/nbformat/v3/nbpy.py", "IPython/nbformat/v3/tests/nbexamples.py", "IPython/nbformat/v3/tests/test_nbbase.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjU0YzNlMDYxZTFiM2VhYWNmYzY3NGE5Y2RmMDQ0YmQwZGY4NTQ0YWQ=", "commit_message": "Merge pull request #1361 from ellisonbg/nbissues\n\nA number of bug fixes for notebook issues that had crept up recently with all the major improvements done on multiple fronts.\r\n\r\nIn closing #1359, we've changed slightly how Math() works: it now unconditionally surrounds its input with $$...$$, so that it always appears in displayed math mode.  We have also introduced a new display object, Latex(), which does *not* add any latex markup, for other constructs beyond simple math expressions.  This change makes Math() friendlier to use in simple cases and means that Math(sympy.latex(foo)) will produce the expected displayed math results without the user having to add any $ markup.\r\n\r\nSummary of fixes:\r\n\r\nFixes #1344: Ctrl + M + L does not toggle line numbering in htmlnotebook.\r\n\r\nFixes #1337: Tab in the notebook after `(` should not indent, only give a tooltip.\r\n\r\nFixes #1339: Notebook printing broken.\r\n\r\nFixes #1348: `Ctrl-m-Ctrl-m` does not switch to markdown cell\r\n\r\nFixes #1359: [sympyprinting] MathJax can't render \\root{m}{n}", "commit_timestamp": "2012-02-02T21:41:01Z", "files": ["IPython/core/display.py", "IPython/core/formatters.py", "IPython/extensions/sympyprinting.py", "IPython/nbformat/current.py", "IPython/nbformat/v3/__init__.py", "IPython/nbformat/v3/convert.py", "IPython/nbformat/v3/nbbase.py", "IPython/nbformat/v3/nbpy.py", "IPython/nbformat/v3/tests/nbexamples.py", "IPython/nbformat/v3/tests/test_nbbase.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzoxNDA1NDU2NTE5NDhjODMzNThhOTkyMjFiY2ExZTg3YmI1NTVjMGRj", "commit_message": "Fixing #1359. We are not using itex mode in sympyprinting.\n\nPreviuosly we were using itex=True in the sympy latex printer.\nI don't know why where were doing this but we should use regular\nprinting mode and put the $$ around the equations ourselves.", "commit_timestamp": "2012-02-01T18:16:14Z", "files": ["IPython/extensions/sympyprinting.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo3ZGY5ZjUxZmIzNmFhZWU4M2Q0NDYwOTdjYTY5ZDE4YzkyZjk2OTEz", "commit_message": "Related to #1359. Removing extra $ that older versions sympy add.\n\nOlder versions of sympy put in an extra $ when using\nlatex(e, mode='plain'). We are removing those before we add our\nown to make sure it works.", "commit_timestamp": "2012-02-02T17:33:41Z", "files": ["IPython/extensions/sympyprinting.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzphMWZhOTA0ZjFmZmFkNWI2MGRjNzU2ZWMzYzlmY2Y0NWJiYzczOTY3", "commit_message": "Merge pull request #1361 from ellisonbg/nbissues\n\nA number of bug fixes for notebook issues that had crept up recently with all the major improvements done on multiple fronts.\r\n\r\nIn closing #1359, we've changed slightly how Math() works: it now unconditionally surrounds its input with $$...$$, so that it always appears in displayed math mode.  We have also introduced a new display object, Latex(), which does *not* add any latex markup, for other constructs beyond simple math expressions.  This change makes Math() friendlier to use in simple cases and means that Math(sympy.latex(foo)) will produce the expected displayed math results without the user having to add any $ markup.\r\n\r\nSummary of fixes:\r\n\r\nFixes #1344: Ctrl + M + L does not toggle line numbering in htmlnotebook.\r\n\r\nFixes #1337: Tab in the notebook after `(` should not indent, only give a tooltip.\r\n\r\nFixes #1339: Notebook printing broken.\r\n\r\nFixes #1348: `Ctrl-m-Ctrl-m` does not switch to markdown cell\r\n\r\nFixes #1359: [sympyprinting] MathJax can't render \\root{m}{n}", "commit_timestamp": "2012-02-02T21:41:01Z", "files": ["IPython/core/display.py", "IPython/core/formatters.py", "IPython/extensions/sympyprinting.py", "IPython/nbformat/current.py", "IPython/nbformat/v3/__init__.py", "IPython/nbformat/v3/convert.py", "IPython/nbformat/v3/nbbase.py", "IPython/nbformat/v3/nbpy.py", "IPython/nbformat/v3/tests/nbexamples.py", "IPython/nbformat/v3/tests/test_nbbase.py"]}], "labels": ["bug", "notebook"], "created_at": "2012-01-31T20:20:15Z", "closed_at": "2012-02-02T21:41:05Z", "method": ["label", "regex"]}
{"issue_number": 1349, "title": "`?` may generate hundreds of cell ", "body": "By mistake I have executed a cell like \r\n\r\n```\r\nfor i in range(3):\r\n    x= range?\r\n```\r\n\r\nbut with ~70 instead of 3\r\nwhich generated 70 code cell with just `x= range` in it...\r\nit was _really_ painfull to clean, it would be nice to prevent something like that\r\n", "commits": [{"node_id": "MDY6Q29tbWl0MTI3MDYwNDQ6NjU0YzlmZTU4M2ZlNDE3ZWZmOTUxMmZmYTU2ZTllMzA5ZjNmZDc2MA==", "commit_message": "set_next_input: squash multiple calls from the same cell execution\n\n* When calling multiple times set_next_input in a single cell execution,\n  we only keep the last input.\n\n* Added generic support to PayloadManager for updating (instead of\n  appending) payloads from a given 'source'.\n\nCloses #1349", "commit_timestamp": "2013-10-08T21:07:11Z", "files": ["IPython/core/payload.py", "IPython/kernel/zmq/zmqshell.py"]}, {"node_id": "MDY6Q29tbWl0MTI3MDYwNDQ6ZTlkYjZkNTg0ZDNlYWViY2E2OTRlNTcwMzg1NTFmNmE4NDJkNzBlYg==", "commit_message": "Add regression test for #1349", "commit_timestamp": "2013-10-10T08:37:24Z", "files": ["IPython/kernel/tests/test_message_spec.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzpkN2JjYzQwZGYwNzE0YTgxZjQ3ODczNjZmMDI2ZGRiMzQ1ZDMzZWE0", "commit_message": "set_next_input: squash multiple calls from the same cell execution\n\n* When calling multiple times set_next_input in a single cell execution,\n  we only keep the last input.\n\n* Added generic support to PayloadManager for updating (instead of\n  appending) payloads from a given 'source'.\n\nCloses #1349", "commit_timestamp": "2013-10-08T21:07:11Z", "files": ["IPython/core/payload.py", "IPython/kernel/zmq/zmqshell.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzoyNmFiMDNjMWUwMDAxNmMwMWVhNGFiNWQ5ZDM4YTI2MmQxMDdjMzUx", "commit_message": "Add regression test for #1349", "commit_timestamp": "2013-10-10T08:37:24Z", "files": ["IPython/kernel/tests/test_message_spec.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmViZjEyMTIzODMzYzIwNzk5NWEwM2RjOWJiNTQyZWNmMzVjYzFkY2M=", "commit_message": "Merge pull request #4363 from pablooliveira/set_next_input-reuses-cell\n\nset_next_input: keep only last input when repeatedly called in a single cell\r\n\r\nchange applied in general to payloads", "commit_timestamp": "2013-10-16T10:55:06Z", "files": ["IPython/core/payload.py", "IPython/kernel/tests/test_message_spec.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmViZjEyMTIzODMzYzIwNzk5NWEwM2RjOWJiNTQyZWNmMzVjYzFkY2M=", "commit_message": "Merge pull request #4363 from pablooliveira/set_next_input-reuses-cell\n\nset_next_input: keep only last input when repeatedly called in a single cell\r\n\r\nchange applied in general to payloads", "commit_timestamp": "2013-10-16T10:55:06Z", "files": ["IPython/core/payload.py", "IPython/kernel/tests/test_message_spec.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzoxMDM3NTMzOTU1NDJhYmZhOGQ0N2VkMmQ5ZWYwYjI0MDQ5MzIzNTA0", "commit_message": "Merge pull request #4363 from pablooliveira/set_next_input-reuses-cell\n\nset_next_input: keep only last input when repeatedly called in a single cell\r\n\r\nchange applied in general to payloads", "commit_timestamp": "2013-10-16T10:55:06Z", "files": ["IPython/core/payload.py", "IPython/kernel/tests/test_message_spec.py"]}], "labels": ["bug"], "created_at": "2012-01-30T15:07:59Z", "closed_at": "2013-10-16T10:55:06Z", "linked_pr_number": [1349], "method": ["label"]}
{"issue_number": 1345, "title": "notebook can't save unicode as script", "body": "saving notebooks with unicode cells (code or markdown) fails. evaluation and saving as ipynb work fine though.\n\n```\nWARNING:root:400 PUT /notebooks/96cba213-3f07-4191-ad40-39ac181b890a (127.0.0.1): Unexpected error while saving notebook as script: 'ascii' codec can't encode character u'\\u03c0' in position 308: ordinal not in range(128)\nWARNING:root:400 PUT /notebooks/96cba213-3f07-4191-ad40-39ac181b890a (127.0.0.1) 2.87ms\n```\n", "commits": [{"node_id": "MDY6Q29tbWl0MTIzNjAwMzpkZGVhZWJjYzRjN2VhOTg0YjVlYWM4Y2U3NjhmMWM0YmY3OTg0ODEy", "commit_message": "Save notebook as script using unicode file handle.\n\nCloses gh-1345", "commit_timestamp": "2012-01-30T21:43:48Z", "files": ["IPython/frontend/html/notebook/notebookmanager.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjhlOGIyYTk0YjJkMzRhMGViZWMyZjE3YzEzM2U0OTI4MmEzZWQzYzQ=", "commit_message": "Merge pull request #1353 from takluyver/i1345\n\nSave notebook as script using unicode file handle.\r\n\r\nUsing io.open(), which is the Python 3 open() in 2.6 and above.\r\n\r\nCloses #1345", "commit_timestamp": "2012-02-08T23:14:47Z", "files": ["IPython/frontend/html/notebook/notebookmanager.py"]}, {"node_id": "MDY6Q29tbWl0MjM0Mzk1OTo0NmMzNGQ2MmZjNzRmZjM5ZDljZjU5YTU2N2RkMzcyZjQyMDg2YjM5", "commit_message": "Save notebook as script using unicode file handle.\n\nCloses gh-1345", "commit_timestamp": "2012-04-06T21:34:56Z", "files": ["IPython/frontend/html/notebook/notebookmanager.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo4MWUzN2ZkOTAwZmRhNDI4MmUzMWNkODdlNGY2NDU5ODA3MTNhM2Ux", "commit_message": "Save notebook as script using unicode file handle.\n\nCloses gh-1345", "commit_timestamp": "2012-01-30T21:43:48Z", "files": ["IPython/frontend/html/notebook/notebookmanager.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzoyMDgwOTY5NTIwYTkyZDVhOTU3YzNjZWE0OTU0OTVmMzMyNzE3ODRj", "commit_message": "Merge pull request #1353 from takluyver/i1345\n\nSave notebook as script using unicode file handle.\r\n\r\nUsing io.open(), which is the Python 3 open() in 2.6 and above.\r\n\r\nCloses #1345", "commit_timestamp": "2012-02-08T23:14:47Z", "files": ["IPython/frontend/html/notebook/notebookmanager.py"]}], "labels": ["unicode", "bug", "notebook"], "created_at": "2012-01-29T23:49:28Z", "closed_at": "2012-02-08T23:14:49Z", "method": ["label", "regex"]}
{"issue_number": 1344, "title": "Ctrl + M + L does not toggle line numbering in htmlnotebook", "body": "Hi All,\n\nIn the development version, the combination given int the title does not toggle the line numbering in a code cell. It switches on the line numbers, but then those cannot be switched off. This is different in the stable version, and I believe, that is the intended behaviour.\nCheers,\nZolt\u00e1n\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU4NTE4OjU0YzNlMDYxZTFiM2VhYWNmYzY3NGE5Y2RmMDQ0YmQwZGY4NTQ0YWQ=", "commit_message": "Merge pull request #1361 from ellisonbg/nbissues\n\nA number of bug fixes for notebook issues that had crept up recently with all the major improvements done on multiple fronts.\r\n\r\nIn closing #1359, we've changed slightly how Math() works: it now unconditionally surrounds its input with $$...$$, so that it always appears in displayed math mode.  We have also introduced a new display object, Latex(), which does *not* add any latex markup, for other constructs beyond simple math expressions.  This change makes Math() friendlier to use in simple cases and means that Math(sympy.latex(foo)) will produce the expected displayed math results without the user having to add any $ markup.\r\n\r\nSummary of fixes:\r\n\r\nFixes #1344: Ctrl + M + L does not toggle line numbering in htmlnotebook.\r\n\r\nFixes #1337: Tab in the notebook after `(` should not indent, only give a tooltip.\r\n\r\nFixes #1339: Notebook printing broken.\r\n\r\nFixes #1348: `Ctrl-m-Ctrl-m` does not switch to markdown cell\r\n\r\nFixes #1359: [sympyprinting] MathJax can't render \\root{m}{n}", "commit_timestamp": "2012-02-02T21:41:01Z", "files": ["IPython/core/display.py", "IPython/core/formatters.py", "IPython/extensions/sympyprinting.py", "IPython/nbformat/current.py", "IPython/nbformat/v3/__init__.py", "IPython/nbformat/v3/convert.py", "IPython/nbformat/v3/nbbase.py", "IPython/nbformat/v3/nbpy.py", "IPython/nbformat/v3/tests/nbexamples.py", "IPython/nbformat/v3/tests/test_nbbase.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzphMWZhOTA0ZjFmZmFkNWI2MGRjNzU2ZWMzYzlmY2Y0NWJiYzczOTY3", "commit_message": "Merge pull request #1361 from ellisonbg/nbissues\n\nA number of bug fixes for notebook issues that had crept up recently with all the major improvements done on multiple fronts.\r\n\r\nIn closing #1359, we've changed slightly how Math() works: it now unconditionally surrounds its input with $$...$$, so that it always appears in displayed math mode.  We have also introduced a new display object, Latex(), which does *not* add any latex markup, for other constructs beyond simple math expressions.  This change makes Math() friendlier to use in simple cases and means that Math(sympy.latex(foo)) will produce the expected displayed math results without the user having to add any $ markup.\r\n\r\nSummary of fixes:\r\n\r\nFixes #1344: Ctrl + M + L does not toggle line numbering in htmlnotebook.\r\n\r\nFixes #1337: Tab in the notebook after `(` should not indent, only give a tooltip.\r\n\r\nFixes #1339: Notebook printing broken.\r\n\r\nFixes #1348: `Ctrl-m-Ctrl-m` does not switch to markdown cell\r\n\r\nFixes #1359: [sympyprinting] MathJax can't render \\root{m}{n}", "commit_timestamp": "2012-02-02T21:41:01Z", "files": ["IPython/core/display.py", "IPython/core/formatters.py", "IPython/extensions/sympyprinting.py", "IPython/nbformat/current.py", "IPython/nbformat/v3/__init__.py", "IPython/nbformat/v3/convert.py", "IPython/nbformat/v3/nbbase.py", "IPython/nbformat/v3/nbpy.py", "IPython/nbformat/v3/tests/nbexamples.py", "IPython/nbformat/v3/tests/test_nbbase.py"]}], "labels": ["bug", "notebook", "regression"], "created_at": "2012-01-29T22:46:57Z", "closed_at": "2012-02-02T21:41:04Z", "method": ["label"]}
{"issue_number": 1339, "title": "Notebook printing broken", "body": "The print view in the notebook is currently completely broken.  As Mark Voorhies pointed out on the list, during the Wijmo menu reorganization it was lost.  We should try to restore it asap, b/c I know many people do use printing to generate static pdfs.\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU4NTE4OjU0YzNlMDYxZTFiM2VhYWNmYzY3NGE5Y2RmMDQ0YmQwZGY4NTQ0YWQ=", "commit_message": "Merge pull request #1361 from ellisonbg/nbissues\n\nA number of bug fixes for notebook issues that had crept up recently with all the major improvements done on multiple fronts.\r\n\r\nIn closing #1359, we've changed slightly how Math() works: it now unconditionally surrounds its input with $$...$$, so that it always appears in displayed math mode.  We have also introduced a new display object, Latex(), which does *not* add any latex markup, for other constructs beyond simple math expressions.  This change makes Math() friendlier to use in simple cases and means that Math(sympy.latex(foo)) will produce the expected displayed math results without the user having to add any $ markup.\r\n\r\nSummary of fixes:\r\n\r\nFixes #1344: Ctrl + M + L does not toggle line numbering in htmlnotebook.\r\n\r\nFixes #1337: Tab in the notebook after `(` should not indent, only give a tooltip.\r\n\r\nFixes #1339: Notebook printing broken.\r\n\r\nFixes #1348: `Ctrl-m-Ctrl-m` does not switch to markdown cell\r\n\r\nFixes #1359: [sympyprinting] MathJax can't render \\root{m}{n}", "commit_timestamp": "2012-02-02T21:41:01Z", "files": ["IPython/core/display.py", "IPython/core/formatters.py", "IPython/extensions/sympyprinting.py", "IPython/nbformat/current.py", "IPython/nbformat/v3/__init__.py", "IPython/nbformat/v3/convert.py", "IPython/nbformat/v3/nbbase.py", "IPython/nbformat/v3/nbpy.py", "IPython/nbformat/v3/tests/nbexamples.py", "IPython/nbformat/v3/tests/test_nbbase.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzphMWZhOTA0ZjFmZmFkNWI2MGRjNzU2ZWMzYzlmY2Y0NWJiYzczOTY3", "commit_message": "Merge pull request #1361 from ellisonbg/nbissues\n\nA number of bug fixes for notebook issues that had crept up recently with all the major improvements done on multiple fronts.\r\n\r\nIn closing #1359, we've changed slightly how Math() works: it now unconditionally surrounds its input with $$...$$, so that it always appears in displayed math mode.  We have also introduced a new display object, Latex(), which does *not* add any latex markup, for other constructs beyond simple math expressions.  This change makes Math() friendlier to use in simple cases and means that Math(sympy.latex(foo)) will produce the expected displayed math results without the user having to add any $ markup.\r\n\r\nSummary of fixes:\r\n\r\nFixes #1344: Ctrl + M + L does not toggle line numbering in htmlnotebook.\r\n\r\nFixes #1337: Tab in the notebook after `(` should not indent, only give a tooltip.\r\n\r\nFixes #1339: Notebook printing broken.\r\n\r\nFixes #1348: `Ctrl-m-Ctrl-m` does not switch to markdown cell\r\n\r\nFixes #1359: [sympyprinting] MathJax can't render \\root{m}{n}", "commit_timestamp": "2012-02-02T21:41:01Z", "files": ["IPython/core/display.py", "IPython/core/formatters.py", "IPython/extensions/sympyprinting.py", "IPython/nbformat/current.py", "IPython/nbformat/v3/__init__.py", "IPython/nbformat/v3/convert.py", "IPython/nbformat/v3/nbbase.py", "IPython/nbformat/v3/nbpy.py", "IPython/nbformat/v3/tests/nbexamples.py", "IPython/nbformat/v3/tests/test_nbbase.py"]}], "labels": ["bug", "notebook", "regression"], "created_at": "2012-01-29T03:59:26Z", "closed_at": "2012-02-02T21:41:04Z", "method": ["label", "regex"]}
{"issue_number": 1337, "title": "Tab in the notebook after `(` should not indent, only give a tooltip", "body": "We have a small regression which I think was introduced by the recent CM fixes.  Tab after `(` should only show the popup tooltip but in that case should not try to indent.  The fix should be pretty easy, I'll try to have a look if @ellisonbg doesn't beat me to it, since he's deep in the middle of that code right now.\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU4NTE4OjU0YzNlMDYxZTFiM2VhYWNmYzY3NGE5Y2RmMDQ0YmQwZGY4NTQ0YWQ=", "commit_message": "Merge pull request #1361 from ellisonbg/nbissues\n\nA number of bug fixes for notebook issues that had crept up recently with all the major improvements done on multiple fronts.\r\n\r\nIn closing #1359, we've changed slightly how Math() works: it now unconditionally surrounds its input with $$...$$, so that it always appears in displayed math mode.  We have also introduced a new display object, Latex(), which does *not* add any latex markup, for other constructs beyond simple math expressions.  This change makes Math() friendlier to use in simple cases and means that Math(sympy.latex(foo)) will produce the expected displayed math results without the user having to add any $ markup.\r\n\r\nSummary of fixes:\r\n\r\nFixes #1344: Ctrl + M + L does not toggle line numbering in htmlnotebook.\r\n\r\nFixes #1337: Tab in the notebook after `(` should not indent, only give a tooltip.\r\n\r\nFixes #1339: Notebook printing broken.\r\n\r\nFixes #1348: `Ctrl-m-Ctrl-m` does not switch to markdown cell\r\n\r\nFixes #1359: [sympyprinting] MathJax can't render \\root{m}{n}", "commit_timestamp": "2012-02-02T21:41:01Z", "files": ["IPython/core/display.py", "IPython/core/formatters.py", "IPython/extensions/sympyprinting.py", "IPython/nbformat/current.py", "IPython/nbformat/v3/__init__.py", "IPython/nbformat/v3/convert.py", "IPython/nbformat/v3/nbbase.py", "IPython/nbformat/v3/nbpy.py", "IPython/nbformat/v3/tests/nbexamples.py", "IPython/nbformat/v3/tests/test_nbbase.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzphMWZhOTA0ZjFmZmFkNWI2MGRjNzU2ZWMzYzlmY2Y0NWJiYzczOTY3", "commit_message": "Merge pull request #1361 from ellisonbg/nbissues\n\nA number of bug fixes for notebook issues that had crept up recently with all the major improvements done on multiple fronts.\r\n\r\nIn closing #1359, we've changed slightly how Math() works: it now unconditionally surrounds its input with $$...$$, so that it always appears in displayed math mode.  We have also introduced a new display object, Latex(), which does *not* add any latex markup, for other constructs beyond simple math expressions.  This change makes Math() friendlier to use in simple cases and means that Math(sympy.latex(foo)) will produce the expected displayed math results without the user having to add any $ markup.\r\n\r\nSummary of fixes:\r\n\r\nFixes #1344: Ctrl + M + L does not toggle line numbering in htmlnotebook.\r\n\r\nFixes #1337: Tab in the notebook after `(` should not indent, only give a tooltip.\r\n\r\nFixes #1339: Notebook printing broken.\r\n\r\nFixes #1348: `Ctrl-m-Ctrl-m` does not switch to markdown cell\r\n\r\nFixes #1359: [sympyprinting] MathJax can't render \\root{m}{n}", "commit_timestamp": "2012-02-02T21:41:01Z", "files": ["IPython/core/display.py", "IPython/core/formatters.py", "IPython/extensions/sympyprinting.py", "IPython/nbformat/current.py", "IPython/nbformat/v3/__init__.py", "IPython/nbformat/v3/convert.py", "IPython/nbformat/v3/nbbase.py", "IPython/nbformat/v3/nbpy.py", "IPython/nbformat/v3/tests/nbexamples.py", "IPython/nbformat/v3/tests/test_nbbase.py"]}], "labels": ["bug", "notebook", "regression"], "created_at": "2012-01-28T07:23:31Z", "closed_at": "2012-02-02T21:41:04Z", "method": ["label"]}
{"issue_number": 1321, "title": "I/O doesn't work in windows qt-console when running shell command", "body": "I first noticed this when trying to hit ctrl-C and ctrl-break to interrupt a program. Some experimentation reveals that the I/O of the program being run is not properly piped to/from the console. I'm running the 64-bit version of ipython 0.12 in Windows 7.\n\nAs a simple example, consider the command 'pause'. In a dos prompt, it sits there with the 'Press any key to continue...' message until a key is pressed:\n\n```\nC:\\>pause\nPress any key to continue . . .\n\nC:\\>\n```\n\nIn IPython, it freezes, and the only way to continue is to kill and restart the ipython kernel. It does not print the 'Press any key to continue...' message:\n\n```\nIn [10]: !pause\n    [and ipython is frozen, unresponsive to any key-presses or the 'Interrupt Kernel' menu command]\n```\n\nA comparable program, the shell used in cygwin (http://code.google.com/p/mintty/), also handles this command incorrectly, but not as badly as ipython. In this case, hitting the enter key is necessary to continue, other keys are improperly cached, then processed after enter is pressed:\n\n```\n$cmd /c pause\nPress any key to continue . . . jejkejkejkf\n\n$ejkejkejkf\n-bash: ejkejkejkf: command not found\n$\n```\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU4NTE4OjQ5NTNmMmRhN2E1MTA3NGE2YTQyYzMyNzgxODdlMDhjOGQ1ODIwNDA=", "commit_message": "Merge pull request #1424 from mwiebe/win32_shell\n\nWin32 shell interactivity\r\n\r\nThis takes a step forward in Win32 system command interactivity (issue #1321). I stuck strictly to using ctypes for all win32 calls, so it doesn't add any new dependencies.", "commit_timestamp": "2012-03-07T22:17:24Z", "files": ["IPython/utils/_process_win32.py", "IPython/utils/_process_win32_controller.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzpiYjgzYWJkN2FmYjcwODY4YWZkYzRmOTZmMGMyMzc2N2M1NmUzODc2", "commit_message": "Merge pull request #1424 from mwiebe/win32_shell\n\nWin32 shell interactivity\r\n\r\nThis takes a step forward in Win32 system command interactivity (issue #1321). I stuck strictly to using ctypes for all win32 calls, so it doesn't add any new dependencies.", "commit_timestamp": "2012-03-07T22:17:24Z", "files": ["IPython/utils/_process_win32.py", "IPython/utils/_process_win32_controller.py"]}], "labels": ["qtconsole", "windows", "bug"], "created_at": "2012-01-25T05:39:20Z", "closed_at": "2016-07-25T22:46:02Z", "method": ["label", "regex"]}
{"issue_number": 1317, "title": "Very slow traceback construction from Cython extension", "body": "I think this is the fault of IPython and I'm having a hard time coming up with a self-contained example, but basically I'm noticing a major lag between statement execution and IPython coming back with the formatted traceback when the exception is generated in Cython code. For example, with pandas git master (99e2eec, because I'm about to fix this bug), the following code takes about 8.5 seconds to play out:\n\n``` python\nfrom pandas import Series\ns = Series({'T1': 5})\nprint s.groupby({'T1': 'T2'}).agg(sum)\n```\n\nRunning this code\n\n``` python\nimport time\nstart = time.time()\nprint s.groupby({'T1': 'T2'}).agg(sum)\ntime.time() - start\n```\n\ngives me\n\n```\nIn [10]: time.time() - start\nOut[10]: 8.473900079727173\n```\n\nBy contrast, running the same code in the standard Python interpreter gives the stack trace virtually instantaneously. \n\nAny ideas what's wrong? This same problem seems to be present in IPython git master, 0.12, and 0.11.\n", "commits": [{"node_id": "MDY6Q29tbWl0MTIzNjAwMzo5ZmJlYjUzM2VmY2U2ZTlmNDVkODhkNzhmYjVjZGU1MzFjMzUwOTMx", "commit_message": "Don't attempt to tokenize binary files for tracebacks.\n\nCloses gh-1317", "commit_timestamp": "2012-01-29T17:58:25Z", "files": ["IPython/core/ultratb.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjlmYmViNTMzZWZjZTZlOWY0NWQ4OGQ3OGZiNWNkZTUzMWMzNTA5MzE=", "commit_message": "Don't attempt to tokenize binary files for tracebacks.\n\nCloses gh-1317", "commit_timestamp": "2012-01-29T17:58:25Z", "files": ["IPython/core/ultratb.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmExNzY5YWQwYmNiNzZkZWE5YzZlNGUwYmQ5M2Y1MTk2NDlmMWE4MTQ=", "commit_message": "Merge pull request #1341 from takluyver/i1317\n\nDon't attempt to tokenize binary files for tracebacks.\r\n\r\nPreviously we had been trying and just catching the exception, but in corner cases the tokenizer can run for several seconds before raising an exception (#1317). This skips tokenizing if the file has the extension .so, .pyd or .dll.\r\n\r\nCloses gh-1317.", "commit_timestamp": "2012-01-29T19:25:51Z", "files": ["IPython/core/ultratb.py"]}], "labels": ["bug"], "created_at": "2012-01-24T21:50:07Z", "closed_at": "2012-01-29T19:25:54Z", "method": ["label", "regex"]}
{"issue_number": 1304, "title": "controller/server load can disrupt heartbeat", "body": "For code that uses ZMQStreams for heartbeat (notebook, hub), it is actually possible for server load to disrupt the heartbeat.  I'm not sure if this actually happens, but it is a real possibility.  I expect the most likely case is the Hub, which can have very long blocking calls when using the mongodb/sqlite task stores.\n\nThe relevant aspects of the code:\n- `stream.send(msg)` _does not_ actually send a message, it registers a message for sending, which will happen at the top of the next loop iteration at the earliest.\n- server load can make this loop iteration take an abitrarily long time, inserting a potentially long delay between `stream.send(msg)` and `socket.send(msg)`.\n- heartbeat timer starts simultaneously with `stream.send()`, not `socket.send()`, so the above delay is interpreted as a delay in the heartbeat response, and can be longer than the total heartbeat period, causing a heart failure.\n\nPossible solutions:\n1. ZMQStreams have an 'on_send' method for registering callbacks for when the actual Socket sends the message.  If we schedule the next heartbeat relative to that, rather than as a PeriodicCallback with stream.send then the heartbeat measure would be accurate.\n2. call `stream.flush()` immediately after `stream.send()`, which will cause the socket to send the message, if possible (it will never be impossible with our current patterns).\n3. directly call `stream.socket.send()`, bypassing the issue entirely.\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU4NTE4OjE0ODdmMmYxM2U2YThhMjc4ZTgyZjI4ZmMwYjU4NzhhMDMxZWJiMDA=", "commit_message": "Merge pull request #1312 from minrk/hb\n\ntwo small heartbeat changes:\r\n\r\n* flush outgoing heartbeats (notebook and parallel):\r\n  - Prevents mismatch between heartbeat timer and actual heartbeat send/recv events.\r\n\r\n* relax default heartbeat period in IPython.parallel to 3s from 1s\r\n  - Matches heartbeats elsewhere.  3s should be extremely conservative, as most heartbeat responses are O(1ms) unless there's a bug in our code (like the above flush and previously-discovered GIL issues).\r\n\r\ncloses #1304", "commit_timestamp": "2012-01-23T22:14:18Z", "files": ["IPython/frontend/html/notebook/handlers.py", "IPython/parallel/controller/heartmonitor.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo1ZGM2MzNiNWNjMzFkNjFkODA5OGJjODczZGI5NDYyNmExNTc2NjE2", "commit_message": "Merge pull request #1312 from minrk/hb\n\ntwo small heartbeat changes:\r\n\r\n* flush outgoing heartbeats (notebook and parallel):\r\n  - Prevents mismatch between heartbeat timer and actual heartbeat send/recv events.\r\n\r\n* relax default heartbeat period in IPython.parallel to 3s from 1s\r\n  - Matches heartbeats elsewhere.  3s should be extremely conservative, as most heartbeat responses are O(1ms) unless there's a bug in our code (like the above flush and previously-discovered GIL issues).\r\n\r\ncloses #1304", "commit_timestamp": "2012-01-23T22:14:18Z", "files": ["IPython/frontend/html/notebook/handlers.py", "IPython/parallel/controller/heartmonitor.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjE0ODdmMmYxM2U2YThhMjc4ZTgyZjI4ZmMwYjU4NzhhMDMxZWJiMDA=", "commit_message": "Merge pull request #1312 from minrk/hb\n\ntwo small heartbeat changes:\r\n\r\n* flush outgoing heartbeats (notebook and parallel):\r\n  - Prevents mismatch between heartbeat timer and actual heartbeat send/recv events.\r\n\r\n* relax default heartbeat period in IPython.parallel to 3s from 1s\r\n  - Matches heartbeats elsewhere.  3s should be extremely conservative, as most heartbeat responses are O(1ms) unless there's a bug in our code (like the above flush and previously-discovered GIL issues).\r\n\r\ncloses #1304", "commit_timestamp": "2012-01-23T22:14:18Z", "files": ["IPython/frontend/html/notebook/handlers.py", "IPython/parallel/controller/heartmonitor.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjE0ODdmMmYxM2U2YThhMjc4ZTgyZjI4ZmMwYjU4NzhhMDMxZWJiMDA=", "commit_message": "Merge pull request #1312 from minrk/hb\n\ntwo small heartbeat changes:\r\n\r\n* flush outgoing heartbeats (notebook and parallel):\r\n  - Prevents mismatch between heartbeat timer and actual heartbeat send/recv events.\r\n\r\n* relax default heartbeat period in IPython.parallel to 3s from 1s\r\n  - Matches heartbeats elsewhere.  3s should be extremely conservative, as most heartbeat responses are O(1ms) unless there's a bug in our code (like the above flush and previously-discovered GIL issues).\r\n\r\ncloses #1304", "commit_timestamp": "2012-01-23T22:14:18Z", "files": ["IPython/frontend/html/notebook/handlers.py", "IPython/parallel/controller/heartmonitor.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo1ZGM2MzNiNWNjMzFkNjFkODA5OGJjODczZGI5NDYyNmExNTc2NjE2", "commit_message": "Merge pull request #1312 from minrk/hb\n\ntwo small heartbeat changes:\r\n\r\n* flush outgoing heartbeats (notebook and parallel):\r\n  - Prevents mismatch between heartbeat timer and actual heartbeat send/recv events.\r\n\r\n* relax default heartbeat period in IPython.parallel to 3s from 1s\r\n  - Matches heartbeats elsewhere.  3s should be extremely conservative, as most heartbeat responses are O(1ms) unless there's a bug in our code (like the above flush and previously-discovered GIL issues).\r\n\r\ncloses #1304", "commit_timestamp": "2012-01-23T22:14:18Z", "files": ["IPython/frontend/html/notebook/handlers.py", "IPython/parallel/controller/heartmonitor.py"]}], "labels": ["bug", "parallel", "notebook"], "created_at": "2012-01-20T22:49:42Z", "closed_at": "2012-01-23T22:14:21Z", "linked_pr_number": [1304], "method": ["label"]}
{"issue_number": 1302, "title": "Input parsing with %prun clobbers escapes", "body": "Running this command, where `foo.csv` is a tab-separated file\n\n```\nIn [3]: %prun -s cumulative table = read_table('foo.csv', sep=\"\\t\")\n```\n\nit blows up and I stepped up to the top level to see that `sep` has been passed as `t` and not `\\t`\n", "commits": [{"node_id": "MDY6Q29tbWl0NzUzNzY4OjZhMjY2OTJmN2VmMTRhZjg2NjNmMjlmOTRmM2QwMDg2NGZmMTQ4NTI=", "commit_message": "test for #1302", "commit_timestamp": "2012-01-21T00:29:07Z", "files": ["IPython/core/tests/test_magic.py"]}, {"node_id": "MDY6Q29tbWl0NzUzNzY4OjFmOTI4MzM0MGU5ZTJiNzMyNTFkYjcxYTJhNDA2YWEzZjg5NzE0OWM=", "commit_message": "fix prun parsing of escapes (closes #1302)", "commit_timestamp": "2012-01-21T00:33:25Z", "files": ["IPython/core/magic.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjZiYzBmNTM2OWI5MWZiNmRlMTM3NDQzYjI5NWRjY2M4OGY0ZThiZGY=", "commit_message": "Merge pull request #1306 from ivanov/fix1302\n\nFix %prun input parsing for escaped characters (closes #1302)", "commit_timestamp": "2012-01-21T03:04:07Z", "files": ["IPython/core/magic.py", "IPython/core/tests/test_magic.py"]}, {"node_id": "MDY6Q29tbWl0NjU5NDQ2OjllMmY0YTgyYjVhMGExYThmYzFiZTgyOTIwYjBhN2I2MzUwOGQ0Yzg=", "commit_message": "test for #1302", "commit_timestamp": "2012-01-28T21:14:44Z", "files": ["IPython/core/tests/test_magic.py"]}, {"node_id": "MDY6Q29tbWl0NjU5NDQ2OjE4ZWUwMDkyNjI2MzQ3ZDM0MzQyN2NhMGVkODVkODg5OTFlOTc4Mzg=", "commit_message": "fix prun parsing of escapes (closes #1302)", "commit_timestamp": "2012-01-28T21:15:11Z", "files": ["IPython/core/magic.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjY4NTM5NzgxMDlmNTBmMTk1MmY0NjgwMTJlZDM3Zjk5MDcyNDU5NTU=", "commit_message": "test for #1302", "commit_timestamp": "2012-04-06T21:34:52Z", "files": ["IPython/core/tests/test_magic.py"]}, {"node_id": "MDY6Q29tbWl0MjM0Mzk1OTowNzEyZGRhNjBkMWFkOTlhODJhMjg0MjY4OTEwOTk1OGNlMTU0Yzhm", "commit_message": "fix prun parsing of escapes (closes #1302)", "commit_timestamp": "2012-04-06T21:34:53Z", "files": ["IPython/core/magic.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzoxOWIxYjM1NmM5NWNhOTk2ZTQ1NTYxOWIzZTAwN2I5ZmMyMGEwOTRk", "commit_message": "test for #1302", "commit_timestamp": "2012-01-21T00:29:07Z", "files": ["IPython/core/tests/test_magic.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzpkYzA5NTI2MDQwYWZmZGEzOGM2NWM4NjE3ZjZiN2Y2OTUwOGU3MjJi", "commit_message": "fix prun parsing of escapes (closes #1302)", "commit_timestamp": "2012-01-21T00:33:25Z", "files": ["IPython/core/magic.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo3ZDJjNmRiZjQ5YjQwNTExZDU2MDU2NDdkZWIxNWVlZDhmMTg4MGEy", "commit_message": "Merge pull request #1306 from ivanov/fix1302\n\nFix %prun input parsing for escaped characters (closes #1302)", "commit_timestamp": "2012-01-21T03:04:07Z", "files": ["IPython/core/magic.py", "IPython/core/tests/test_magic.py"]}], "labels": ["bug"], "created_at": "2012-01-20T20:01:39Z", "closed_at": "2012-01-21T03:04:09Z", "method": ["label"]}
{"issue_number": 1286, "title": "ipython's reaction to ctrl-c when reverse-searching history", "body": "Hi, \n\nI've noticed a relatively minor bug with reverse searching the history in ipython, but it can be quite annoying. \n\n``` python\nIn [1]: print 'aaaa'\naaaa\n\nIn [2]:  # Now pressing Ctrl-r  to search for aaa\n(reverse-i-search)`aa': print 'aaaa'  \n#Now I cancel the search by pressing Ctrl-C\nKeyboardInterrupt\n\nIn [2]:     \n```\n\nSo what I get is the empty command line -- which is perfectly fine, but the problem if I press enter now the command from the history still is going to be executed... \nI checked and this definitely doesn't happen in the same situation with e.g. bash's readline.\n\n  Sergey\n", "commits": [{"node_id": "MDY6Q29tbWl0ODA4MzcyNDoxNWI4ZDcxNzllMDY3ZTZmZjE0OTM5ZmVhMGNkMmRjNWRjMDc0Yzhl", "commit_message": "better reverse search KeyboardInterrupt handling\n\nThe previous KeyboardInterrupt handling is dangerous because previous\nlines or commands can be mistakenly executed.\n\nWhen a user interrupts a readline reverse search (C-r) with C-c, a\nKeyboardInterrupt is thrown, but the readline buffer still has a line in\nthe buffer from the search attempt. The previous behavior of IPython was\nto show a blank line instead of the current readline buffer, causing a\nprevious command to be executed if the user presses enter on the\nseemingly blank line.\n\nAdditionally, keyboard input was not shown on the blank line because\nreadline was still in reverse search mode. For example, pressing C-k on\nthe blank line would reset readline, but most users would expect the\ninput buffer that IPython displays to be correct because of the\nprominently displayed KeyboardInterrupt.\n\nThis modifies how a KeyboardInterrupt is handled in IPython. Under\nnormal circumstances in the operation of readline, a KeyboardInterrupt\nshould never be thrown. IPython now displays a helpful reminder to use\ndefault readline keybindings (which might be overridden by ~/.inputrc,\nbut whatever), and then displays the current line buffer on the next\nline.\n\nAnother possible solution would be to send C-g (abort reverse search) or\nC-k to readline through raw_input somehow. However, this solution would\nrequire checking ~/.inputrc to figure out what the current \"abort\nreverse search\" keybinding is.\n\nfixes #1286\nfixes #2486", "commit_timestamp": "2013-02-07T23:06:11Z", "files": ["IPython/frontend/terminal/interactiveshell.py"]}, {"node_id": "MDY6Q29tbWl0NjU5NDQ2OmQ2MmIyNGE1ZmVlYjI4ZDAxZDAwNWZhMmY1M2Q4YjVjZTM4N2UwOTQ=", "commit_message": "prefer pyrepl to readline\n\navoids various readline-related issues, such as #1286.\n\nBy preferring pyrepl to readline, we can remove the gross sys.path hack to get around System lib edit readline on OS X.", "commit_timestamp": "2013-03-29T23:30:25Z", "files": ["IPython/utils/rlineimpl.py"]}], "labels": ["bug"], "created_at": "2012-01-18T10:55:33Z", "closed_at": "2016-02-01T10:30:28Z", "method": ["label", "regex"]}
{"issue_number": 1281, "title": "in Hub: registration_timeout must be an integer, but heartmonitor.period is CFloat", "body": "In parallel.controller.hub, the registration_timeout is set to max(5000, 2*self.heartmonitor.period) and must be an integer, but self.heartmonitor.period is a float. \n\nSo, when the period is more than 2500 (doesn't happen with the default value of 1000;  only with user-modified values that are higher), a validation error occurs and the hub doesn't start.\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU4NTE4OjhlOWNiYzFlZWY1YzViZGFmZWQ3YzI3OGMxYjM3MjAyMDYxMzFkN2M=", "commit_message": "Merge pull request #1283 from minrk/i1281\n\nHeartMonitor.period is now an Integer\r\n\r\nmillisecond times should generally be integers, because any time they are specified with fractional precision it is probable that the user believes the units are seconds, and an error should be raised.\r\n\r\ncloses #1281", "commit_timestamp": "2012-01-18T20:56:52Z", "files": ["IPython/parallel/controller/heartmonitor.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzplMjFlOGUzYzkzYTc5MDI2NTNmOTA4NzhmMjNkNTg1NWFkODU5MTM5", "commit_message": "Merge pull request #1283 from minrk/i1281\n\nHeartMonitor.period is now an Integer\r\n\r\nmillisecond times should generally be integers, because any time they are specified with fractional precision it is probable that the user believes the units are seconds, and an error should be raised.\r\n\r\ncloses #1281", "commit_timestamp": "2012-01-18T20:56:52Z", "files": ["IPython/parallel/controller/heartmonitor.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjhlOWNiYzFlZWY1YzViZGFmZWQ3YzI3OGMxYjM3MjAyMDYxMzFkN2M=", "commit_message": "Merge pull request #1283 from minrk/i1281\n\nHeartMonitor.period is now an Integer\r\n\r\nmillisecond times should generally be integers, because any time they are specified with fractional precision it is probable that the user believes the units are seconds, and an error should be raised.\r\n\r\ncloses #1281", "commit_timestamp": "2012-01-18T20:56:52Z", "files": ["IPython/parallel/controller/heartmonitor.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjhlOWNiYzFlZWY1YzViZGFmZWQ3YzI3OGMxYjM3MjAyMDYxMzFkN2M=", "commit_message": "Merge pull request #1283 from minrk/i1281\n\nHeartMonitor.period is now an Integer\r\n\r\nmillisecond times should generally be integers, because any time they are specified with fractional precision it is probable that the user believes the units are seconds, and an error should be raised.\r\n\r\ncloses #1281", "commit_timestamp": "2012-01-18T20:56:52Z", "files": ["IPython/parallel/controller/heartmonitor.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzplMjFlOGUzYzkzYTc5MDI2NTNmOTA4NzhmMjNkNTg1NWFkODU5MTM5", "commit_message": "Merge pull request #1283 from minrk/i1281\n\nHeartMonitor.period is now an Integer\r\n\r\nmillisecond times should generally be integers, because any time they are specified with fractional precision it is probable that the user believes the units are seconds, and an error should be raised.\r\n\r\ncloses #1281", "commit_timestamp": "2012-01-18T20:56:52Z", "files": ["IPython/parallel/controller/heartmonitor.py"]}], "labels": ["bug", "parallel"], "created_at": "2012-01-17T16:17:12Z", "closed_at": "2012-01-18T20:56:54Z", "linked_pr_number": [1281], "method": ["label"]}
{"issue_number": 1273, "title": "Improving recursive Pdb", "body": "I haven't started looking at it yet, but I'm really suffering a lot from how weak Pdb becomes in recursive mode (`debug stmt`) on Linux at least (readline navigation stops working, etc.) and I'm wondering how hard it would be to IPython-enhance the recursive debugger? Once my suffering increases enough I will do something about it myself but before I go digging I just wanted to check if I'm wasting my time or if there are any low hanging fruit there\n", "commits": [{"node_id": "MDY6Q29tbWl0ODA4MjQ1OTA6MTRjNTk2NDdmZWYxYTkyZDY4NjEwZjQ0YmFjZmM0NTk0YWZhNTEyZQ==", "commit_message": "Make recursive pdb properly invoke IPython's enhanced pdb\n\nFixes #1273", "commit_timestamp": "2017-07-29T19:36:16Z", "files": ["IPython/core/debugger.py"]}, {"node_id": "MDY6Q29tbWl0ODA4MjQ1OTA6NzJmOGJkY2RiYzQ5ZjFhNjI3OTVkNTM2ODhiODY1MmEwZjEwOWI1Yw==", "commit_message": "Make recursive pdb properly invoke IPython's enhanced pdb\n\nFixes #1273", "commit_timestamp": "2017-07-29T20:52:07Z", "files": ["IPython/core/debugger.py"]}, {"node_id": "MDY6Q29tbWl0ODA4MjQ1OTA6MTkzNGFjMDI2ZDZhODMzNDU2ZTBlNTQ4MzNmNWExYTYzN2QxMDk0Yg==", "commit_message": "Make recursive pdb properly invoke IPython's enhanced pdb\n\nFixes #1273", "commit_timestamp": "2017-07-29T20:54:33Z", "files": ["IPython/core/debugger.py"]}, {"node_id": "MDY6Q29tbWl0ODA4MjQ1OTA6ZDFkZTc2YzIzMWVhMDY0NWIzMWZmZTQwNGJmZjgzYjUxMzQ3MTAxMw==", "commit_message": "Make recursive pdb properly invoke IPython's enhanced pdb\n\nFixes #1273", "commit_timestamp": "2017-07-29T20:55:07Z", "files": ["IPython/core/debugger.py"]}, {"node_id": "C_kwDOAz-HA9oAKGZjMjM1OTg1NTA4ZDA0MzExOTI0MDViNDZjNmZiZmIyMDkwNjkwNDg", "commit_message": "fix uncaught `BdbQuit` exceptions on ipdb `exit`\n\n- `BdbQuit` is now handled in the top-most scope of `InteractiveShell.run_code`. This ensures that `BdbQuit` is correctly handled but can still do its job of breaking out of all user code/loops/further breakpoint requests. Hopefully will work better than previous attempts, which put the `BdqQuit` handling in `Pdb.set_trace`\n\n- fixes:\n  - jupyterlab/jupyterlab#12501\n\n- refs:\n  - ipython/ipython#876\n  - ipython/ipython#1273\n  - ipython/ipython#4474\n  - ipython/ipython#5306\n  - ipython/ipython#9731\n  - ipython/ipython#9942\n  - ipython/ipython#9950\n  - ipython/ipython#10006\n  - ipython/ipython#12378", "commit_timestamp": "2022-05-03T00:36:53Z", "files": ["IPython/core/debugger.py", "IPython/core/interactiveshell.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmExNDFhOTM2MTlmMGJmMjYyMDMxNWRiYjBhMjAxM2YyZTM1MDVkNDg=", "commit_message": "Merge pull request #10721 from segevfiner/recursive-ipdb\n\nMake recursive pdb properly invoke IPython's enhanced pdb", "commit_timestamp": "2017-09-13T20:39:22Z", "files": ["IPython/core/debugger.py"]}], "labels": ["bug"], "created_at": "2012-01-15T20:06:13Z", "closed_at": "2017-09-13T20:39:23Z", "linked_pr_number": [1273], "method": ["label", "regex"]}
{"issue_number": 1269, "title": "Another strange input handling error", "body": "Getting this both on 0.12 and git master\n\n```\nIn [1]: baz = None\n\nIn [2]: timeit foo = baz.groupby(lambda x: x.split('#')[0])\n  File \"<magic-timeit>\", line 6\n    foo = baz.groupby(lambda x: x.split('\n                                        ^\nSyntaxError: EOL while scanning string literal\n```\n", "commits": [{"node_id": "MDY6Q29tbWl0NzUzNzY4OmNiNTAxMTAwZmRkMzYxZTU2YjRhNzdiYzM5NjMzNmQwMGQzY2UxMDM=", "commit_message": "test for GH #1269", "commit_timestamp": "2012-01-18T06:16:28Z", "files": ["IPython/core/tests/test_magic.py"]}, {"node_id": "MDY6Q29tbWl0NzUzNzY4Ojg0OTEwZjVmNDllMThhYTJmMjgxOWNhYmU2ZmExZmE2MjI3ZjBiNTE=", "commit_message": "shlex shouldn't parse out comments, closes #1269", "commit_timestamp": "2012-01-18T06:16:28Z", "files": ["IPython/utils/_process_common.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4Ojg0OTEwZjVmNDllMThhYTJmMjgxOWNhYmU2ZmExZmE2MjI3ZjBiNTE=", "commit_message": "shlex shouldn't parse out comments, closes #1269", "commit_timestamp": "2012-01-18T06:16:28Z", "files": ["IPython/utils/_process_common.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmRjNWY2ZjY2NDZiZmYwMjg3YmEyMzY2MTk0YmQ2YTk3ZGEwOGMxNmI=", "commit_message": "Merge pull request #1284 from ivanov/gh1269\n\na fix for GH #1269", "commit_timestamp": "2012-01-18T06:22:51Z", "files": ["IPython/core/magic.py", "IPython/core/tests/test_magic.py", "IPython/utils/_process_common.py"]}, {"node_id": "MDY6Q29tbWl0NjU5NDQ2OjUzNzFiMThjZTk5OTMzZmEwZDE1Y2IwODY5ZjU5MmQ4N2Q5ODhiMTM=", "commit_message": "test for GH #1269", "commit_timestamp": "2012-01-28T21:14:40Z", "files": ["IPython/core/tests/test_magic.py"]}, {"node_id": "MDY6Q29tbWl0NjU5NDQ2Ojc4MDZjYWJiNjc2YTYzZjhkYmNlNDVhMWE1ZTRiZTYyODNlMjQwMjE=", "commit_message": "shlex shouldn't parse out comments, closes #1269", "commit_timestamp": "2012-01-28T21:14:40Z", "files": ["IPython/utils/_process_common.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjZkZjIzNTk5YjI0MjRlNjc1MTRhYWU4NWNkOGY3MzM2NWFlZWQyOGE=", "commit_message": "test for GH #1269", "commit_timestamp": "2012-04-06T21:34:51Z", "files": ["IPython/core/tests/test_magic.py"]}, {"node_id": "MDY6Q29tbWl0MjM0Mzk1OTpmZGZkZTk2ZWQwMjU4MTE2ZWYzZTBiM2EyNTVjMDY2OGM4MTlkN2Ex", "commit_message": "shlex shouldn't parse out comments, closes #1269", "commit_timestamp": "2012-04-06T21:34:51Z", "files": ["IPython/utils/_process_common.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzoxMzJlYzE0NzNlMWZmYTBlYWIyOTFlNmUzOTYxYzhjZWUwNWQzZmIx", "commit_message": "test for GH #1269", "commit_timestamp": "2012-01-18T06:16:28Z", "files": ["IPython/core/tests/test_magic.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzpmYTgzODE0YjU1MjVjNWQ1NmRjNzVlZTYwMzQ4MWNjYzBkNjdjZmE4", "commit_message": "shlex shouldn't parse out comments, closes #1269", "commit_timestamp": "2012-01-18T06:16:28Z", "files": ["IPython/utils/_process_common.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzoyNmU0MTdmZGE3NTQ5YmRjYWY1MmQyNDQyNmRmNzFjYTUyM2FmYzQz", "commit_message": "Merge pull request #1284 from ivanov/gh1269\n\na fix for GH #1269", "commit_timestamp": "2012-01-18T06:22:51Z", "files": ["IPython/core/magic.py", "IPython/core/tests/test_magic.py", "IPython/utils/_process_common.py"]}], "labels": ["bug"], "created_at": "2012-01-15T01:34:24Z", "closed_at": "2012-01-18T06:22:52Z", "method": ["label"]}
{"issue_number": 1268, "title": "notebook %reset magic fails with StdinNotImplementedError", "body": "forgive me if this is a duplicate of the general issue of stdin not being implemented, but just wanted to report this bug on current git. \n\nhere's the trace:\n\n```\n ---------------------------------------------------------------------------\n StdinNotImplementedError                  Traceback (most recent call last)\n /home/pi/code/py4science/2012-bootcamp/saturday/<ipython-input-22-7e9719c26028> in <module>()\n ----> 1 get_ipython().magic(u'reset')\n\n /home/pi/code/py4science/scipy2010/ipython/IPython/core/interactiveshell.pyc in magic(self, arg_s, next_input)\n    1987                 self._magic_locals = sys._getframe(1).f_locals\n    1988             with self.builtin_trap:\n -> 1989                 result = fn(magic_args)\n    1990             # Ensure we're not keeping object references around:\n\n    1991             self._magic_locals = {}\n\n /home/pi/code/py4science/scipy2010/ipython/IPython/core/magic.pyc in magic_reset(self, parameter_s)\n     990         else:\n     991             ans = self.shell.ask_yes_no(\n --> 992                 \"Once deleted, variables cannot be recovered. Proceed (y/[n])? \", default='n')\n     993         if not ans:\n     994             print 'Nothing done.'\n\n /home/pi/code/py4science/scipy2010/ipython/IPython/core/interactiveshell.pyc in ask_yes_no(self, prompt, default)\n    2658         if self.quiet:\n    2659             return True\n -> 2660         return ask_yes_no(prompt,default)\n    2661 \n    2662     def show_usage(self):\n\n /home/pi/code/py4science/scipy2010/ipython/IPython/utils/io.pyc in ask_yes_no(prompt, default)\n     225     while ans not in answers.keys():\n     226         try:\n --> 227             ans = raw_input(prompt+' ').lower()\n     228             if not ans:  # response was an empty string\n     229                 ans = default\n\n /home/pi/code/py4science/scipy2010/ipython/IPython/zmq/ipkernel.pyc in <lambda>(prompt)\n     251             raw_input = lambda prompt='': self._raw_input(prompt, ident, parent)\n     252         else:\n --> 253             raw_input = lambda prompt='' : self._no_raw_input()\n     254 \n     255         if py3compat.PY3:\n\n /home/pi/code/py4science/scipy2010/ipython/IPython/zmq/ipkernel.pyc in _no_raw_input(self)\n     443         \"\"\"Raise StdinNotImplentedError if active frontend doesn't support\n     444         stdin.\"\"\"\n --> 445         raise StdinNotImplementedError(\"raw_input was called, but this \"\n     446                                        \"frontend does not support stdin.\") \n     447 \n\n StdinNotImplementedError: raw_input was called, but this frontend does not support stdin.\n```\n", "commits": [{"node_id": "MDY6Q29tbWl0MTIzNjAwMzphNDI0MzFiYTE1N2VkNDg3OTBkOGM2YTczZmEwZTI1OTg2NTU1OGZk", "commit_message": "Don't ask for confirmation when stdin isn't available (i.e. in the notebook)\n\nCloses gh-1268", "commit_timestamp": "2012-01-18T21:03:29Z", "files": ["IPython/core/history.py", "IPython/core/magic.py"]}, {"node_id": "MDY6Q29tbWl0NjU5NDQ2OmEzMjk5YzI1OWY0NzkxMjYzZDVjZjZmNjU5MmE4YmQ2MWUwYzg4MWY=", "commit_message": "Don't ask for confirmation when stdin isn't available (i.e. in the notebook)\n\nCloses gh-1268", "commit_timestamp": "2012-01-28T21:14:41Z", "files": ["IPython/core/history.py", "IPython/core/magic.py"]}, {"node_id": "MDY6Q29tbWl0MjM0Mzk1OTo0Y2MzNjQzZTVhZWJiYjM4NzY5ZDk5MmZjNGJlYjA4OGU3YjUwNWJi", "commit_message": "Don't ask for confirmation when stdin isn't available (i.e. in the notebook)\n\nCloses gh-1268", "commit_timestamp": "2012-04-06T21:34:51Z", "files": ["IPython/core/history.py", "IPython/core/magic.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzpjYzYyYmY4ZWJlMDUyZDAxMThlZDA5OTczNTBkZmZmNzA0YTUwYTUy", "commit_message": "Don't ask for confirmation when stdin isn't available (i.e. in the notebook)\n\nCloses gh-1268", "commit_timestamp": "2012-01-18T21:03:29Z", "files": ["IPython/core/history.py", "IPython/core/magic.py"]}], "labels": ["bug", "notebook"], "created_at": "2012-01-14T17:39:41Z", "closed_at": "2012-03-07T00:08:26Z", "method": ["label", "regex"]}
{"issue_number": 1260, "title": "heartbeat failure on long gil-holding operation", "body": "When exploring the recent heart failure discussion on-list, I discovered that I can reliably cause a heartbeat failure by grabbing the gil and sleeping for longer than the heartbeat period:\n\n``` python\ndef csleep(t):\n    \"\"\"gil-holding sleep with cython.inline\"\"\"\n    from cython import inline\n    import sys\n    code = '\\n'.join([\n        'from posix cimport unistd',\n        'unistd.sleep(t)',\n    ])\n    while True:\n        inline(code, quiet=True, t=t)\n        print time.time()\n        sys.stdout.flush() # this is important\n\ncsleep(5)\n```\n\nThis reliably triggers the heart-failure dialog in both the notebook and the qtconsole.  Strangely, the `stdout.flush()` (which results in `IOStream.flush()`, and ultimately `ZMQStream.flush()`) appears to be necessary to trigger the failure.\n\nIt turns out, the culprit is the fact that we are using pyzmq's non-copying sends.\n\nFor non-copying sends to work, pyzmq links up zmq's free function callback (their equivalent of dealloc @ refcount=0) and Python's decref.  This means that when libzmq is done with the message, it must [**grab the GIL**](https://github.com/zeromq/pyzmq/blob/v2.1.11/zmq/core/message.pyx#L57).  The default behavior is for a context to have one io_thread (the canonical measure is 1 io_thread per GBps of throughput), but this means that if libzmq is waiting on the GIL, all other libzmq action in that context is blocked, including the heartbeat.\n\nPotential answers include:\n1. stop using non-copying sends in the kernel - perfectly GIL-less, but with obvious and probably unacceptable cost of copying everything.\n2. give the hearbeat thread its own context - most obvious and certain solution to this problem, but may require some bookkeeping at shutdown to make sure things actually halt.\n3. use more than one io_thread in kernel contexts - doesn't actually guarantee a solution to the problem unless only one non-copying message is outstanding at a time.\n\nI think 2. is the most reasonable answer to all this, and I've tested it to confirm that it does indeed work for this case.  We may also want to use `Context(io_threads=2)` anway, to allow for potential issues with GIL-grabbing in the main app, though I've never seen any such issues in single-threaded code.\n\nPotential optimizations:\n- I can possibly adjust pyzmq's free_fn to be GIL-less, and dump the decref actions into a queue running in a thread, thus getting Python fully out of libzmq's way.  I don't actually know how I would do this, but it's presumably possible.\n- Limit use of non-copying sends to large messages.  It's often _slower_ to use non-copying sends for small messages, and we could test messages to determine whether they exceed a threshold to determine whether they should be copied or not.  It's not always clear where that line should be drawn.\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU5NDQ2OjdlODFiZjY5NTZkMDdhNTE1NDNjYWQ4MWY1NDgyNTZkOTJjYzc4YzU=", "commit_message": "add test notebook and script for #1260 (GIL-related heartbeat failures)\n\nper #1127", "commit_timestamp": "2012-01-13T08:01:49Z", "files": ["docs/examples/tests/heartbeat/hb_gil.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjFjNGRhZWRjNmEyOTI2ODMzZmE1ODg3OWVmNWMzMDI4ZmJhMjI5ZTI=", "commit_message": "Merge pull request #1262 from minrk/hbgil\n\nHeartbeat no longer shares the app's Context\r\n\r\nFixes in both the single and parallel kernels, preventing the heartbeat thread from sharing the zmq Context with the rest of the process.  Non-copying sends require grabbing the GIL from the zmq io-thread in order to free memory, which could let Python get in the way of the heartbeat.\r\n\r\nTest script and notebook added to examples directory.\r\n\r\ncloses #1260", "commit_timestamp": "2012-01-14T04:18:19Z", "files": ["IPython/parallel/controller/heartmonitor.py", "IPython/zmq/kernelapp.py", "docs/examples/tests/heartbeat/hb_gil.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmNmOTkxZTA3MzEzODNlN2RhZjQ0YjI3ZGJhZWE4YTE1OTA5YmJmNjY=", "commit_message": "add test notebook and script for #1260 (GIL-related heartbeat failures)\n\nper #1127", "commit_timestamp": "2012-01-18T02:27:54Z", "files": ["docs/examples/tests/heartbeat/hb_gil.py"]}, {"node_id": "MDY6Q29tbWl0NjU5NDQ2OjBkMDVjNThlZWZjZWI1YmIwZGUwOWM5ZDQ0ODc0YzkwNGQ3N2M4Nzk=", "commit_message": "Merge pull request #1262 from minrk/hbgil\n\nHeartbeat no longer shares the app's Context\r\n\r\nFixes in both the single and parallel kernels, preventing the heartbeat thread from sharing the zmq Context with the rest of the process.  Non-copying sends require grabbing the GIL from the zmq io-thread in order to free memory, which could let Python get in the way of the heartbeat.\r\n\r\nTest script and notebook added to examples directory.\r\n\r\ncloses #1260", "commit_timestamp": "2012-01-18T02:27:54Z", "files": ["IPython/parallel/controller/heartmonitor.py", "IPython/zmq/kernelapp.py", "docs/examples/tests/heartbeat/hb_gil.py"]}, {"node_id": "MDY6Q29tbWl0NjU5NDQ2OjAzYjAzZTM1YzIzM2EzZjhiMDdhNmQxN2JlYTNiYTAwZDcwZWZjMzg=", "commit_message": "add test notebook and script for #1260 (GIL-related heartbeat failures)\n\nper #1127", "commit_timestamp": "2012-01-28T21:14:38Z", "files": ["docs/examples/tests/heartbeat/hb_gil.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmYyYTljNjZlNTkzZjgxODgxMDhkNmYwNmFhZjc0NDM2Y2JjMGRhMTM=", "commit_message": "add test notebook and script for #1260 (GIL-related heartbeat failures)\n\nper #1127", "commit_timestamp": "2012-04-06T21:34:49Z", "files": ["docs/examples/tests/heartbeat/hb_gil.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo3ZWU2Mzg0NGNmOTE1YmYxYmE3ODRlY2JkMDQzZDA1MWJjOGQxYzEx", "commit_message": "add test notebook and script for #1260 (GIL-related heartbeat failures)\n\nper #1127", "commit_timestamp": "2012-01-18T02:27:54Z", "files": ["docs/examples/tests/heartbeat/hb_gil.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzpkYThjNGY2MzAzYWI1NTk1NjNkNTFmMzBhOGUxMDc0ZWVmOWNkY2My", "commit_message": "Merge pull request #1262 from minrk/hbgil\n\nHeartbeat no longer shares the app's Context\r\n\r\nFixes in both the single and parallel kernels, preventing the heartbeat thread from sharing the zmq Context with the rest of the process.  Non-copying sends require grabbing the GIL from the zmq io-thread in order to free memory, which could let Python get in the way of the heartbeat.\r\n\r\nTest script and notebook added to examples directory.\r\n\r\ncloses #1260", "commit_timestamp": "2012-01-18T02:27:54Z", "files": ["IPython/parallel/controller/heartmonitor.py", "IPython/zmq/kernelapp.py", "docs/examples/tests/heartbeat/hb_gil.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjFjNGRhZWRjNmEyOTI2ODMzZmE1ODg3OWVmNWMzMDI4ZmJhMjI5ZTI=", "commit_message": "Merge pull request #1262 from minrk/hbgil\n\nHeartbeat no longer shares the app's Context\r\n\r\nFixes in both the single and parallel kernels, preventing the heartbeat thread from sharing the zmq Context with the rest of the process.  Non-copying sends require grabbing the GIL from the zmq io-thread in order to free memory, which could let Python get in the way of the heartbeat.\r\n\r\nTest script and notebook added to examples directory.\r\n\r\ncloses #1260", "commit_timestamp": "2012-01-14T04:18:19Z", "files": ["IPython/parallel/controller/heartmonitor.py", "IPython/zmq/kernelapp.py", "docs/examples/tests/heartbeat/hb_gil.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjFjNGRhZWRjNmEyOTI2ODMzZmE1ODg3OWVmNWMzMDI4ZmJhMjI5ZTI=", "commit_message": "Merge pull request #1262 from minrk/hbgil\n\nHeartbeat no longer shares the app's Context\r\n\r\nFixes in both the single and parallel kernels, preventing the heartbeat thread from sharing the zmq Context with the rest of the process.  Non-copying sends require grabbing the GIL from the zmq io-thread in order to free memory, which could let Python get in the way of the heartbeat.\r\n\r\nTest script and notebook added to examples directory.\r\n\r\ncloses #1260", "commit_timestamp": "2012-01-14T04:18:19Z", "files": ["IPython/parallel/controller/heartmonitor.py", "IPython/zmq/kernelapp.py", "docs/examples/tests/heartbeat/hb_gil.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjBkMDVjNThlZWZjZWI1YmIwZGUwOWM5ZDQ0ODc0YzkwNGQ3N2M4Nzk=", "commit_message": "Merge pull request #1262 from minrk/hbgil\n\nHeartbeat no longer shares the app's Context\r\n\r\nFixes in both the single and parallel kernels, preventing the heartbeat thread from sharing the zmq Context with the rest of the process.  Non-copying sends require grabbing the GIL from the zmq io-thread in order to free memory, which could let Python get in the way of the heartbeat.\r\n\r\nTest script and notebook added to examples directory.\r\n\r\ncloses #1260", "commit_timestamp": "2012-01-18T02:27:54Z", "files": ["IPython/parallel/controller/heartmonitor.py", "IPython/zmq/kernelapp.py", "docs/examples/tests/heartbeat/hb_gil.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzpkYThjNGY2MzAzYWI1NTk1NjNkNTFmMzBhOGUxMDc0ZWVmOWNkY2My", "commit_message": "Merge pull request #1262 from minrk/hbgil\n\nHeartbeat no longer shares the app's Context\r\n\r\nFixes in both the single and parallel kernels, preventing the heartbeat thread from sharing the zmq Context with the rest of the process.  Non-copying sends require grabbing the GIL from the zmq io-thread in order to free memory, which could let Python get in the way of the heartbeat.\r\n\r\nTest script and notebook added to examples directory.\r\n\r\ncloses #1260", "commit_timestamp": "2012-01-18T02:27:54Z", "files": ["IPython/parallel/controller/heartmonitor.py", "IPython/zmq/kernelapp.py", "docs/examples/tests/heartbeat/hb_gil.py"]}], "labels": ["important", "bug"], "created_at": "2012-01-13T02:16:37Z", "closed_at": "2012-01-14T04:18:21Z", "linked_pr_number": [1260], "method": ["label"]}
{"issue_number": 1258, "title": "Magic %paste error", "body": "off git master\n\n```\n\nIn [2]: paste\nfrom StringIO import StringIO\n\ntext = \"\"\"a,b,c,d\none,1,2,3\none,1,2,3\n,1,2,3\none,1,2,3\n,1,2,3\n,1,2,3\none,1,2,3\ntwo,1,2,3\"\"\"\n\ndata = StringIO(text)\n## -- End pasted text --\n---------------------------------------------------------------------------\nKeyError                                  Traceback (most recent call last)\n/home/wesm/code/pandas/<ipython-input-2-84f91d8a6054> in <module>()\n----> 1 get_ipython().magic(u'paste ')\n\n/home/wesm/code/repos/ipython/IPython/core/interactiveshell.pyc in magic(self, arg_s, next_input)\n   1996                 self._magic_locals = sys._getframe(1).f_locals\n   1997             with self.builtin_trap:\n-> 1998                 result = fn(magic_args)\n   1999             # Ensure we're not keeping object references around:\n\n   2000             self._magic_locals = {}\n\n/home/wesm/code/repos/ipython/IPython/frontend/terminal/interactiveshell.pyc in magic_paste(self, parameter_s)\n    651             write(\"## -- End pasted text --\\n\")\n    652 \n--> 653         store_or_execute(self.shell, block, name)\n    654 \n    655     # Class-level: add a '%cls' magic only on Windows\n\n\n/home/wesm/code/repos/ipython/IPython/frontend/terminal/interactiveshell.pyc in store_or_execute(shell, block, name)\n     93     # Dedent and prefilter so what we store matches what is executed by\n\n     94     # run_cell.\n\n---> 95     b = shell.prefilter(textwrap.dedent(block))\n     96 \n     97     if name:\n\n/home/wesm/code/repos/ipython/IPython/core/prefilter.pyc in prefilter_lines(self, lines, continue_prompt)\n    355         if len(llines) > 1:\n    356             out = '\\n'.join([self.prefilter_line(line, lnum>0)\n--> 357                              for lnum, line in enumerate(llines) ])\n    358         else:\n    359             out = self.prefilter_line(llines[0], continue_prompt)\n\n/home/wesm/code/repos/ipython/IPython/core/prefilter.pyc in prefilter_line(self, line, continue_prompt)\n    332             return normal_handler.handle(line_info)\n    333 \n--> 334         prefiltered = self.prefilter_line_info(line_info)\n    335         # print \"prefiltered line: %r\" % prefiltered\n\n    336         return prefiltered\n\n/home/wesm/code/repos/ipython/IPython/core/prefilter.pyc in prefilter_line_info(self, line_info)\n    272         # print \"prefilter_line_info: \", line_info\n\n    273         handler = self.find_handler(line_info)\n--> 274         return handler.handle(line_info)\n    275 \n    276     def find_handler(self, line_info):\n\n/home/wesm/code/repos/ipython/IPython/core/prefilter.pyc in handle(self, line_info)\n    801         esc     = line_info.esc\n    802         continue_prompt = line_info.continue_prompt\n--> 803         obj = line_info.ofind(self)['obj']\n    804         #print 'pre <%s> ifun <%s> rest <%s>' % (pre,ifun,the_rest)  # dbg\n\n    805 \n\nKeyError: 'obj'\n```\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU4NzYwOjY1NjA3OWEwMmU4N2M3ODI2OThlMjQ1OWU2MjAyMjk3YjJhYzA0MWM=", "commit_message": "Add failing test when pasting multiline strings with leading commas.\n\nSee #1258.", "commit_timestamp": "2012-06-23T03:21:52Z", "files": ["IPython/core/tests/test_magic_terminal.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NzYwOjI4YWQ2OWQ3NzM5MTA1NDNmNDE4ZTA4MDAyNWI4ODA0ZGY1YmJiNWM=", "commit_message": "Properly clean up input for interactive pasting.\n\nThis requires applying email quote removal, input splitting and\nprefiltering of all single-line inputs in a fairly careful manner.\nNew method `clean_input` was added to the terminal magics to implement\nthis logic in an isolated and easy to test place.\n\nCloses #1258.", "commit_timestamp": "2012-06-26T03:20:14Z", "files": ["IPython/frontend/terminal/interactiveshell.py"]}], "labels": ["bug"], "created_at": "2012-01-12T21:00:35Z", "closed_at": "2012-06-28T01:51:25Z", "method": ["label"]}
{"issue_number": 1251, "title": "IPython-0.12 can't import map module on Python 3.1", "body": "```\nFile \"/opt/local/Library/Frameworks/Python.framework/Versions/3.1/lib/python3.1/site-packages/DrQueueIPython-0.1.0-py3.1.egg/DrQueue/client.py\", line 17, in <module>\n    from IPython.parallel import Client as IPClient\nFile \"/opt/local/Library/Frameworks/Python.framework/Versions/3.1/lib/python3.1/site-packages/ipython-0.12-py3.1.egg/IPython/parallel/__init__.py\", line 35, in <module>\n    from .client.client import Client\nFile \"/opt/local/Library/Frameworks/Python.framework/Versions/3.1/lib/python3.1/site-packages/ipython-0.12-py3.1.egg/IPython/parallel/client/client.py\", line 50, in <module>\n    from .view import DirectView, LoadBalancedView\nFile \"/opt/local/Library/Frameworks/Python.framework/Versions/3.1/lib/python3.1/site-packages/ipython-0.12-py3.1.egg/IPython/parallel/client/view.py\", line 35, in <module>\n    from .. import map as Map\nImportError: cannot import name map\n\n```\n", "commits": [{"node_id": "MDY6Q29tbWl0MjkwOTI5MDpiMjA4OTNhNjAzYTE0ZjNmM2FjMDY2MWU0MGI3ZjhhYTNmYjFhM2Y2", "commit_message": "Replace \"from . import\" with absolute imports.\n\nThe 2to3 tool in Python 3.1 mangles \"from . import\" statements.\n@see http://bugs.python.org/issue13692\n\ncloses gh-1251", "commit_timestamp": "2012-01-12T22:15:51Z", "files": ["IPython/parallel/client/remotefunction.py", "IPython/parallel/client/view.py", "IPython/parallel/tests/test_mongodb.py", "IPython/testing/globalipapp.py", "IPython/testing/ipunittest.py", "IPython/testing/tools.py", "IPython/utils/_process_win32.py"]}], "labels": ["bug"], "created_at": "2012-01-10T08:00:27Z", "closed_at": "2012-01-21T01:40:46Z", "method": ["label"]}
{"issue_number": 1241, "title": "When our debugger class is used standalone `_oh` key errors are thrown", "body": "See [this bug report](https://github.com/inducer/pudb/issues/30) for an example...\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU4NTE4OmRiNzYyZDlmZDA3N2IwODAyMzNjMzJiNGY0ODhhNTAxM2E5NmRkNzc=", "commit_message": "Merge pull request #1496 from rkern/fix-finalize-displayhook\n\nBUG: LBYL when clearing the output history on shutdown.\r\n\r\ncloses #1241\r\ncloses #676", "commit_timestamp": "2012-03-16T23:33:04Z", "files": ["IPython/core/displayhook.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzplYTlhNjViY2U2NGI5YWQ4ZTlmYjZkMzM5ODNjM2EwNzA4Zjg1Zjcz", "commit_message": "Merge pull request #1496 from rkern/fix-finalize-displayhook\n\nBUG: LBYL when clearing the output history on shutdown.\r\n\r\ncloses #1241\r\ncloses #676", "commit_timestamp": "2012-03-16T23:33:04Z", "files": ["IPython/core/displayhook.py"]}], "labels": ["bug"], "created_at": "2012-01-06T17:40:32Z", "closed_at": "2012-03-16T23:33:05Z", "method": ["label", "regex"]}
{"issue_number": 1240, "title": "sys.path missing `''` as first entry when kernel launched without interface", "body": "Quite simply, if I launch `ipython` or `ipython console` or `ipython qtconsole`, then `import sys`, it should be the case that `sys.path[0]` is `''`, so that modules in the current directory can be found, just like in a standard python session. However, if I begin by launching `ipython kernel`, and then attach a console/qtconsole to the kernel, this item is not in `sys.path`, so modules in the current directory cannot be imported (unless the current directory is in `$PYTHONPATH` to start with). To confirm, this bug is not present if I launch a console/qtconsole and then attach another interface to the existing session.\n", "commits": [{"node_id": "MDY6Q29tbWl0MjkwOTI5MDo3OWUzNjViODQ5ZDQ4ZWU5ZTIyZTQyYjI3OTM4MWFlY2U0YjljMmI5", "commit_message": "Fix sys.path missing '' as first entry in `ipython kernel`.\n\nThe comment is copied from the corresponding code in TerminalIPythonApp.\n\nCloses #1240.", "commit_timestamp": "2012-05-02T17:13:31Z", "files": ["IPython/zmq/ipkernel.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4Ojc5ZTM2NWI4NDlkNDhlZTllMjJlNDJiMjc5MzgxYWVjZTRiOWMyYjk=", "commit_message": "Fix sys.path missing '' as first entry in `ipython kernel`.\n\nThe comment is copied from the corresponding code in TerminalIPythonApp.\n\nCloses #1240.", "commit_timestamp": "2012-05-02T17:13:31Z", "files": ["IPython/zmq/ipkernel.py"]}, {"node_id": "MDY6Q29tbWl0MjkwOTI5MDpiYTc1ZmE1YjdkOTIyODE2YTZjZjg0NmEyZmQ1YTQyOThjMTE2ODY1", "commit_message": "Merge pull request #1689 from bfroehle/_1240_ipython_kernel_sys_path\n\nFix sys.path missing '' as first entry in `ipython kernel`.\r\n\r\nAdds init_path to InteractiveShellApp, to avoid future entry points having the same omission.\r\n\r\ncloses #1240", "commit_timestamp": "2012-05-03T18:04:26Z", "files": ["IPython/core/shellapp.py", "IPython/frontend/terminal/ipapp.py", "IPython/zmq/ipkernel.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzpmZjQ3YTY3ODFmNTlmYWZkODI3ZDY3NjVmYzM0M2E5MWU2NzRjZWNl", "commit_message": "Fix sys.path missing '' as first entry in `ipython kernel`.\n\nThe comment is copied from the corresponding code in TerminalIPythonApp.\n\nCloses #1240.", "commit_timestamp": "2012-05-02T17:13:31Z", "files": ["IPython/zmq/ipkernel.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzpkMjE5YjllZTFiNDcxMGZiNzEwMDQ3OGZkZTcyYWE2NGUyMjNkYWU4", "commit_message": "Merge pull request #1689 from bfroehle/_1240_ipython_kernel_sys_path\n\nFix sys.path missing '' as first entry in `ipython kernel`.\r\n\r\nAdds init_path to InteractiveShellApp, to avoid future entry points having the same omission.\r\n\r\ncloses #1240", "commit_timestamp": "2012-05-03T18:04:26Z", "files": ["IPython/core/shellapp.py", "IPython/frontend/terminal/ipapp.py", "IPython/zmq/ipkernel.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmJhNzVmYTViN2Q5MjI4MTZhNmNmODQ2YTJmZDVhNDI5OGMxMTY4NjU=", "commit_message": "Merge pull request #1689 from bfroehle/_1240_ipython_kernel_sys_path\n\nFix sys.path missing '' as first entry in `ipython kernel`.\r\n\r\nAdds init_path to InteractiveShellApp, to avoid future entry points having the same omission.\r\n\r\ncloses #1240", "commit_timestamp": "2012-05-03T18:04:26Z", "files": ["IPython/core/shellapp.py", "IPython/frontend/terminal/ipapp.py", "IPython/zmq/ipkernel.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmJhNzVmYTViN2Q5MjI4MTZhNmNmODQ2YTJmZDVhNDI5OGMxMTY4NjU=", "commit_message": "Merge pull request #1689 from bfroehle/_1240_ipython_kernel_sys_path\n\nFix sys.path missing '' as first entry in `ipython kernel`.\r\n\r\nAdds init_path to InteractiveShellApp, to avoid future entry points having the same omission.\r\n\r\ncloses #1240", "commit_timestamp": "2012-05-03T18:04:26Z", "files": ["IPython/core/shellapp.py", "IPython/frontend/terminal/ipapp.py", "IPython/zmq/ipkernel.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzpkMjE5YjllZTFiNDcxMGZiNzEwMDQ3OGZkZTcyYWE2NGUyMjNkYWU4", "commit_message": "Merge pull request #1689 from bfroehle/_1240_ipython_kernel_sys_path\n\nFix sys.path missing '' as first entry in `ipython kernel`.\r\n\r\nAdds init_path to InteractiveShellApp, to avoid future entry points having the same omission.\r\n\r\ncloses #1240", "commit_timestamp": "2012-05-03T18:04:26Z", "files": ["IPython/core/shellapp.py", "IPython/frontend/terminal/ipapp.py", "IPython/zmq/ipkernel.py"]}], "labels": ["bug"], "created_at": "2012-01-06T13:01:03Z", "closed_at": "2012-05-03T18:04:27Z", "linked_pr_number": [1240], "method": ["label", "regex"]}
{"issue_number": 1232, "title": "Dead kernel loop", "body": "I have been using the notebook a bit on my home pc with some success, so I am trying to get it running at the office.\n\n64-bit windows 7 with 64 bit python installed\nEverything works as expected, up to the dashboard page (which opens fine in Chrome)\nWhen I choose a notebook, or choose new notebook, the notebook opens and I get the dead kernel message.  When I restart I get another dead kernel, and so forth...all I get in the kernel screen is the following\n\n```\n The IPython Notebook is running at: http://127.0.0.1:8888\n Use Control-C to stop this server and shut down all kernels.\n Using MathJax from CDN\n Kernel started: a902af46-e03b-4fb5-bbd6-7e5a3eb3c81a\n To connect another client to this kernel, use:\n --existing kernel-a902af46-e03b-4fb5-bbd6-7e5a3eb3c81a.json\n Connecting to: tcp://127.0.0.1:63930\n Connecting to: tcp://127.0.0.1:63931\n Connecting to: tcp://127.0.0.1:63933\n Kernel started: 34e69ec9-b6f3-40d9-8424-3b824f8aa441\n Connecting to: tcp://127.0.0.1:64012\n Connecting to: tcp://127.0.0.1:64013\n Connecting to: tcp://127.0.0.1:64015\n To connect another client to this kernel, use:\n --existing kernel-34e69ec9-b6f3-40d9-8424-3b824f8aa441.json\n Kernel started: 98bdfcd3-0a8d-4aea-959c-49219aae41b6\n Connecting to: tcp://127.0.0.1:64049\n Connecting to: tcp://127.0.0.1:64050\n Connecting to: tcp://127.0.0.1:64052\n```\n\nFor somebody like me who usually diagnoses their own stupidity from the error trace, the kernel model makes it difficult.\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU4NTE4OmU3M2ZlOTkyYmY1MTFhMDc2ZTMzNmRmZTg4NzhiMTkxMGYwNjQ1MDY=", "commit_message": "Merge pull request #1187 from minrk/nbshutdown\n\nNotebook cleanups and fixes: connection file cleanup, first heartbeat, startup flush.\r\n\r\nKernels would not linger, but the KernelManagers are not garbage-collected on shutdown.  This means that connection files for kernels still running at notebook shutdown would not be removed.\r\n\r\nNow, kernels are explicitly killed at server shutdown, allowing the KernelManagers to cleanup files.\r\n\r\nSmall changes along the way:\r\n\r\n* disables the unnecessary (and actively detrimental) SIGINT handler inherited from the original copy/paste from the qt app.\r\n* put webapp initialization in `init_webapp` out of `initialize`, to preserve convention of there being no unique code in `initialize()`.\r\n* don't warn about http on all interfaces if running in 100% read-only mode, because no login or execution is possible.\r\n\r\nCloses #1232.", "commit_timestamp": "2012-01-06T06:00:51Z", "files": ["IPython/core/shellapp.py", "IPython/frontend/html/notebook/handlers.py", "IPython/frontend/html/notebook/kernelmanager.py", "IPython/frontend/html/notebook/notebookapp.py"]}], "labels": ["windows", "bug", "notebook"], "created_at": "2012-01-05T18:12:30Z", "closed_at": "2012-01-17T18:50:46Z", "method": ["label"]}
{"issue_number": 1228, "title": "terminal console with pylab: Ctrl-C crashes kernel", "body": "If I launch `ipython console`, and, at a blank prompt, press Ctrl-C, then it works as expected, presenting a `KeyboardInterrupt`. If, however, I do the same thing after launching `ipython console --pylab`, then the `KeyboardInterrupt` appears, but I also get a message \"KeyboardInterrupt caught in kernel\". If I press enter, I'm then told that the kernel has died, and I need to restart. \n\nIf I manually raise a `KeyboardInterrupt`, nothing bad happens at all. Likewise if I break an existing process with Ctrl-C, the interrupt works gracefully. So the console is mishandling Ctrl-C at the interactive prompt when pylab has been initiated.\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU4NTE4OjlkODY1YzhmZWU3NzRjZTI0ZTMzMTIzMGI5MTBiZjFhYWRhNjRlYjk=", "commit_message": "Merge pull request #1597 from minrk/while_eventloop\n\nre-enter kernel.eventloop after catching SIGINT\r\n\r\nThis protects the kernel from exiting due to bugs failing to catch SIGINT properly in the eventloop integration functions, as described in #1228. It does not fix those bugs, only reduces the severity of their consequences.", "commit_timestamp": "2012-04-15T00:48:40Z", "files": ["IPython/zmq/ipkernel.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo4YjFmZTU2ZjE0ZmQ0MWJlMjUwNzEzMzVkM2Y1ZGNmNzdlNzJiMDQz", "commit_message": "Merge pull request #1597 from minrk/while_eventloop\n\nre-enter kernel.eventloop after catching SIGINT\r\n\r\nThis protects the kernel from exiting due to bugs failing to catch SIGINT properly in the eventloop integration functions, as described in #1228. It does not fix those bugs, only reduces the severity of their consequences.", "commit_timestamp": "2012-04-15T00:48:40Z", "files": ["IPython/zmq/ipkernel.py"]}], "labels": ["bug", "zmq-console"], "created_at": "2012-01-04T19:33:29Z", "closed_at": "2015-01-12T00:37:19Z", "method": ["label"]}
{"issue_number": 1226, "title": "Windows GUI only (pythonw) bug for IPython on Python 3.x", "body": "Trying to launch the ipython-qtconsole.exe or ipython-qtconsole-script.pyw via pythonw on Python 3.2 immediately exits, and the Qt console never starts.  Running with ipython-qtconsole-script.pyw with plain python.exe works fine (and consumes the console). Fortunately, redirection stdout and stderr allows to get the traceback (well, stderr is where it went), which yields the following:\n\n<pre>\nTraceback (most recent call last):\n  File \"\\Python32\\Scripts\\ipython3-qtconsole-script.pyw\", line 9, in <module>\n    load_entry_point('ipython==0.12', 'gui_scripts', 'ipython3-qtconsole')()\n  File \"C:\\Python32\\lib\\site-packages\\distribute-0.6.24-py3.2.egg\\pkg_resources.py\", line 337, in load_entry_point\n    return get_distribution(dist).load_entry_point(group, name)\n  File \"C:\\Python32\\lib\\site-packages\\distribute-0.6.24-py3.2.egg\\pkg_resources.py\", line 2280, in load_entry_point\n    return ep.load()\n  File \"C:\\Python32\\lib\\site-packages\\distribute-0.6.24-py3.2.egg\\pkg_resources.py\", line 1990, in load\n    entry = __import__(self.module_name, globals(),globals(), ['__name__'])\n  File \"C:\\Python32\\lib\\site-packages\\IPython\\__init__.py\", line 43, in <module>\n    from .config.loader import Config\n  File \"C:\\Python32\\lib\\site-packages\\IPython\\config\\loader.py\", line 27, in <module>\n    from IPython.utils.path import filefind, get_ipython_dir\n  File \"C:\\Python32\\lib\\site-packages\\IPython\\utils\\path.py\", line 24, in <module>\n    from IPython.utils.process import system\n  File \"C:\\Python32\\lib\\site-packages\\IPython\\utils\\process.py\", line 25, in <module>\n    from ._process_win32 import _find_cmd, system, getoutput, AvoidUNCPath, arg_split\n  File \"C:\\Python32\\lib\\site-packages\\IPython\\utils\\_process_win32.py\", line 30, in <module>\n    from . import text\n  File \"C:\\Python32\\lib\\site-packages\\IPython\\utils\\text.py\", line 30, in <module>\n    from IPython.utils.io import nlprint\n  File \"C:\\Python32\\lib\\site-packages\\IPython\\utils\\io.py\", line 90, in <module>\n    stdin = IOStream(sys.stdin)\n  File \"C:\\Python32\\lib\\site-packages\\IPython\\utils\\io.py\", line 32, in __init__\n    raise ValueError(\"fallback required, but not specified\")\nValueError: fallback required, but not specified\n</pre>\n\n\nI was confused why nobody had seen this before, but come to find out it's a Python 3 vs 2 issue.  sys.std\\* are now None (and will continue to be)  for pythonw processes in Python 3.x, while they were file objects with fileno == -2 on Python 2.x.  Regular old prints will work when stdout/stderr are None, but they just get discarded immediately, but of course any attribute lookups are going to fail.\n\nInterestingly, running with:\n\\Python32\\pythonw.exe \\Python32\\Scripts\\ipython3-qtconsole-script.pyw > stdout.log 2> stderr.log < _empty_file_\nyielded the qtconsole window, but the prompt never appeared, I assume due redirecting an empty file into stdin (I've no idea what /dev/null is on Windows).  I guess in the course of normal script runs, that stdin is a file object that is already closed, or in some other state, so that allows this to work, but doesn't cause it to read input from stdin.\n\nThis simple script run with pythonw (on v2 and v3) highlights the difference:\n\n``` python\n# this will show what the std* file handles are on Python 2.x vs Python 3.x\n# noted @ http://bugs.python.org/issue1415\nimport sys\n\nfname = 'python%d_std_fds.txt' % (sys.version_info[0])\nf = open(fname, 'w')\n\nif sys.stdin is None:\n    f.write(\"stdin: None\\n\")\nelse:\n    f.write(\"stdin: %i\\n\" % sys.stdin.fileno())\nif sys.stdout is None:\n    f.write(\"stdout: None\\n\")\nelse:\n    f.write(\"stdout: %i\\n\" % sys.stdout.fileno())\nif sys.stderr is None:\n    f.write(\"stderr: None\\n\")\nelse:\n    f.write(\"stderr: %i\\n\" % sys.stderr.fileno())\nf.close()\n```\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU4NTE4OjRjZjk4YjQzYTI0MzQzNjc0OTliN2VhODQ4NzM0MDRhZDE1MmQ4ZTk=", "commit_message": "Merge pull request #1245 from gbrandonp/pythonw-py3k\n\npythonw py3k fixes for issue #1226", "commit_timestamp": "2012-05-05T11:33:19Z", "files": ["IPython/config/loader.py", "IPython/core/macro.py", "IPython/core/magic.py", "IPython/core/page.py", "IPython/core/splitinput.py", "IPython/external/path/_path.py", "IPython/external/pexpect/_pexpect.py", "IPython/frontend/terminal/interactiveshell.py", "IPython/testing/tools.py", "IPython/utils/PyColorize.py", "IPython/utils/_process_posix.py", "IPython/utils/_process_win32.py", "IPython/utils/encoding.py", "IPython/utils/io.py", "IPython/utils/jsonutil.py", "IPython/utils/py3compat.py", "IPython/utils/text.py", "IPython/zmq/iostream.py", "IPython/zmq/kernelapp.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo5MjZhMGY5ODViYWNhZTM4MDdhOWViNmQ4YmVhYTQxM2M3MDhkNThk", "commit_message": "Merge pull request #1245 from gbrandonp/pythonw-py3k\n\npythonw py3k fixes for issue #1226", "commit_timestamp": "2012-05-05T11:33:19Z", "files": ["IPython/config/loader.py", "IPython/core/macro.py", "IPython/core/magic.py", "IPython/core/page.py", "IPython/core/splitinput.py", "IPython/external/path/_path.py", "IPython/external/pexpect/_pexpect.py", "IPython/frontend/terminal/interactiveshell.py", "IPython/testing/tools.py", "IPython/utils/PyColorize.py", "IPython/utils/_process_posix.py", "IPython/utils/_process_win32.py", "IPython/utils/encoding.py", "IPython/utils/io.py", "IPython/utils/jsonutil.py", "IPython/utils/py3compat.py", "IPython/utils/text.py", "IPython/zmq/iostream.py", "IPython/zmq/kernelapp.py"]}], "labels": ["qtconsole", "windows", "bug"], "created_at": "2012-01-04T14:38:51Z", "closed_at": "2012-05-05T11:34:49Z", "method": ["label", "regex"]}
{"issue_number": 1225, "title": "SyntaxError display broken in Python 3", "body": "With python 2.7 ipython responds to a syntax error with a traceback like this:\n\nIn [1]: ''.\n  File \"<ipython-input-1-c1607516cd6c>\", line 1\n    ''.\n      ^\nSyntaxError: invalid syntax\n\nBut with Python 3.2 you only get this:\n\nIn [1]: ''.\nSyntaxError: invalid syntax (<ipython-input-1-c1607516cd6c>, line 1)\n\nThere is no pointer showing where the error is.\n", "commits": [{"node_id": "MDY6Q29tbWl0MTIzNjAwMzpkZTBlYWQ0Mzk2YjRmNGQ3OTdhMWY2MTM1NmY4MzBjZWU5ZjcxMmQw", "commit_message": "Fix display of SyntaxError in Python 3.\n\nCloses gh-1225", "commit_timestamp": "2012-01-04T21:03:43Z", "files": ["IPython/core/interactiveshell.py", "IPython/core/ultratb.py", "IPython/lib/tests/test_irunner.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjM3ODJiNWM5ZGQ0ZDBjZDZlZjhmYmQ0NjgwODE2MDc4OTE4YmI1Y2E=", "commit_message": "Merge pull request #1229 from takluyver/i1225\n\nFix display of SyntaxError in Python 3, plus various cleanups to exception-handling machinery.\r\n\r\nCloses #1225.", "commit_timestamp": "2012-01-13T00:11:08Z", "files": ["IPython/core/interactiveshell.py", "IPython/core/ultratb.py", "IPython/lib/tests/test_irunner.py", "IPython/utils/pyfile.py"]}, {"node_id": "MDY6Q29tbWl0NjU5NDQ2OjgzZGVhMDlhZjU1YzJjZGZlOGVjYmIxYjYyY2E1NGJmMTE3NTEzYjc=", "commit_message": "Merge pull request #1229 from takluyver/i1225\n\nFix display of SyntaxError in Python 3, plus various cleanups to exception-handling machinery.\r\n\r\nCloses #1225.", "commit_timestamp": "2012-01-18T02:27:52Z", "files": ["IPython/core/interactiveshell.py", "IPython/core/ultratb.py", "IPython/lib/tests/test_irunner.py", "IPython/utils/pyfile.py"]}, {"node_id": "MDY6Q29tbWl0NjU5NDQ2OjkzZGUyNWZlMDIxMWEzOGNkYTg4NmMwYWVlMjFiNDI3MDljMzBlNGI=", "commit_message": "Fix display of SyntaxError in Python 3.\n\nCloses gh-1225", "commit_timestamp": "2012-01-28T21:14:36Z", "files": ["IPython/core/interactiveshell.py", "IPython/core/ultratb.py", "IPython/lib/tests/test_irunner.py"]}, {"node_id": "MDY6Q29tbWl0MjM0Mzk1OTphMjgzYzRmOGFiMDc3ZjBlODc3MDkxYjNiM2I1MmFlYTFiMDRiNThh", "commit_message": "Fix display of SyntaxError in Python 3.\n\nCloses gh-1225", "commit_timestamp": "2012-04-06T21:34:47Z", "files": ["IPython/core/interactiveshell.py", "IPython/core/ultratb.py", "IPython/lib/tests/test_irunner.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzpiNWNjYmI5OWU5ZGY3NjRjMGZkNGVhMmUwMWRkZjA1MGI4MTc4ZDc5", "commit_message": "Fix display of SyntaxError in Python 3.\n\nCloses gh-1225", "commit_timestamp": "2012-01-04T21:03:43Z", "files": ["IPython/core/interactiveshell.py", "IPython/core/ultratb.py", "IPython/lib/tests/test_irunner.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzpkZTMxNDkwNmEzZGZjMjI2N2ZmYzA3OGYzMzhhNTA0ZjAyOGVjMDhm", "commit_message": "Merge pull request #1229 from takluyver/i1225\n\nFix display of SyntaxError in Python 3, plus various cleanups to exception-handling machinery.\r\n\r\nCloses #1225.", "commit_timestamp": "2012-01-18T02:27:52Z", "files": ["IPython/core/interactiveshell.py", "IPython/core/ultratb.py", "IPython/lib/tests/test_irunner.py", "IPython/utils/pyfile.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjM3ODJiNWM5ZGQ0ZDBjZDZlZjhmYmQ0NjgwODE2MDc4OTE4YmI1Y2E=", "commit_message": "Merge pull request #1229 from takluyver/i1225\n\nFix display of SyntaxError in Python 3, plus various cleanups to exception-handling machinery.\r\n\r\nCloses #1225.", "commit_timestamp": "2012-01-13T00:11:08Z", "files": ["IPython/core/interactiveshell.py", "IPython/core/ultratb.py", "IPython/lib/tests/test_irunner.py", "IPython/utils/pyfile.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjM3ODJiNWM5ZGQ0ZDBjZDZlZjhmYmQ0NjgwODE2MDc4OTE4YmI1Y2E=", "commit_message": "Merge pull request #1229 from takluyver/i1225\n\nFix display of SyntaxError in Python 3, plus various cleanups to exception-handling machinery.\r\n\r\nCloses #1225.", "commit_timestamp": "2012-01-13T00:11:08Z", "files": ["IPython/core/interactiveshell.py", "IPython/core/ultratb.py", "IPython/lib/tests/test_irunner.py", "IPython/utils/pyfile.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjgzZGVhMDlhZjU1YzJjZGZlOGVjYmIxYjYyY2E1NGJmMTE3NTEzYjc=", "commit_message": "Merge pull request #1229 from takluyver/i1225\n\nFix display of SyntaxError in Python 3, plus various cleanups to exception-handling machinery.\r\n\r\nCloses #1225.", "commit_timestamp": "2012-01-18T02:27:52Z", "files": ["IPython/core/interactiveshell.py", "IPython/core/ultratb.py", "IPython/lib/tests/test_irunner.py", "IPython/utils/pyfile.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzpkZTMxNDkwNmEzZGZjMjI2N2ZmYzA3OGYzMzhhNTA0ZjAyOGVjMDhm", "commit_message": "Merge pull request #1229 from takluyver/i1225\n\nFix display of SyntaxError in Python 3, plus various cleanups to exception-handling machinery.\r\n\r\nCloses #1225.", "commit_timestamp": "2012-01-18T02:27:52Z", "files": ["IPython/core/interactiveshell.py", "IPython/core/ultratb.py", "IPython/lib/tests/test_irunner.py", "IPython/utils/pyfile.py"]}], "labels": ["bug"], "created_at": "2012-01-04T03:44:45Z", "closed_at": "2012-01-13T00:11:10Z", "linked_pr_number": [1225], "method": ["label", "regex"]}
{"issue_number": 1201, "title": "%env magic fails with Python 3.2", "body": "%env magic command fails with Python 3.2 because os.environ does not have an attribute called \"data\" - see traceback below.\nPlatform is Python 3.2.2, IPython 0.12, Mac OS X 10.7.2\n\n```\nTraceback\n--------------\nPython 3.2.2 (v3.2.2:137e45f15c0b, Sep  3 2011, 17:28:59) \nType \"copyright\", \"credits\" or \"license\" for more information.\n\nIPython 0.12 -- An enhanced Interactive Python.\n?         -> Introduction and overview of IPython's features.\n%quickref -> Quick reference.\nhelp      -> Python's own help system.\nobject?   -> Details about 'object', use 'object??' for extra details.\n\nIn [1]: %env\n\nAttributeError                            Traceback (most recent call last)\n/Users/colin/Python/readline-6.2.1/<ipython-input-1-d53f11c3c8bf> in <module>()\n----> 1 get_ipython().magic('env')\n\n/Library/Frameworks/Python.framework/Versions/3.2/lib/python3.2/site-packages/ipython-0.12-py3.2.egg/IPython/core/interactiveshell.py in magic(self, arg_s, next_input)\n   1997                 self._magic_locals = sys._getframe(1).f_locals\n   1998             with self.builtin_trap:\n-> 1999                 result = fn(magic_args)\n   2000             # Ensure we're not keeping object references around:\n\n   2001             self._magic_locals = {}\n\n/Library/Frameworks/Python.framework/Versions/3.2/lib/python3.2/site-packages/ipython-0.12-py3.2.egg/IPython/core/magic.py in magic_env(self, parameter_s)\n   2923         \"\"\"List environment variables.\"\"\"\n   2924 \n-> 2925         return os.environ.data\n   2926 \n   2927     def magic_pushd(self, parameter_s=''):\n\nAttributeError: '_Environ' object has no attribute 'data'\n```\n", "commits": [{"node_id": "MDY6Q29tbWl0MTIzNjAwMzplOTEzYzBiMGUyNDQ1OTU0YWRkYTcwMjQyNGUzMzdjMzEzMDNiYTZl", "commit_message": "Fix %env magic on Python 3.\n\nCloses gh-1201", "commit_timestamp": "2012-04-15T11:30:26Z", "files": ["IPython/core/magic.py", "IPython/core/tests/test_magic.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmU5MTNjMGIwZTI0NDU5NTRhZGRhNzAyNDI0ZTMzN2MzMTMwM2JhNmU=", "commit_message": "Fix %env magic on Python 3.\n\nCloses gh-1201", "commit_timestamp": "2012-04-15T11:30:26Z", "files": ["IPython/core/magic.py", "IPython/core/tests/test_magic.py"]}, {"node_id": "MDY6Q29tbWl0MTU3MjY3NTphZTIyMmQwZWZiODUxNzlkZDM2NWY2NmJmZjdhOTdkM2M3OTIzNWFk", "commit_message": "Merge pull request #1602 from takluyver/i1201\n\nFix %env magic on Python 3 and add simple test.\r\n\r\nCloses gh-1201.", "commit_timestamp": "2012-04-15T21:37:52Z", "files": ["IPython/core/magic.py", "IPython/core/tests/test_magic.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzozMGYxZmEyZDdkMzU4MDI5N2Y3YmM4YTU4YzExZWM4ZDM5OWFhNjYy", "commit_message": "Fix %env magic on Python 3.\n\nCloses gh-1201", "commit_timestamp": "2012-04-15T11:30:26Z", "files": ["IPython/core/magic.py", "IPython/core/tests/test_magic.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo5YmYyNjJkYTMxMThlMTRiNzc0ODdiOTFjYmYzNmRjMGI5M2JhMTEz", "commit_message": "Merge pull request #1602 from takluyver/i1201\n\nFix %env magic on Python 3 and add simple test.\r\n\r\nCloses gh-1201.", "commit_timestamp": "2012-04-15T21:37:52Z", "files": ["IPython/core/magic.py", "IPython/core/tests/test_magic.py"]}], "labels": ["bug"], "created_at": "2011-12-23T12:39:49Z", "closed_at": "2012-04-15T21:37:54Z", "method": ["label", "regex"]}
{"issue_number": 1197, "title": "Interactive shell trying to: from ... import history", "body": "Using ipython 0.12 with python 3.1.2.\n\n``` python\n$ ipython3\nTraceback (most recent call last):\n  File \"/home/hh/.virtualenvs/sweddoc4/bin/ipython3\", line 9, in <module>\n    load_entry_point('ipython==0.12', 'console_scripts', 'ipython3')()\n  File \"/home/hh/.virtualenvs/sweddoc4/lib/python3.1/site-packages/IPython/frontend/terminal/ipapp.py\", line 402, in launch_new_instance\n    app.initialize()\n  File \"<string>\", line 2, in initialize\n  File \"/home/hh/.virtualenvs/sweddoc4/lib/python3.1/site-packages/IPython/config/application.py\", line 84, in catch_config_error\n    return method(app, *args, **kwargs)\n  File \"/home/hh/.virtualenvs/sweddoc4/lib/python3.1/site-packages/IPython/frontend/terminal/ipapp.py\", line 312, in initialize\n    self.init_shell()\n  File \"/home/hh/.virtualenvs/sweddoc4/lib/python3.1/site-packages/IPython/frontend/terminal/ipapp.py\", line 332, in init_shell\n    ipython_dir=self.ipython_dir)\n  File \"/home/hh/.virtualenvs/sweddoc4/lib/python3.1/site-packages/IPython/config/configurable.py\", line 318, in instance\n    inst = cls(*args, **kwargs)\n  File \"/home/hh/.virtualenvs/sweddoc4/lib/python3.1/site-packages/IPython/frontend/terminal/interactiveshell.py\", line 183, in __init__\n    user_module=user_module, custom_exceptions=custom_exceptions\n  File \"/home/hh/.virtualenvs/sweddoc4/lib/python3.1/site-packages/IPython/core/interactiveshell.py\", line 480, in __init__\n    self.init_magics()\n  File \"/home/hh/.virtualenvs/sweddoc4/lib/python3.1/site-packages/IPython/core/interactiveshell.py\", line 1957, in init_magics\n    from ... import history\nValueError: Attempted relative import beyond toplevel package\n```\n\nThe attached patch makes it possible to start ipython3.\n\n```\n--- interactiveshell.py.orig    2011-12-22 15:50:57.000000000 +0100\n+++ interactiveshell.py 2011-12-22 15:47:39.000000000 +0100\n@@ -1954,7 +1954,7 @@\n         # even need a centralize colors management object.\n         self.magic_colors(self.colors)\n         # History was moved to a separate module\n-        from ... import history\n+        from IPython.core import history\n         history.init_ipython(self)\n\n     def magic(self, arg_s, next_input=None):\n```\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU4NTE4OjAxMDA3M2NmNmQxMGZkYTJmNDA2MTVhMDAwZjU5YjI1MTg1NWI3OTk=", "commit_message": "Tweak import statement so 2to3 from Python 3.1 doesn't mangle it.\n\nCloses gh-1197", "commit_timestamp": "2011-12-28T18:32:56Z", "files": ["IPython/core/interactiveshell.py"]}, {"node_id": "MDY6Q29tbWl0MjM0Mzk1OTplNGE0NGExODMyMTFjY2JhMmMzYmFkMGY0ODYxOGY1OGRhMjVmMDI4", "commit_message": "Tweak import statement so 2to3 from Python 3.1 doesn't mangle it.\n\nCloses gh-1197", "commit_timestamp": "2012-04-06T21:34:45Z", "files": ["IPython/core/interactiveshell.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo4NzY1ZjljZjQ3YjcyNjQxMWI2ZTU0NDdlMjE0MDE2NTE3Mjg5MDM3", "commit_message": "Tweak import statement so 2to3 from Python 3.1 doesn't mangle it.\n\nCloses gh-1197", "commit_timestamp": "2011-12-28T18:32:56Z", "files": ["IPython/core/interactiveshell.py"]}], "labels": ["bug"], "created_at": "2011-12-22T14:52:48Z", "closed_at": "2011-12-28T18:33:53Z", "method": ["label"]}
{"issue_number": 1181, "title": "greedy completer bug in terminal console", "body": "i'm back from finishing my thesis and i'm awed by the massive progress over the last few months. i'm particularly fond of the terminal 2-process frontend, which is super-useful to me. alas the greedy completer is not working properly in this mode. if i start a console session with greedy on, and then run\n\n``` python\nx = [0, 1, 2]\nx[0].im<TAB>\n```\n\nit will autocomplete `imag`, but the next line will be\n\n``` python\nx[0]x[0].imag\n```\n\nwhich is obviously not right. this problem (rightfully) does not occur in the 1-process terminal or the qtconsole mode.\n\ni remember this being an issue before in previous versions of ipython, but with the new structure i cannot see yet where this bug arises and how to solve it. best to ask an expert...\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU5NDQ2OjkzYzAwNzljMzI3MTIwODgxNzkyZTVhMmM0NzEzN2YxY2RlYjc1OTI=", "commit_message": "ZMQCompleter inherits from IPCompleter\n\nensures the readline completion delimiter change implied by greedy completion is inherited by the frontend.\n\ncloses #1181", "commit_timestamp": "2014-01-29T03:53:15Z", "files": ["IPython/terminal/console/completer.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzozMzEyOTEyYjE0OTk1M2JmYTA3YzBkZWVkNDYyMjVhNTk5OGJiNTg1", "commit_message": "ZMQCompleter inherits from IPCompleter\n\nensures the readline completion delimiter change implied by greedy completion is inherited by the frontend.\n\ncloses #1181", "commit_timestamp": "2014-01-29T03:53:15Z", "files": ["IPython/terminal/console/completer.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmM0OWNmZDYyODU1MTQ1NmUxYmI0MDdiNzIyYmU1YzNmMGFiYTdhZTE=", "commit_message": "Merge pull request #4915 from minrk/console-completer\n\nZMQCompleter inherits from IPCompleter", "commit_timestamp": "2014-01-29T19:07:20Z", "files": ["IPython/terminal/console/completer.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmM0OWNmZDYyODU1MTQ1NmUxYmI0MDdiNzIyYmU1YzNmMGFiYTdhZTE=", "commit_message": "Merge pull request #4915 from minrk/console-completer\n\nZMQCompleter inherits from IPCompleter", "commit_timestamp": "2014-01-29T19:07:20Z", "files": ["IPython/terminal/console/completer.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzphMDIxY2VjNzVhMzE4NDAwMjdjYmEwZmQyNWUzNmZhYmU4MzBkMDRj", "commit_message": "Merge pull request #4915 from minrk/console-completer\n\nZMQCompleter inherits from IPCompleter", "commit_timestamp": "2014-01-29T19:07:20Z", "files": ["IPython/terminal/console/completer.py"]}], "labels": ["bug", "tab-completion", "zmq-console"], "created_at": "2011-12-19T12:08:30Z", "closed_at": "2014-01-29T19:07:20Z", "linked_pr_number": [1181], "method": ["label", "regex"]}
{"issue_number": 1170, "title": "double pylab greeting with c.InteractiveShellApp.pylab = \"tk\" in zmqconsole", "body": "I added  c.InteractiveShellApp.pylab = \"tk\" to my config to get pylab with the zmqconsole.\nyou then get two pylab greetings when you start it:\n\n```\nipython console\nWelcome to pylab, a matplotlib-based Python environment [backend: TkAgg].\nFor more information, type 'help(pylab)'.\n[IPKernelApp] To connect another client to this kernel, use:\n[IPKernelApp] --existing kernel-3395.json\n\nWelcome to pylab, a matplotlib-based Python environment [backend: TkAgg].\nFor more information, type 'help(pylab)'.\n```\n\nadding only c.TerminalIPythonApp.pylab = \"tk\" to the config will give you one greeting but pylab won't work which is a bit confusing.\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU4NTE4OmM4ODc0ZDdmNGE1Njg0NTcxZWZiZTUxMjQxZjQ5NzhiZjU5ZDk0YjY=", "commit_message": "Merge pull request #1173 from minrk/pylab-noop\n\nDon't load gui/pylab in console frontend, where it makes no sense.\r\n\r\nCloses #1170.", "commit_timestamp": "2011-12-18T02:39:27Z", "files": ["IPython/frontend/terminal/console/app.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo2NmU4MmVkYTM5ZTlhNmI3ZDJlODJlYTNlNjQ3OTlhY2YyODg0NDM1", "commit_message": "Merge pull request #1173 from minrk/pylab-noop\n\nDon't load gui/pylab in console frontend, where it makes no sense.\r\n\r\nCloses #1170.", "commit_timestamp": "2011-12-18T02:39:27Z", "files": ["IPython/frontend/terminal/console/app.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmM4ODc0ZDdmNGE1Njg0NTcxZWZiZTUxMjQxZjQ5NzhiZjU5ZDk0YjY=", "commit_message": "Merge pull request #1173 from minrk/pylab-noop\n\nDon't load gui/pylab in console frontend, where it makes no sense.\r\n\r\nCloses #1170.", "commit_timestamp": "2011-12-18T02:39:27Z", "files": ["IPython/frontend/terminal/console/app.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmM4ODc0ZDdmNGE1Njg0NTcxZWZiZTUxMjQxZjQ5NzhiZjU5ZDk0YjY=", "commit_message": "Merge pull request #1173 from minrk/pylab-noop\n\nDon't load gui/pylab in console frontend, where it makes no sense.\r\n\r\nCloses #1170.", "commit_timestamp": "2011-12-18T02:39:27Z", "files": ["IPython/frontend/terminal/console/app.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo2NmU4MmVkYTM5ZTlhNmI3ZDJlODJlYTNlNjQ3OTlhY2YyODg0NDM1", "commit_message": "Merge pull request #1173 from minrk/pylab-noop\n\nDon't load gui/pylab in console frontend, where it makes no sense.\r\n\r\nCloses #1170.", "commit_timestamp": "2011-12-18T02:39:27Z", "files": ["IPython/frontend/terminal/console/app.py"]}], "labels": ["bug"], "created_at": "2011-12-17T22:44:33Z", "closed_at": "2011-12-18T02:39:29Z", "linked_pr_number": [1170], "method": ["label"]}
{"issue_number": 1164, "title": "IPython qtconsole (0.12) can't export to html with external png", "body": "This error looks a bit like that in issue #1087 but the details are different. I create a qtconsole session with some embedded figures. Export to HTML with inline PNG works fine. Export to XHTML/SVG 'works' (with missing images). Export to HTML with external PNG creates a folder with the PNG files correctly but fails to write the HTML (leaving a zero size .html file) with the following error:\n\n```\nError exporting HTML to /Users/claumann/Desktop/test/test.html\n'ascii' codec can't decode byte 0xc2 in position 2287: ordinal not in range(128)\n```\n\nI have an html (with embedded PNG) that constitutes a minimal session reproducing this but I don't know how to attach it to this issue. The (non-graphical) content:\n\n```\nIn [1]: figure()\nscatter(r_[0,1,2], r_[0,1,2], marker='x')\ndisplay(gcf())\n\n<embedded image>\n\nIn [2]: !uname -a\nDarwin blackbear.local 11.2.0 Darwin Kernel Version 11.2.0: Tue Aug  9 20:54:00 PDT 2011; root:xnu-1699.24.8~1/RELEASE_X86_64 x86_64\n\nIn [3]: np.__version__\nOut[3]: '2.0.0.dev-26aa3cf'\n\nIn [4]: pylab.__version__\nOut[4]: '2.0.0.dev-26aa3cf'\n\nIn [5]: matplotlib.__version__\nOut[5]: '1.2.x'\n```\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU4NTE4OjM3NmFkZGYxYzViYTk3ZTIyOGVlMTY1NDkzMDZjNjRkZGMxOGQ0YTk=", "commit_message": "Merge pull request #1165 from minrk/save\n\nencode image_tag as utf8 in [x]html export\r\n\r\nShould only affect Python 2\r\n    \r\nAlso removes redundant 'setDefaultButton' in Inline/External dialog, which caused strange display of the two buttons.\r\n\r\ncloses #1164", "commit_timestamp": "2011-12-16T19:27:00Z", "files": ["IPython/frontend/qt/rich_text.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo2OWNiNWU4M2ZhNGU4MmIyMWM0OWYyNGZmMGYyNDE4NzIwYWIzYWJi", "commit_message": "Merge pull request #1165 from minrk/save\n\nencode image_tag as utf8 in [x]html export\r\n\r\nShould only affect Python 2\r\n    \r\nAlso removes redundant 'setDefaultButton' in Inline/External dialog, which caused strange display of the two buttons.\r\n\r\ncloses #1164", "commit_timestamp": "2011-12-16T19:27:00Z", "files": ["IPython/frontend/qt/rich_text.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjM3NmFkZGYxYzViYTk3ZTIyOGVlMTY1NDkzMDZjNjRkZGMxOGQ0YTk=", "commit_message": "Merge pull request #1165 from minrk/save\n\nencode image_tag as utf8 in [x]html export\r\n\r\nShould only affect Python 2\r\n    \r\nAlso removes redundant 'setDefaultButton' in Inline/External dialog, which caused strange display of the two buttons.\r\n\r\ncloses #1164", "commit_timestamp": "2011-12-16T19:27:00Z", "files": ["IPython/frontend/qt/rich_text.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjM3NmFkZGYxYzViYTk3ZTIyOGVlMTY1NDkzMDZjNjRkZGMxOGQ0YTk=", "commit_message": "Merge pull request #1165 from minrk/save\n\nencode image_tag as utf8 in [x]html export\r\n\r\nShould only affect Python 2\r\n    \r\nAlso removes redundant 'setDefaultButton' in Inline/External dialog, which caused strange display of the two buttons.\r\n\r\ncloses #1164", "commit_timestamp": "2011-12-16T19:27:00Z", "files": ["IPython/frontend/qt/rich_text.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo2OWNiNWU4M2ZhNGU4MmIyMWM0OWYyNGZmMGYyNDE4NzIwYWIzYWJi", "commit_message": "Merge pull request #1165 from minrk/save\n\nencode image_tag as utf8 in [x]html export\r\n\r\nShould only affect Python 2\r\n    \r\nAlso removes redundant 'setDefaultButton' in Inline/External dialog, which caused strange display of the two buttons.\r\n\r\ncloses #1164", "commit_timestamp": "2011-12-16T19:27:00Z", "files": ["IPython/frontend/qt/rich_text.py"]}], "labels": ["qtconsole"], "created_at": "2011-12-16T18:05:28Z", "closed_at": "2011-12-16T19:27:03Z", "linked_pr_number": [1164], "method": ["regex"]}
{"issue_number": 1157, "title": "Ctrl-C not working when GUI/pylab integration is active", "body": "As @juliantaylor mentioned in #825, it seems that recently `Ctrl-C` stopped working.  To see it, open a normal ipython; first verify that you can interrupt a normal operation:\n\n```\nIn [1]: import time; time.sleep(3)\n^C---------------------------------------------------------------------------\nKeyboardInterrupt                         Traceback (most recent call last)\n/home/fperez/tmp/src/scipy/<ipython-input-1-8d480fb9ac1e> in <module>()\n----> 1 import time; time.sleep(3)\n\nKeyboardInterrupt: \n```\n\nThen turn GUI support on and try again:\n\n```\nIn [2]: gui qt\nOut[2]: <PyQt4.QtGui.QApplication at 0x2b84f80>\n\nIn [3]: import time; time.sleep(3)\n^C^C^C\nIn [4]: \n```\n\nAbove, I hit `^C` three times and nothing happened, the `time.sleep(3)` ran to completion without the interrupt working.\n\nThis is new and a major issue we do need to resolve before releasing 0.12.\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU4NTE4OjQ2NGNiODkyM2EzOGUxYTI4M2IzNjk5YWVlYWJkOWNmOGQzYzQ0NDA=", "commit_message": "Merge pull request #1160 from ipython/inputhookqt4\n\nDon't ignore ctrl-C during `%gui qt`\r\n\r\nPR #815 ignores ctrl-C during normal code execution, this restores the sigint handler outside the inputhook.\r\n\r\nCloses #1157.", "commit_timestamp": "2011-12-15T22:09:50Z", "files": ["IPython/lib/inputhookqt4.py"]}], "labels": ["important", "bug", "regression"], "created_at": "2011-12-15T20:28:08Z", "closed_at": "2011-12-15T22:09:53Z", "method": ["label", "regex"]}
{"issue_number": 1156, "title": "Notebooks downloaded as Python files require a header stating the encoding", "body": "The following problem occurred: I have a notebook with a mardown cell that contains non-ASCII characters. When I try to run the file I get the following error:\n\nSyntaxError: Non-ASCII character '\\xc3' in file bla.py on line 11, but no encoding declared; see http://www.python.org/peps/pep-0263.html for details\n\neven though the offending character is commented.\n\nPutting something like `# -*- coding: utf-8 -*-` in the first or second line of the file solves the problem, I think this should be standard procedure for exporting the notebook.\n", "commits": [{"node_id": "MDY6Q29tbWl0MjkwOTI5MDpmYWEyZDdmOTExODZmNTZlN2I2NmZhZmM4ODJjODRjNjRlZDUyMjNh", "commit_message": "Add encoding header to Python files downloaded from notebooks.\n\nCloses gh-1156.", "commit_timestamp": "2011-12-15T21:22:33Z", "files": ["IPython/nbformat/v2/nbpy.py"]}, {"node_id": "MDY6Q29tbWl0MTIzNjAwMzoxZTgwY2VlZGYzMGZmM2Y3MzdlZGQ1NTE5N2JkM2ExODJhMDA5YjJh", "commit_message": "Add coding header when notebook exported to .py file.\n\nCloses gh-1156", "commit_timestamp": "2011-12-15T21:32:36Z", "files": ["IPython/nbformat/v2/nbpy.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjY4OGNjMDllMjc5ZTk2ODc1NDhkMmNlMTM3N2U1OWExYzIwYzc4NWU=", "commit_message": "Merge pull request #1158 from takluyver/nbpy-encoding-declaration\n\nAdd coding header when notebook exported to .py file.\r\n\r\nCloses gh-1156, also strips the encoding declaration out when we load a .py file.", "commit_timestamp": "2011-12-15T22:44:46Z", "files": ["IPython/nbformat/v2/nbpy.py", "IPython/nbformat/v2/tests/nbexamples.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzpmYjdlMjQ0MzcwOTMwZTQ0NzBiMWQzYjkzODI1MzBhZjIxNjRlMTk2", "commit_message": "Add coding header when notebook exported to .py file.\n\nCloses gh-1156", "commit_timestamp": "2011-12-15T21:32:36Z", "files": ["IPython/nbformat/v2/nbpy.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo4NWE2NWZlZmM3OGJjZGRmNDNkZWQ4MTYyOTM2ZmQzYjM5ZWMxMzky", "commit_message": "Merge pull request #1158 from takluyver/nbpy-encoding-declaration\n\nAdd coding header when notebook exported to .py file.\r\n\r\nCloses gh-1156, also strips the encoding declaration out when we load a .py file.", "commit_timestamp": "2011-12-15T22:44:46Z", "files": ["IPython/nbformat/v2/nbpy.py", "IPython/nbformat/v2/tests/nbexamples.py"]}], "labels": ["important", "unicode", "bug"], "created_at": "2011-12-15T15:15:17Z", "closed_at": "2011-12-15T22:44:49Z", "method": ["label"]}
{"issue_number": 1154, "title": "We should be less aggressive in de-registering post-execution functions", "body": "I'm marking this as a blocker so we make a decision on it in the next few days.  If we decide to make a change, the implementation is easy.\n\nCurrently, if a post-execution function fails we immediately de-register it.  The rationale for this was originally that if the user had a bad function, there was no point in failing every time.\n\nBut in more extensive use, I'm realizing this is a bad policy in practice.  To see the issue, try in a pylab notebook just this one cell:\n\n```\nplt.title(\"Na\u00efve\")\n```\n\nnote that this is unicode _without_ the proper `u` qualifier.  That triggers a matplotlib exception (as it should) but we immediately go ahead and disable further figure display:\n\n```\nDisabling failed post-execution function: <function flush_figures at 0x7fe574a20a28>\nERROR: An unexpected error occurred while tokenizing input\nThe following traceback may be corrupted or invalid\nThe error message is: ('EOF in multi-line statement', (316, 0))\n```\n\nSo even though in this case the user did pass invalid input, from this point on their experience will simply be \"the notebook doesn't work anymore\".  They can recover functionality by calling `%pylab` which re-registers the figure display function, but most people will just be puzzled by the behavior and likely just do a full session restart (possibly losing costly computations).\n\nI think what we should do instead is to store in a set all functions that have ever failed at this stage, and change the error message to something like:\n\n```\nFunction <....> produced an error.  If this problem persists, you can disable all problematic post-execution functions by calling:\n\nget_ipython().disable_failing_postfuncs()\n```\n\nThe user can then make the call manually if they really need it.  But in a case like this example, they would simply realize their mpl error, fix their call and be able to continue.\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU4NTE4OjJjNjgzYjcyNzQ5ZGVjMDJkMGRjMTFmMmQ5ZThmM2UxN2U5NDEyNGM=", "commit_message": "Merge pull request #1155 from minrk/postexec\n\nBe less aggressive in de-registering failing post-execute functions so that normal errors don't disable them permanently.\r\n\r\nTwo changes:\r\n\r\n1. Don't unregister failing post-exec callbacks automatically. Instead, print a message regarding the failure, pointing to new `disable_failing_post_execute` trait for skipping failing callbacks.\r\n    - When this flag is False (the default), failing callbacks will continue to be called.\r\n    - When True, behavior is unchanged from previous, where callbacks are only allowed to fail once.\r\n2. protect `flush_figures()` post-exec function from user error.  Invalid matplotlib data may raise inside `print_figure()`.  flush_figures() is a post-exec function, so user errors should not raise.  Instead, call `get_ipython().showtraceback()` if called from IPython, raising as before otherwise.\r\n\r\ncloses #1154", "commit_timestamp": "2011-12-15T00:34:36Z", "files": ["IPython/core/interactiveshell.py", "IPython/zmq/pylab/backend_inline.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzphOWI2ZDFkNTkzNDFiMGE2ZTEwZmUxZGFjNTcwZDJiNDJiYzM0NWFj", "commit_message": "Merge pull request #1155 from minrk/postexec\n\nBe less aggressive in de-registering failing post-execute functions so that normal errors don't disable them permanently.\r\n\r\nTwo changes:\r\n\r\n1. Don't unregister failing post-exec callbacks automatically. Instead, print a message regarding the failure, pointing to new `disable_failing_post_execute` trait for skipping failing callbacks.\r\n    - When this flag is False (the default), failing callbacks will continue to be called.\r\n    - When True, behavior is unchanged from previous, where callbacks are only allowed to fail once.\r\n2. protect `flush_figures()` post-exec function from user error.  Invalid matplotlib data may raise inside `print_figure()`.  flush_figures() is a post-exec function, so user errors should not raise.  Instead, call `get_ipython().showtraceback()` if called from IPython, raising as before otherwise.\r\n\r\ncloses #1154", "commit_timestamp": "2011-12-15T00:34:36Z", "files": ["IPython/core/interactiveshell.py", "IPython/zmq/pylab/backend_inline.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjJjNjgzYjcyNzQ5ZGVjMDJkMGRjMTFmMmQ5ZThmM2UxN2U5NDEyNGM=", "commit_message": "Merge pull request #1155 from minrk/postexec\n\nBe less aggressive in de-registering failing post-execute functions so that normal errors don't disable them permanently.\r\n\r\nTwo changes:\r\n\r\n1. Don't unregister failing post-exec callbacks automatically. Instead, print a message regarding the failure, pointing to new `disable_failing_post_execute` trait for skipping failing callbacks.\r\n    - When this flag is False (the default), failing callbacks will continue to be called.\r\n    - When True, behavior is unchanged from previous, where callbacks are only allowed to fail once.\r\n2. protect `flush_figures()` post-exec function from user error.  Invalid matplotlib data may raise inside `print_figure()`.  flush_figures() is a post-exec function, so user errors should not raise.  Instead, call `get_ipython().showtraceback()` if called from IPython, raising as before otherwise.\r\n\r\ncloses #1154", "commit_timestamp": "2011-12-15T00:34:36Z", "files": ["IPython/core/interactiveshell.py", "IPython/zmq/pylab/backend_inline.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjJjNjgzYjcyNzQ5ZGVjMDJkMGRjMTFmMmQ5ZThmM2UxN2U5NDEyNGM=", "commit_message": "Merge pull request #1155 from minrk/postexec\n\nBe less aggressive in de-registering failing post-execute functions so that normal errors don't disable them permanently.\r\n\r\nTwo changes:\r\n\r\n1. Don't unregister failing post-exec callbacks automatically. Instead, print a message regarding the failure, pointing to new `disable_failing_post_execute` trait for skipping failing callbacks.\r\n    - When this flag is False (the default), failing callbacks will continue to be called.\r\n    - When True, behavior is unchanged from previous, where callbacks are only allowed to fail once.\r\n2. protect `flush_figures()` post-exec function from user error.  Invalid matplotlib data may raise inside `print_figure()`.  flush_figures() is a post-exec function, so user errors should not raise.  Instead, call `get_ipython().showtraceback()` if called from IPython, raising as before otherwise.\r\n\r\ncloses #1154", "commit_timestamp": "2011-12-15T00:34:36Z", "files": ["IPython/core/interactiveshell.py", "IPython/zmq/pylab/backend_inline.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzphOWI2ZDFkNTkzNDFiMGE2ZTEwZmUxZGFjNTcwZDJiNDJiYzM0NWFj", "commit_message": "Merge pull request #1155 from minrk/postexec\n\nBe less aggressive in de-registering failing post-execute functions so that normal errors don't disable them permanently.\r\n\r\nTwo changes:\r\n\r\n1. Don't unregister failing post-exec callbacks automatically. Instead, print a message regarding the failure, pointing to new `disable_failing_post_execute` trait for skipping failing callbacks.\r\n    - When this flag is False (the default), failing callbacks will continue to be called.\r\n    - When True, behavior is unchanged from previous, where callbacks are only allowed to fail once.\r\n2. protect `flush_figures()` post-exec function from user error.  Invalid matplotlib data may raise inside `print_figure()`.  flush_figures() is a post-exec function, so user errors should not raise.  Instead, call `get_ipython().showtraceback()` if called from IPython, raising as before otherwise.\r\n\r\ncloses #1154", "commit_timestamp": "2011-12-15T00:34:36Z", "files": ["IPython/core/interactiveshell.py", "IPython/zmq/pylab/backend_inline.py"]}], "labels": ["important"], "created_at": "2011-12-14T17:51:55Z", "closed_at": "2011-12-15T00:34:38Z", "linked_pr_number": [1154], "method": ["regex"]}
{"issue_number": 1148, "title": "A lot of testerrors", "body": "I get 3 failures in IPython.testing, 16 errors and 10 failures in IPython.core on master 1184eb4, on windows python2.6.\n\nAll but one go away if I add the strict keyword argument to arg_split in _process_win32.py\n\n```\ndiff --git a/IPython/utils/_process_win32.py b/IPython/utils/_process_win32.py\nindex 9de9edf..77a30a1 100644\n--- a/IPython/utils/_process_win32.py\n+++ b/IPython/utils/_process_win32.py\n@@ -159,7 +159,7 @@ try:\n     LocalFree.res_type = HLOCAL\n     LocalFree.arg_types = [HLOCAL]\n\n-    def arg_split(commandline, posix=False):\n+    def arg_split(commandline, posix=False, strict=False):\n     \"\"\"Split a command line's arguments in a shell-like manner.\n\n     This is a special version for windows that use a ctypes call to CommandLineToArgvW\n```\n\nAfter that only one error is remaining, and that one is included below. Is this related to arg_split differences on windows or is it present in Linux as well?\n\n```\nERROR: test shlex issues with timeit (#1109)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"c:\\python26\\lib\\site-packages\\nose\\case.py\", line 197, in runTest\n    self.test(*self.arg)\n  File \"c:\\python\\external\\ipython\\IPython\\core\\tests\\test_magic.py\", line 350, in test_timeit_shlex\n    _ip.magic('timeit -n1 \"this is a bug\".count(\" \")')\n  File \"c:\\python\\external\\ipython\\IPython\\core\\interactiveshell.py\", line 1995, in magic\n    result = fn(magic_args)\n  File \"c:\\python\\external\\ipython\\IPython\\core\\magic.py\", line 1893, in magic_timeit\n    code = compile(src, \"<magic-timeit>\", \"exec\")\n  File \"<magic-timeit>\", line 6\n    this is a bug.count( )\n        ^\nSyntaxError: invalid syntax\n```\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU4NTE4OjI2NjYyZjQwYzI0NDUzMjU0MmNiNDk1ZWJhNTc5NmY0MjEzMjQzMTY=", "commit_message": "add strict kwarg to win32 arg_split\n\nif strict=False, falls back on shlex-based split from _process_common\n\ncloses #1148\ncloses #1149", "commit_timestamp": "2011-12-13T20:08:17Z", "files": ["IPython/utils/_process_win32.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo5MTliMTU2Nzc5YjA1MTBhMGZmYTFkZmVlNjY0OTEwNGYzMTk5YmFh", "commit_message": "add strict kwarg to win32 arg_split\n\nif strict=False, falls back on shlex-based split from _process_common\n\ncloses #1148\ncloses #1149", "commit_timestamp": "2011-12-13T20:08:17Z", "files": ["IPython/utils/_process_win32.py"]}], "labels": ["important", "windows", "bug"], "created_at": "2011-12-13T18:21:10Z", "closed_at": "2011-12-13T20:09:17Z", "method": ["label", "regex"]}
{"issue_number": 1145, "title": "Online help utility broken in QtConsole", "body": "Whatever I type in online help utility (started in QtConsole), I get help on unicode object,\n\n```\nPython 2.7.2 (default, Nov 21 2011, 17:25:27) \nType \"copyright\", \"credits\" or \"license\" for more information.\n\nIPython 0.12.beta -- An enhanced Interactive Python.\n?         -> Introduction and overview of IPython's features.\n%quickref -> Quick reference.\nhelp      -> Python's own help system.\nobject?   -> Details about 'object', use 'object??' for extra details.\n%guiref   -> A brief reference about the graphical user interface.\n\nIn [1]: help()\n\nWelcome to Python 2.7!  This is the online help utility.\n\nIf this is your first time using Python, you should definitely check out\nthe tutorial on the Internet at http://docs.python.org/tutorial/.\n\nEnter the name of any module, keyword, or topic to get help on writing\nPython programs and using Python modules.  To quit this help utility and\nreturn to the interpreter, just type \"quit\".\n\nTo get a list of available modules, keywords, or topics, type \"modules\",\n\"keywords\", or \"topics\".  Each module also comes with a one-line summary\nof what it does; to list the modules whose summaries contain a given word\nsuch as \"spam\", type \"modules spam\".\n\n\nhelp> topics\nHelp on unicode object:\n\nclass unicode(basestring)\n |  unicode(string [, encoding[, errors]]) -> object\n |  \n |  Create a new Unicode object from the given encoded string.\n |  encoding defaults to the current default string encoding.\n |  errors can be 'strict', 'replace' or 'ignore' and defaults to 'strict'.\n |  \n |  Method resolution order:\n |      unicode\n |      basestring\n |      object\n |  \n |  Methods defined here:\n |  \n |  __add__(...)\n |      x.__add__(y) <==> x+y\n |  \n |  __contains__(...)\n |      x.__contains__(y) <==> y in x\n\netc ...\n```\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU5NDQ2OmVlZDBjOTFlMzllODYxMDM0YjYyMmU4NmEzNjlmOTRlMDA3ODZiNzY=", "commit_message": "ensure raw_input returns str in zmq shell\n\nmatches raw_input.  Some things can't handle unicode objects (e.g. `help()`).\n\ncloses #1145", "commit_timestamp": "2013-07-04T01:07:00Z", "files": ["IPython/kernel/zmq/ipkernel.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmI3MDhjN2FiMzczNWM2OWRlODg3Njc2NmFjNzcxN2RlODc3MjY2ZDY=", "commit_message": "Merge pull request #3529 from minrk/rawin\n\nensure raw_input returns str in zmq shell\r\n\r\nmatches raw_input. Some things can't handle unicode objects (e.g. help()).\r\n\r\ncloses #1145", "commit_timestamp": "2013-07-06T16:54:58Z", "files": ["IPython/kernel/zmq/ipkernel.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo5ZDNhMTI0NWQ4Y2NiYzA1MGQ2YjUwYjA0NzkyOTI4ODhhMjg1YjM4", "commit_message": "ensure raw_input returns str in zmq shell\n\nmatches raw_input.  Some things can't handle unicode objects (e.g. `help()`).\n\ncloses #1145", "commit_timestamp": "2013-07-04T01:07:00Z", "files": ["IPython/kernel/zmq/ipkernel.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzpmNTY4NDhiYTFhZjk5MDVjNGNmZmFlOTIxYWUxNjhlN2ZmMzBlMjZi", "commit_message": "Merge pull request #3529 from minrk/rawin\n\nensure raw_input returns str in zmq shell\r\n\r\nmatches raw_input. Some things can't handle unicode objects (e.g. help()).\r\n\r\ncloses #1145", "commit_timestamp": "2013-07-06T16:54:58Z", "files": ["IPython/kernel/zmq/ipkernel.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmI3MDhjN2FiMzczNWM2OWRlODg3Njc2NmFjNzcxN2RlODc3MjY2ZDY=", "commit_message": "Merge pull request #3529 from minrk/rawin\n\nensure raw_input returns str in zmq shell\r\n\r\nmatches raw_input. Some things can't handle unicode objects (e.g. help()).\r\n\r\ncloses #1145", "commit_timestamp": "2013-07-06T16:54:58Z", "files": ["IPython/kernel/zmq/ipkernel.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmI3MDhjN2FiMzczNWM2OWRlODg3Njc2NmFjNzcxN2RlODc3MjY2ZDY=", "commit_message": "Merge pull request #3529 from minrk/rawin\n\nensure raw_input returns str in zmq shell\r\n\r\nmatches raw_input. Some things can't handle unicode objects (e.g. help()).\r\n\r\ncloses #1145", "commit_timestamp": "2013-07-06T16:54:58Z", "files": ["IPython/kernel/zmq/ipkernel.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzpmNTY4NDhiYTFhZjk5MDVjNGNmZmFlOTIxYWUxNjhlN2ZmMzBlMjZi", "commit_message": "Merge pull request #3529 from minrk/rawin\n\nensure raw_input returns str in zmq shell\r\n\r\nmatches raw_input. Some things can't handle unicode objects (e.g. help()).\r\n\r\ncloses #1145", "commit_timestamp": "2013-07-06T16:54:58Z", "files": ["IPython/kernel/zmq/ipkernel.py"]}], "labels": ["unicode", "qtconsole", "bug"], "created_at": "2011-12-12T23:14:55Z", "closed_at": "2013-07-06T16:54:58Z", "linked_pr_number": [1145], "method": ["label", "regex"]}
{"issue_number": 1134, "title": "\"select-all, kill\" leaves qtconsole in unusable state", "body": "Open up qtconsole and use the keyboard to type select-all, kill (`C-A C-k`).  This gives you an empty window where you can type but enter/return do not work.\n\nClearing the screen (`C-l`) does fix it.\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU4NTE4OmNiZmIwMTEwNTkxYjFhOWFiMTZmZDRlOGMyZDgyZGJiZTg5MjNhMjU=", "commit_message": "BUG: Ctrl+K and Ctrl+U shortcuts unsafe in Qt console.\n\nCloses gh-1134.", "commit_timestamp": "2011-12-14T04:20:26Z", "files": ["IPython/frontend/qt/console/console_widget.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzpjODExYTc3NGE3ZjEzZjdlZDljMjQ4ZjA3NGFmZDY2NmNkNjE3MmE2", "commit_message": "BUG: Ctrl+K and Ctrl+U shortcuts unsafe in Qt console.\n\nCloses gh-1134.", "commit_timestamp": "2011-12-14T04:20:26Z", "files": ["IPython/frontend/qt/console/console_widget.py"]}], "labels": ["qtconsole", "bug"], "created_at": "2011-12-09T18:14:27Z", "closed_at": "2011-12-14T04:23:33Z", "method": ["label"]}
{"issue_number": 1117, "title": "quit() doesn't work in terminal", "body": "```\n[bfroehle@highorder]$ ipython\nPython 2.7.2+ (default, Oct  4 2011, 20:06:09) \nType \"copyright\", \"credits\" or \"license\" for more information.\n\nIPython 0.12.beta -- An enhanced Interactive Python.\n?         -> Introduction and overview of IPython's features.\n%quickref -> Quick reference.\nhelp      -> Python's own help system.\nobject?   -> Details about 'object', use 'object??' for extra details.\n\nIn [1]: quit()\n---------------------------------------------------------------------------\nTypeError                                 Traceback (most recent call last)\n/home/bfroehle/<ipython-input-1-369dbed58733> in <module>()\n----> 1 quit(())\n\nTypeError: __call__() takes exactly 1 argument (2 given)\n```\n", "commits": [{"node_id": "MDY6Q29tbWl0MTIzNjAwMzpjODdlMmU4M2EwNmIyYzk5NWYzMmZiMjgwNWM0YTA3ZTNlNTdlODA5", "commit_message": "Add test for gh-1117", "commit_timestamp": "2011-12-07T23:04:59Z", "files": ["IPython/core/tests/test_handlers.py"]}, {"node_id": "MDY6Q29tbWl0MjkwOTI5MDo4MzAzYmQxMTY2NTdkZDEyZmEwNjEzM2RmZDJkM2Y0NjcyZTc0ZmMy", "commit_message": "Do not add extra brackets for autocallable functions.\n\nCloses gh-1117.", "commit_timestamp": "2011-12-07T23:21:48Z", "files": ["IPython/core/prefilter.py", "IPython/core/tests/test_handlers.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo0YmIwNDdjYzNhNzgyZjUyMmQ2OWQwOGNhNzljYjA2ZGJjODEyYWU0", "commit_message": "Add test for gh-1117", "commit_timestamp": "2011-12-07T23:04:59Z", "files": ["IPython/core/tests/test_handlers.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjdlYTNlMmY5NWI4ZjVjZmJiZjU2ODFlYWNiZTE1ZWI3MTkzMzJkNTg=", "commit_message": "Merge pull request #1121 from takluyver/i1117\n\nDon't transform function calls on IPyAutocall objects", "commit_timestamp": "2011-12-09T18:44:52Z", "files": ["IPython/core/prefilter.py", "IPython/core/tests/test_handlers.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjdlYTNlMmY5NWI4ZjVjZmJiZjU2ODFlYWNiZTE1ZWI3MTkzMzJkNTg=", "commit_message": "Merge pull request #1121 from takluyver/i1117\n\nDon't transform function calls on IPyAutocall objects", "commit_timestamp": "2011-12-09T18:44:52Z", "files": ["IPython/core/prefilter.py", "IPython/core/tests/test_handlers.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo2NGJlMTUzMDVkOGNhODFmYmNkMjc2YmUyZTdiMTU3M2JiNWFiNGFm", "commit_message": "Merge pull request #1121 from takluyver/i1117\n\nDon't transform function calls on IPyAutocall objects", "commit_timestamp": "2011-12-09T18:44:52Z", "files": ["IPython/core/prefilter.py", "IPython/core/tests/test_handlers.py"]}], "labels": ["important", "bug"], "created_at": "2011-12-07T21:30:57Z", "closed_at": "2011-12-09T18:47:40Z", "linked_pr_number": [1117], "method": ["label", "regex"]}
{"issue_number": 1115, "title": "shlex_split should return unicode", "body": "I get tracebacks when completing on filenames with non-ascii characters in the %run command. I have traced it to shlex_split that converts its argument to string on python 2.x due to a bug in the underlying shlex.split for unicode arguments. However it should convert the result back to unicode after the call.\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU5NDQ2Ojc5MGNiMTQzN2VkZWQ0ODUxZGVhNDVkMGQyMjI2ZjllNzNlNjhjM2U=", "commit_message": "Merge shlex PRs (#1130, #1116)\n\n* arg_split now takes optional strict flag, to ignore ValueErrors in\n  shlex parsing\n* %timeit uses strict=False, to avoid errors parsing python code\n* %run completer uses arg_split(strict=False) for its unicode behavior, instead\n  of custom shlex derivative, which is now redundant.\n\ncloses #1109\ncloses #1115\ncloses #1116\ncloses #1130", "commit_timestamp": "2011-12-12T19:00:47Z", "files": ["IPython/core/completerlib.py", "IPython/core/magic.py", "IPython/core/tests/test_completerlib.py", "IPython/core/tests/test_magic.py", "IPython/utils/_process_common.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4Ojc5MGNiMTQzN2VkZWQ0ODUxZGVhNDVkMGQyMjI2ZjllNzNlNjhjM2U=", "commit_message": "Merge shlex PRs (#1130, #1116)\n\n* arg_split now takes optional strict flag, to ignore ValueErrors in\n  shlex parsing\n* %timeit uses strict=False, to avoid errors parsing python code\n* %run completer uses arg_split(strict=False) for its unicode behavior, instead\n  of custom shlex derivative, which is now redundant.\n\ncloses #1109\ncloses #1115\ncloses #1116\ncloses #1130", "commit_timestamp": "2011-12-12T19:00:47Z", "files": ["IPython/core/completerlib.py", "IPython/core/magic.py", "IPython/core/tests/test_completerlib.py", "IPython/core/tests/test_magic.py", "IPython/utils/_process_common.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo1Nzk5NDcxMjhjNGQ3ZTBmOGYwZjgzZTcwYzkwMDVjNzc0MjdkMjg1", "commit_message": "Merge shlex PRs (#1130, #1116)\n\n* arg_split now takes optional strict flag, to ignore ValueErrors in\n  shlex parsing\n* %timeit uses strict=False, to avoid errors parsing python code\n* %run completer uses arg_split(strict=False) for its unicode behavior, instead\n  of custom shlex derivative, which is now redundant.\n\ncloses #1109\ncloses #1115\ncloses #1116\ncloses #1130", "commit_timestamp": "2011-12-12T19:00:47Z", "files": ["IPython/core/completerlib.py", "IPython/core/magic.py", "IPython/core/tests/test_completerlib.py", "IPython/core/tests/test_magic.py", "IPython/utils/_process_common.py"]}], "labels": [], "created_at": "2011-12-07T21:18:36Z", "closed_at": "2011-12-12T19:48:00Z", "method": ["regex"]}
{"issue_number": 1112, "title": "testfailure in IPython.frontend on windows", "body": "I get the following testfailure on windows 7 python2.6, ipython master 0b0a9b5\n\n```\nC:\\python\\bugreports\\ipython> iptest IPython.frontend\n.FF..........S..SSSSS..\n======================================================================\nFAIL: Are beep characters processed correctly?\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"c:\\python26\\lib\\site-packages\\ipython-0.12.beta-py2.6.egg\\IPython\\frontend\\qt\\console\\tests\\test_ansi_code_processor.py\", line 123, in test_beep\n    self.assertEquals(action.count, 1)\nAssertionError: <built-in method count of BeepAction object at 0x05347710> != 1\n>>  raise self.failureException, \\\n      (None or '%r != %r' % (first, 1))\n\n\n======================================================================\nFAIL: Are carriage return characters processed correctly?\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"c:\\python26\\lib\\site-packages\\ipython-0.12.beta-py2.6.egg\\IPython\\frontend\\qt\\console\\tests\\test_ansi_code_processor.py\", line 113, in test_carriage_return\n    self.assertEquals(action.count, 1)\nAssertionError: <built-in method count of CarriageReturnAction object at 0x05347760> != 1\n>>  raise self.failureException, \\\n      (None or '%r != %r' % (first, 1))\n\n\n----------------------------------------------------------------------\nRan 23 tests in 0.104s\n```\n", "commits": [{"node_id": "MDY6Q29tbWl0MTUwNzk1Nzo4YzZkOTUzMmE4ZjNmNGJiMzU3MjExNWQzODM1OTEyNDhhM2QyM2Jk", "commit_message": "Fixing #1112 removing failing asserts for test_carriage_return and test_beep.\n\nThe failing asserts were checking the count property of the Action\ntuple objects there is no count field in these Action tuples so\nthe count method of the regular tuple class is resolved.", "commit_timestamp": "2011-12-07T20:03:43Z", "files": ["IPython/frontend/qt/console/tests/test_ansi_code_processor.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmJkY2ZjYzY3MWEwZDUxNzQyMjZlZTBlNmIxYzA1M2RhMGNmN2MwOGI=", "commit_message": "Fixing #1112 removing failing asserts for test_carriage_return and test_beep.\n\nThe failing asserts were checking the count property of the Action\ntuple objects there is no count field in these Action tuples so\nthe count method of the regular tuple class is resolved.\n\ncloses #1112\ncloses #1113", "commit_timestamp": "2011-12-07T20:23:41Z", "files": ["IPython/frontend/qt/console/tests/test_ansi_code_processor.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmJkY2ZjYzY3MWEwZDUxNzQyMjZlZTBlNmIxYzA1M2RhMGNmN2MwOGI=", "commit_message": "Fixing #1112 removing failing asserts for test_carriage_return and test_beep.\n\nThe failing asserts were checking the count property of the Action\ntuple objects there is no count field in these Action tuples so\nthe count method of the regular tuple class is resolved.\n\ncloses #1112\ncloses #1113", "commit_timestamp": "2011-12-07T20:23:41Z", "files": ["IPython/frontend/qt/console/tests/test_ansi_code_processor.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzphYjI5MDhiMmU4NzA3MjU5Y2MxNzNjYWNiNzA5ZWQ2MWEzY2ZhMWY4", "commit_message": "Fixing #1112 removing failing asserts for test_carriage_return and test_beep.\n\nThe failing asserts were checking the count property of the Action\ntuple objects there is no count field in these Action tuples so\nthe count method of the regular tuple class is resolved.\n\ncloses #1112\ncloses #1113", "commit_timestamp": "2011-12-07T20:23:41Z", "files": ["IPython/frontend/qt/console/tests/test_ansi_code_processor.py"]}], "labels": [], "created_at": "2011-12-07T19:49:03Z", "closed_at": "2011-12-07T20:24:52Z", "method": ["regex"]}
{"issue_number": 1111, "title": "ls broken after merge of #1089", "body": "After the merge of #1089 ls in the qtconsole prints blank lines and not the contents of the dir.\nOn ubuntu 11.10 using python2.7\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU5NDQ2OjgxNGQ1YjlmOTU2NGIzZjVhMmE1NDI4YzU0NzM2MjQwZmJlNWJlMGU=", "commit_message": "[qtconsole] carriage-return action matches CR only, not CRLF\n\nCarriageReturn action introduced in #1089 clears a line in the qtconsole, which means that CRLF line endings would replace whole lines with '\\n'.\n\nThis changes the regex to only match `\\r` not followed by `\\n` preventing the CR action from firing on CRLF.\n\nTest included\n\ncloses #1111", "commit_timestamp": "2011-12-09T18:12:42Z", "files": ["IPython/frontend/qt/console/ansi_code_processor.py", "IPython/frontend/qt/console/tests/test_ansi_code_processor.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjgxNGQ1YjlmOTU2NGIzZjVhMmE1NDI4YzU0NzM2MjQwZmJlNWJlMGU=", "commit_message": "[qtconsole] carriage-return action matches CR only, not CRLF\n\nCarriageReturn action introduced in #1089 clears a line in the qtconsole, which means that CRLF line endings would replace whole lines with '\\n'.\n\nThis changes the regex to only match `\\r` not followed by `\\n` preventing the CR action from firing on CRLF.\n\nTest included\n\ncloses #1111", "commit_timestamp": "2011-12-09T18:12:42Z", "files": ["IPython/frontend/qt/console/ansi_code_processor.py", "IPython/frontend/qt/console/tests/test_ansi_code_processor.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzpjMDYxZjE2ZTMwMDhlOGJhMDI2NjAzODFlYzI1MWQ2M2E0YmZjODcw", "commit_message": "[qtconsole] carriage-return action matches CR only, not CRLF\n\nCarriageReturn action introduced in #1089 clears a line in the qtconsole, which means that CRLF line endings would replace whole lines with '\\n'.\n\nThis changes the regex to only match `\\r` not followed by `\\n` preventing the CR action from firing on CRLF.\n\nTest included\n\ncloses #1111", "commit_timestamp": "2011-12-09T18:12:42Z", "files": ["IPython/frontend/qt/console/ansi_code_processor.py", "IPython/frontend/qt/console/tests/test_ansi_code_processor.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjgxNGQ1YjlmOTU2NGIzZjVhMmE1NDI4YzU0NzM2MjQwZmJlNWJlMGU=", "commit_message": "[qtconsole] carriage-return action matches CR only, not CRLF\n\nCarriageReturn action introduced in #1089 clears a line in the qtconsole, which means that CRLF line endings would replace whole lines with '\\n'.\n\nThis changes the regex to only match `\\r` not followed by `\\n` preventing the CR action from firing on CRLF.\n\nTest included\n\ncloses #1111", "commit_timestamp": "2011-12-09T18:12:42Z", "files": ["IPython/frontend/qt/console/ansi_code_processor.py", "IPython/frontend/qt/console/tests/test_ansi_code_processor.py"]}], "labels": ["important", "qtconsole"], "created_at": "2011-12-07T19:35:51Z", "closed_at": "2011-12-09T18:15:22Z", "linked_pr_number": [1111], "method": ["regex"]}
{"issue_number": 1107, "title": "Tab autocompletion can suggest invalid syntax", "body": "If you have Django installed, `import dj<TAB>` gives you this:\n\n```\nIn [1]: import dj\ndjango django-admin\nIn [1]: import django \n```\n\nThe \"django-admin\" option is, of course, invalid syntax.  That said, it's hard to know what the correct behaviour would be -- it looks like IPython is (perfectly reasonably) suggesting every module that's on sys.path.  Perhaps a filter to make sure that only valid module names were suggested in this case?\n", "commits": [{"node_id": "MDY6Q29tbWl0OTc3NTQwOjE0ZWI5OTA0Yzk3MDgzODY5ZWI3ZGQ2YzFjODYwMGMwNTY1MDI3MzA=", "commit_message": "Failing tests for https://github.com/ipython/ipython/issues/1107", "commit_timestamp": "2012-02-28T20:07:23Z", "files": ["IPython/core/tests/test_completerlib.py"]}, {"node_id": "MDY6Q29tbWl0OTc3NTQwOmU5OTMxOGQ3MDliNTBlNjIxMWU5YWMwODU3ZTdkMWRhODVlNDlhNzU=", "commit_message": "Implemented fix for https://github.com/ipython/ipython/issues/1107 by checking that the module list only returns importable modules.", "commit_timestamp": "2012-02-28T20:27:16Z", "files": ["IPython/core/completerlib.py", "IPython/core/tests/test_completerlib.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo3OTYzMzU1YTQzMzRiNWU3Y2EwZmI3ODY4ZDMyMzg1Y2UwNWJkMmU5", "commit_message": "Failing tests for https://github.com/ipython/ipython/issues/1107", "commit_timestamp": "2012-02-28T20:07:23Z", "files": ["IPython/core/tests/test_completerlib.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo1MmJkMmNhMDhjMzFmZjhmM2JkNGQzOTNmNTgwNzNhZjlhMWUyZmE2", "commit_message": "Implemented fix for https://github.com/ipython/ipython/issues/1107 by checking that the module list only returns importable modules.", "commit_timestamp": "2012-02-28T20:27:16Z", "files": ["IPython/core/completerlib.py", "IPython/core/tests/test_completerlib.py"]}], "labels": ["bug", "tab-completion"], "created_at": "2011-12-06T11:49:15Z", "closed_at": "2012-03-05T12:37:51Z", "method": ["label"]}
{"issue_number": 1103, "title": "%loadpy should cut out encoding declaration", "body": "I noticed recently that doing %loadpy on a file with a `# coding: utf-8` magic comment causes a problem, because the compiler doesn't like encoding declarations in a unicode string. We should ideally detect this, use it to correctly decode the file ourselves, and then remove the encoding declaration from the code that appears.\n\nExample session:\n\n```\nIn [1]: print 123\n123\n\nIn [2]: %save foo.py 1\nThe following commands were written to file `foo.py`:\nprint 123\n\nIn [3]: %loadpy foo.py\n\nIn [4]: # coding: utf-8\n   ...: print 123\n  File \"<ipython-input-4-8226810be253>\", line 0\nSyntaxError: encoding declaration in Unicode string (<ipython-input-4-8226810be253>, line 0)\n```\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU4NTE4OjBjNmM4Nzk1Y2U3ZjBhNzAyNjhlNDRkZGM5MzM3YmQ1MmFkYjQ5ZGI=", "commit_message": "Strip out encoding declaration in %loadpy\n\nCloses gh-1103", "commit_timestamp": "2011-12-15T23:23:37Z", "files": ["IPython/core/magic.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzoyODUxMDM3MWExMjkxYmJjN2ExZTBhYjZiMGNmYmViNTdhMWMwZDAy", "commit_message": "Strip out encoding declaration in %loadpy\n\nCloses gh-1103", "commit_timestamp": "2011-12-15T23:23:37Z", "files": ["IPython/core/magic.py"]}], "labels": ["unicode", "bug"], "created_at": "2011-12-04T23:09:27Z", "closed_at": "2011-12-15T23:24:08Z", "method": ["label"]}
{"issue_number": 1100, "title": "ipython3 traceback unicode issue from extensions", "body": "ipython3 has issues when displaying context of an exception originating from an pythone extension. it works without context (plain xmode)\ne.g. with pyzmq:\n\n```\n%xmode context\nimport zmq\nctx = zmq.Context()\nso = ctx.socket(zmq.REQ)\n#intentional error, expected AttributeError: Socket has no such option: SENT\nso.sent(\"test\")\n\n---------------------------------------------------------------------------\nUnicodeDecodeError                        Traceback (most recent call last)\n/usr/lib/python3/dist-packages/IPython/core/interactiveshell.py in run_code(self, code_obj)\n   2545             self.CustomTB(etype,value,tb)\n   2546         except:\n-> 2547             self.showtraceback()\n   2548         else:\n   2549             outflag = 0\n\n/usr/lib/python3/dist-packages/IPython/core/interactiveshell.py in showtraceback(self, exc_tuple, filename, tb_offset, exception_only)\n   1636                     else:\n   1637                         stb = self.InteractiveTB.structured_traceback(etype,\n-> 1638                                                 value, tb, tb_offset=tb_offset)\n   1639 \n   1640                         self._showtraceback(etype, value, stb)\n\n/usr/lib/python3/dist-packages/IPython/core/ultratb.py in structured_traceback(self, etype, value, tb, tb_offset, context)\n   1174         self.tb = tb\n   1175         return FormattedTB.structured_traceback(\n-> 1176             self, etype, value, tb, tb_offset, context)\n   1177 \n   1178 #---------------------------------------------------------------------------\n\n\n/usr/lib/python3/dist-packages/IPython/core/ultratb.py in structured_traceback(self, etype, value, tb, tb_offset, context)\n   1082             # Verbose modes need a full traceback\n\n   1083             return VerboseTB.structured_traceback(\n-> 1084                 self, etype, value, tb, tb_offset, context\n   1085             )\n   1086         else:\n\n/usr/lib/python3/dist-packages/IPython/core/ultratb.py in structured_traceback(self, etype, evalue, etb, tb_offset, context)\n    878                 # This builds the names list in-place by capturing it from the\n\n    879                 # enclosing scope.\n\n--> 880                 for token in generate_tokens(linereader):\n    881                     tokeneater(*token)\n    882             except IndexError:\n\n/usr/lib/python3.2/tokenize.py in _tokenize(readline, encoding)\n    391     while True:             # loop over lines in stream\n    392         try:\n--> 393             line = readline()\n    394         except StopIteration:\n    395             line = b''\n\n/usr/lib/python3/dist-packages/IPython/core/ultratb.py in linereader(file, lnum, getline)\n    869 \n    870             def linereader(file=file, lnum=[lnum], getline=linecache.getline):\n--> 871                 line = getline(file, lnum[0])\n    872                 lnum[0] += 1\n    873                 return line\n\n/usr/lib/python3.2/linecache.py in getline(filename, lineno, module_globals)\n     13 \n     14 def getline(filename, lineno, module_globals=None):\n---> 15     lines = getlines(filename, module_globals)\n     16     if 1 <= lineno <= len(lines):\n     17         return lines[lineno-1]\n\n/usr/lib/python3.2/linecache.py in getlines(filename, module_globals)\n     39         return cache[filename][2]\n     40     else:\n---> 41         return updatecache(filename, module_globals)\n     42 \n     43 \n\n/usr/lib/python3.2/linecache.py in updatecache(filename, module_globals)\n    130     try:\n    131         with tokenize.open(fullname) as fp:\n--> 132             lines = fp.readlines()\n    133     except IOError:\n    134         return []\n\n/usr/lib/python3.2/codecs.py in decode(self, input, final)\n    298         # decode input (taking the buffer into account)\n\n    299         data = self.buffer + input\n--> 300         (result, consumed) = self._buffer_decode(data, self.errors, final)\n    301         # keep undecoded input until the next call\n\n    302         self.buffer = data[consumed:]\n\nUnicodeDecodeError: 'utf8' codec can't decode byte 0xc0 in position 96: invalid start byte\n```\n", "commits": [{"node_id": "MDY6Q29tbWl0MTIzNjAwMzozMzU3MDE3NjEwOTBmN2ZjOTg4ZjkzNzgzODNmYzYwZThhZmY4ZDBk", "commit_message": "Fix display of errors in compiled code on Python 3.\n\nCloses gh-1100", "commit_timestamp": "2011-12-05T16:25:06Z", "files": ["IPython/core/ultratb.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjQxMWJhNmFkY2FjZTU2MDc3NmYxYWQwOGNmNzZmNWU2MmRjNTE4ZGE=", "commit_message": "Fix display of errors in compiled code on Python 3.\n\nCloses gh-1100", "commit_timestamp": "2011-12-06T00:49:46Z", "files": ["IPython/core/ultratb.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo5Zjk2NWYzYjQyM2ZiYjMyYzdhNTRmMjU1YWE2ODVkMDFlNDc0Zjgy", "commit_message": "Fix display of errors in compiled code on Python 3.\n\nCloses gh-1100", "commit_timestamp": "2011-12-06T00:49:46Z", "files": ["IPython/core/ultratb.py"]}], "labels": ["unicode", "bug"], "created_at": "2011-12-04T15:38:01Z", "closed_at": "2011-12-06T01:07:10Z", "method": ["label"]}
{"issue_number": 1088, "title": "QtConsole : can't copy from pager", "body": "Just before forgetting, i'm trying to copy something from some long doc, and copying it doesn't put anything in the clipboard...\nAm I alone ?\n", "commits": [{"node_id": "MDY6Q29tbWl0MjM0NDA3MzozMmRkOWI1ZmE2NmZjNzhjYjc1YWM2MTdhYzYwMWM1Y2JiNWRhYzUy", "commit_message": "qtconsole : allow copy with shortcut in pager\n\n\tcloses #1088", "commit_timestamp": "2011-12-03T08:51:18Z", "files": ["IPython/frontend/qt/console/console_widget.py", "IPython/frontend/qt/console/frontend_widget.py", "IPython/frontend/qt/console/ipython_widget.py", "IPython/frontend/qt/console/mainwindow.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjdhMTQ0ZTJlYWFiNTU0ZTgzM2JhMmI3N2JmM2E2ZDk0NWI0NWQxNjc=", "commit_message": "Merge PR #1091 (qtconsole pager copy)\n\ncloses #1088\ncloses #1091", "commit_timestamp": "2011-12-07T22:06:32Z", "files": ["IPython/frontend/qt/console/console_widget.py", "IPython/frontend/qt/console/frontend_widget.py", "IPython/frontend/qt/console/ipython_widget.py", "IPython/frontend/qt/console/mainwindow.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzpiMDcxYzg3NjBlMDI2Y2Y1ZWVjN2U0NTExZGExN2ZmNGRkZGM0ZTUz", "commit_message": "qtconsole : allow copy with shortcut in pager\n\n\tcloses #1088", "commit_timestamp": "2011-12-03T08:51:18Z", "files": ["IPython/frontend/qt/console/console_widget.py", "IPython/frontend/qt/console/frontend_widget.py", "IPython/frontend/qt/console/ipython_widget.py", "IPython/frontend/qt/console/mainwindow.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo1Y2UyYzJmMjc1NGEwMDJhN2FiM2NlOTNjNzI0YmM4OTU0OTFmNzIz", "commit_message": "Merge PR #1091 (qtconsole pager copy)\n\ncloses #1088\ncloses #1091", "commit_timestamp": "2011-12-07T22:06:32Z", "files": ["IPython/frontend/qt/console/console_widget.py", "IPython/frontend/qt/console/frontend_widget.py", "IPython/frontend/qt/console/ipython_widget.py", "IPython/frontend/qt/console/mainwindow.py"]}], "labels": ["qtconsole", "bug", "regression"], "created_at": "2011-12-02T14:19:44Z", "closed_at": "2011-12-07T22:21:10Z", "method": ["label"]}
{"issue_number": 1087, "title": "QtConsole xhtml/Svg export broken ?", "body": "When trying to document #735 with a better error mesage I came across the fact that I can't export to xhtml/svg with qt console:\n\n``` Python\n%config InlineBackend.figure_format='svg'\nplot(sin(range(10)))\n```\n\nThen `file`, `save as`, XHTML/SVG, etc... i've gaot a pop up window, \n\n```\nError exporting HTML to /Users/bussonniermatthias/eraseme/ipython.xhtml\n'ascii' codec can't encode character u'\\u2212' in position 15793: ordinal not in range(128)\n```\n\nExport as Png works ok, export as svg when ploting on Png (error Can't find image) works ok\nDo I do smth wrong ? \n", "commits": [{"node_id": "MDY6Q29tbWl0MjM0NDA3MzozYjZiYzY1MDMzMjcxMDIyNWJlZTI1YzVmMzdmNGE0YjZiYWZhZTEx", "commit_message": "qtconsole export xhtml/utf8\n\n\tusing utf-8 to save the qtconsole export as xhtml/svg, to avoid crash on some\n\tkinds of plots, mainly when converting svg to str, or when writing the file\n\n\tcloses #1087", "commit_timestamp": "2011-12-04T14:51:31Z", "files": ["IPython/frontend/qt/console/rich_ipython_widget.py", "IPython/frontend/qt/rich_text.py"]}], "labels": ["important", "qtconsole", "bug"], "created_at": "2011-12-01T21:36:03Z", "closed_at": "2011-12-06T06:50:06Z", "method": ["label", "regex"]}
{"issue_number": 1076, "title": "namespace changes broke `foo.*bar*?` syntax", "body": "On master we now have:\n\n```\nIn [2]: sys.*pt*?\n---------------------------------------------------------------------------\nValueError                                Traceback (most recent call last)\n/home/fperez/usr/lib/python2.7/site-packages/IPython/core/oinspect.pyc in psearch(self, pattern, ns_table, ns_search, ignore_case, show_all)\n    760             if name not in ns_table:\n    761                 raise ValueError('invalid namespace <%s>. Valid names: %s' %\n--> 762                                  (name,ns_table.keys()))\n    763 \n    764         #print 'type_pattern:',type_pattern # dbg\n\n\nValueError: invalid namespace <user>. Valid names: ['alias', 'user_global', 'builtin', 'user_local']\n```\n\nWe should add a test for this form of call before fixing it, so that we're sure the bug doesn't come back.\n", "commits": [{"node_id": "MDY6Q29tbWl0MTIzNjAwMzo2Mzc2ZGQ4YzEyMjc4NzYxNWFjM2ZhMmIzYTM3NTMzZDhlNWQyZjEw", "commit_message": "Fix wildcard search for new namespace model.\n\nCloses gh-1076", "commit_timestamp": "2011-12-01T11:28:18Z", "files": ["IPython/core/interactiveshell.py", "IPython/core/magic.py", "IPython/core/oinspect.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzpiMjc3ODUyODQ1YzVmNDg2MzFiNDg0MDhmZmU3NDcwMDdlZGEwNjhi", "commit_message": "Fix wildcard search for new namespace model.\n\nCloses gh-1076", "commit_timestamp": "2011-12-01T11:28:18Z", "files": ["IPython/core/interactiveshell.py", "IPython/core/magic.py", "IPython/core/oinspect.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmMzMDk3ODkwOTU4NmVjNTAwZjU2YmQzYTgwZTQ0OTdiYjI2MDZhMTU=", "commit_message": "Merge pull request #1081 from takluyver/ns-wildcard\n\nFix wildcard search for updated namespaces.", "commit_timestamp": "2011-12-01T19:02:59Z", "files": ["IPython/core/interactiveshell.py", "IPython/core/magic.py", "IPython/core/oinspect.py", "IPython/core/tests/test_magic.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmMzMDk3ODkwOTU4NmVjNTAwZjU2YmQzYTgwZTQ0OTdiYjI2MDZhMTU=", "commit_message": "Merge pull request #1081 from takluyver/ns-wildcard\n\nFix wildcard search for updated namespaces.", "commit_timestamp": "2011-12-01T19:02:59Z", "files": ["IPython/core/interactiveshell.py", "IPython/core/magic.py", "IPython/core/oinspect.py", "IPython/core/tests/test_magic.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzpiZWIyYmQ2YzkzZWVkNzY2MjRjZTJmN2MxOTFiMGQ3ZjU4MzEzNjVk", "commit_message": "Merge pull request #1081 from takluyver/ns-wildcard\n\nFix wildcard search for updated namespaces.", "commit_timestamp": "2011-12-01T19:02:59Z", "files": ["IPython/core/interactiveshell.py", "IPython/core/magic.py", "IPython/core/oinspect.py", "IPython/core/tests/test_magic.py"]}], "labels": ["important", "bug", "regression"], "created_at": "2011-12-01T02:13:18Z", "closed_at": "2011-12-01T19:03:13Z", "linked_pr_number": [1076], "method": ["label", "regex"]}
{"issue_number": 1075, "title": "We're ignoring prompt customizations", "body": "Reported on the user list and I confirmed it:\n\nThis is with Python 2.7, IPython 0.12.beta (a checkout about an hour ago)\n\nI have these following lines in my ipython_config.py \n\n```\nc.TerminalInteractiveShell.prompt_in1 = 'I\\\\# '\nc.TerminalInteractiveShell.prompt_out = 'O\\\\# '\n```\n\nBut IPython shows prompts in its way:\n\n```\nIn [1]: a = 5\n\nIn [2]: a\nOut[2]: 5\n```\n\nThis is definitely a blocker, lots of people customize their prompts so we shouldn't release with this broken.\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU4NTE4OjRiODkyMGE1NThkZGY3NzYzOWMxZWFmNTc1MzMwODQ0Mjc4NWI2ZmU=", "commit_message": "Merge pull request #1083 from takluyver/prompts\n\nFixes that finish up the recent PromptManager work:\r\n\r\n* InteractiveShell.prompt_foo traits show deprecation warning, and map to new PromptManager traits\r\n* PromptManager properly added to IPython App, so it will show up in config\r\n* add helpstrings to PromptManager traits.\r\n* Docs / embed references to Shell.prompt_foo also updated\r\n* Prompt rewriting in autocall scenarios is now controlled by a boolean, `show_rewritten_input`, attribute of the InteractiveShell.\r\n\r\nCloses #1075.", "commit_timestamp": "2011-12-01T22:47:48Z", "files": ["IPython/core/interactiveshell.py", "IPython/core/prompts.py", "IPython/frontend/terminal/ipapp.py", "IPython/testing/tools.py", "docs/examples/core/example-embed.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzpkYmEzMTc4ZTNlNjIzNWMzMTI3MTNlYmEyYjEyNTAzMzA3MWI3YzE2", "commit_message": "Merge pull request #1083 from takluyver/prompts\n\nFixes that finish up the recent PromptManager work:\r\n\r\n* InteractiveShell.prompt_foo traits show deprecation warning, and map to new PromptManager traits\r\n* PromptManager properly added to IPython App, so it will show up in config\r\n* add helpstrings to PromptManager traits.\r\n* Docs / embed references to Shell.prompt_foo also updated\r\n* Prompt rewriting in autocall scenarios is now controlled by a boolean, `show_rewritten_input`, attribute of the InteractiveShell.\r\n\r\nCloses #1075.", "commit_timestamp": "2011-12-01T22:47:48Z", "files": ["IPython/core/interactiveshell.py", "IPython/core/prompts.py", "IPython/frontend/terminal/ipapp.py", "IPython/testing/tools.py", "docs/examples/core/example-embed.py"]}], "labels": ["important", "bug", "regression"], "created_at": "2011-12-01T02:08:56Z", "closed_at": "2011-12-01T22:47:51Z", "method": ["label", "regex"]}
{"issue_number": 1074, "title": "pprinting old-style class objects fails (TypeError: 'tuple' object is not callable)", "body": "```\nIn [1]: class A: pass\nIn [2]: A\n...\n/Users/kcarnold/.virtualenvs/py27/lib/python2.7/site-packages/IPython/lib/pretty.pyc in pretty(self, obj)\n    341             for cls in _get_mro(obj_class):\n    342                 if cls in self.type_pprinters:\n--> 343                     return self.type_pprinters[cls](obj, self, cycle)\n    344                 else:\n    345                     printer = self._in_deferred_types(cls)\n\nTypeError: 'tuple' object is not callable\n```\n\nUnfortunately some classes in the Python standard library are old-style, so I stumbled across this one.\n\nThe fix is trivial and hardly worth a pull request:\n\n```\ndiff --git a/IPython/lib/pretty.py b/IPython/lib/pretty.py\nindex 4361f21..f6f109c 100644\n--- a/IPython/lib/pretty.py\n+++ b/IPython/lib/pretty.py\n@@ -668,7 +668,7 @@ _type_pprinters = {\n\n try:\n     _type_pprinters[types.DictProxyType] = _dict_pprinter_factory('<dictproxy {', '}>')\n-    _type_pprinters[types.ClassType] = _type_pprint,\n+    _type_pprinters[types.ClassType] = _type_pprint\n except AttributeError: # Python 3\n     pass\n```\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU4NTE4OjEzYzgxODU4ZTFlMjllZTNhMDg5MDE3Nzg5MzkxYTQyM2VjMjRkYmE=", "commit_message": "remove erroneous trailing comma in lib.pretty\n\nc/o @kcarnold\ncloses #1074", "commit_timestamp": "2011-11-30T22:58:36Z", "files": ["IPython/lib/pretty.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo0NGMzODhhZTA4MTQ0YjI2YzE1M2Y0ODMwMzRlY2UxN2Y5YWNjYWQ1", "commit_message": "remove erroneous trailing comma in lib.pretty\n\nc/o @kcarnold\ncloses #1074", "commit_timestamp": "2011-11-30T22:58:36Z", "files": ["IPython/lib/pretty.py"]}], "labels": ["bug"], "created_at": "2011-11-30T22:41:45Z", "closed_at": "2011-11-30T22:59:52Z", "method": ["label", "regex"]}
{"issue_number": 1071, "title": "Large html-notebooks hang on load on a slow machine", "body": "I've noticed that sometimes, large html notebooks fail to load.\n\nIt goes like this:\n1. Click on the notebook name when at http://localhost:8888\n2. The notebook page starts to open in the browser as usual, but \n3. The loading progress gets stuck at a point where there is a MathJax message \"Processing math: 0%\".\n4. After that, the web browser (Chrome; same seemed to occur also on Firefox) tab is unresponsive and just consumes 100% CPU, and no progress seems to happen. Chrome offers to kill the tab process after a while (clicking \"Continue\" does not seem to help).\n\nThis does not happen always, sometimes the page opens after a while, but I had a notebook for which it seemed to occur in majority of the attempts.\n\nI'm working with the HTML notebook with Google Chrome (15) running on a relatively slow machine (EEE 1000 laptop), and the notebook server + kernels running either on a server through SSH tunnel or on the same machine. When running the browser on a faster machine, this issue does not seem to happen. Ipython is from Git master (b9c427f25585d3). Problems seemed to occur regardless whether MathJax was installed locally or not.\n\nBecause of the MathJax message, I tried to check out what happens if I remove all calls to MathJax from Ipython. With this change, all notebooks seem to load reliably, and I haven't seen this issue to reappear, at least yet. Maybe there's some MathJax-related timing issue at page load time that can cause a deadlock?\n\nI'll follow up if I learn something new. Also, suggestions on how to track this further could be useful.\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU5NDQ2OmVmNDhjYzA3Y2ZiOGVlNzA3YzZkZGJhMTRlNjYzOTFkNDgxMjc1YmM=", "commit_message": "allow the notebook to run without MathJax\n\n* add `--no-mathjax` flag for disabling mathjax in the notebook server\n* A jQuery dialog with our 'no mathjax' message will appear if mathjax is unavailable, but the notebook will be fully functional after dismissal.\n* Various calls to MathJax.Hub.typeset moved to Cell.typeset, which checks for MathJax existence and is a no-op without it.\n\ncloses #1071", "commit_timestamp": "2011-12-01T04:11:37Z", "files": ["IPython/frontend/html/notebook/handlers.py", "IPython/frontend/html/notebook/notebookapp.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjAwNDA0NDY4ODFkZjgzNzAyNDI1Yzc1ZmUyYWMzOThmZmNiZTM0OWU=", "commit_message": "Merge pull request #1077 from minrk/nb\n\nallow the notebook to run without MathJax\r\n\r\nadds --no-mathjax flag for disabling mathjax, and moves the mathjax URL decision to the server from the browser.\r\n\r\ncloses #1071", "commit_timestamp": "2011-12-06T00:49:04Z", "files": ["IPython/frontend/html/notebook/handlers.py", "IPython/frontend/html/notebook/notebookapp.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzpmZjJhNjIyNjliOGUzY2QwNWI3NGIwZWI5ZjU4MjRlNTVmMWNmNTA3", "commit_message": "allow the notebook to run without MathJax\n\n* add `--no-mathjax` flag for disabling mathjax in the notebook server\n* A jQuery dialog with our 'no mathjax' message will appear if mathjax is unavailable, but the notebook will be fully functional after dismissal.\n* Various calls to MathJax.Hub.typeset moved to Cell.typeset, which checks for MathJax existence and is a no-op without it.\n\ncloses #1071", "commit_timestamp": "2011-12-01T04:11:37Z", "files": ["IPython/frontend/html/notebook/handlers.py", "IPython/frontend/html/notebook/notebookapp.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzozMmQwNDJmNzAwMDgyYjYxMTY4MTNlNTQ2MmUxYmY1NGFmM2Q4ZDJm", "commit_message": "Merge pull request #1077 from minrk/nb\n\nallow the notebook to run without MathJax\r\n\r\nadds --no-mathjax flag for disabling mathjax, and moves the mathjax URL decision to the server from the browser.\r\n\r\ncloses #1071", "commit_timestamp": "2011-12-06T00:49:04Z", "files": ["IPython/frontend/html/notebook/handlers.py", "IPython/frontend/html/notebook/notebookapp.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjAwNDA0NDY4ODFkZjgzNzAyNDI1Yzc1ZmUyYWMzOThmZmNiZTM0OWU=", "commit_message": "Merge pull request #1077 from minrk/nb\n\nallow the notebook to run without MathJax\r\n\r\nadds --no-mathjax flag for disabling mathjax, and moves the mathjax URL decision to the server from the browser.\r\n\r\ncloses #1071", "commit_timestamp": "2011-12-06T00:49:04Z", "files": ["IPython/frontend/html/notebook/handlers.py", "IPython/frontend/html/notebook/notebookapp.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjAwNDA0NDY4ODFkZjgzNzAyNDI1Yzc1ZmUyYWMzOThmZmNiZTM0OWU=", "commit_message": "Merge pull request #1077 from minrk/nb\n\nallow the notebook to run without MathJax\r\n\r\nadds --no-mathjax flag for disabling mathjax, and moves the mathjax URL decision to the server from the browser.\r\n\r\ncloses #1071", "commit_timestamp": "2011-12-06T00:49:04Z", "files": ["IPython/frontend/html/notebook/handlers.py", "IPython/frontend/html/notebook/notebookapp.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzozMmQwNDJmNzAwMDgyYjYxMTY4MTNlNTQ2MmUxYmY1NGFmM2Q4ZDJm", "commit_message": "Merge pull request #1077 from minrk/nb\n\nallow the notebook to run without MathJax\r\n\r\nadds --no-mathjax flag for disabling mathjax, and moves the mathjax URL decision to the server from the browser.\r\n\r\ncloses #1071", "commit_timestamp": "2011-12-06T00:49:04Z", "files": ["IPython/frontend/html/notebook/handlers.py", "IPython/frontend/html/notebook/notebookapp.py"]}], "labels": ["important", "bug", "notebook"], "created_at": "2011-11-30T15:01:10Z", "closed_at": "2011-12-06T00:49:07Z", "linked_pr_number": [1071], "method": ["label"]}
{"issue_number": 1067, "title": "Parallel test suite hangs on Python 3", "body": "Running the test suite with Python 3, the `IPython.parallel` suite hangs until I hit Ctrl-C, then shows up as having errored out with the KeyboardInterrupt. I haven't really investigated what causes it.\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU4NTE4OmZkODhlYjcyNzA1YmJlZDIxNzdmYzQwZmVkZGFlNjk3Y2UxNGU3YTk=", "commit_message": "minor py3 fixes in IPython.parallel\n\nentirely bytes/unicode related\n\nFull parallel test suite passes on Python 3.2 with one known failure (remote imports).\n\ncloses #1067", "commit_timestamp": "2011-12-06T05:27:01Z", "files": ["IPython/parallel/apps/ipcontrollerapp.py", "IPython/parallel/controller/hub.py", "IPython/parallel/engine/engine.py", "IPython/parallel/tests/test_view.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzpiZDY0YzYwZDQ5M2RkNzQ5OWI5YWQ3MDcyN2I3ZjhjMTYwN2FmMGNk", "commit_message": "minor py3 fixes in IPython.parallel\n\nentirely bytes/unicode related\n\nFull parallel test suite passes on Python 3.2 with one known failure (remote imports).\n\ncloses #1067", "commit_timestamp": "2011-12-06T05:27:01Z", "files": ["IPython/parallel/apps/ipcontrollerapp.py", "IPython/parallel/controller/hub.py", "IPython/parallel/engine/engine.py", "IPython/parallel/tests/test_view.py"]}], "labels": ["bug", "parallel", "testing"], "created_at": "2011-11-30T00:50:18Z", "closed_at": "2011-12-06T05:27:41Z", "method": ["label"]}
{"issue_number": 1057, "title": "Blocker: Qt console broken after \"all magics\" menu became dynamic", "body": "It turns out that the merge of #956 introduced a serious, major problem with the Qt console.  Unfortunately it's intermittent, which is why we didn't notice it during review, but we do need to fix it.  \n\nSymptoms: sometimes, perhaps one out of every four or five invocations, the qt console will not display the first prompt.  It shows the banner but the input prompt never appears.  The only solution is to kill it and try again, hoping for better.  From a git bisection I did, it appears the first bad commit was e9402d7c6cd7b06c5a06ea.  The way to test this is simply to reset to that commit, _make sure you remove all .pyc files just in case_ and then try opening multiple times the qt console.  Eventually, you'll see an instance where it comes out with no input prompt.\n\n@Carreau, I hope you'll be able to figure out a solution for this one... Some detective work by @takluyver pinpointed the issue somewhat, here's our IRC log:\n\n```\n<takluyver> with the Qt one, I think it's to do with the order of requests\n<fperez__> mh\n<takluyver> there are now 3 requests getting made during startup\n<takluyver> one for the prompt number, one for the history, and the one that commit added for the list of magics, which is triggered by the first reply on the shell channel.\n<fperez__> yes\n<fperez__> is the callback triggering the problem?\n<takluyver> Not quite sure\n<takluyver> when I tried putting print statements in, the problem stopped happening\n<takluyver> I also can't get it to happen with --plain or --pure\n<takluyver> damn thing's quantum, just observing it affects it ;)\n<fperez__> it's some kind of race condition, so the smallest change to the code will make it go away.\n<fperez__> yes, they're called heisenbugs\n<takluyver> aha\n<fperez__> the very worst kind.\n```\n\nIn any case, this is a major blocker.  If a full solution isn't found, we'll have to revert the dynamic magic menu out altogether, but I hope we can find a fix.\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU4NTE4OjY1NTQ2YmY4YTg1YTNmZGYzNTlkMDc4NDIwNDM2MGU5ZWNkYzk1ZWM=", "commit_message": "Temporary fix to work around #1057.\n\nBasically it reverts the effect of #956 and goes back to a static list\nfor the 'all magics' menu.  I tried to mark very clearly the new code\nso we can disable it once a proper fix for #1057 is committed, but we\ncan't have a broken qt console in master.", "commit_timestamp": "2011-11-28T02:46:11Z", "files": ["IPython/frontend/qt/console/mainwindow.py", "IPython/frontend/qt/console/qtconsoleapp.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmE1ZmQwYTNkNDlmODAwZDZlYmY1NTlkNTRlM2E4MDE2YjVkMTc5ZTk=", "commit_message": "Merge pull request #1065 from Carreau/qtconsole-racecondition\n\nFix race condition in qtconsole between the population of the magic menu and the first prompt request. \r\n\r\nResolved by upgrading the logic of the console to handle several executions request in parallel.\r\n\r\nCloses #1057, introduced by #956.", "commit_timestamp": "2011-11-30T06:06:27Z", "files": ["IPython/frontend/qt/console/frontend_widget.py", "IPython/frontend/qt/console/history_console_widget.py", "IPython/frontend/qt/console/ipython_widget.py", "IPython/frontend/qt/console/mainwindow.py", "IPython/frontend/qt/console/qtconsoleapp.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmE1ZmQwYTNkNDlmODAwZDZlYmY1NTlkNTRlM2E4MDE2YjVkMTc5ZTk=", "commit_message": "Merge pull request #1065 from Carreau/qtconsole-racecondition\n\nFix race condition in qtconsole between the population of the magic menu and the first prompt request. \r\n\r\nResolved by upgrading the logic of the console to handle several executions request in parallel.\r\n\r\nCloses #1057, introduced by #956.", "commit_timestamp": "2011-11-30T06:06:27Z", "files": ["IPython/frontend/qt/console/frontend_widget.py", "IPython/frontend/qt/console/history_console_widget.py", "IPython/frontend/qt/console/ipython_widget.py", "IPython/frontend/qt/console/mainwindow.py", "IPython/frontend/qt/console/qtconsoleapp.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzoxZDNmNWFhMzQ3ODYyZDMyZjFiNWE2NDk4MTRiY2M4MjU5NTdlNWFi", "commit_message": "Merge pull request #1065 from Carreau/qtconsole-racecondition\n\nFix race condition in qtconsole between the population of the magic menu and the first prompt request. \r\n\r\nResolved by upgrading the logic of the console to handle several executions request in parallel.\r\n\r\nCloses #1057, introduced by #956.", "commit_timestamp": "2011-11-30T06:06:27Z", "files": ["IPython/frontend/qt/console/frontend_widget.py", "IPython/frontend/qt/console/history_console_widget.py", "IPython/frontend/qt/console/ipython_widget.py", "IPython/frontend/qt/console/mainwindow.py", "IPython/frontend/qt/console/qtconsoleapp.py"]}], "labels": ["qtconsole", "bug"], "created_at": "2011-11-27T23:44:30Z", "closed_at": "2011-11-30T06:06:30Z", "linked_pr_number": [1057], "method": ["label", "regex"]}
{"issue_number": 1050, "title": "ipython3 broken by commit 8bb887c8c2c447bf7", "body": "2to3 does not appear to convert raw_input to input when used like this:\n    def get_pasted_lines(sentinel, input=raw_input):\n\ntraceback:\n\n```\n$ipython3\nFile \"/home/jtaylor/chroots/python3/lib/python3.2/site-packages/ipython-0.12.dev-py3.2.egg/IPython/frontend/terminal/interactiveshell.py\", line 57, in <module>\n    def get_pasted_lines(sentinel, input=raw_input):\nNameError: name 'raw_input' is not defined\n```\n\nit should use py3compat.input\n", "commits": [{"node_id": "MDY6Q29tbWl0MjIxMjQyNjo1Mzk3ZmM4YTNhMDEwNGI5YmNhNGQ5YWMyMjcwMmNmNDI4M2JhNDUy", "commit_message": "Resolve use of raw_input for cpaste in Python 3.\n\ncloses gh-1050", "commit_timestamp": "2011-11-27T00:43:34Z", "files": ["IPython/frontend/terminal/interactiveshell.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo1MTM2MzA4ZTI5NTNlYjQzNmRlYjZmMTIzNGM1NzRjMGQ2YjMwMDQ4", "commit_message": "Resolve use of raw_input for cpaste in Python 3.\n\ncloses gh-1050", "commit_timestamp": "2011-11-27T00:43:34Z", "files": ["IPython/frontend/terminal/interactiveshell.py"]}], "labels": [], "created_at": "2011-11-27T00:27:54Z", "closed_at": "2011-11-27T00:45:00Z", "method": ["regex"]}
{"issue_number": 1043, "title": "pylab doesn't work in qtconsole", "body": "I pulled the latest version of ipython from github and ran\n\n```\nmiha:ipython(master)$ python2 ipython.py qtconsole --profile=pylab &\n[1] 23979\nmiha:ipython(master)$ [IPythonQtConsoleApp] Staging bundled ipython_config.py\nfrom pylab into u'/home/miha/.config/ipython/profile_pylab'\n[IPKernelApp] To connect another client to this kernel, use:\n[IPKernelApp] --existing kernel-23979.json --profile pylab\n[IPythonQtConsoleApp] History request failed: {u'status': u'aborted'}\n[IPythonQtConsoleApp] Retrying aborted history request\n```\n\nIn qtconsole I tried to use pylab, but I got this errors:\n\n```\nIn [1]: plt.plot((1,2,3))\n---------------------------------------------------------------------------\nNameError                                 Traceback (most recent call last)\n/miha_shr/coding/repos/ipython/<ipython-input-1-f7c53b90cc25> in <module>()\n----> 1 plt.plot((1,2,3))\n\nNameError: name 'plt' is not defined\n\nIn [2]: matplotlib.__version__\nOut[2]: '1.1.0'\n```\n\nThe same commands work perfectly well in terminal mode. One gets a more\ninformative traceback if he manually pastes code from pylab profile into\nqtconsole. So I run `$ python2 ipython.py qtconsole` and paste in the code:\n\n```\nPython 2.7.2 (default, Jun 29 2011, 11:10:00) \nType \"copyright\", \"credits\" or \"license\" for more information.\n\nIPython 0.12.dev -- An enhanced Interactive Python.\n?         -> Introduction and overview of IPython's features.\n%quickref -> Quick reference.\nhelp      -> Python's own help system.\nobject?   -> Details about 'object', use 'object??' for extra details.\n%guiref   -> A brief reference about the graphical user interface.\n\nIn [1]: import matplotlib\n   ...: %gui qt\n   ...: matplotlib.use('qtagg')\n   ...: matplotlib.interactive(True)\n   ...: from matplotlib import pyplot as plt\n   ...: from matplotlib.pyplot import *\n---------------------------------------------------------------------------\nImportError                               Traceback (most recent call last)\n/miha_shr/coding/repos/ipython/<ipython-input-1-9f297ed2f0c6> in <module>()\n      3 matplotlib.use('qtagg')\n      4 matplotlib.interactive(True)\n----> 5 from matplotlib import pyplot as plt\n      6 from matplotlib.pyplot import *\n\n/usr/lib/python2.7/site-packages/matplotlib/pyplot.py in <module>()\n     93 \n     94 from matplotlib.backends import pylab_setup\n---> 95 new_figure_manager, draw_if_interactive, _show = pylab_setup()\n     96 \n     97 @docstring.copy_dedent(Artist.findobj)\n\n/usr/lib/python2.7/site-packages/matplotlib/backends/__init__.pyc in\npylab_setup()\n     23         backend_name = 'matplotlib.backends.%s'%backend_name.lower()\n     24     backend_mod = __import__(backend_name,\n---> 25                              globals(),locals(),[backend_name])\n     26 \n     27     # Things we pull in from all backends\n\n\n/usr/lib/python2.7/site-packages/matplotlib/backends/backend_qtagg.py in\n<module>()\n     10 \n     11 from backend_agg import FigureCanvasAgg\n---> 12 from backend_qt import qt, FigureManagerQT, FigureCanvasQT,\\\n     13      show, draw_if_interactive, backend_version, \\\n     14      NavigationToolbar2QT\n\n/usr/lib/python2.7/site-packages/matplotlib/backends/backend_qt.py in <module>()\n     19     import qt\n     20 except ImportError:\n---> 21     raise ImportError(\"Qt backend requires pyqt to be installed.\")\n     22 \n     23 backend_version = \"0.9.1\"\n\nImportError: Qt backend requires pyqt to be installed.\n```\n\nBut i DO have pyqt installed (version 4.8.6-1 in Arch Linux) and it works ok in\nterminal mode.\n", "commits": [{"node_id": "MDY6Q29tbWl0MjIxMjQyNjowYWRjNjBlNzRmMTdmNzAwMWNjMzhkZGUyODNmZjMxYWE3NjE2MTYy", "commit_message": "Use qt4agg, not qtagg, mpl backend in pylab profile.\n\nCloses gh-1043", "commit_timestamp": "2011-11-25T12:17:17Z", "files": ["IPython/config/profile/pylab/ipython_config.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzphYTkzYzQ2YjJiYzRjNjM4ZDFlN2JkMTk5MDNlYjRkMWY2OWQ5MjMy", "commit_message": "Use qt4agg, not qtagg, mpl backend in pylab profile.\n\nCloses gh-1043", "commit_timestamp": "2011-11-25T12:17:17Z", "files": ["IPython/config/profile/pylab/ipython_config.py"]}], "labels": ["important", "qtconsole", "bug"], "created_at": "2011-11-25T11:08:36Z", "closed_at": "2011-11-25T12:20:05Z", "method": ["label", "regex"]}
{"issue_number": 1027, "title": "ipython does not like white space at end of file", "body": "ipython does not handle whitespace at end of files in the same way as python itself does.\n\nTest file 'whitespace_at_eof.py at: https://gist.github.com/1385125\n\nThis file contains one print statement and on the last line there are four spaces.\n\nRegular python:\n\n```\nC:\\python\\bugreports\\ipython> python .\\whitespace_at_eof.py\nhello world!\n```\n\nipython from commandline:\n\n```\nC:\\python\\bugreports\\ipython> ipython .\\whitespace_at_eof.py\n---------------------------------------------------------------------------\nIndentationError                          Traceback (most recent call last)\nc:\\python26\\external\\ipython\\IPython\\utils\\py3compat.pyc in execfile(fname, glob, loc)\n    163             else:\n    164                 filename = fname\n--> 165             exec compile(scripttext, filename, 'exec') in glob, loc\n    166     else:\n    167         def execfile(fname, *where):\n\nIndentationError: unexpected indent (whitespace_at_eof.py, line 2)\n```\n\nipython %run:\n\n```\nIn [1]: %run whitespace_at_eof.py\n---------------------------------------------------------------------------\nIndentationError                          Traceback (most recent call last)\nc:\\python26\\external\\ipython\\IPython\\utils\\py3compat.pyc in execfile(fname, glob, loc)\n    163             else:\n    164                 filename = fname\n--> 165             exec compile(scripttext, filename, 'exec') in glob, loc\n    166     else:\n    167         def execfile(fname, *where):\n\nIndentationError: unexpected indent (whitespace_at_eof.py, line 2)\n```\n\nThis was tested on windows 7 python2.6 ipython master 30385c4\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU4NTE4OjU5YzRmMzFmNjZjY2NkOWM5NDA0NWYzOWY2MjYwYjdmZDBmZTUzYzM=", "commit_message": "Work around issue in py2.6 where trailing whitespace confuses compile().\n\nCloses #1027.", "commit_timestamp": "2011-11-23T03:49:27Z", "files": ["IPython/utils/py3compat.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjIwNmQzNTIxYzBmNjcxYmQwZTFjNTE0Yzg4ZTc4ZDRmZDZkMGU4YWQ=", "commit_message": "Fixes #1027, the previous fix had a problem under windows.\r\n\r\nEnsure that scripts are newline-terminated, apparently py3 complains when there's a missing newline and the last line ends in a comment.  This is probably a python bug, but we should protect against it nonetheless.", "commit_timestamp": "2011-11-29T20:28:31Z", "files": ["IPython/utils/py3compat.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzphNzFkMmU5OWU4OGVhZDYzNjEwNDAwZjQ2NjM3OTI2ZDEwN2UzZDFm", "commit_message": "Work around issue in py2.6 where trailing whitespace confuses compile().\n\nCloses #1027.", "commit_timestamp": "2011-11-23T03:49:27Z", "files": ["IPython/utils/py3compat.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo4M2U4ZjM1NmRlN2FkOTBlZjE5Y2NiMTMyYjQwZTAwYjhkMTZhY2Y2", "commit_message": "Fixes #1027, the previous fix had a problem under windows.\r\n\r\nEnsure that scripts are newline-terminated, apparently py3 complains when there's a missing newline and the last line ends in a comment.  This is probably a python bug, but we should protect against it nonetheless.", "commit_timestamp": "2011-11-29T20:28:31Z", "files": ["IPython/utils/py3compat.py"]}], "labels": [], "created_at": "2011-11-22T07:54:49Z", "closed_at": "2011-11-29T20:28:34Z", "method": ["regex"]}
{"issue_number": 1026, "title": "BUG: wrong default parameter in ask_yes_no", "body": "## How to reproduce?\n\ncall reset magic, give empty answer, the default 'n' has no affects\n## Issue:\n\nreset magic call core.interactiveshell.ask_yes_no with any default value,\n\nand\n\nutils.io.ask_yes_no accepts string as default answer, while core.interactiveshell.ask_yes_no pass True in!\n## Solution:\n\ngive 'n' in reset magic, and fix the default answer of core.interactiveshell.ask_yes_no\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU4NTE4OjMwMzg1YzRlZjU1NDQ2ZDcyMTNmZDBkYTdhOGVlMzVlMzkxMjdiYjc=", "commit_message": "fix default value in interactiveshell.ask_yes_no\n\nwas True, should be None\n\ncloses #1026", "commit_timestamp": "2011-11-21T23:57:08Z", "files": ["IPython/core/interactiveshell.py", "IPython/core/magic.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo2MzRkMmYyMDM0YjgzNWMzOTg0YmQ0MDk2YWZlYmRhNTM2MDRiODJi", "commit_message": "fix default value in interactiveshell.ask_yes_no\n\nwas True, should be None\n\ncloses #1026", "commit_timestamp": "2011-11-21T23:57:08Z", "files": ["IPython/core/interactiveshell.py", "IPython/core/magic.py"]}], "labels": [], "created_at": "2011-11-21T23:31:53Z", "closed_at": "2011-11-22T00:01:05Z", "method": ["regex"]}
{"issue_number": 1024, "title": "autopx magic broken ", "body": "I noticed that the `parallel_mpi.ipynb` example is broken in master.\nMore specifically autopx cannot be disabled and \nreturns get_ipython() cannot be found from individual engines.\n\nI have bisected that the code broke with 7f451c779645fec1b564b764d237e59808e59616\nwhere make_quoted_expr() was replaced by standard repr() \n", "commits": [{"node_id": "MDY6Q29tbWl0NjU4NTE4OmIzNzg1YmE4ODQxYjFjOTZkNWJjZmY3MDhmNjkxMTc1OGQ0N2FjZGE=", "commit_message": "fix autopx regex after recent change\n\n7f451c779645fec1b564b764d237e59808e59616 changed make_quoted_str to repr,\nwhich allowed the string to be either single or double-quoted, which\nthe regex previously did not handle.\n\ncloses #1024", "commit_timestamp": "2011-11-21T20:47:18Z", "files": ["IPython/extensions/parallelmagic.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo2YWZjYjVmOTBiOWNjNWZkOGIzZTg3YjMzNDc5YTZlM2ZhNzgyZmE0", "commit_message": "fix autopx regex after recent change\n\n7f451c779645fec1b564b764d237e59808e59616 changed make_quoted_str to repr,\nwhich allowed the string to be either single or double-quoted, which\nthe regex previously did not handle.\n\ncloses #1024", "commit_timestamp": "2011-11-21T20:47:18Z", "files": ["IPython/extensions/parallelmagic.py"]}], "labels": ["important", "bug"], "created_at": "2011-11-21T20:38:48Z", "closed_at": "2011-11-21T21:13:33Z", "method": ["label", "regex"]}
{"issue_number": 1022, "title": "Pylab banner shows up with first cell to execute", "body": "If the notebook server is started with `--pylab=inline`, the first cell to be run shows the pylab banner (\"Welcome to pylab...\").\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU5NDQ2OmY5Njc1MzE1MmZjYWM0MDEzZjM5NzI3MDNiOGQ2ODI3MTc4NDMwNTA=", "commit_message": "flush messages printed during startup\n\nPrevents print statements during init methods from being associated with the first execution.\n\ncloses #1022", "commit_timestamp": "2011-11-21T18:55:12Z", "files": ["IPython/lib/pylabtools.py", "IPython/zmq/kernelapp.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzpjNGY0M2I0YTVmMjAyNzUzZDE0YzhmMDY4NTg1ZTE4Y2M4OWZmZTIw", "commit_message": "flush messages printed during startup\n\nPrevents print statements during init methods from being associated with the first execution.\n\ncloses #1022", "commit_timestamp": "2011-11-21T18:55:12Z", "files": ["IPython/lib/pylabtools.py", "IPython/zmq/kernelapp.py"]}], "labels": ["bug", "notebook"], "created_at": "2011-11-21T00:32:32Z", "closed_at": "2011-11-24T22:03:03Z", "linked_pr_number": [1022], "method": ["label"]}
{"issue_number": 1018, "title": "Local mathjax breaks install", "body": "I sometimes run IPython in-place, other times I do a full install.\n\nOnce Mathjax has been installed locally in the in-place version, doing \"python setup.py install\" no longer works:\n\n```\n\nExtracting ipython-0.12.dev-py3.2.egg to /home/stefan/lib/python3.2/site-packages\n  File \"/home/stefan/lib/python3.2/site-packages/ipython-0.12.dev-py3.2.egg/IPython/frontend/html/notebook/static/mathjax/docs/source/conf.py\", line 40\n    project = u'MathJax'\n                       ^\nSyntaxError: invalid syntax\n```\n\nThe solution may be to explicitly tell setup.py to ignore the local Mathjax cache.\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU4NTE4OjlmOTk1NjkxOWFjYTI5MDdiOGEwY2U2NzkzYWQzMWMwOTllNDUyN2M=", "commit_message": "exclude mathjax from notebook package_data\n\ncloses #1018", "commit_timestamp": "2011-12-06T05:26:41Z", "files": ["setupbase.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo1M2JkNzU4Mzg1NTUyZTRjYTUzOGZhM2I5NWE4ZWVlZDQ0ZGZjY2Nm", "commit_message": "exclude mathjax from notebook package_data\n\ncloses #1018", "commit_timestamp": "2011-12-06T05:26:41Z", "files": ["setupbase.py"]}], "labels": ["bug"], "created_at": "2011-11-20T09:11:55Z", "closed_at": "2011-12-06T05:27:41Z", "method": ["label"]}
{"issue_number": 993, "title": "`raw_input` redirection to foreign kernels is extremely brittle", "body": "In the notebook, open `%qtconsole` to get a console pointed to the notebook's kernel (which is 'foreign' to the console), then run any script that causes a traceback a few levels deep, and try to run `%debug` in the console.  In more cases than not, the result is a wedged console where the keyboard stops accepting input.\n\nWe had major improvements on the raw_input behavior after some fixes made by @epatters to the console, and now it's pretty solid when interacting with its own kernel.  But for some reason I don't really understand right now, when talking to kernels it didn't start the behavior is much poorer.\n\nI'm marking it as critical so that at least we have a look at it before 0.12, but if we can't solve it we'll move it to the 0.13 milestone, as it may be harder to fix than we can manage this close to a release, and I don't want to hold 0.12 for any longer than strictly necessary.\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU4NTE4OjJlZTE0ZmMwODliODk0MjdjY2YwZmM1MDE0OGU1ZjlkMzliMzAwYzc=", "commit_message": "Merge pull request #1053 from ipython/rawin\n\nminor improvements to text placement in qtconsole.\r\n\r\nThis closes #993, and although it's not the long-term implementation we want, it does fix the user-facing problem pretty robustly.", "commit_timestamp": "2011-12-06T01:40:30Z", "files": ["IPython/frontend/qt/console/console_widget.py", "IPython/frontend/qt/console/frontend_widget.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo2ZTE4YmIwYWI4MmM0YmRjZWU4YWRiODJlYjY5ZDMyMWUwNzY2ZjZk", "commit_message": "Merge pull request #1053 from ipython/rawin\n\nminor improvements to text placement in qtconsole.\r\n\r\nThis closes #993, and although it's not the long-term implementation we want, it does fix the user-facing problem pretty robustly.", "commit_timestamp": "2011-12-06T01:40:30Z", "files": ["IPython/frontend/qt/console/console_widget.py", "IPython/frontend/qt/console/frontend_widget.py"]}], "labels": ["important", "qtconsole", "bug", "notebook"], "created_at": "2011-11-11T07:47:59Z", "closed_at": "2011-12-06T01:40:32Z", "method": ["label", "regex"]}
{"issue_number": 992, "title": "Interrupting certain matplotlib operations leaves the inline backend 'wedged'", "body": "This is something I've only noticed on the notebook, though it likely also occurs with the qt console.  If I interrupt a matplotlib rendering operation, quite often it becomes impossilbe to get any further plots to show up.  Somewhere, we're holding state that isn't fully restored if the rendering operation is interrupted by the user.\n\nTyping `%pylab inline` fixes it, but that's an arcane solution which also has the side-effect of re-importing all the pylab namespace on top of the user's interactive namespace.\n\nI've had this bite me often enough lately to realize it will be a major usability headache for new users of the notebook, which is why I'm making it critical.  I suspect it will be easy to fix once we have a look at our inline pylab code.\n", "commits": [{"node_id": "MDY6Q29tbWl0MjIxMjQyNjpmM2ZlMWMxYTdiYzM1MzZjNzU3NjczOTZhNjJhZDE3ZmU0ODVlMjdi", "commit_message": "don't unregister interrupted post-exec functions\n\nonly unregister on real Exceptions.\n\nalso put close/cleanup for the inline backend calls inside `finally` block,\nto ensure that the state is clean on the next round, even if show/flush is interrupted\n\ncloses gh-992", "commit_timestamp": "2011-11-20T08:37:24Z", "files": ["IPython/core/interactiveshell.py", "IPython/zmq/pylab/backend_inline.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzoxMDM4ZjVjMjU2NzlmYjA2YzE2YTI3MmUwMzU4NzI5ZTE4ZGVmNmMz", "commit_message": "don't unregister interrupted post-exec functions\n\nonly unregister on real Exceptions.\n\nalso put close/cleanup for the inline backend calls inside `finally` block,\nto ensure that the state is clean on the next round, even if show/flush is interrupted\n\ncloses gh-992", "commit_timestamp": "2011-11-20T08:37:24Z", "files": ["IPython/core/interactiveshell.py", "IPython/zmq/pylab/backend_inline.py"]}], "labels": ["important", "bug"], "created_at": "2011-11-11T07:42:58Z", "closed_at": "2011-11-20T08:48:20Z", "method": ["label"]}
{"issue_number": 988, "title": "Error using idlsave", "body": "Accessing s1['dn'] should work fine within IPython like in the regular Python shell. \n\n```\nI1 from scipy import io\nI2 s1 = io.idl.readsav('test.sav')\n\nI3 s1?\nType:       AttrDict\nBase Class: <class 'scipy.io.idl.AttrDict'>\nString Form:\n{'dn': array([  1.02282184e+07,   1.05383408e+07,   1.08758739e+07,\n           1.12449965e+07,   1. <...>  (('r', 'R'), '>f8'), (('v', 'V'), '>f8')]), 'tfit': array([  4.82394886e+02,   4.18176107e-01])}\nNamespace:  Interactive\nLength:     11\nFile:       /usr/lib64/python2.7/site-packages/scipy/io/idl.py\nDefinition: s1(self, name)\n\n\nI4 s1['dn']\n---------------------------------------------------------------------------\nKeyError                                  Traceback (most recent call last)\n/home/gsever/Desktop/python-repo/ipython/IPython/core/prefilter.pyc in prefilter_lines(self, lines, continue_prompt)\n    358                              for lnum, line in enumerate(llines) ])\n    359         else:\n--> 360             out = self.prefilter_line(llines[0], continue_prompt)\n    361 \n    362         return out\n\n/home/gsever/Desktop/python-repo/ipython/IPython/core/prefilter.pyc in prefilter_line(self, line, continue_prompt)\n    333             return normal_handler.handle(line_info)\n    334 \n--> 335         prefiltered = self.prefilter_line_info(line_info)\n    336         # print \"prefiltered line: %r\" % prefiltered\n\n    337         return prefiltered\n\n/home/gsever/Desktop/python-repo/ipython/IPython/core/prefilter.pyc in prefilter_line_info(self, line_info)\n    273         # print \"prefilter_line_info: \", line_info\n\n    274         handler = self.find_handler(line_info)\n--> 275         return handler.handle(line_info)\n    276 \n    277     def find_handler(self, line_info):\n\n/home/gsever/Desktop/python-repo/ipython/IPython/core/prefilter.pyc in handle(self, line_info)\n    813 \n    814         force_auto = isinstance(obj, IPyAutocall)\n--> 815         auto_rewrite = getattr(obj, 'rewrite', True)\n    816 \n    817         if esc == ESC_QUOTE:\n\n/usr/lib64/python2.7/site-packages/scipy/io/idl.pyc in __getitem__(self, name)\n    657 \n    658     def __getitem__(self, name):\n--> 659         return super(AttrDict, self).__getitem__(name.lower())\n    660 \n    661     def __setitem__(self, key, value):\n\nKeyError: 'rewrite'\n```\n\nUntil this is fixed in IPy, the workaround is to use s1.get('dn')\nUsing Python 2.7, IPython 0.12.dev, scipy.0.11.0.dev-7e1bb79\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU4NTE4OjQ2N2I1YjI5ZTAwMTIxY2VkODYxYzllOGVmZDdmN2IwNDMzYTY1OTM=", "commit_message": "Catch errors raised by user objects when accessing attributes.\n\nWhen analyzing the line with prefilter, we look into whether objects\nhave a 'rewrite' attribute.  While this is off-spec, we've seen in the\nwild objects that raise something other than AttributeError on\nattribute access.  Now we catch all exceptions in this codepath.\n\nCloses #988.", "commit_timestamp": "2011-11-11T01:58:56Z", "files": ["IPython/core/prefilter.py", "IPython/core/tests/test_prefilter.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzoyMTU2NmQyNjgxMWYwNjVmMGFkZjJkZjE1YzdhMTI0MzdhMWIxODIz", "commit_message": "Catch errors raised by user objects when accessing attributes.\n\nWhen analyzing the line with prefilter, we look into whether objects\nhave a 'rewrite' attribute.  While this is off-spec, we've seen in the\nwild objects that raise something other than AttributeError on\nattribute access.  Now we catch all exceptions in this codepath.\n\nCloses #988.", "commit_timestamp": "2011-11-11T01:58:56Z", "files": ["IPython/core/prefilter.py", "IPython/core/tests/test_prefilter.py"]}], "labels": ["bug"], "created_at": "2011-11-10T16:25:46Z", "closed_at": "2011-11-11T01:59:17Z", "method": ["label"]}
{"issue_number": 986, "title": "Views created with c.direct_view() fail", "body": "Going through a basic example from the docs, I ran into this failure. It looks like view.targets is 'all', when it should be a collection of IDs. Creating the equivalent view with `c[:]` works.\n\n```\nIn [3]: v = c.direct_view()\n\nIn [4]: v\nOut[4]: <DirectView all>\n\nIn [5]: v.map_sync(lambda x: x**10, range(32))\n---------------------------------------------------------------------------\nTypeError                                 Traceback (most recent call last)\n/home/thomas/Code/virtualenvs/ipy-trunk/<ipython-input-5-b937e0334e06> in <module>()\n----> 1 v.map_sync(lambda x: x**10, range(32))\n\n/home/thomas/Code/virtualenvs/ipy-trunk/local/lib/python2.7/site-packages/IPython/parallel/client/view.pyc in map_sync(self, f, *sequences, **kwargs)\n    340             raise TypeError(\"map_sync doesn't take a `block` keyword argument.\")\n    341         kwargs['block'] = True\n--> 342         return self.map(f,*sequences,**kwargs)\n    343 \n    344     def imap(self, f, *sequences, **kwargs):\n\n/home/thomas/Code/virtualenvs/ipy-trunk/<string> in map(self, f, *sequences, **kwargs)\n\n/home/thomas/Code/virtualenvs/ipy-trunk/local/lib/python2.7/site-packages/IPython/parallel/client/view.pyc in spin_after(f, self, *args, **kwargs)\n     66 def spin_after(f, self, *args, **kwargs):\n     67     \"\"\"call spin after the method.\"\"\"\n---> 68     ret = f(self, *args, **kwargs)\n     69     self.spin()\n     70     return ret\n\n/home/thomas/Code/virtualenvs/ipy-trunk/local/lib/python2.7/site-packages/IPython/parallel/client/view.pyc in map(self, f, *sequences, **kwargs)\n    575         assert len(sequences) > 0, \"must have some sequences to map onto!\"\n    576         pf = ParallelFunction(self, f, block=block, **kwargs)\n--> 577         return pf.map(*sequences)\n    578 \n    579     def execute(self, code, targets=None, block=None):\n\n/home/thomas/Code/virtualenvs/ipy-trunk/local/lib/python2.7/site-packages/IPython/parallel/client/remotefunction.pyc in map(self, *sequences)\n    212         self._map = True\n    213         try:\n--> 214             ret = self.__call__(*sequences)\n    215         finally:\n    216             del self._map\n\n/home/thomas/Code/virtualenvs/ipy-trunk/local/lib/python2.7/site-packages/IPython/parallel/client/remotefunction.pyc in __call__(self, *sequences)\n    185                 f=self.func\n    186 \n--> 187             view = self.view if balanced else client[t]\n    188             with view.temp_flags(block=False, **self.flags):\n    189                 ar = view.apply(f, *args)\n\n/home/thomas/Code/virtualenvs/ipy-trunk/local/lib/python2.7/site-packages/IPython/parallel/client/client.pyc in __getitem__(self, key)\n    763         Must be int, slice, or list/tuple/xrange of ints\"\"\"\n    764         if not isinstance(key, (int, slice, tuple, list, xrange)):\n--> 765             raise TypeError(\"key by int/slice/iterable of ints only, not %s\"%(type(key)))\n    766         else:\n    767             return self.direct_view(key)\n\nTypeError: key by int/slice/iterable of ints only, not <type 'str'>\n```\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU4NTE4OjU1ZDgxZjg2NTUxYjAyMzMzOTg4YmQ2MDg3OTU5YzQxODE1MmRhN2Q=", "commit_message": "handle targets='all' in remotefunction\n\n* add explanation of lazy evaluation of 'all' to direct_view docstring\n* previously failing test included\n\ncloses gh-986", "commit_timestamp": "2011-11-10T01:56:07Z", "files": ["IPython/parallel/client/client.py", "IPython/parallel/client/remotefunction.py", "IPython/parallel/tests/test_client.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzpiODI2YWRlYmU4YjE5YTI4ZmI4ZGE4NzhlMWU2Zjc5NDVlYjUwMTlm", "commit_message": "handle targets='all' in remotefunction\n\n* add explanation of lazy evaluation of 'all' to direct_view docstring\n* previously failing test included\n\ncloses gh-986", "commit_timestamp": "2011-11-10T01:56:07Z", "files": ["IPython/parallel/client/client.py", "IPython/parallel/client/remotefunction.py", "IPython/parallel/tests/test_client.py"]}], "labels": ["bug", "parallel"], "created_at": "2011-11-09T22:46:07Z", "closed_at": "2011-11-10T03:20:12Z", "method": ["label"]}
{"issue_number": 978, "title": "ipython 0.11 buffers external command output till the cmd is done", "body": "I run some command within ipython on a windows xp host. These commands take some time to finish.\nThe output of these command weren't shown until all commands finished running. The behavior is totally different from previous version, which output are printed immediately.\n\nFor instance, input \"!netstat -p tcp -b -o -a -n 1\" command which runs infinitely, the output will never be seen.\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU5NDQ2OmE3YjQ4MDk2ZmI3MmQ4M2Q2NGE2YzBjYzU1NmNlMzlkMTg5N2MyYzE=", "commit_message": "use system_raw in terminal, even on Windows\n\n`system_raw` uses `os.system` instead of `utils.process.system`, and makes\nmore sense in a Terminal session.\n\nThere was discussion that it should be otherwise on Windows, but I can't\nfind any actual evidence for why this would be the case, and there are very\nclear disadvantages to not using `os.system` (see #978 and #181).\n\ncloses gh-978", "commit_timestamp": "2011-11-09T03:47:18Z", "files": ["IPython/frontend/terminal/interactiveshell.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzpmOGQ4ZTY5MTY5MWUzYjAwZmFhM2Y1YTkwNjUxOTY1ZjQ4MTNkMWI4", "commit_message": "use system_raw in terminal, even on Windows\n\n`system_raw` uses `os.system` instead of `utils.process.system`, and makes\nmore sense in a Terminal session.\n\nThere was discussion that it should be otherwise on Windows, but I can't\nfind any actual evidence for why this would be the case, and there are very\nclear disadvantages to not using `os.system` (see #978 and #181).\n\ncloses gh-978", "commit_timestamp": "2011-11-09T03:47:18Z", "files": ["IPython/frontend/terminal/interactiveshell.py"]}], "labels": ["windows", "bug"], "created_at": "2011-11-08T02:39:24Z", "closed_at": "2011-11-11T08:00:34Z", "method": ["label"]}
{"issue_number": 971, "title": "bookmarks created in 0.11 are corrupt in 0.12", "body": "Create a bookmark in 0.11. Start 0.12 and list bookmarks.\nIn 0.12 qtconsole, the bookmark displays as if its name ended with newline (name on one line, arrow and path on the next)\nIn 0.12 terminal, it displays just the arrow and path (presumably that second line overwrites the first line which had the name).\nIn either case, the bookmarks are not usable.\n\nMoreover, if a 0.12 session creates bookmarks and then a 0.11 session opens bookmarks at all (even just to list them), they will then be corrupt in 0.12.\n\nThis is significant (beyond the obvious but not critical usefulness of preserving the environment across an upgrade) because an application may embed 0.12 but the user may still have 0.11 installed for direct ipython access, so the 0.12 embed cannot depend on its own bookmarks being usable on a subsequent run. And of course it would also be useful for the two to be able to share bookmarks safely, as they do share history.\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU5NDQ2OjhkZGM1NjhiZDEwOGFjMjg2ZDEzNTNmMjQ3ZjRjN2JjYjg1ZmM3NGM=", "commit_message": "use universal-newline in pickleshare\n\nThis prevents entries (bookmarks) made in 0.11 on Windows from\nhaving an extra '\\r' on all strings.\n\ncloses gh-971", "commit_timestamp": "2011-11-05T21:36:20Z", "files": ["IPython/utils/pickleshare.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjhkZGM1NjhiZDEwOGFjMjg2ZDEzNTNmMjQ3ZjRjN2JjYjg1ZmM3NGM=", "commit_message": "use universal-newline in pickleshare\n\nThis prevents entries (bookmarks) made in 0.11 on Windows from\nhaving an extra '\\r' on all strings.\n\ncloses gh-971", "commit_timestamp": "2011-11-05T21:36:20Z", "files": ["IPython/utils/pickleshare.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzpkNDYwZDI2MTljZGQwYWE3YWI3NmYxM2NjOTc1NGFmNTBmYWI1MjU3", "commit_message": "use universal-newline in pickleshare\n\nThis prevents entries (bookmarks) made in 0.11 on Windows from\nhaving an extra '\\r' on all strings.\n\ncloses gh-971", "commit_timestamp": "2011-11-05T21:36:20Z", "files": ["IPython/utils/pickleshare.py"]}], "labels": ["important", "windows", "bug", "regression"], "created_at": "2011-11-03T18:43:32Z", "closed_at": "2011-11-05T21:44:51Z", "method": ["label"]}
{"issue_number": 970, "title": "Default home not writable, %HOME% does not help (windows)", "body": "Hello, I have trouble with the new Ipython (I think I did not upgrade since 0.10) on windows. My default home directory is not writable (thanks admins!) so previously I had to setup HOME variable pointing to a better location. This, however, does not work with newer ipythons! Any idea why?\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU4NTE4OjM1MWM4ZmM0MzM0YTI2NmE4ZTcwYzg0MWU1OGFmZThiZmEwZjUxZWE=", "commit_message": "Merge pull request #998 from minrk/homedir\n\ndefer to stdlib os.path.expanduser('~') for path.get_home_dir()\r\n\r\nfrozen env still comes first, and My Documents registry query is fallback on Windows, but in all normal cases, expanduser is used, which has $HOME as first priority.\r\n\r\nIPython also no longer considers finding no writable home dir as a fatal error.\r\n\r\ncloses #810\r\ncloses #747\r\ncloses #970", "commit_timestamp": "2011-11-24T02:44:14Z", "files": ["IPython/core/interactiveshell.py", "IPython/utils/path.py", "IPython/utils/tests/test_path.py"]}, {"node_id": "MDY6Q29tbWl0MjIxMjQyNjpiNWNhNjQ2NWI0ZTk5NjU3ODM3YzIzNzZjZmJkNTBkNjc5YTEyYTI0", "commit_message": "defer to stdlib for path.get_home_dir()\n\nWe have elaborate and fragile logic for determining\nhome dir, and it is ultimately less reliable than the stdlib behavior\nused for `os.path.expanduser('~')`.  This commit defers to that in\nall cases other than a bundled Python in py2exe/py2app environments.\n\nThe one case where the default guess will *not* be correct, based on\ninline comments, is on WinHPC, where all paths must be UNC (`\\\\foo`), and\nthus HOMESHARE is the logical first choice.  However, HOMESHARE is\nthe wrong answer in approximately all other cases where it is defined,\nand the fix for WinHPC users is the trivial `HOME=%HOMESHARE%`.\n\nThis removes the various tests of our Windows path resolution logic,\nwhich are no longer relevant. Further, $HOME is used by the stdlib\nas first priority on *all* platforms, so tests for this behavior are\nno longer posix-specific.\n\ncloses gh-970\ncloses gh-747", "commit_timestamp": "2011-11-23T05:00:19Z", "files": ["IPython/utils/path.py", "IPython/utils/tests/test_path.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo3NWVkOTJkOTAwZjQxNTgzZTNiZGJhOTkzOGQwYmYzZGNiNDRhZWVk", "commit_message": "defer to stdlib for path.get_home_dir()\n\nWe have elaborate and fragile logic for determining\nhome dir, and it is ultimately less reliable than the stdlib behavior\nused for `os.path.expanduser('~')`.  This commit defers to that in\nall cases other than a bundled Python in py2exe/py2app environments.\n\nThe one case where the default guess will *not* be correct, based on\ninline comments, is on WinHPC, where all paths must be UNC (`\\\\foo`), and\nthus HOMESHARE is the logical first choice.  However, HOMESHARE is\nthe wrong answer in approximately all other cases where it is defined,\nand the fix for WinHPC users is the trivial `HOME=%HOMESHARE%`.\n\nThis removes the various tests of our Windows path resolution logic,\nwhich are no longer relevant. Further, $HOME is used by the stdlib\nas first priority on *all* platforms, so tests for this behavior are\nno longer posix-specific.\n\ncloses gh-970\ncloses gh-747", "commit_timestamp": "2011-11-23T05:00:19Z", "files": ["IPython/utils/path.py", "IPython/utils/tests/test_path.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzpjMGY4NjcxMzQ5NGMwZGU5ODQ5YmM1OTUyNzZhOWIyNjg0MjU5MThm", "commit_message": "Merge pull request #998 from minrk/homedir\n\ndefer to stdlib os.path.expanduser('~') for path.get_home_dir()\r\n\r\nfrozen env still comes first, and My Documents registry query is fallback on Windows, but in all normal cases, expanduser is used, which has $HOME as first priority.\r\n\r\nIPython also no longer considers finding no writable home dir as a fatal error.\r\n\r\ncloses #810\r\ncloses #747\r\ncloses #970", "commit_timestamp": "2011-11-24T02:44:14Z", "files": ["IPython/core/interactiveshell.py", "IPython/utils/path.py", "IPython/utils/tests/test_path.py"]}], "labels": ["windows"], "created_at": "2011-11-03T11:28:08Z", "closed_at": "2011-11-24T02:44:17Z", "method": ["regex"]}
{"issue_number": 949, "title": "Test suite must not require any manual interaction", "body": "I'm pretty sure the merging of #916 is the culprit: now the test suite runs a simple snippet with `run -p`, which opens the profiler information in the pager.  This means that the test suite stops until the user manually closes that pager.\n\nIt should always be possible to run the test suite in 100% automated fashion and have it complete.  @takluyver, do you think you could have a look?  If not I'll do it, but I'm running out of ipython time for the next few days...\n\nOne solution is to keep the current `run -p` test, but temporarily change the pager in that test to be the simple printing pager.  In fact, this is probably what we should do unconditionally to the global instance we start in globalipapp for the test suite: it makes no sense at all in the test suite to open the real pager, so we might as well use the dumb print-only pager _always_ in the test suite.  This will take care of this problem ever reappearing again in the future triggered by a different codepath.\n", "commits": [{"node_id": "MDY6Q29tbWl0MTIzNjAwMzo5NmM4NDNlYTllYjQ0ZDMxYzllMDc1MjFkNjAzMGU1MTJhODljYmM1", "commit_message": "Disable the pager for the test suite.\n\nShould fix gh-949", "commit_timestamp": "2011-11-01T19:26:12Z", "files": ["IPython/core/tests/test_page.py", "IPython/testing/globalipapp.py"]}, {"node_id": "MDY6Q29tbWl0NjU5NDQ2OjcxYjNhM2RjYTFkZWI3M2QzZDVjOGY0MWNlYzMxZjc1N2NkMDk2Y2Q=", "commit_message": "Disable the pager for the test suite.\n\ncloses gh-949\ncloses gh-961", "commit_timestamp": "2011-11-02T19:21:49Z", "files": ["IPython/core/tests/test_page.py", "IPython/testing/globalipapp.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjcxYjNhM2RjYTFkZWI3M2QzZDVjOGY0MWNlYzMxZjc1N2NkMDk2Y2Q=", "commit_message": "Disable the pager for the test suite.\n\ncloses gh-949\ncloses gh-961", "commit_timestamp": "2011-11-02T19:21:49Z", "files": ["IPython/core/tests/test_page.py", "IPython/testing/globalipapp.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo3N2IwYzhhZDE3MDdlOWQ0OWJmZTIwYTI4Nzg0MDQ0OWYwZWQ3NDdl", "commit_message": "Disable the pager for the test suite.\n\ncloses gh-949\ncloses gh-961", "commit_timestamp": "2011-11-02T19:21:49Z", "files": ["IPython/core/tests/test_page.py", "IPython/testing/globalipapp.py"]}], "labels": ["important", "bug"], "created_at": "2011-10-30T20:34:49Z", "closed_at": "2011-11-02T19:28:01Z", "method": ["label"]}
{"issue_number": 946, "title": "Multi-tab Close action should offer option to leave all kernels alone", "body": "@minrk, after you added the (necessary) dialog for closing the whole Qt console, I realized we forgot to take one case into consideration: leaving any open kernels alone.  That comes up when, for example, closing a console that was opened from a notebook via `%qtconsole`.  I think the close dialog should have the same question as now, but offer in addition to 'yes, quit everything' and 'cancel', a 'leave all kernels running' option.\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU4NTE4OmRiYzE1YzExZmU0OTIxOGIxNjUyMWMwOGNiZDQyNWQ1MGYxM2FlYjE=", "commit_message": "clarify close dialog on qtconsole\n\nNotes that kernels not started by the qtconsole will not be affected,\nand has singular message rather than 'all tabs' when only one tab\nexists.\n\ncloses gh-946", "commit_timestamp": "2011-11-02T19:46:07Z", "files": ["IPython/frontend/qt/console/mainwindow.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzphYTU0N2YzNzRhZDA5YTliNzMzMjUzNDkxOTM5Yjc1NjhjZmUwOWEy", "commit_message": "clarify close dialog on qtconsole\n\nNotes that kernels not started by the qtconsole will not be affected,\nand has singular message rather than 'all tabs' when only one tab\nexists.\n\ncloses gh-946", "commit_timestamp": "2011-11-02T19:46:07Z", "files": ["IPython/frontend/qt/console/mainwindow.py"]}], "labels": ["important", "qtconsole", "bug"], "created_at": "2011-10-30T00:43:38Z", "closed_at": "2011-11-02T19:49:13Z", "method": ["label"]}
{"issue_number": 939, "title": "ZMQShell always uses default profile", "body": "Starting the terminal client in Python 3 uses a python3 profile by default, so Python 3 commands are kept separate from the main sequence. Starting the Qt console or the HTML notebook, we get the 'default' (i.e. Python 2) profile.\n\nExplicity calling for another profile, e.g. with `ipython qtconsole --profile math` fails in Python 2.7 as well.\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU5NDQ2OjAyMGMxNzJjZDE2ODI2NmYzYzAzOTM4ODY1ZTNlYjE1MzdmNjI5NjM=", "commit_message": "%profile points to application value, not shell value\n\nalso add missing shell.profile_dir in ipkernel\n\ncloses gh-939", "commit_timestamp": "2011-11-01T20:41:57Z", "files": ["IPython/core/magic.py", "IPython/zmq/ipkernel.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmMzZDg4NWZhNjBlY2Y3ZWYyMjRhOTllMmFlMjBkODVmYmQwMWE2MWY=", "commit_message": "Merge pull request #964 from takluyver/default-profile\n\nPython 3 being fully supported, it is no longer relegated to a special profile.\r\nUsers of both Python 3 and Python 2 will now get the same default profile (history, config, etc.) in each.\r\n\r\nCloses gh-939, fixing the profile directory and magic in the IPython kernel.", "commit_timestamp": "2011-11-02T21:36:45Z", "files": ["IPython/core/application.py", "IPython/core/magic.py", "IPython/core/tests/test_profile.py", "IPython/zmq/ipkernel.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzplMjk0NTc0OWY3MTBmNDhmNWI1NzQ5MGIzYjFkNzY2YWUzMGJiYjky", "commit_message": "%profile points to application value, not shell value\n\nalso add missing shell.profile_dir in ipkernel\n\ncloses gh-939", "commit_timestamp": "2011-11-01T20:41:57Z", "files": ["IPython/core/magic.py", "IPython/zmq/ipkernel.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzoxMDljZjEzYzFjZjZlMzBmOTg4MDY3ZDk5ZjE3ZTk4OTAwNWQwMzAw", "commit_message": "Merge pull request #964 from takluyver/default-profile\n\nPython 3 being fully supported, it is no longer relegated to a special profile.\r\nUsers of both Python 3 and Python 2 will now get the same default profile (history, config, etc.) in each.\r\n\r\nCloses gh-939, fixing the profile directory and magic in the IPython kernel.", "commit_timestamp": "2011-11-02T21:36:45Z", "files": ["IPython/core/application.py", "IPython/core/magic.py", "IPython/core/tests/test_profile.py", "IPython/zmq/ipkernel.py"]}], "labels": ["important", "bug"], "created_at": "2011-10-28T19:36:15Z", "closed_at": "2011-11-02T21:36:48Z", "method": ["label", "regex"]}
{"issue_number": 918, "title": "IPython.frontend tests fail without tornado", "body": "frontend test fails without tornado in git head, it should probably be skipped instead.\n\nIPython/scripts/iptest IPython.frontend -v\n\n```\nFailure: ImportError (The IPython Notebook requires tornado >= 2.1.0) ... ERROR\nDo control sequences for clearing the console work? ... ok\nDo basic controls sequences for colors work? ... ok\nDo xterm-specific control sequences for colors work? ... ok\nDo control sequences for scrolling the buffer work? ... ok\nAre special characters processed correctly? ... ok\nDoes the CompletionLexer work for C/C++? ... ok\nDoes the CompletionLexer work for Python? ... ok\nDoes the generic kill ring work? ... ok\nDoes the Qt kill ring work? ... ok\nDoes the Qt kill ring maintain state with cursor movement? ... ok\nDoctest: IPython.frontend.terminal.interactiveshell ... ok\nDoctest: IPython.frontend.terminal.interactiveshell.TerminalInteractiveShell.magic_cpaste ... ok\n\n======================================================================\nERROR: Failure: ImportError (The IPython Notebook requires tornado >= 2.1.0)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib/pymodules/python2.7/nose/loader.py\", line 390, in loadTestsFromName\n    addr.filename, addr.module)\n  File \"/usr/lib/pymodules/python2.7/nose/importer.py\", line 39, in importFromPath\n    return self.importFromDir(dir_path, fqname)\n  File \"/usr/lib/pymodules/python2.7/nose/importer.py\", line 86, in importFromDir\n    mod = load_module(part_fqname, fh, filename, desc)\n  File \"/media/Linux-data/home/Packages/ipython/pkg/trunk/IPython/frontend/html/notebook/__init__.py\", line 8, in <module>\n    raise ImportError(msg)\nImportError: The IPython Notebook requires tornado >= 2.1.0\n\n----------------------------------------------------------------------\nRan 13 tests in 0.163s\n\nFAILED (errors=1)\n```\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU5NDQ2OmMzYmQzZGNlNzNhNmU0ODgxZjg2YmFmNDJlYTU0Y2YzZTIxMTBjODY=", "commit_message": "add wantDirectory to ipdoctest, so that directories will be checked for exclusion\n\nThis prevents ImportErrors raised in `__init__` checks from causing a failure when they should have been excluded.\n\ncloses gh-918", "commit_timestamp": "2011-11-02T20:36:20Z", "files": ["IPython/testing/plugin/ipdoctest.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmM5NTZjMjI2NTkxODdhMzE0OTUzYzlhNzA5OWQ3ZDM4NzY1ODE3OTU=", "commit_message": "add wantDirectory to ipdoctest, so that directories will be checked for exclusion\n\nThis prevents ImportErrors raised in `__init__` checks from causing a failure when they should have been excluded.\n\ncloses gh-918\ncloses gh-968", "commit_timestamp": "2011-11-10T03:25:11Z", "files": ["IPython/testing/plugin/ipdoctest.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzplMmQyZGU1YTc2MzU5MjQzY2U2Y2E3MDhlNWE1YjkxYjg0MmVhOWE4", "commit_message": "add wantDirectory to ipdoctest, so that directories will be checked for exclusion\n\nThis prevents ImportErrors raised in `__init__` checks from causing a failure when they should have been excluded.\n\ncloses gh-918\ncloses gh-968", "commit_timestamp": "2011-11-10T03:25:11Z", "files": ["IPython/testing/plugin/ipdoctest.py"]}], "labels": ["important", "bug", "testing"], "created_at": "2011-10-21T20:40:36Z", "closed_at": "2011-11-10T03:49:42Z", "method": ["label", "regex"]}
{"issue_number": 911, "title": "ipython crashes on startup if readline is missing", "body": "See log on https://gist.github.com/1302023\n", "commits": [{"node_id": "MDY6Q29tbWl0MjA2NTk3MTplNjg2NjA2NTk4MDNkZmM2N2IzZDA1ZTg5ZjhiMzAxM2Y2YTExY2Fl", "commit_message": "move hlen_before_cell into _replace_rlhist_multiline\n\nmake hlen_before_cell a class member and move all multiline\nhistory functionality into _replace_rlhist_multiline.\nCloses gh-911", "commit_timestamp": "2011-10-20T21:35:16Z", "files": ["IPython/frontend/terminal/interactiveshell.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjdjMGZmYTU5ZWFjMDFiYTZmODE2YzZiYWVjMGM3ODgyNTdmMmU0YzY=", "commit_message": "Merge pull request #929 from juliantaylor/multiline-history\n\nsome readline multiline-history fixes and tests\r\n\r\n* fixes crash when readline is absent (#911)\r\n* do not save input from e.g. raw_input in history\r\n* do not add empty or duplicate entries lines to the history.\r\n* add tests for _replace_rlhist_multiline\r\n* protect pyreadline from some incorrect assumptions of equivalence to regular readline\r\n\r\ncloses gh-911", "commit_timestamp": "2011-11-07T23:01:28Z", "files": ["IPython/core/interactiveshell.py", "IPython/frontend/terminal/interactiveshell.py", "IPython/frontend/terminal/tests/test_interactivshell.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjdjMGZmYTU5ZWFjMDFiYTZmODE2YzZiYWVjMGM3ODgyNTdmMmU0YzY=", "commit_message": "Merge pull request #929 from juliantaylor/multiline-history\n\nsome readline multiline-history fixes and tests\r\n\r\n* fixes crash when readline is absent (#911)\r\n* do not save input from e.g. raw_input in history\r\n* do not add empty or duplicate entries lines to the history.\r\n* add tests for _replace_rlhist_multiline\r\n* protect pyreadline from some incorrect assumptions of equivalence to regular readline\r\n\r\ncloses gh-911", "commit_timestamp": "2011-11-07T23:01:28Z", "files": ["IPython/core/interactiveshell.py", "IPython/frontend/terminal/interactiveshell.py", "IPython/frontend/terminal/tests/test_interactivshell.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo1OTUyYzU0YjIwZTBmMDcyNDA3NGFkNmIwNDEwMjEyZGM1NTY2ODk5", "commit_message": "move hlen_before_cell into _replace_rlhist_multiline\n\nmake hlen_before_cell a class member and move all multiline\nhistory functionality into _replace_rlhist_multiline.\nCloses gh-911", "commit_timestamp": "2011-10-20T21:35:16Z", "files": ["IPython/frontend/terminal/interactiveshell.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo2MDY0YzE1ZDNlN2Y0M2QxYTBmMzhmMjc4MDM4N2VjZDA0YzRmMGQw", "commit_message": "Merge pull request #929 from juliantaylor/multiline-history\n\nsome readline multiline-history fixes and tests\r\n\r\n* fixes crash when readline is absent (#911)\r\n* do not save input from e.g. raw_input in history\r\n* do not add empty or duplicate entries lines to the history.\r\n* add tests for _replace_rlhist_multiline\r\n* protect pyreadline from some incorrect assumptions of equivalence to regular readline\r\n\r\ncloses gh-911", "commit_timestamp": "2011-11-07T23:01:28Z", "files": ["IPython/core/interactiveshell.py", "IPython/frontend/terminal/interactiveshell.py", "IPython/frontend/terminal/tests/test_interactivshell.py"]}], "labels": ["important", "bug"], "created_at": "2011-10-20T19:17:20Z", "closed_at": "2011-11-07T23:01:33Z", "method": ["label"]}
{"issue_number": 908, "title": "bad user config shouldn't crash IPython", "body": "As described in more general #695.\n\nSteps to crash IPython:\n1. `$> ipython --colors bananaphone`\n\nMaking this part a new Issue, because it should block 0.12.\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU5NDQ2OjdlZDIxOWMyZjIxMThhZjk4NDE4MGEzZWI2YTcyZTE5ZDRhM2U1OWI=", "commit_message": "Show invalid config message on TraitErrors during initialization\n\nimplemented via @catch_config decorator\n\nNow, the event that was triggered by invalid app config (see `--log-level 5`) is triggered by bad config at any point during initialization.\n\nThis *will* catch TraitError bugs in IPython itself, but only during initialization.\n\ncloses gh-908", "commit_timestamp": "2011-10-22T18:35:20Z", "files": ["IPython/config/application.py", "IPython/core/application.py", "IPython/frontend/html/notebook/notebookapp.py", "IPython/frontend/qt/console/qtconsoleapp.py", "IPython/frontend/terminal/ipapp.py", "IPython/parallel/apps/baseapp.py", "IPython/parallel/apps/ipclusterapp.py", "IPython/parallel/apps/ipcontrollerapp.py", "IPython/parallel/apps/ipengineapp.py", "IPython/parallel/apps/iploggerapp.py", "IPython/zmq/ipkernel.py", "IPython/zmq/kernelapp.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzpjOWE2OWYwMzFjYjg3ZTFiMTcxNjUwYWEzODhmN2FlYThlODNjMWYw", "commit_message": "Show invalid config message on TraitErrors during initialization\n\nimplemented via @catch_config decorator\n\nNow, the event that was triggered by invalid app config (see `--log-level 5`) is triggered by bad config at any point during initialization.\n\nThis *will* catch TraitError bugs in IPython itself, but only during initialization.\n\ncloses gh-908", "commit_timestamp": "2011-10-22T18:35:20Z", "files": ["IPython/config/application.py", "IPython/core/application.py", "IPython/frontend/html/notebook/notebookapp.py", "IPython/frontend/qt/console/qtconsoleapp.py", "IPython/frontend/terminal/ipapp.py", "IPython/parallel/apps/baseapp.py", "IPython/parallel/apps/ipclusterapp.py", "IPython/parallel/apps/ipcontrollerapp.py", "IPython/parallel/apps/ipengineapp.py", "IPython/parallel/apps/iploggerapp.py", "IPython/zmq/ipkernel.py", "IPython/zmq/kernelapp.py"]}], "labels": ["important", "bug"], "created_at": "2011-10-20T16:48:19Z", "closed_at": "2011-10-29T04:14:02Z", "method": ["label"]}
{"issue_number": 907, "title": "Errors in custom completer functions can crash IPython", "body": "From a pandas bug report:\n\nhttps://github.com/wesm/pandas/pull/233#issuecomment-2469862\n\nWe should catch these errors and probably silence them unless the debug flag is on.\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU4NTE4OjJlMDFjODgxY2I5NzhmYTJiZDE2ZTFlNWY4YTFkMWQyOTAwY2I2ZTQ=", "commit_message": "Silence errors from custom attribute completer functions.\n\nCloses gh-907", "commit_timestamp": "2011-10-20T21:02:39Z", "files": ["IPython/core/completer.py", "IPython/core/tests/test_completer.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzpmZTdjMWRlZDFiNDgzNTExODI3YzI5NWQ3ZmU0YzU2NWE1Y2FiZDE0", "commit_message": "Silence errors from custom attribute completer functions.\n\nCloses gh-907", "commit_timestamp": "2011-10-20T21:02:39Z", "files": ["IPython/core/completer.py", "IPython/core/tests/test_completer.py"]}], "labels": ["bug"], "created_at": "2011-10-20T15:27:13Z", "closed_at": "2011-10-20T21:03:11Z", "method": ["label", "regex"]}
{"issue_number": 904, "title": "whos under pypy1.6", "body": "magic who command works, but 'whos' gives an error that has to do with numpy\n\n/IPython/core/magic.py in magic_whos(self, parameter_s) line 870\nAttributeError: 'module' object has no attribute 'ndarray'\n\nThis version of pypy has a trial version of numpy that only has 1d arrays, not ndarray.\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU5NDQ2Ojg3MTkzNTFlZDNkYjNjNzI3YzEzYTQzNzA0ZTdmNzIzNTg0ODhiNTI=", "commit_message": "Make import checks more explicit in %whos\n\nSince PyPy has a fake numpy, checking for 'numpy' is insufficient\n\nonly check if numpy/numeric in use, to prevent unnecessary imports\n\ncloses gh-904", "commit_timestamp": "2011-10-20T18:59:10Z", "files": ["IPython/core/magic.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjRjOTBlODYxNDBkMmNiODJlYTEwODk1MDUzNTRjODQ0ZWQ5YWRhNTc=", "commit_message": "Merge pull request #910 from minrk/pypynumpy\n\n%whos no longer imports numpy unconditionally, and no longer supports Numeric.\r\nThe import check explicitly looks for the ndarray object, rather than just numpy itself, which would fail in environments with broken numpy, such as PyPy.\r\n\r\ncloses gh-904", "commit_timestamp": "2011-10-25T21:29:03Z", "files": ["IPython/core/magic.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzoxYjM1NjFmZTJlNjUxYWZiOTU4ZTQ3NDJmMjgzMmZhYTljZGYyMDJh", "commit_message": "Make import checks more explicit in %whos\n\nSince PyPy has a fake numpy, checking for 'numpy' is insufficient\n\nonly check if numpy/numeric in use, to prevent unnecessary imports\n\ncloses gh-904", "commit_timestamp": "2011-10-20T18:59:10Z", "files": ["IPython/core/magic.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjRjOTBlODYxNDBkMmNiODJlYTEwODk1MDUzNTRjODQ0ZWQ5YWRhNTc=", "commit_message": "Merge pull request #910 from minrk/pypynumpy\n\n%whos no longer imports numpy unconditionally, and no longer supports Numeric.\r\nThe import check explicitly looks for the ndarray object, rather than just numpy itself, which would fail in environments with broken numpy, such as PyPy.\r\n\r\ncloses gh-904", "commit_timestamp": "2011-10-25T21:29:03Z", "files": ["IPython/core/magic.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjRjOTBlODYxNDBkMmNiODJlYTEwODk1MDUzNTRjODQ0ZWQ5YWRhNTc=", "commit_message": "Merge pull request #910 from minrk/pypynumpy\n\n%whos no longer imports numpy unconditionally, and no longer supports Numeric.\r\nThe import check explicitly looks for the ndarray object, rather than just numpy itself, which would fail in environments with broken numpy, such as PyPy.\r\n\r\ncloses gh-904", "commit_timestamp": "2011-10-25T21:29:03Z", "files": ["IPython/core/magic.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzpjMTY5Y2MxZWRiYzY4MmMxNDljZDc2YTA0MWVkNzhjMGEzMzRjZTZk", "commit_message": "Merge pull request #910 from minrk/pypynumpy\n\n%whos no longer imports numpy unconditionally, and no longer supports Numeric.\r\nThe import check explicitly looks for the ndarray object, rather than just numpy itself, which would fail in environments with broken numpy, such as PyPy.\r\n\r\ncloses gh-904", "commit_timestamp": "2011-10-25T21:29:03Z", "files": ["IPython/core/magic.py"]}], "labels": ["bug"], "created_at": "2011-10-20T05:23:41Z", "closed_at": "2011-10-25T21:29:05Z", "linked_pr_number": [904], "method": ["label"]}
{"issue_number": 900, "title": "Tab key should insert 4 spaces in qt console", "body": "Currently the tab key, when not completing, inserts a hard tab in the qt console.  That makes it harder to paste that code later into editors, and also causes other issues as discussed in #513.\n\nI'm tagging this as bug and not enhancement b/c tab-as-4-spaces is pretty much a universal python standard at this point, so the fact that we don't quite follow it in this context, should be seen as a bug.\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU4NTE4OjMzY2ZhZTgwYmI5YmNmNjEwMmFkYjMxNGNlNTZiNzM2ZGIwNzM4YTc=", "commit_message": "add 4-space soft-tabs to qtconsole\n\npressing tab inserts four spaces, so there should never be any '\\t' characters\ninserted by typing.\n\ncloses gh-900\ncloses gh-513", "commit_timestamp": "2011-10-20T18:17:51Z", "files": ["IPython/frontend/qt/console/console_widget.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzpjYzZkOTBjNjVkOTY3YjgxODQ0ZDgzMWY1YzIyYmQ2YjQ1MjhmNDAx", "commit_message": "add 4-space soft-tabs to qtconsole\n\npressing tab inserts four spaces, so there should never be any '\\t' characters\ninserted by typing.\n\ncloses gh-900\ncloses gh-513", "commit_timestamp": "2011-10-20T18:17:51Z", "files": ["IPython/frontend/qt/console/console_widget.py"]}], "labels": ["qtconsole", "bug"], "created_at": "2011-10-19T03:41:18Z", "closed_at": "2011-10-20T18:20:37Z", "method": ["label", "regex"]}
{"issue_number": 886, "title": "Notebook kernel crash when specifying --notebook-dir on commandline", "body": "Hi,\n\nI start a notebook server like this:\n\n<pre>\n$ ipython notebook --notebook-dir=\"/home/fwerner/Documents/Notebooks\" --pylab=inline\n</pre>\n\n\nAfter loading a notebook in my browser, the kernel dies instantly. This is related to the notebook-dir alias, which you can see from the traceback---here's the full console output:\n\n<pre>\n$ ipython notebook --notebook-dir=\"/home/fwerner/Documents/Notebooks\" --pylab=inline --log-level=DEBUG --debug\n[IPythonNotebookApp] Config changed:\n[IPythonNotebookApp] {'Application': {'log_level': 10}, 'IPKernelApp': {'pylab': u'inline'}, 'NotebookManager': {'notebook_dir': u'/home/fwerner/Documents/Notebooks'}}\n[IPythonNotebookApp] Using existing profile dir: u'/home/fwerner/.config/ipython/profile_default'\n[IPythonNotebookApp] Searching path [u'/home/fwerner/Development/ipython', u'/home/fwerner/.config/ipython/profile_default'] for config files\n[IPythonNotebookApp] Attempting to load config file: ipython_config.py\n[IPythonNotebookApp] Config file ipython_config.py not found\n[IPythonNotebookApp] Attempting to load config file: ipython_notebook_config.py\n[IPythonNotebookApp] Config file not found, skipping: ipython_notebook_config.py\n[IPythonNotebookApp] The port 8888 is already in use, trying another random port.\n[IPythonNotebookApp] The IPython Notebook is running at: http://127.0.0.1:8904\nWARNING:root:404 GET /static/mathjax/MathJax.js?config=TeX-AMS_HTML (127.0.0.1) 0.44ms\n[IPythonNotebookApp] Kernel started: e493215c-54f4-49a9-b8a9-a158ea272965\n[IPythonNotebookApp] Connecting to: tcp://127.0.0.1:48262\n[IPythonNotebookApp] Connecting to: tcp://127.0.0.1:49537\n[IPythonNotebookApp] Connecting to: tcp://127.0.0.1:37896\nWARNING: Unrecognized alias: 'notebook-dir', it will probably have no effect.Traceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"IPython/zmq/ipkernel.py\", line 777, in main\n    app.initialize()\n  File \"IPython/zmq/ipkernel.py\", line 710, in initialize\n    super(IPKernelApp, self).initialize(argv)\n  File \"IPython/zmq/kernelapp.py\", line 279, in initialize\n    super(KernelApp, self).initialize(argv)\n  File \"IPython/core/application.py\", line 306, in initialize\n    self.parse_command_line(argv)\n  File \"IPython/config/application.py\", line 406, in parse_command_line\n    config = loader.load_config()\n  File \"IPython/config/loader.py\", line 575, in load_config\n    self._convert_to_config()\n  File \"IPython/config/loader.py\", line 664, in _convert_to_config\n    sub_parser.load_config(self.extra_args)\n  File \"IPython/config/loader.py\", line 496, in load_config\n    self._exec_config_str(lhs, rhs)\n  File \"IPython/config/loader.py\", line 347, in _exec_config_str\n    exec exec_str in locals(), globals()\n  File \"<string>\", line 1\nSyntaxError: can't assign to operator\n</pre>\n\n\nThe SyntaxError is thrown by the (assembled) statement\n\n<pre>\nself.config.notebook-dir=u'/home/fwerner/Documents/Notebooks'\n</pre>\n\n\nIt seems to me that IPython shouldn't even try to run statements like this---or at least catch the SyntaxError and warn the user. But I think the real issue is that the notebook-dir alias isn't known at this point. Maybe it also doesn't have to be known, and the commandline argument should have been swallowed at an earlier stage?\n\nUnfortunately, I'm not familiar enough with the codebase to proceed further.\n\nCheers,\n  Felix\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU4NTE4OjExYmNhMjk0NzE5ZTEyNzM1NWNkYTM1YWY2NjFkOWJhZDMyMTM4ZTA=", "commit_message": "Don't let invalid aliases crash IPython\n\ne.g. `ipython --foo-bar=5` would raise a SyntaxError parsing the commmand-line, because `self.config.foo-bar=5` would be evaluated.\n\nSyntax Errors on the rhs were already protected, but they could get into the lhs via the alias syntax.\n\ncloses gh-886", "commit_timestamp": "2011-10-25T04:07:47Z", "files": ["IPython/config/loader.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzowNTI0Y2UzMTUyZWRlZmRjZDhkOGFkNDllMDFkOTE3YjVjNTgwNjZm", "commit_message": "Don't let invalid aliases crash IPython\n\ne.g. `ipython --foo-bar=5` would raise a SyntaxError parsing the commmand-line, because `self.config.foo-bar=5` would be evaluated.\n\nSyntax Errors on the rhs were already protected, but they could get into the lhs via the alias syntax.\n\ncloses gh-886", "commit_timestamp": "2011-10-25T04:07:47Z", "files": ["IPython/config/loader.py"]}], "labels": ["bug", "notebook"], "created_at": "2011-10-17T07:43:40Z", "closed_at": "2011-10-25T04:08:05Z", "method": ["label", "regex"]}
{"issue_number": 885, "title": "`ws-hostname` alias not recognized by notebook", "body": "When passing `--ws-hostname`, I'm getting this tb:\n\n<pre>\namirbar[junk]> ipython notebook --ip=* --ws-hostname=10.0.0.17\n[IPythonNotebookApp] Using existing profile dir: u'/home/fperez/.ipython/profile_default'\n[IPythonNotebookApp] WARNING: the notebook server is listening on all IP addresses but not using any encryption or authentication. This is highly insecure and not recommended.\n[IPythonNotebookApp] The IPython Notebook is running at: http://[all ip addresses on your system]:8888\n[IPythonNotebookApp] Kernel started: c4156598-9e6c-4fd9-9611-f3212785aaf4\n[IPythonNotebookApp] Connecting to: tcp://127.0.0.1:47250\n[IPythonNotebookApp] Connecting to: tcp://127.0.0.1:46985\n[IPythonNotebookApp] Connecting to: tcp://127.0.0.1:57152\nWARNING: Unrecognized alias: 'ws-hostname', it will probably have no effect.Traceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"/home/fperez/usr/lib/python2.7/site-packages/IPython/zmq/ipkernel.py\", line 777, in main\n    app.initialize()\n  File \"/home/fperez/usr/lib/python2.7/site-packages/IPython/zmq/ipkernel.py\", line 710, in initialize\n    super(IPKernelApp, self).initialize(argv)\n  File \"/home/fperez/usr/lib/python2.7/site-packages/IPython/zmq/kernelapp.py\", line 279, in initialize\n    super(KernelApp, self).initialize(argv)\n  File \"/home/fperez/usr/lib/python2.7/site-packages/IPython/core/application.py\", line 306, in initialize\n    self.parse_command_line(argv)\n  File \"/home/fperez/usr/lib/python2.7/site-packages/IPython/config/application.py\", line 406, in parse_command_line\n    config = loader.load_config()\n  File \"/home/fperez/usr/lib/python2.7/site-packages/IPython/config/loader.py\", line 575, in load_config\n    self._convert_to_config()\n  File \"/home/fperez/usr/lib/python2.7/site-packages/IPython/config/loader.py\", line 664, in _convert_to_config\n    sub_parser.load_config(self.extra_args)\n  File \"/home/fperez/usr/lib/python2.7/site-packages/IPython/config/loader.py\", line 496, in load_config\n    self._exec_config_str(lhs, rhs)\n  File \"/home/fperez/usr/lib/python2.7/site-packages/IPython/config/loader.py\", line 347, in _exec_config_str\n    exec exec_str in locals(), globals()\n  File \"<string>\", line 1\nSyntaxError: can't assign to operator\n</pre>\n\n\nThe kernel crashes as well, so right now listening on a public IP with fully working websockets seems to be busted, if I understand the mechanics correctly.  Unless I'm doing something wrong, I'm flagging this one as critical for 0.12...\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU4NTE4OjcxYWUzNTIyZDZjZWMzOGM2MjkxOWJkY2FiOWRiNTk2OTdkOTFjMWU=", "commit_message": "fix typo in stripping kernel args in nb and qt\n\ncloses #885", "commit_timestamp": "2011-10-17T02:56:47Z", "files": ["IPython/frontend/html/notebook/notebookapp.py", "IPython/frontend/qt/console/qtconsoleapp.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzplNDVlNDc0MDU0ZDY3OWM0YjRkOTA4ZGYzODZlZWMyZjhmOWYyODM4", "commit_message": "fix typo in stripping kernel args in nb and qt\n\ncloses #885", "commit_timestamp": "2011-10-17T02:56:47Z", "files": ["IPython/frontend/html/notebook/notebookapp.py", "IPython/frontend/qt/console/qtconsoleapp.py"]}], "labels": ["important", "bug", "notebook"], "created_at": "2011-10-17T02:41:11Z", "closed_at": "2011-10-17T02:57:56Z", "method": ["label"]}
{"issue_number": 880, "title": "Better error message if %paste fails", "body": "The `%paste` magic can try a number of options, but on Linux it depends on having Tkinter installed. As [reported](http://permalink.gmane.org/gmane.comp.python.ipython.user/6707) on the mailing list, if Tkinter is missing, the user gets a traceback and an uninformative `TryNext` exception. We should catch this and provide a more informative message.\n", "commits": [{"node_id": "MDY6Q29tbWl0OTAwNzAzMzplM2Q5YmYwMTUxMmVjYjAxZDg1M2EyYmJkYzMzYTVmMGIyYjJiOTUz", "commit_message": "Fix issue #880 - initialize TryNext with args and kwargs.\n\nPresents a message to the user along with the traceback prompting them to install tkinter.", "commit_timestamp": "2011-11-14T14:06:00Z", "files": ["IPython/core/hooks.py"]}], "labels": [], "created_at": "2011-10-15T19:48:47Z", "closed_at": "2011-11-21T23:12:00Z", "method": ["regex"]}
{"issue_number": 875, "title": "never build unicode error messages", "body": "we must never create exceptions with unicode error messages, because then `str(exc)`, `print exc`, and `\"%s\" % exc` will raise UnicodeEncodeErrors.\n\nAn example of one of these is path.get_py_filename, which creates an IOError with `%s` on a path that can be unicode. When in doubt, use `%r` when building exception messages.\n\nSee:\n\n```\n%pfile d\u00f8esn\u00f8texist\n```\n\nOr the output of any time we such an error might be raised, e.g:\n\n``` python\nIn [8]: raise IOError(\"file %s does not exist\" % u'\u00e9')\n---------------------------------------------------------------------------\nIOError                                   Traceback (most recent call last)\n/Users/minrk/dev/ip/mine/<ipython-input-8-1e82695b5095> in <module>()\n----> 1 raise IOError(\"file %s does not exist\" % u'\u00e9')\n\n<type 'str'>: (<type 'exceptions.UnicodeEncodeError'>, UnicodeEncodeError('ascii', u'file \\xe9 does not exist', 5, 6, 'ordinal not in range(128)'))\n```\n", "commits": [{"node_id": "MDY6Q29tbWl0MzU3NDU2Mjo1ZjRmYmVmNzA0ZDZjZDU5ODRkNGNlNzExNjY0MjVmMmE5YmU3ZTJl", "commit_message": "Fix for #875 Unicode Encoding Error", "commit_timestamp": "2012-02-28T20:34:20Z", "files": ["IPython/utils/path.py", "IPython/utils/tests/test_path.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmIyODAzOTEzMzkxMjA0Njc5NmY5YjA3ZjFhZDVhNTg5MTI4Y2NiM2M=", "commit_message": "Fix for #875 Unicode Encoding Error", "commit_timestamp": "2012-04-06T21:34:58Z", "files": ["IPython/utils/path.py", "IPython/utils/tests/test_path.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo3MmI0NGNmMDQ1OWQ5YjNmYTdkNzk4ZWUyM2VlZTI1NTk1YWNkMjkz", "commit_message": "Fix for #875 Unicode Encoding Error", "commit_timestamp": "2012-02-28T20:34:20Z", "files": ["IPython/utils/path.py", "IPython/utils/tests/test_path.py"]}], "labels": ["unicode", "bug"], "created_at": "2011-10-14T19:37:58Z", "closed_at": "2012-03-05T12:40:15Z", "method": ["label"]}
{"issue_number": 871, "title": "Notebook crashes if a profile is used", "body": "If any profile other than the default is used, the entire notebook blows up at the first cell execution, with this traceback:\n\n<pre>\n---------------------------------------------------------------------------\nAttributeError                            Traceback (most recent call last)\n/tmp/<string> in <module>()\n\n/home/fperez/usr/lib/python2.6/site-packages/IPython/zmq/ipkernel.pyc in main()\n    775     \"\"\"Run an IPKernel as an application\"\"\"\n    776     app = IPKernelApp.instance()\n--> 777     app.initialize()\n    778     app.start()\n    779 \n\n/home/fperez/usr/lib/python2.6/site-packages/IPython/zmq/ipkernel.pyc in initialize(self=<IPython.zmq.ipkernel.IPKernelApp object>, argv=None)\n    708     )\n    709     def initialize(self, argv=None):\n--> 710         super(IPKernelApp, self).initialize(argv)\n    711         self.init_shell()\n    712         self.init_extensions()\n\n/home/fperez/usr/lib/python2.6/site-packages/IPython/zmq/kernelapp.pyc in initialize(self=<IPython.zmq.ipkernel.IPKernelApp object>, argv=None)\n    276         self.init_session()\n    277         self.init_poller()\n--> 278         self.init_sockets()\n    279         # writing connection file must be *after* init_sockets\n    280         self.write_connection_file()\n\n/home/fperez/usr/lib/python2.6/site-packages/IPython/zmq/kernelapp.pyc in init_sockets(self=<IPython.zmq.ipkernel.IPKernelApp object>)\n    226             tail = os.path.basename(self.connection_file)\n    227             if self.profile != 'default':\n--> 228                 tail += \" --profile %s\" % self.profile_name\n    229         else:\n    230             tail = self.connection_file\n\nAttributeError: 'IPKernelApp' object has no attribute 'profile_name'\n</pre>\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU4NTE4OmZlYzRmN2U0Yjc2N2I5MTNkNTMxMWI2ZTI5Mjg0Y2U0MGM2ZDlkNzQ=", "commit_message": "fix kernel connection messsage with non-default profile\n\nprinting the connection message would crash the kernel, due to a typo\n\ncloses gh-871", "commit_timestamp": "2011-10-14T01:51:24Z", "files": ["IPython/zmq/kernelapp.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzpjYjM2NGE1MTU4NDNkMDQyMDkxMDJlM2Y1N2UyN2ZjNWQ5ZTRiYjc5", "commit_message": "fix kernel connection messsage with non-default profile\n\nprinting the connection message would crash the kernel, due to a typo\n\ncloses gh-871", "commit_timestamp": "2011-10-14T01:51:24Z", "files": ["IPython/zmq/kernelapp.py"]}], "labels": ["important", "bug", "notebook"], "created_at": "2011-10-14T01:19:20Z", "closed_at": "2011-10-14T01:52:28Z", "method": ["label"]}
{"issue_number": 870, "title": "zmq version detection", "body": "I'm trying to use the parallel ipython features, but it keeps exiting with:\n\n```\nImportError: IPython.parallel requires pyzmq/0MQ >= 2.1.4, you appear to have 2.1.10\n```\n\nObviously version 2.1.10 is later than 2.1.4. It fails because the comparison relies on the lexicographic ordering of strings (L28 of \n`IPython/parallel/__init__.py`):\n\n``` python\nelif zmq.__version__ < '2.1.4':                                                            \n    raise ImportError(\"IPython.parallel requires pyzmq/0MQ >= 2.1.4, you appear to have %s\"%zmq.__version__)  \n```\n\nThis could be fixed by changing the comparison to\n\n``` python\nelif map(int, zmq.__version__.split('.')) < [2,1,4]:                                                            \n    raise ImportError(\"IPython.parallel requires pyzmq/0MQ >= 2.1.4, you appear to have %s\"%zmq.__version__) \n```\n\nor something similar. There's a few other comparisons in that file that might need changing too, and a similar change needs to be made in `IPython/zmq/__init__.py`.\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU4NTE4OmY5Y2QxZGEzOGZlZDIyZjg4YjAyZmE4OWNmYmVlNzZmMDBjMDRlZTk=", "commit_message": "fix pyzmq check in setupext to handle 2.1.10\n\ncloses gh-870", "commit_timestamp": "2011-10-30T23:08:39Z", "files": ["setupext/setupext.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzpjNmY3YjJlZWU1MjhmNWFmNGVhZmIyYmQ5Njg3MmVjNDZmY2E3MTFh", "commit_message": "fix pyzmq check in setupext to handle 2.1.10\n\ncloses gh-870", "commit_timestamp": "2011-10-30T23:08:39Z", "files": ["setupext/setupext.py"]}], "labels": [], "created_at": "2011-10-14T00:41:43Z", "closed_at": "2011-10-30T23:11:24Z", "method": ["regex"]}
{"issue_number": 869, "title": "Tab completion of `~/` shows no output post 0.10.x", "body": "This is a regression: in 0.10.x, doing `cd ~/<TAB>` properly completed, but now we only complete if there's at least a letter added after the `/`.\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU4NTE4OjJkNjA3MTY3NjE0MjIxZDIwODgzNjE3YjAwNTI0Y2JiYjU3MmRiZTI=", "commit_message": "fix inappropriate str.replace in completer.expand_user\n\nThe replacement could catch extra matches, mangling the tilde_val.\n\nThis uses slicing instead, to prevent multiple replacements.\n\ncloses gh-869", "commit_timestamp": "2011-10-26T18:06:25Z", "files": ["IPython/core/completer.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzozMjQ1NDIxOWY4ZDY2NjRmYjU5MjgzMGZjN2YwOGU1MGE3ZjVlZTU5", "commit_message": "fix inappropriate str.replace in completer.expand_user\n\nThe replacement could catch extra matches, mangling the tilde_val.\n\nThis uses slicing instead, to prevent multiple replacements.\n\ncloses gh-869", "commit_timestamp": "2011-10-26T18:06:25Z", "files": ["IPython/core/completer.py"]}], "labels": ["bug", "regression", "tab-completion"], "created_at": "2011-10-13T20:26:14Z", "closed_at": "2011-10-26T18:06:31Z", "method": ["label"]}
{"issue_number": 852, "title": "Notebook should be saved before downloading", "body": "If a user works in a new notebook and clicks 'Download' without first having saved anything, they get an empty notebook.  We should either prompt to save, or automatically produce a save action, since otherwise it's pretty confusing.  Reported by @jdh2358.\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU4NTE4OjY4NmFjMzM0Y2FjZDM4MzYxNmRmZjk5NzY1MTkwYjFjNmI1ZDU0ODg=", "commit_message": "save before download-as\n\nuses `async : false`\n\ncloses #852\n\ndownload-as-py still unavailable.", "commit_timestamp": "2013-10-08T00:44:27Z", "files": ["IPython/html/services/notebooks/handlers.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmEwNjMxYTM1YWYyODUxYTAzYWIxODdhM2M5M2IyMWRlMDJmYWM1N2Y=", "commit_message": "save before download-as\n\nuses `async : false`\n\ncloses #852\n\ndownload-as-py still unavailable.", "commit_timestamp": "2013-10-08T23:47:44Z", "files": ["IPython/html/services/notebooks/handlers.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmJmNzJkMmZjNzcyNjRhNDgyZGM2OWNjNTFmNzdkYzY0OTI1NTU5NjY=", "commit_message": "save before download-as\n\nuses `async : false`\n\ncloses #852\n\ndownload-as-py still unavailable.", "commit_timestamp": "2013-10-17T21:09:15Z", "files": ["IPython/html/services/notebooks/handlers.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmJmNzJkMmZjNzcyNjRhNDgyZGM2OWNjNTFmNzdkYzY0OTI1NTU5NjY=", "commit_message": "save before download-as\n\nuses `async : false`\n\ncloses #852\n\ndownload-as-py still unavailable.", "commit_timestamp": "2013-10-17T21:09:15Z", "files": ["IPython/html/services/notebooks/handlers.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzphYThhMWIzOTAzNjUxMTMyZjcyYjYxNTA1ODQyMGY1NThhNDUwOTQw", "commit_message": "save before download-as\n\nuses `async : false`\n\ncloses #852\n\ndownload-as-py still unavailable.", "commit_timestamp": "2013-10-17T21:09:15Z", "files": ["IPython/html/services/notebooks/handlers.py"]}], "labels": ["bug", "notebook"], "created_at": "2011-10-10T19:53:28Z", "closed_at": "2013-10-23T01:45:31Z", "method": ["label"]}
{"issue_number": 849, "title": "Command line options to not override profile options", "body": "See http://mail.scipy.org/pipermail/ipython-user/2011-October/008549.html.  I don't have a full understanding of the issue, so I hope that nothing I say here is wrong.  If I run `ipython --colors=NoColor`, it doesn't work, because I have `c.TerminalInteractiveShell.colors ='Linux'` set in my profile (see https://github.com/asmeurer/dotfiles/blob/master/.ipython/profile_default/ipython_config.py).   To quote Min from the IPython mailing list\n\n```\nYes - this is a silly thing that we need to figure out. The 'colors' cl_arg sets InteractiveShell.colors.  You have set TerminalInteractiveShell.colors, which is a subclass, and thus takes precedence.  So when you have colors set in your config, and *also* at the command-line, you will be starting up IPython with config:\n\nc.InteractiveShell.colors = 'NoColor'\nc.TerminalInteractiveShell.colors = 'Linux'\n\nNow, if you change your config file to specify InteractiveShell.colors instead of TerminalInteractiveShell.colors, the cl-arg will properly override.\n\nWhat we should really do is adjust the cl-arg system, such that it maps somehow to all subclasses, or possibly just the lowest active subclass, so it always gets highest priority.\n```\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU5NDQ2OmQ3YTEwNTk5M2ZjNjM5ZjIwNWQ0NzRhN2M2YzEzZGM5ZTc5ODM0YjM=", "commit_message": "promote aliases and flags, to ensure they have priority over config files\n\nadd Application.flatten_flags() method, which adjusts the alias\nand flag dicts, such that they point to the subclass in the Application.classes list when passed to the argv parser.\n\nThis prevents TerminalInteractiveShell.colors in a config file overriding\n`--colors` on the command-line, which points to InteractiveShell.colors.\n\nFlattening is only done when the answer is unambiguous, so multiply inherited classes (e.g. Launchers in ipcluster) are not touched.\n\nalso remove now-obsolete manual workaround for this in IPClusterStart\n\ncloses gh-849", "commit_timestamp": "2011-10-10T23:45:50Z", "files": ["IPython/config/application.py", "IPython/config/tests/test_application.py", "IPython/parallel/apps/ipclusterapp.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmQyYWI2OTIzOWVhYzc5OGMyNjliOTFlNDIwZTE5MjRhYjhiYTU5ZDM=", "commit_message": "promote aliases and flags, to ensure they have priority over config files\n\nadd Application.flatten_flags() method, which adjusts the alias\nand flag dicts, such that they point to the subclass in the Application.classes list when passed to the argv parser.\n\nThis prevents TerminalInteractiveShell.colors in a config file overriding\n`--colors` on the command-line, which points to InteractiveShell.colors.\n\nFlattening is only done when the answer is unambiguous, so multiply inherited classes (e.g. Launchers in ipcluster) are not touched.\n\nalso remove now-obsolete manual workaround for this in IPClusterStart\n\ncloses gh-849", "commit_timestamp": "2011-10-13T23:18:07Z", "files": ["IPython/config/application.py", "IPython/config/tests/test_application.py", "IPython/parallel/apps/ipclusterapp.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzphMjE4NTNiNTM2NzNmYjk5NjBiZmI3MTg1NDhjM2U0M2IwZWZlODVi", "commit_message": "promote aliases and flags, to ensure they have priority over config files\n\nadd Application.flatten_flags() method, which adjusts the alias\nand flag dicts, such that they point to the subclass in the Application.classes list when passed to the argv parser.\n\nThis prevents TerminalInteractiveShell.colors in a config file overriding\n`--colors` on the command-line, which points to InteractiveShell.colors.\n\nFlattening is only done when the answer is unambiguous, so multiply inherited classes (e.g. Launchers in ipcluster) are not touched.\n\nalso remove now-obsolete manual workaround for this in IPClusterStart\n\ncloses gh-849", "commit_timestamp": "2011-10-13T23:18:07Z", "files": ["IPython/config/application.py", "IPython/config/tests/test_application.py", "IPython/parallel/apps/ipclusterapp.py"]}], "labels": [], "created_at": "2011-10-09T22:22:52Z", "closed_at": "2011-10-13T23:18:25Z", "method": ["regex"]}
{"issue_number": 846, "title": "Autoreload extension doesn't work with Python 3.2", "body": "The autoreload extension assumes that `mod.py` and `mod.pyc` files will exist in the same directory, but this is not true as of Python 3.2. See the details here:\n\nhttp://docs.python.org/py3k/whatsnew/3.2.html#pep-3147-pyc-repository-directories\n\nIt should be simple to use the new APIs, but it will need a little care to ensure it works under the old system as well.\n", "commits": [{"node_id": "MDY6Q29tbWl0MTIzNjAwMzo4YTg4ODRiMzk5Y2YzZjViNzYxMzEzYmYwZDQ0NmJhMjA0ZjJjODEw", "commit_message": "Make autoreload extension work on Python 3.\n\nSome changes for Python 3 in general, and some changes for the .pyc repository\ndirectories introduced in Python 3.2 (PEP 3147)\n\nCloses gh-846", "commit_timestamp": "2012-01-18T22:51:46Z", "files": ["IPython/extensions/autoreload.py", "IPython/extensions/tests/test_autoreload.py"]}, {"node_id": "MDY6Q29tbWl0NjU5NDQ2OmExN2UyNDIxN2I0ZTQyZTdiODA1Yjk1MzFhMjdhNmUyZTgyMjQ0NzU=", "commit_message": "Make autoreload extension work on Python 3.\n\nSome changes for Python 3 in general, and some changes for the .pyc repository\ndirectories introduced in Python 3.2 (PEP 3147)\n\nCloses gh-846", "commit_timestamp": "2012-01-28T21:14:42Z", "files": ["IPython/extensions/autoreload.py", "IPython/extensions/tests/test_autoreload.py"]}, {"node_id": "MDY6Q29tbWl0MjM0Mzk1OTplMjI3YTQ1ZWY2NThjN2M4MjIxODUxNDM0Y2MxNWU1ZDk0YjlhOTUy", "commit_message": "Make autoreload extension work on Python 3.\n\nSome changes for Python 3 in general, and some changes for the .pyc repository\ndirectories introduced in Python 3.2 (PEP 3147)\n\nCloses gh-846", "commit_timestamp": "2012-04-06T21:34:52Z", "files": ["IPython/extensions/autoreload.py", "IPython/extensions/tests/test_autoreload.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo0N2YyYTI1ZDc5NTdlOWVhZWQyM2ZmYzk5MzJlYTU2NTJlZWQwMzQ5", "commit_message": "Make autoreload extension work on Python 3.\n\nSome changes for Python 3 in general, and some changes for the .pyc repository\ndirectories introduced in Python 3.2 (PEP 3147)\n\nCloses gh-846", "commit_timestamp": "2012-01-18T22:51:46Z", "files": ["IPython/extensions/autoreload.py", "IPython/extensions/tests/test_autoreload.py"]}], "labels": ["bug"], "created_at": "2011-10-08T22:25:26Z", "closed_at": "2012-02-17T20:22:07Z", "method": ["label", "regex"]}
{"issue_number": 833, "title": "Crash python with matplotlib and unequal length arrays", "body": "The following code causes ipython to crash when imported with \"import breaker\"\n\n```\nbreaker.py\n--------------------------------------------------------------------\n\nimport numpy\nfrom mpl_toolkits.mplot3d import Axes3D\nimport matplotlib.pyplot as plt\n\n\nfig = plt.figure()\nax = fig.add_subplot(111, projection='3d')\n\nY = numpy.random.rand(20, 3)\n\nI = [2, 3, 5]\n# Error here: different length arrays for the arguements of scatter\nax.scatter(Y[I,0], Y[I,1], Y[:,2], c='r', marker='o')\n\n---------------------------------------------------------------------------------------------\n\nHere's the crash report\n\n\n***************************************************************************\n\nIPython post-mortem report\n\n{'commit_hash': '4eb31c8',\n 'commit_source': 'repository',\n 'ipython_path': '/usr/local/Cellar/python/2.7.2/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/IPython',\n 'ipython_version': '0.11',\n 'os_name': 'posix',\n 'platform': 'Darwin-11.1.0-x86_64-i386-64bit',\n 'sys_executable': '/usr/local/Cellar/python/2.7.2/Frameworks/Python.framework/Versions/2.7/Resources/Python.app/Contents/MacOS/Python',\n 'sys_platform': 'darwin',\n 'sys_version': '2.7.2 (default, Sep  3 2011, 01:14:13) \\n[GCC 4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2335.15.00)]'}\n\n***************************************************************************\n\n\n\n***************************************************************************\n\nCrash traceback:\n\n---------------------------------------------------------------------------\nTypeErrorPython 2.7.2: /usr/local/Cellar/python/2.7.2/Frameworks/Python.framework/Versions/2.7/Resources/Python.app/Contents/MacOS/Python\n                                                   Sat Oct  1 23:06:48 2011\nA problem occured executing Python code.  Here is the sequence of function\ncalls leading up to the error, with the most recent (innermost) call last.\n/System/Library/Frameworks/Python.framework/Versions/src/matplotlib/lib/matplotlib/artist.py in draw_wrapper(artist=<matplotlib.figure.Figure object>, renderer=<matplotlib.backends.backend_macosx.RendererMac instance>, *args=(), **kwargs={})\n     40         if artist.get_agg_filter() is not None:\n     41             renderer.start_filter()\n     42 \n     43 \n     44     def after(artist, renderer):\n     45 \n     46         if artist.get_agg_filter() is not None:\n     47             renderer.stop_filter(artist.get_agg_filter())\n     48 \n     49         if artist.get_rasterized():\n     50             renderer.stop_rasterizing()\n     51 \n     52     # the axes class has a second argument inframe for its draw method.\n     53     def draw_wrapper(artist, renderer, *args, **kwargs):\n     54         before(artist, renderer)\n---> 55         draw(artist, renderer, *args, **kwargs)\n        global draw = undefined\n        artist = <matplotlib.figure.Figure object at 0x1012ca510>\n        renderer = <matplotlib.backends.backend_macosx.RendererMac instance at 0x1038f14d0>\n        args = ()\n        kwargs = {}\n     56         after(artist, renderer)\n     57 \n     58     # \"safe wrapping\" to exactly replicate anything we haven't overridden above\n     59     draw_wrapper.__name__ = draw.__name__\n     60     draw_wrapper.__dict__ = draw.__dict__\n     61     draw_wrapper.__doc__  = draw.__doc__\n     62     draw_wrapper._supports_rasterization = True\n     63     return draw_wrapper\n     64 \n     65 \n     66 class Artist(object):\n     67     \"\"\"\n     68     Abstract base class for someone who renders into a\n     69     :class:`FigureCanvas`.\n     70     \"\"\"\n\n/System/Library/Frameworks/Python.framework/Versions/src/matplotlib/lib/matplotlib/figure.py in draw(self=<matplotlib.figure.Figure object>, renderer=<matplotlib.backends.backend_macosx.RendererMac instance>)\n    869             dsu.append((self.images[0].get_zorder(), draw_composite, []))\n    870 \n    871         # render the axes\n    872         for a in self.axes:\n    873             dsu.append( (a.get_zorder(), a.draw, [renderer]))\n    874 \n    875         # render the figure text\n    876         for a in self.texts:\n    877             dsu.append( (a.get_zorder(), a.draw, [renderer]))\n    878 \n    879         for a in self.legends:\n    880             dsu.append( (a.get_zorder(), a.draw, [renderer]))\n    881 \n    882         dsu.sort(key=itemgetter(0))\n    883         for zorder, func, args in dsu:\n--> 884             func(*args)\n        func = <bound method Axes3DSubplot.draw of <matplotlib.axes.Axes3DSubplot object at 0x1038f33d0>>\n        args = [<matplotlib.backends.backend_macosx.RendererMac instance at 0x1038f14d0>]\n    885 \n    886         renderer.close_group('figure')\n    887 \n    888         self._cachedRenderer = renderer\n    889 \n    890         self.canvas.draw_event(renderer)\n    891 \n    892     def draw_artist(self, a):\n    893         \"\"\"\n    894         draw :class:`matplotlib.artist.Artist` instance *a* only --\n    895         this is available only after the figure is drawn\n    896         \"\"\"\n    897         assert self._cachedRenderer is not None\n    898         a.draw(self._cachedRenderer)\n    899 \n\n/System/Library/Frameworks/Python.framework/Versions/src/matplotlib/lib/mpl_toolkits/mplot3d/axes3d.py in draw(self=<matplotlib.axes.Axes3DSubplot object>, renderer=<matplotlib.backends.backend_macosx.RendererMac instance>)\n    174 \n    175     def draw(self, renderer):\n    176         # draw the background patch\n    177         self.axesPatch.draw(renderer)\n    178         self._frameon = False\n    179 \n    180         # add the projection matrix to the renderer\n    181         self.M = self.get_proj()\n    182         renderer.M = self.M\n    183         renderer.vvec = self.vvec\n    184         renderer.eye = self.eye\n    185         renderer.get_axis_position = self.get_axis_position\n    186 \n    187         # Calculate projection of collections and zorder them\n    188         zlist = [(col.do_3d_projection(renderer), col) \\\n--> 189                  for col in self.collections]\n        col = <mpl_toolkits.mplot3d.art3d.Patch3DCollection object at 0x1031842d0>\n        self.collections = [<mpl_toolkits.mplot3d.art3d.Patch3DCollection object at 0x1031842d0>]\n    190         zlist.sort()\n    191         zlist.reverse()\n    192         for i, (z, col) in enumerate(zlist):\n    193             col.zorder = i\n    194 \n    195         # Calculate projection of patches and zorder them\n    196         zlist = [(patch.do_3d_projection(renderer), patch) \\\n    197                 for patch in self.patches]\n    198         zlist.sort()\n    199         zlist.reverse()\n    200         for i, (z, patch) in enumerate(zlist):\n    201             patch.zorder = i\n    202 \n    203         if self._axis3don:\n    204             axes = (self.xaxis, self.yaxis, self.zaxis)\n\n/System/Library/Frameworks/Python.framework/Versions/src/matplotlib/lib/mpl_toolkits/mplot3d/art3d.py in do_3d_projection(self=<mpl_toolkits.mplot3d.art3d.Patch3DCollection object>, renderer=<matplotlib.backends.backend_macosx.RendererMac instance>)\n    300         self._sort_zpos = val\n    301 \n    302     def set_3d_properties(self, zs, zdir):\n    303         offsets = self.get_offsets()\n    304         if len(offsets) > 0:\n    305             xs, ys = zip(*self.get_offsets())\n    306         else:\n    307             xs = [0] * len(zs)\n    308             ys = [0] * len(zs)\n    309         self._offsets3d = juggle_axes(xs, ys, zs, zdir)\n    310         self._facecolor3d = self.get_facecolor()\n    311         self._edgecolor3d = self.get_edgecolor()\n    312 \n    313     def do_3d_projection(self, renderer):\n    314         xs, ys, zs = self._offsets3d\n--> 315         vxs, vys, vzs, vis = proj3d.proj_transform_clip(xs, ys, zs, renderer.M)\n        vxs = undefined\n        vys = undefined\n        vzs = undefined\n        vis = undefined\n        global proj3d.proj_transform_clip = <function proj_transform_clip at 0x10390bc08>\n        xs = (0.36216574028503989, 0.88035402678580754, 0.65598466579038128)\n        ys = (0.71548712817891746, 0.37297349593277895, 0.42046023574406355)\n        zs = array([ 0.29958288,  0.58103946,  0.48966569,  0.94888056,  0.81767847,\n        0.88920983,  0.04094774,  0.39601193,  0.80754427,  0.21510721,\n        0.25184705,  0.94699405,  0.3357232 ,  0.98106279,  0.30822945,\n        0.53472046,  0.81359326,  0.27006985,  0.57919094,  0.25529147])\n        renderer.M = array([[  1.67125623,   1.45979591,   0.        ,  -1.83274964],\n       [ -0.48245012,   1.26422034,   0.92119087,  -0.85903352],\n       [  0.        ,   0.        ,   0.        , -10.        ],\n       [ -0.83562812,   2.18969387,  -0.5318498 ,   9.5992225 ]])\n    316         #FIXME: mpl allows us no way to unset the collection alpha value\n    317         self._alpha = None\n    318         self.set_facecolors(zalpha(self._facecolor3d, vzs))\n    319         self.set_edgecolors(zalpha(self._edgecolor3d, vzs))\n    320         PatchCollection.set_offsets(self, zip(vxs, vys))\n    321 \n    322         if vzs.size > 0 :\n    323             return min(vzs)\n    324         else :\n    325             return np.nan\n    326 \n    327     def draw(self, renderer):\n    328         self._old_draw(renderer)\n    329 \n    330 def patch_collection_2d_to_3d(col, zs=0, zdir='z'):\n\n/System/Library/Frameworks/Python.framework/Versions/src/matplotlib/lib/mpl_toolkits/mplot3d/proj3d.py in proj_transform_clip(xs=(0.36216574028503989, 0.88035402678580754, 0.65598466579038128), ys=(0.71548712817891746, 0.37297349593277895, 0.42046023574406355), zs=array([ 0.29958288,  0.58103946,  0.48966569,  0...81359326,  0.27006985,  0.57919094,  0.25529147]), M=array([[  1.67125623,   1.45979591,   0.        ...2812,   2.18969387,  -0.5318498 ,   9.5992225 ]]))\n    188 \n    189 def proj_transform(xs, ys, zs, M):\n    190     \"\"\"\n    191     Transform the points by the projection matrix\n    192     \"\"\"\n    193     vec = vec_pad_ones(xs, ys, zs)\n    194     return proj_transform_vec(vec, M)\n    195 \n    196 def proj_transform_clip(xs, ys, zs, M):\n    197     \"\"\"\n    198     Transform the points by the projection matrix\n    199     and return the clipping result\n    200     returns txs,tys,tzs,tis\n    201     \"\"\"\n    202     vec = vec_pad_ones(xs, ys, zs)\n--> 203     return proj_transform_vec_clip(vec, M)\n        global proj_transform_vec_clip = <function proj_transform_vec_clip at 0x10390ba28>\n        vec = array([(0.36216574028503989, 0.88035402678580754, 0.65598466579038128),\n       (0.71548712817891746, 0.37297349593277895, 0.42046023574406355),\n       [ 0.29958288  0.58103946  0.48966569  0.94888056  0.81767847  0.88920983\n  0.04094774  0.39601193  0.80754427  0.21510721  0.25184705  0.94699405\n  0.3357232   0.98106279  0.30822945  0.53472046  0.81359326  0.27006985\n  0.57919094  0.25529147],\n       [ 1.  1.  1.]], dtype=object)\n        M = array([[  1.67125623,   1.45979591,   0.        ,  -1.83274964],\n       [ -0.48245012,   1.26422034,   0.92119087,  -0.85903352],\n       [  0.        ,   0.        ,   0.        , -10.        ],\n       [ -0.83562812,   2.18969387,  -0.5318498 ,   9.5992225 ]])\n    204 transform = proj_transform\n    205 \n    206 def proj_points(points, M):\n    207     return zip(*proj_trans_points(points, M))\n    208 \n    209 def proj_trans_points(points, M):\n    210     xs, ys, zs = zip(*points)\n    211     return proj_transform(xs, ys, zs, M)\n    212 \n    213 def proj_trans_clip_points(points, M):\n    214     xs, ys, zs = zip(*points)\n    215     return proj_transform_clip(xs, ys, zs, M)\n    216 \n    217 def test_proj_draw_axes(M, s=1):\n    218     import pylab\n\n/System/Library/Frameworks/Python.framework/Versions/src/matplotlib/lib/mpl_toolkits/mplot3d/proj3d.py in proj_transform_vec_clip(vec=array([(0.36216574028503989, 0.88035402678580754...0.25529147],\n       [ 1.  1.  1.]], dtype=object), M=array([[  1.67125623,   1.45979591,   0.        ...2812,   2.18969387,  -0.5318498 ,   9.5992225 ]]))\n    145     b = -2*(zfront*zback)/(zfront-zback)\n    146     return np.array([[1,0,0,0],\n    147                      [0,1,0,0],\n    148                      [0,0,a,b],\n    149                      [0,0,-1,0]\n    150                      ])\n    151 \n    152 def proj_transform_vec(vec, M):\n    153     vecw = np.dot(M, vec)\n    154     w = vecw[3]\n    155     # clip here..\n    156     txs, tys, tzs = vecw[0]/w, vecw[1]/w, vecw[2]/w\n    157     return txs, tys, tzs\n    158 \n    159 def proj_transform_vec_clip(vec, M):\n--> 160     vecw = np.dot(M, vec)\n        vecw = undefined\n        global np.dot = <built-in function dot>\n        M = array([[  1.67125623,   1.45979591,   0.        ,  -1.83274964],\n       [ -0.48245012,   1.26422034,   0.92119087,  -0.85903352],\n       [  0.        ,   0.        ,   0.        , -10.        ],\n       [ -0.83562812,   2.18969387,  -0.5318498 ,   9.5992225 ]])\n        vec = array([(0.36216574028503989, 0.88035402678580754, 0.65598466579038128),\n       (0.71548712817891746, 0.37297349593277895, 0.42046023574406355),\n       [ 0.29958288  0.58103946  0.48966569  0.94888056  0.81767847  0.88920983\n  0.04094774  0.39601193  0.80754427  0.21510721  0.25184705  0.94699405\n  0.3357232   0.98106279  0.30822945  0.53472046  0.81359326  0.27006985\n  0.57919094  0.25529147],\n       [ 1.  1.  1.]], dtype=object)\n    161     w = vecw[3]\n    162     # clip here..\n    163     txs, tys, tzs = vecw[0]/w, vecw[1]/w, vecw[2]/w\n    164     tis = (vecw[0] >= 0) * (vecw[0] <= 1) * (vecw[1] >= 0) * (vecw[1] <= 1)\n    165     if np.sometrue(tis):\n    166         tis =  vecw[1] < 1\n    167     return txs, tys, tzs, tis\n    168 \n    169 def inv_transform(xs, ys, zs, M):\n    170     iM = linalg.inv(M)\n    171     vec = vec_pad_ones(xs, ys, zs)\n    172     vecr = np.dot(iM, vec)\n    173     try:\n    174         vecr = vecr/vecr[3]\n    175     except OverflowError:\n\nTypeError: can't multiply sequence by non-int of type 'float'\n\n***************************************************************************\n\nHistory of session input:import breakerimport breakerimport breakerimport breakerhelp(numpy.random.rand)import breaker\n*** Last line of input (may not be in above history):\nimport breaker\n\n```\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU4NTE4OjQ5M2Y2ZDRiNGU1ODY2NDcyNDc2OWVhOTQ3YmE2ODdlNTlhM2VjNWM=", "commit_message": "Merge pull request #1008 from minrk/excepthook\n\nUse a much more restrained crash handler by default.\r\n\r\nNow the excepthook shows a regular traceback, with a brief message about reporting bugs and how to enable to the big crash handler.  Our previous, extremely verbose crash handler can still be activated via `%config Application.verbose_crash=True`, so we can debug real crashes or ask users for extra detail easily.\r\n\r\nSmall fixes along the way:\r\n\r\n* current Application added to configurables list, for use in %config.\r\n\r\n* email addresses in full crash reports changed to ipython-dev, so they don't go straight to individual users.\r\n\r\nShould close #695, and ameliorate #833 (doesn't fix the bug, but the message is more sensible).", "commit_timestamp": "2011-11-20T10:38:18Z", "files": ["IPython/core/application.py", "IPython/core/crashhandler.py", "IPython/frontend/terminal/ipapp.py", "IPython/parallel/apps/baseapp.py", "IPython/zmq/ipkernel.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzpkMGUyYzQ0NjI4MmY2ODExZDg3NTJiNjc2MzNlOTFjYzg4OGM3YWNh", "commit_message": "Merge pull request #1008 from minrk/excepthook\n\nUse a much more restrained crash handler by default.\r\n\r\nNow the excepthook shows a regular traceback, with a brief message about reporting bugs and how to enable to the big crash handler.  Our previous, extremely verbose crash handler can still be activated via `%config Application.verbose_crash=True`, so we can debug real crashes or ask users for extra detail easily.\r\n\r\nSmall fixes along the way:\r\n\r\n* current Application added to configurables list, for use in %config.\r\n\r\n* email addresses in full crash reports changed to ipython-dev, so they don't go straight to individual users.\r\n\r\nShould close #695, and ameliorate #833 (doesn't fix the bug, but the message is more sensible).", "commit_timestamp": "2011-11-20T10:38:18Z", "files": ["IPython/core/application.py", "IPython/core/crashhandler.py", "IPython/frontend/terminal/ipapp.py", "IPython/parallel/apps/baseapp.py", "IPython/zmq/ipkernel.py"]}], "labels": ["bug"], "created_at": "2011-10-01T22:22:56Z", "closed_at": "2011-11-20T10:41:46Z", "method": ["label"]}
{"issue_number": 822, "title": "Unicode bug in Itpl when expanding shell variables in syscalls with !", "body": "found this today during a presentation, dumping quickly...\n\n<pre>\nIn [35]: files\nOut[35]: \n['pics:',\n '83547885.jpg',\n '',\n 'ppt:',\n 'Aiguille du Midi.pps',\n 'Ca\\xc3\\xb1o Cristales.pps',\n 'parejas disparejas.ppt',\n 'Underwater.pps',\n '',\n 'pub:',\n 'image_summary.py',\n 'stained_glass_barcelona.png',\n 'trapezoid_demo.py',\n 'trapezoid.py',\n 'trap.py',\n 'trap.py~']\n\nIn [36]: for f in files:\n   ....:     !echo $f\n   ....:     \npics:\n83547885.jpg\n\nppt:\nAiguille du Midi.pps\n---------------------------------------------------------------------------\nUnicodeDecodeError                        Traceback (most recent call last)\n/home/fperez/tmp/<ipython-input-36-df6db386b8e9> in <module>()\n      1 for f in files:\n----> 2     get_ipython().system(u\"echo $f\")\n      3 \n\n/home/fperez/usr/lib/python2.6/site-packages/IPython/core/interactiveshell.pyc in system_raw(self, cmd)\n   1999         # a non-None value would trigger :func:`sys.displayhook` calls.\n\n   2000         # Instead, we store the exit_code in user_ns.\n\n-> 2001         self.user_ns['_exit_code'] = os.system(self.var_expand(cmd, depth=2))\n   2002 \n   2003     # use piped system by default, because it is better behaved\n\n\n/home/fperez/usr/lib/python2.6/site-packages/IPython/core/interactiveshell.pyc in var_expand(self, cmd, depth)\n   2473                           sys._getframe(depth+1).f_locals # locals\n   2474                           )\n-> 2475         return py3compat.str_to_unicode(str(res), res.codec)\n   2476 \n   2477     def mktempfile(self, data=None, prefix='ipython_edit_'):\n\n/home/fperez/usr/lib/python2.6/site-packages/IPython/external/Itpl/_Itpl.pyc in __str__(self)\n    240     def __str__(self):\n    241         \"\"\"Evaluate and substitute the appropriate parts of the string.\"\"\"\n--> 242         return self._str(self.globals,self.locals)\n    243 \n    244     def __repr__(self):\n\n/home/fperez/usr/lib/python2.6/site-packages/IPython/external/Itpl/_Itpl.pyc in _str(self, glob, loc)\n    197             if live: app(str(eval(chunk,glob,loc)))\n    198             else: app(chunk)\n--> 199         out = ''.join(result)\n    200         try:\n    201             return str(out)\n\nUnicodeDecodeError: 'ascii' codec can't decode byte 0xc3 in position 2: ordinal not in range(128)\n</pre>\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU4NTE4OjMxYWIyM2YyOGNjN2MyY2MwMGI4OWNiNTU3YmRlNDRlMGEyOTA1ZDI=", "commit_message": "Add failing test for #822, will be fixed next", "commit_timestamp": "2011-11-20T22:51:13Z", "files": ["IPython/core/tests/test_interactiveshell.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjA5Yzk5NTJmMzMwZjk0MDBkOTUxZTM2MTJhYjc4ODIxZjUwMjU1ODY=", "commit_message": "Merge pull request #1020 from takluyver/dollar-formatter\n\nDollar formatter for ! shell calls.\r\n\r\nThis uses a subclass of `FullEvalFormatter` for filling in variables in shell commands like `!echo $spam`, instead of Itpl.\r\n\r\nI've retained the `{foo}` style standard formatting for complex expressions, so it can be picked up by the more powerful built in parser. `$foo` works for names and attribute access.\r\n\r\nFullEvalFormatter now always outputs unicode, even if you gave it a bytes string. This avoids problems when you mix 8-bit non-ascii strings and unicode (which e.g. `StringIO.StringIO` suffers from).\r\n\r\nCloses #822 (test was added in 31ab23f).", "commit_timestamp": "2011-11-20T22:53:58Z", "files": ["IPython/core/interactiveshell.py", "IPython/utils/tests/test_text.py", "IPython/utils/text.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmRkYjNhMGZiNDdmMjVlYmQwNjQ4MmMzYmYzMzI5MjI0NTQ3MWJhZjM=", "commit_message": "String in test for #822 was meant to be a bytestring, fixes it.", "commit_timestamp": "2011-11-20T23:27:19Z", "files": ["IPython/core/tests/test_interactiveshell.py"]}], "labels": ["important", "unicode", "bug"], "created_at": "2011-09-29T18:35:05Z", "closed_at": "2011-11-20T22:54:00Z", "method": ["label", "regex"]}
{"issue_number": 810, "title": "cleanup utils.path.get_home_dir", "body": "We have lots of manual code in `utils.path.get_home_dir()`, but most of it is either duplicate or inferior to `os.path.expanduser('~')`.\n\nI don't know about the failure cases of the builtin func, but ours is easily broken with:\n\n``` bash\n$> unset HOME\n$> ipython\n\nTraceback (most recent call last):\n    ...\nIPython.utils.path.HomeDirError: Undefined $HOME, IPython cannot proceed.\n```\n\n`os.path.expanduser()`, on the other hand, still works in this case because it falls back on the password db if HOME is unset, rather than falling back on HOME in a subprocess, which is also removed by the above `unset`.  It also probably makes a better choice on Windows, about which we have had issues.\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU4NTE4OjM1MWM4ZmM0MzM0YTI2NmE4ZTcwYzg0MWU1OGFmZThiZmEwZjUxZWE=", "commit_message": "Merge pull request #998 from minrk/homedir\n\ndefer to stdlib os.path.expanduser('~') for path.get_home_dir()\r\n\r\nfrozen env still comes first, and My Documents registry query is fallback on Windows, but in all normal cases, expanduser is used, which has $HOME as first priority.\r\n\r\nIPython also no longer considers finding no writable home dir as a fatal error.\r\n\r\ncloses #810\r\ncloses #747\r\ncloses #970", "commit_timestamp": "2011-11-24T02:44:14Z", "files": ["IPython/core/interactiveshell.py", "IPython/utils/path.py", "IPython/utils/tests/test_path.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzpjMGY4NjcxMzQ5NGMwZGU5ODQ5YmM1OTUyNzZhOWIyNjg0MjU5MThm", "commit_message": "Merge pull request #998 from minrk/homedir\n\ndefer to stdlib os.path.expanduser('~') for path.get_home_dir()\r\n\r\nfrozen env still comes first, and My Documents registry query is fallback on Windows, but in all normal cases, expanduser is used, which has $HOME as first priority.\r\n\r\nIPython also no longer considers finding no writable home dir as a fatal error.\r\n\r\ncloses #810\r\ncloses #747\r\ncloses #970", "commit_timestamp": "2011-11-24T02:44:14Z", "files": ["IPython/core/interactiveshell.py", "IPython/utils/path.py", "IPython/utils/tests/test_path.py"]}], "labels": [], "created_at": "2011-09-20T21:35:50Z", "closed_at": "2011-11-24T02:44:16Z", "method": ["regex"]}
{"issue_number": 808, "title": "Ctrl+C during %reset confirm message crash Qtconsole", "body": "if magic %reset is entered in the QtCOnsole and one press Ctrl+C while the confirmation message is on screen , the QtConsole crash, not on the clasic IPython Console\n\n```\n    /Users/matthiasbussonnier/ipython/IPython/frontend/qt/console/frontend_widget.p\n        339         def callback(line):\n        340             self.kernel_manager.stdin_channel.input(line)\n    --> 341         self._readline(msg['content']['prompt'], callback=callback)\n        342 \n        343     def _handle_kernel_died(self, since_last_heartbeat):\n```\n\nDon't know if it is linked but issue #348 (%reset doesn't reset prompt number) is still unresolved for me.\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU4NTE4OmFmZWFkZmNjODRiZmM2YjJkNWU2NjQyOTQzNzI1ZTViMDgzMzY2NGY=", "commit_message": "various small fixes in qtconsole\n\n* Don't crash on second stdin request, because it's possible for\n  multiple stdin_requests to come in succession (e.g. first was interrupted)\n* fix status=abort->aborted typo, and handle aborted executions properly\n\ncloses gh-808", "commit_timestamp": "2011-10-24T23:30:13Z", "files": ["IPython/frontend/qt/console/frontend_widget.py", "IPython/frontend/qt/console/ipython_widget.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo3Y2YyNmRlZTRjYmFmYjQxOTlkZjgxYmU1ZGY0ZDY0NzMwODcwOGJk", "commit_message": "various small fixes in qtconsole\n\n* Don't crash on second stdin request, because it's possible for\n  multiple stdin_requests to come in succession (e.g. first was interrupted)\n* fix status=abort->aborted typo, and handle aborted executions properly\n\ncloses gh-808", "commit_timestamp": "2011-10-24T23:30:13Z", "files": ["IPython/frontend/qt/console/frontend_widget.py", "IPython/frontend/qt/console/ipython_widget.py"]}], "labels": ["qtconsole", "bug"], "created_at": "2011-09-20T17:39:07Z", "closed_at": "2011-10-24T23:30:21Z", "method": ["label"]}
{"issue_number": 800, "title": "Timing scripts with run -t -N <N> fails on report output", "body": "Timing script execution fails in IPython 0.11 in combination with Python 2.7.2 due to a formatting problem in the output, when requesting multiple script executions with  `run -t -N <N>`:\n\n```\n/opt/local/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/IPython/core/magic.pyc in magic_run(self, parameter_s, runner, file_finder)\n   1695                                 print \"\\nIPython CPU timings (estimated):\"\n   1696                                 print \"Total runs performed:\",nruns\n-> 1697                                 print \"  Times  : %10.2f    %10.2f\" % ('Total','Per run')\n   1698                                 print \"  User   : %10.2f s, %10.2f s.\" % (t_usr,t_usr/nruns)\n   1699                                 print \"  System : %10.2f s, %10.2f s.\" % (t_sys,t_sys/nruns)\n```\n\nThe problem seems to be that strings are passed to float format specifiers on line 1697. In IPython 0.10.1, the corresponding line read\n\n```\nprint \"  Times : %10s    %10s\" % ('Total','Per run')\n```\n", "commits": [{"node_id": "MDY6Q29tbWl0MjU1NzI3NDplZjAzZjg1YzgzMDQ2N2QxNjNkMzVlZDQ3Y2Q5MTNiOWVmYTFkYWNk", "commit_message": "fixed issue #800", "commit_timestamp": "2011-10-11T18:35:49Z", "files": ["IPython/core/magic.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjNjZDIxMTAxZWEwNjRkMDZkY2U3ODA5OWQ4Nzg1YjA4MDM3N2QzZmY=", "commit_message": "Merge pull request #859 from djv/master\n\nFix for issue #800", "commit_timestamp": "2011-10-11T18:57:41Z", "files": ["IPython/core/magic.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzowNGZlZjgwOGEzMWQ0YmEzNWRlMzc3MjIzZDZlY2UzMTQ3NmNlYWMw", "commit_message": "fixed issue #800", "commit_timestamp": "2011-10-11T18:35:49Z", "files": ["IPython/core/magic.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo4ZDA1MWVlNmIwOTllNzMxNWYwODE1Yzk5OWU5NTcxMTcxN2M5YjM0", "commit_message": "Merge pull request #859 from djv/master\n\nFix for issue #800", "commit_timestamp": "2011-10-11T18:57:41Z", "files": ["IPython/core/magic.py"]}], "labels": ["bug"], "created_at": "2011-09-18T10:37:18Z", "closed_at": "2011-10-11T18:57:57Z", "method": ["label", "regex"]}
{"issue_number": 786, "title": "from __future__ import unicode_literals does not work", "body": "# Works in the Python console\n\nWhen calling `from __future__ import unicode_literals` in the standard python console, the result is as follows:\n\n``` python\n>>> len('\u00e9') # standard Python: strings are byte strings\n2\n>>> from __future__ import unicode_literals\n>>> len('\u00e9') # strings are now unicode strings:\n1\n```\n# Does not work in IPython\n\nIn IPython, it doesn't work:\n\n``` python\nIn [1]: from __future__ import unicode_literals\n\nIn [2]: len('\u00e9')\nOut[2]: 2\n```\n# Does not work In IPython via the config file either\n\nIt does not work either when the future import is placed inside the `ipython_config.py` file:\n\n``` python\nc.InteractiveShellApp.exec_lines = ['from __future__ import division, unicode_literals' ]\n```\n\nThe problem remains:\n\n``` python\nIn [1]: len('\u00e9')\nOut[1]: 2\n```\n", "commits": [{"node_id": "MDY6Q29tbWl0MjI2NjU5Mzo0MmUyNDg1NTZhZWFmOTJiOWI1YzI4NWZlYTBjMmMyNzdlNjZiMmNj", "commit_message": "TST: add future unicode_literals test (#786)", "commit_timestamp": "2011-09-14T05:45:50Z", "files": ["IPython/core/tests/test_interactiveshell.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjU0ZTY3YzNkZmNmNzVhYTRhOWQ3NmUyODU3NTBjNzEzNWI0MzBkNDk=", "commit_message": "Merge pull request #790 from olivierverdier/future_unicode_test\n\nTST: add future unicode_literals test (#786)", "commit_timestamp": "2011-09-15T10:13:56Z", "files": ["IPython/core/tests/test_interactiveshell.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo3NmQyMjRkNmRiMTJkMWQ1YTcxYWQ3ZWIxM2M4OGI0NDg0ODRhOTVi", "commit_message": "TST: add future unicode_literals test (#786)", "commit_timestamp": "2011-09-14T05:45:50Z", "files": ["IPython/core/tests/test_interactiveshell.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzphY2VkMjNiZTRmODQzYzk0YTg0N2RkZjFjYTU1ZDUzZDBkNjkzZTIx", "commit_message": "Merge pull request #790 from olivierverdier/future_unicode_test\n\nTST: add future unicode_literals test (#786)", "commit_timestamp": "2011-09-15T10:13:56Z", "files": ["IPython/core/tests/test_interactiveshell.py"]}], "labels": ["unicode", "bug"], "created_at": "2011-09-13T07:53:52Z", "closed_at": "2011-09-13T22:07:41Z", "method": ["label", "regex"]}
{"issue_number": 777, "title": "print(\u2026, sep=\u2026) raises SyntaxError", "body": "With IPython 0.11 (Mac OS X Lion, installed via Fink) and Python 2.7, the print() function raises a strange SyntaxError:\n\n```\nIn [2]: from __future__ import print_function\nIn [3]: print(\"Helloe\", \"lkj\", sep=\"lkj\")\n  File \"<ipython-input-3-ff000ce1a53b>\", line 1\n    print(\"Helloe\", \"lkj\", sep=\"lkj\")\n                          ^\nSyntaxError: invalid syntax\n```\n\nThe name print seems to be correctly defined:\n\n```\nIn [6]: print?\nType:       builtin_function_or_method\nBase Class: <type 'builtin_function_or_method'>\nString Form:<built-in function print>\nNamespace:  Python builtin\nDocstring:\nprint(value, ..., sep=' ', end='\\n', file=sys.stdout)\n\nPrints the values to a stream, or to sys.stdout by default.\nOptional keyword arguments:\nfile: a file-like object (stream); defaults to the current sys.stdout.\nsep:  string inserted between values, default a space.\nend:  string appended after the last value, default a newline.\n```\n\nI'm not sure whether this matters, but the failure happens with both autocall on and off.\n", "commits": [{"node_id": "MDY6Q29tbWl0MTIzNjAwMzplNzgzYjFjZjA5MzFmY2UxYTBkYTQ4NTRiYmZmNDFiNjdlNjFmNDI2", "commit_message": "Parse user code to AST using compiler flags.\n\nCloses gh-777.", "commit_timestamp": "2011-09-12T22:45:31Z", "files": ["IPython/core/compilerop.py", "IPython/core/interactiveshell.py", "IPython/core/tests/test_interactiveshell.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmU3ODNiMWNmMDkzMWZjZTFhMGRhNDg1NGJiZmY0MWI2N2U2MWY0MjY=", "commit_message": "Parse user code to AST using compiler flags.\n\nCloses gh-777.", "commit_timestamp": "2011-09-12T22:45:31Z", "files": ["IPython/core/compilerop.py", "IPython/core/interactiveshell.py", "IPython/core/tests/test_interactiveshell.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzpmODJlNjlhODRlNjE3OThkMzI1YmI1YjZjYWM3ODRhMmQ5ZjNkZTA0", "commit_message": "Parse user code to AST using compiler flags.\n\nCloses gh-777.", "commit_timestamp": "2011-09-12T22:45:31Z", "files": ["IPython/core/compilerop.py", "IPython/core/interactiveshell.py", "IPython/core/tests/test_interactiveshell.py"]}], "labels": ["bug"], "created_at": "2011-09-08T09:14:17Z", "closed_at": "2011-09-12T23:23:28Z", "method": ["label"]}
{"issue_number": 773, "title": "check_security_dir() and check_pid_dir() fail on network filesystem", "body": "For testing purposes and quick setup, I use SSHFS as a simple network filesystem. On Linux and Mac OSX there is FUSE SSHFS available. On Windows there's Dokan SSHFS. \nI use SSHFS because Samba and NFS share were leading to incorrect uid/gid mapping. At least for Mac OSX and Ubuntu is was possble to avoid these problems by using SSHFS.\n\nWhen starting ipengine on Windows, IPython executes check_security_dir() and check_pid_dir() which both try to set the permissions using chmod to 0700. This fails in my setup. After commenting out the offending lines in core/profiledir.py ipengine works.\n\nIt would be nice to be able to configure the permission setup.\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU4NTE4OmZiZDgyYmRmMDRiN2ZiYTJlMDUxNzExZmMyMzlhNzY5Y2NkOWNhOWI=", "commit_message": "Prevents crash on some systems where chmod fails (e.g. sshfs on Windows).\n\nAlso make ProfileDir a LoggingConfigurable, so it can log the new message\n\ncloses gh-773", "commit_timestamp": "2011-10-25T19:57:52Z", "files": ["IPython/core/profiledir.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo4N2NjMGI0YmFiNzQ1NDMxYmM4MWVjYWFmZTUyMDQ3YTI1MWZkNjAz", "commit_message": "Prevents crash on some systems where chmod fails (e.g. sshfs on Windows).\n\nAlso make ProfileDir a LoggingConfigurable, so it can log the new message\n\ncloses gh-773", "commit_timestamp": "2011-10-25T19:57:52Z", "files": ["IPython/core/profiledir.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjZlY2M0NjZmNDU3MTkxMzQ3OTE3MmQ5NzRhNmRkOGJlYTU2NTg5NDE=", "commit_message": "Merge pull request #734 from rkern/fix-windows-quotes\n\nAllow %magic argument filenames with spaces to be specified with quotes under win32", "commit_timestamp": "2011-08-29T15:57:46Z", "files": ["IPython/core/magic.py", "IPython/testing/globalipapp.py", "IPython/testing/tools.py", "IPython/utils/path.py", "IPython/utils/tests/test_path.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjZlY2M0NjZmNDU3MTkxMzQ3OTE3MmQ5NzRhNmRkOGJlYTU2NTg5NDE=", "commit_message": "Merge pull request #734 from rkern/fix-windows-quotes\n\nAllow %magic argument filenames with spaces to be specified with quotes under win32", "commit_timestamp": "2011-08-29T15:57:46Z", "files": ["IPython/core/magic.py", "IPython/testing/globalipapp.py", "IPython/testing/tools.py", "IPython/utils/path.py", "IPython/utils/tests/test_path.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzpmMzFiOTZlMzVhZWM3NTA2MmY1YzBlY2E1YjY0YjI5ZTJhYThjMTk3", "commit_message": "Merge pull request #734 from rkern/fix-windows-quotes\n\nAllow %magic argument filenames with spaces to be specified with quotes under win32", "commit_timestamp": "2011-08-29T15:57:46Z", "files": ["IPython/core/magic.py", "IPython/testing/globalipapp.py", "IPython/testing/tools.py", "IPython/utils/path.py", "IPython/utils/tests/test_path.py"]}], "labels": [], "created_at": "2011-09-07T15:23:35Z", "closed_at": "2011-10-25T19:58:18Z", "linked_pr_number": [773], "method": ["regex"]}
{"issue_number": 767, "title": "non-ascii in __doc__ string crashes qtconsole kernel when showing tooltip", "body": "If there is a regular str object with non-ascii characers in a **doc** string. Then the kernel crashes when showing a tooltip for that object.  Using master ee9e1d9.\n\nExample run the script in https://gist.github.com/1198484\n\ntyping a( at a prompt will show the tooltip\n\ntyping b( at a prompt will crash the kernel\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU5NDQ2OjZjYzQxZWNiMzE1MmVkMDU1MGZmMjU3MjcyNjMxOTBhMDdlNTI1YmQ=", "commit_message": "Don't treat bytes objects as json-safe\n\ncloses gh-767", "commit_timestamp": "2011-09-06T19:23:54Z", "files": ["IPython/utils/jsonutil.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjZjYzQxZWNiMzE1MmVkMDU1MGZmMjU3MjcyNjMxOTBhMDdlNTI1YmQ=", "commit_message": "Don't treat bytes objects as json-safe\n\ncloses gh-767", "commit_timestamp": "2011-09-06T19:23:54Z", "files": ["IPython/utils/jsonutil.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo0OGRlMWYyZDFmZjdmMjY0OWU3NGJhMDk1NzJmZWM0YWNhOWVjNzli", "commit_message": "Don't treat bytes objects as json-safe\n\ncloses gh-767", "commit_timestamp": "2011-09-06T19:23:54Z", "files": ["IPython/utils/jsonutil.py"]}], "labels": ["unicode", "qtconsole", "bug"], "created_at": "2011-09-06T18:18:18Z", "closed_at": "2011-09-06T21:06:22Z", "method": ["label"]}
{"issue_number": 760, "title": "Windows: test runner fails if repo path contains spaces", "body": "It is common in Windows XP installations for the home dir to be in \"Documents and Settings\". If the ipython repo is in the home dir, then the test runner will fail.\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU4NTE4OmJiNDQ4OGFiN2M3OTA5ZWEwY2EwZmZhZDExMzZjNzMyNDE0NzI4OWI=", "commit_message": "Merge pull request #2046 from jstenar/iptest-unicode\n\niptest unicode\r\n\r\n- fix space in path issue for iptest when using --with-xunit\r\n- fix unicode issue in path for iptest\r\n\r\ncloses #760", "commit_timestamp": "2012-06-27T22:16:30Z", "files": ["IPython/testing/iptest.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzpiYWIxZGZjZTRjNTAxMzU1YWZhNDk0NTRkODNkZDFlOTY1NGE1Mjdj", "commit_message": "Merge pull request #2046 from jstenar/iptest-unicode\n\niptest unicode\r\n\r\n- fix space in path issue for iptest when using --with-xunit\r\n- fix unicode issue in path for iptest\r\n\r\ncloses #760", "commit_timestamp": "2012-06-27T22:16:30Z", "files": ["IPython/testing/iptest.py"]}], "labels": ["windows", "bug", "testing"], "created_at": "2011-09-04T22:17:52Z", "closed_at": "2012-06-27T22:16:31Z", "method": ["label", "regex"]}
{"issue_number": 755, "title": "qtconsole ipython widget's execute_file fails if filename contains spaces or quotes", "body": "(All platforms)\n\nThis routine is already a hack, I think only necessary because of remaining issues with backslash handling in Windows, but while it's here, is there any reason not to simply escape any double quotes in the filename (for non-Windows platforms) and wrap the whole thing in double quotes (for all platforms)?\n", "commits": [{"node_id": "MDY6Q29tbWl0NjcwOTU5OjNjY2I4ZWVlYTQ2YTViODYwNzcxMDJiOTczZTQxN2Y5YmE1OGFhYzc=", "commit_message": "BUG: Improve hack. Issue #755. execute_file fails if filename has spaces", "commit_timestamp": "2011-09-05T18:34:28Z", "files": ["IPython/frontend/qt/console/ipython_widget.py"]}, {"node_id": "MDY6Q29tbWl0NjcwOTU5OmViZmE5NDZlZTgwZDQ4ZWNmYmRlM2FmZjk1OTc4MzM0NmNmMTkwOGU=", "commit_message": "BUG: Issue #755 qt IPythonWidget.execute_file fails if filename contains single and double quotes", "commit_timestamp": "2011-12-08T00:47:58Z", "files": ["IPython/frontend/qt/console/ipython_widget.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmVkZjU5NjFhYjU2MjJiMmY1MDM4MzNlMjhiYTM1MjZiOGQxOTBmNTk=", "commit_message": "BUG: Issue #755 qt IPythonWidget.execute_file fails if filename contains single and double quotes", "commit_timestamp": "2011-12-12T22:01:10Z", "files": ["IPython/frontend/qt/console/ipython_widget.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmIyNGM5ZDI4MjI2MTIwZDBjNDc4OWYxNDZlNjM1MDI5YjZlYzZjMDE=", "commit_message": "Merge PR #1122 (IPythonWidget.execute_file)\n\nFixes escaped filename in IPythonWidget.execute_file, when it contains\nspaces and/or quotes.\n\ncloses #755\ncloses #1122", "commit_timestamp": "2011-12-12T22:02:21Z", "files": ["IPython/frontend/qt/console/ipython_widget.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzpiMGRkYzg2YzllOWI0NDYyZmZkOWI1M2UzYzRjZDk3NjY5YzU4YTk2", "commit_message": "BUG: Improve hack. Issue #755. execute_file fails if filename has spaces", "commit_timestamp": "2011-09-05T18:34:28Z", "files": ["IPython/frontend/qt/console/ipython_widget.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo4MmMwZDM1MDA0NzBmYjVkZThhMWZiNjdjZDllNjY4NGVmMzM0ZjY2", "commit_message": "BUG: Issue #755 qt IPythonWidget.execute_file fails if filename contains single and double quotes", "commit_timestamp": "2011-12-12T22:01:10Z", "files": ["IPython/frontend/qt/console/ipython_widget.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo1OTI1MjU3YjM3NTRmZjQ4YmVkMzBhZjU0MjNlMDZjM2JkMzliYzcx", "commit_message": "Merge PR #1122 (IPythonWidget.execute_file)\n\nFixes escaped filename in IPythonWidget.execute_file, when it contains\nspaces and/or quotes.\n\ncloses #755\ncloses #1122", "commit_timestamp": "2011-12-12T22:02:21Z", "files": ["IPython/frontend/qt/console/ipython_widget.py"]}], "labels": ["qtconsole", "bug"], "created_at": "2011-09-02T23:08:20Z", "closed_at": "2011-12-12T22:04:59Z", "method": ["label", "regex"]}
{"issue_number": 749, "title": "IPython.parallel test failure under Windows 7 and XP", "body": "(running either from master, or with Brian's tornado fix)\n\n<pre>\nIPython test group: IPython.parallel\n.......................................................F.....S.................................S\n======================================================================\nFAIL: test_after (IPython.parallel.tests.test_lbview.TestLoadBalancedView)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"c:\\users\\jmarch\\ipython\\IPython\\parallel\\tests\\test_lbview.py\", line 129, in test_after\n    self.assertTrue(ar2.started > ar.completed)\nAssertionError: False is not true\n    'False is not true' = self._formatMessage('False is not true', \"%s is not true\" % safe_repr(False))\n>>  raise self.failureException('False is not true')\n----------------------------------------------------------------------\nRan 96 tests in 60.590s\nFAILED (SKIP=2, failures=1)\n</pre>\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU4NTE4OjkzNzkyMzFjNTY2NjhkMDNiZDdhYmJkZjYwNGE3Njk0MjQyNDdkM2E=", "commit_message": "relax timestamp comparison from \\ge to \\geq in test\n\nin parallel.tests.test_lbview.test_after\n\ncloses #749", "commit_timestamp": "2011-10-17T23:17:53Z", "files": ["IPython/parallel/tests/test_lbview.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzphNjdlYzRmZjVmMGVjNjg0YzkxOGUwOWRlMDY4YjkyODFlOWM4NDEy", "commit_message": "relax timestamp comparison from \\ge to \\geq in test\n\nin parallel.tests.test_lbview.test_after\n\ncloses #749", "commit_timestamp": "2011-10-17T23:17:53Z", "files": ["IPython/parallel/tests/test_lbview.py"]}], "labels": ["windows", "bug", "parallel", "testing"], "created_at": "2011-08-30T18:46:42Z", "closed_at": "2011-10-17T23:18:13Z", "method": ["label"]}
{"issue_number": 735, "title": "Images missing from XML/SVG export (for me)", "body": "When I use --pylab=inline and produce a very simple notebook with one image, both forms of HTML output work fine. But in the generated XML/SVG I get a message \"Couldn't find image 8538394984452\". I would guess that the backend is generating PNGs and not SVGs, and that the \"Save as XML/HTML\" function is not going back and regenerating them all. Asking matplotlib to generate an SVG and save it to disk yields a perfectly good SVG.\n\nFurther details: OS is Ubuntu Natty, ipython is 0.11, zeromq is 2.1.7, pyzmq is 2.1.7, all compiled and installed in my user environment. All other software is Natty standard. Machine is a core i3 laptop, ipython was run as \"ipython qtconsole --pylab=inline\".\n\nETA: I can't figure out how to either attach the broken XML notebook or get github to quote it (in spite of github's claim to use markdown). But there's not much to see; just some imports and a plot(arange(10),arange(10)), followed by the above message.\n", "commits": [{"node_id": "MDY6Q29tbWl0MzU3NDUzNDpjN2UxOTBkYWI0Nzg3NWE5NThjYTAyMmVhOTUzZTZiZWQ4NGIyMzhk", "commit_message": "Fixed #735.  More useful error message in html output", "commit_timestamp": "2012-05-17T19:00:58Z", "files": ["IPython/frontend/qt/console/rich_ipython_widget.py"]}, {"node_id": "MDY6Q29tbWl0MzU3NDUzNDpkOGJiZDcxZjBkMTQzZDFhM2NhMGEwYmJkZWU3ODY0ZGY4YTEwYTQw", "commit_message": "Added a warning dialog box when attempting to convert a PNG to SVG (#735)", "commit_timestamp": "2012-05-17T19:00:58Z", "files": ["IPython/frontend/qt/console/rich_ipython_widget.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmM3ZTE5MGRhYjQ3ODc1YTk1OGNhMDIyZWE5NTNlNmJlZDg0YjIzOGQ=", "commit_message": "Fixed #735.  More useful error message in html output", "commit_timestamp": "2012-05-17T19:00:58Z", "files": ["IPython/frontend/qt/console/rich_ipython_widget.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmI0YTNlZDQ0Yjk3Yjc0N2RkZTQ2MGNhZmY4ZmQ2ZGZiZWI5MDc3Nzk=", "commit_message": "Merge pull request #1449 from icmurray/master\n\nFix for bug #735 : Images missing from XML/SVG export", "commit_timestamp": "2012-05-21T21:08:21Z", "files": ["IPython/frontend/qt/console/rich_ipython_widget.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzpkZDVlNmI3Mzg4NDgwODQwNTljOGExNjE4ZjBmNjM4MjZjMzk2YTBh", "commit_message": "Fixed #735.  More useful error message in html output", "commit_timestamp": "2012-05-17T19:00:58Z", "files": ["IPython/frontend/qt/console/rich_ipython_widget.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo5MjNmYmRmMWQ2ODk5MTdkYzZiYjAwMjEzODAzZWE4YzBhYmVhOWQw", "commit_message": "Added a warning dialog box when attempting to convert a PNG to SVG (#735)", "commit_timestamp": "2012-05-17T19:00:58Z", "files": ["IPython/frontend/qt/console/rich_ipython_widget.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzphOTcwZDY3NDdhOGYwZjA2NDAyNmFlNzU2Y2NlN2M0NWE2MWY1YWY3", "commit_message": "Merge pull request #1449 from icmurray/master\n\nFix for bug #735 : Images missing from XML/SVG export", "commit_timestamp": "2012-05-21T21:08:21Z", "files": ["IPython/frontend/qt/console/rich_ipython_widget.py"]}], "labels": ["qtconsole"], "created_at": "2011-08-27T02:38:57Z", "closed_at": "2012-05-21T21:08:22Z", "method": ["regex"]}
{"issue_number": 724, "title": "crash - ipython qtconsole, %quickref", "body": "I start ipython (both  0.11 and cloned from gitub (90e6e7afd62a598b76472862a4eea7a504cbf9b5) )\n\non Scientific Linux 6.0 as\nipython qtconsole\n\nIf I type %quickref, it crashes on the following line, with \n\n```\n   at_end = len(cursor.selectedText().strip()) == 0\n```\n\nAttributeError: 'NoneType' object has no attribute 'strip'\n\nafter that, I see an infinite set of messages:\nQCoreApplication::exec: The event loop is already running\n\nAs requested, I've mailed the crash report to fperez.net\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU5NDQ2OmJlM2U3ZWQ0ZDQyYmNlNWU4MjAxNTYwMjBlZTE5ZTY0Njc4N2Q3MGM=", "commit_message": "version check Qt bindings in external.qt\n\nrequire PySide >= 1.0.3 or PyQt4 >= 4.7\n\ncloses gh-724", "commit_timestamp": "2011-08-24T22:42:00Z", "files": ["IPython/external/qt.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjZjZjQ5NWM1MjZjNTcyMWY4YWQyZTVmNjQ3OGZlYTUzNzY0YzM5OTY=", "commit_message": "Merge pull request #725 from minrk/i724\n\ndon't assume cursor.selectedText() is a string\r\n\r\ncloses gh-724\r\ncloses gh-655", "commit_timestamp": "2011-09-09T21:28:09Z", "files": ["IPython/external/qt.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo2OGI2MjJiODMwZGZiMGI2YzcwNWVkY2IyNGU4MzNmN2RiOGE1MmQy", "commit_message": "version check Qt bindings in external.qt\n\nrequire PySide >= 1.0.3 or PyQt4 >= 4.7\n\ncloses gh-724", "commit_timestamp": "2011-08-24T22:42:00Z", "files": ["IPython/external/qt.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzphYzZlZWI0MGE2MTQwODMzZWJiNWI1ZWFmNTI2MThjNDVjZmMzYWNk", "commit_message": "Merge pull request #725 from minrk/i724\n\ndon't assume cursor.selectedText() is a string\r\n\r\ncloses gh-724\r\ncloses gh-655", "commit_timestamp": "2011-09-09T21:28:09Z", "files": ["IPython/external/qt.py"]}], "labels": ["qtconsole", "bug"], "created_at": "2011-08-23T22:10:31Z", "closed_at": "2011-09-09T21:28:12Z", "method": ["label"]}
{"issue_number": 719, "title": "Better support Pypy", "body": "With pypy 1.6, ipython 0.10.2 works reasonably well, but current master completely fails to even start, with this error:\n\n<pre>\nOriginal exception was:\nTraceback (most recent call last):\n  File \"app_main.py\", line 53, in run_toplevel\n  File \"/home/fperez/usr/bin//ipython\", line 7, in <module>\n    launch_new_instance()\n  File \"/home/fperez/usr/lib/python2.6/site-packages/IPython/frontend/terminal/ipapp.py\", line 385, in launch_new_instance\n    app.initialize()\n  File \"/home/fperez/usr/lib/python2.6/site-packages/IPython/frontend/terminal/ipapp.py\", line 299, in initialize\n    self.init_shell()\n  File \"/home/fperez/usr/lib/python2.6/site-packages/IPython/frontend/terminal/ipapp.py\", line 319, in init_shell\n    ipython_dir=self.ipython_dir)\n  File \"/home/fperez/usr/lib/python2.6/site-packages/IPython/config/configurable.py\", line 295, in instance\n    inst = cls(*args, **kwargs)\n  File \"/home/fperez/usr/lib/python2.6/site-packages/IPython/frontend/terminal/interactiveshell.py\", line 113, in __init__\n    user_global_ns=user_global_ns, custom_exceptions=custom_exceptions\n  File \"/home/fperez/usr/lib/python2.6/site-packages/IPython/core/interactiveshell.py\", line 388, in __init__\n    self.init_history()\n  File \"/home/fperez/usr/lib/python2.6/site-packages/IPython/core/interactiveshell.py\", line 1399, in init_history\n    self.history_manager = HistoryManager(shell=self, config=self.config)\n  File \"/home/fperez/usr/lib/python2.6/site-packages/IPython/core/history.py\", line 127, in __init__\n    self.new_session()\n  File \"/home/fperez/usr/lib/python2.6/site-packages/IPython/core/history.py\", line 154, in new_session\n    self.session_number = cur.lastrowid\n  File \"/home/fperez/usr/lib/python2.6/site-packages/IPython/utils/traitlets.py\", line 302, in __set__\n    new_value = self._validate(obj, value)\n  File \"/home/fperez/usr/lib/python2.6/site-packages/IPython/utils/traitlets.py\", line 310, in _validate\n    return self.validate(obj, value)\n  File \"/home/fperez/usr/lib/python2.6/site-packages/IPython/utils/traitlets.py\", line 873, in validate\n    self.error(obj, value)\n  File \"/home/fperez/usr/lib/python2.6/site-packages/IPython/utils/traitlets.py\", line 333, in error\n    raise TraitError(e)\nTraitError: The 'session_number' trait of a HistoryManager instance must be an integer, but a value of 590L <type 'long'> was specified.\n</pre>\n\n\nWe should look into making the traits type checks be more pypy-friendly, if possible.  Pypy now has preliminary numpy support, so it's starting to become slowly a contender for scientific use.\n", "commits": [{"node_id": "MDY6Q29tbWl0MTIzNjAwMzo0ZDVkNDZmYTZkYTE2NGM3MzZlMDYzOGUxMGQzNjNiZDFjYmQ5MTgz", "commit_message": "Use casting trait for session number in history, so IPython will start on PyPy.\n\nCloses gh-719", "commit_timestamp": "2011-08-22T18:22:52Z", "files": ["IPython/core/history.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzpiZWJlNDBiNDE2ZjNmNmM1M2RmYjYyMjYwYzRjMWZjZDE5NTJiNmVj", "commit_message": "Use casting trait for session number in history, so IPython will start on PyPy.\n\nCloses gh-719", "commit_timestamp": "2011-08-22T18:22:52Z", "files": ["IPython/core/history.py"]}], "labels": [], "created_at": "2011-08-22T03:03:57Z", "closed_at": "2011-09-09T22:04:36Z", "method": ["regex"]}
{"issue_number": 710, "title": "unwanted unicode passed to args", "body": "(N00b to python and iPython)\n\nWindows, python2.7, iPython 0.11\n\nWhen using \"run\" with args, the receiving program gets unicode, not vanilla strings.  This was not the case under 0.1 and is still not the case when python is run from the windows command line (i.e.when not using iPython).  \n\nExample:  optional arg is a string that looks like a list: 'abc,def'.  The receiving proc now gets u'abc,def', which when split() becomes a tuple (u'abc', u'def').  This is a problem for me because the string representation of the tuple is now different than it used to be (it includes the 'u'), so using the string as a key to a shelf stored before the change does not work.  (That is, the shelf was made with key \"('abc', 'def')\" under 0.10, but now I'm trying to find \"(u'abc', u'def')\" under iPython 0.11 and cannot.)\n\nThe lack of default backward compatibility is forcing me to insulate my  code with str(<arg>).  Is there some setting to calm down the use of unicode?\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU5NDQ2OjYyNWZmODE5NzcxOGM4ODZjYzNmMmZjOWM4MjgwYjk2NzFiMmI3NWI=", "commit_message": "don't inject unicode into sys.argv\n\nProtects %run and `ipython script.py` from getting unicode sys.argv on Python 2\n\ncloses #710", "commit_timestamp": "2011-10-18T20:59:15Z", "files": ["IPython/core/magic.py", "IPython/core/shellapp.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjcxZDNkMTg2YjgzZTg0NDllYzM5Y2ZjMWZmMzE1NmFlNGZlM2I4Y2M=", "commit_message": "don't inject unicode into sys.argv\n\nProtects %run and `ipython script.py` from getting unicode sys.argv on Python 2\n\ncloses #710", "commit_timestamp": "2011-10-19T00:52:00Z", "files": ["IPython/core/magic.py", "IPython/core/shellapp.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzowNzcxNDIwZjYwZjVlZTZjMGU3NDEzMjg1OWZmYjk3ZGU0MThlNzUx", "commit_message": "don't inject unicode into sys.argv\n\nProtects %run and `ipython script.py` from getting unicode sys.argv on Python 2\n\ncloses #710", "commit_timestamp": "2011-10-19T00:52:00Z", "files": ["IPython/core/magic.py", "IPython/core/shellapp.py"]}], "labels": ["unicode", "bug"], "created_at": "2011-08-19T13:37:59Z", "closed_at": "2011-10-19T00:52:34Z", "method": ["label", "regex"]}
{"issue_number": 700, "title": "Some SVG images render incorrectly in htmlnotebook", "body": "When displaying [this SVG file](http://mentat.za.net/refer/caution.svg) in the htmlnotebook:\n\n```\nimport IPython.core.display as d\nd.SVG(filename='caution.svg')\n```\n\nThe output is \"]>\" + image.\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU4NTE4OjVkOTYxMzE3NzUwYzZlZWY0YTM1NTExOTllZmEyZTE1YzY4NjVmYWQ=", "commit_message": "extract svg tag from svg files\n\nWe expect svg *tags*, not svg *documents*, which have headers, etc.\nThis lets the SVG DisplayObject extract the svg tag from a document,\nso it works with regular svgs from a URL or file.\n\ncloses #700", "commit_timestamp": "2011-12-11T00:59:04Z", "files": ["IPython/core/display.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzpkMWFkYzY1MTZiODZkMDdjYjEzZWIxYjUyZWVhNjYzZGExNzcyMzhm", "commit_message": "extract svg tag from svg files\n\nWe expect svg *tags*, not svg *documents*, which have headers, etc.\nThis lets the SVG DisplayObject extract the svg tag from a document,\nso it works with regular svgs from a URL or file.\n\ncloses #700", "commit_timestamp": "2011-12-11T00:59:04Z", "files": ["IPython/core/display.py"]}], "labels": ["qtconsole", "bug", "notebook"], "created_at": "2011-08-15T21:03:51Z", "closed_at": "2011-12-11T01:00:13Z", "method": ["label"]}
{"issue_number": 693, "title": "\"run -i\" no longer works after %reset in terminal", "body": "this appears to be a result of `__name__` being lost:\n\n<pre>\n/usr/local/lib/python2.6/dist-packages/IPython/core/interactiveshell.pyc in magic(self, arg_s, next_input)\n   1892                 self._magic_locals = sys._getframe(1).f_locals\n   1893             with self.builtin_trap:\n-> 1894                 result = fn(magic_args)\n   1895             # Ensure we're not keeping object references around:\n\n   1896             self._magic_locals = {}\n\n/usr/local/lib/python2.6/dist-packages/IPython/core/magic.pyc in magic_run(self, parameter_s, runner, file_finder)\n   1587             # Run in user's interactive namespace\n\n   1588             prog_ns = self.shell.user_ns\n-> 1589             __name__save = self.shell.user_ns['__name__']\n   1590             prog_ns['__name__'] = '__main__'\n   1591             main_mod = self.shell.new_main_mod(prog_ns)\n\nKeyError: '__name__'\n\n\nIn [1]: dir()\nOut[1]: \n['In',\n 'Out',\n '_',\n '__',\n '___',\n '__builtin__',\n '__builtins__',\n '__name__',\n '_dh',\n '_i',\n '_i1',\n '_ih',\n '_ii',\n '_iii',\n '_oh',\n '_sh',\n 'exit',\n 'get_ipython',\n 'help',\n 'quit']\n\nIn [2]: __name__\nOut[2]: '__main__'\n\nIn [3]: %reset\nOnce deleted, variables cannot be recovered. Proceed (y/[n])?  y\n\nIn [4]: dir()\nOut[4]: \n['In',\n 'Out',\n '__builtin__',\n '__builtins__',\n '_dh',\n '_i',\n '_i4',\n '_ih',\n '_ii',\n '_iii',\n '_oh',\n '_sh',\n 'exit',\n 'get_ipython',\n 'help',\n 'quit']\n\nIn [5]: __name__\nOut[5]: '__builtin__'\n</pre>\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU4NTE4OmExZTQ5MTFiNmU3Zjk3M2UzZDVjZjM1M2U2MDQ3M2FiODViZTliNTc=", "commit_message": "Merge pull request #648 from takluyver/usermod\n\nClean up handling of global namespaces with the proper semantics.\r\n\r\nA global namespace should always be tied to a module: pickle accesses classes via the module in which they're defined. So I've changed the arguments for instantiating an InteractiveShell to include `user_module` in place of `user_global_ns`. The global namespace simply becomes a reference to `user_module.__dict__`.\r\n\r\nFor instantiating InteractiveShell, there are four possibilities:\r\n\r\n* Neither `user_ns` nor `user_module` is given. A new (real) module is created named `__main__`, and its `__dict__` becomes the global and local namespace. This is what happens when starting IPython normally.\r\n* Only `user_module` is given. Its `__dict__` becomes the global and local namespace.\r\n* Both `user_ns` and `user_module` are given. `user_module.__dict__` is the global namespace, and `user_ns` is the local namespace. Note that we can't interactively define closures over variables in the local namespace (this seems to be a limitation of Python).\r\n* Only `user_ns` is given. It is treated as the global and local namespace, and a `DummyMod` object is created to refer to it. This is intended as a convenience, especially for the test suite. The recommended way to pass in a single global namespace is as a reference to the module.\r\n\r\n`embed()` digs out the locals and the module from the frame in which it's called.\r\n\r\nCloses gh-29, closes gh-693.", "commit_timestamp": "2011-11-27T02:45:27Z", "files": ["IPython/core/displayhook.py", "IPython/core/history.py", "IPython/core/interactiveshell.py", "IPython/core/magic.py", "IPython/core/prefilter.py", "IPython/core/tests/test_interactiveshell.py", "IPython/core/tests/test_iplib.py", "IPython/core/tests/test_run.py", "IPython/frontend/terminal/embed.py", "IPython/frontend/terminal/interactiveshell.py", "IPython/testing/globalipapp.py", "IPython/testing/plugin/ipdoctest.py"]}, {"node_id": "MDY6Q29tbWl0MjIxMjQyNjpiMjZiZjZhNTdhZTU0ODkyMmQ0NzVjZmEzZjVhZTI4ZDkwYjI2OGQ4", "commit_message": "Add test for gh-693 (%run -i after %reset).", "commit_timestamp": "2011-11-27T02:29:35Z", "files": ["IPython/core/tests/test_run.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo5NWFkNTA5MjU2NWNmYWMyMDZiYjA0YWE5Y2IzMjBlMTExMjY4NmNh", "commit_message": "Add test for gh-693 (%run -i after %reset).", "commit_timestamp": "2011-11-27T02:29:35Z", "files": ["IPython/core/tests/test_run.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo0OWRmZTY1ODRhN2Y3MTJlODNjMDFiMTdlMzY4YWQzZGQ4MGRiM2Uy", "commit_message": "Merge pull request #648 from takluyver/usermod\n\nClean up handling of global namespaces with the proper semantics.\r\n\r\nA global namespace should always be tied to a module: pickle accesses classes via the module in which they're defined. So I've changed the arguments for instantiating an InteractiveShell to include `user_module` in place of `user_global_ns`. The global namespace simply becomes a reference to `user_module.__dict__`.\r\n\r\nFor instantiating InteractiveShell, there are four possibilities:\r\n\r\n* Neither `user_ns` nor `user_module` is given. A new (real) module is created named `__main__`, and its `__dict__` becomes the global and local namespace. This is what happens when starting IPython normally.\r\n* Only `user_module` is given. Its `__dict__` becomes the global and local namespace.\r\n* Both `user_ns` and `user_module` are given. `user_module.__dict__` is the global namespace, and `user_ns` is the local namespace. Note that we can't interactively define closures over variables in the local namespace (this seems to be a limitation of Python).\r\n* Only `user_ns` is given. It is treated as the global and local namespace, and a `DummyMod` object is created to refer to it. This is intended as a convenience, especially for the test suite. The recommended way to pass in a single global namespace is as a reference to the module.\r\n\r\n`embed()` digs out the locals and the module from the frame in which it's called.\r\n\r\nCloses gh-29, closes gh-693.", "commit_timestamp": "2011-11-27T02:45:27Z", "files": ["IPython/core/displayhook.py", "IPython/core/history.py", "IPython/core/interactiveshell.py", "IPython/core/magic.py", "IPython/core/prefilter.py", "IPython/core/tests/test_interactiveshell.py", "IPython/core/tests/test_iplib.py", "IPython/core/tests/test_run.py", "IPython/frontend/terminal/embed.py", "IPython/frontend/terminal/interactiveshell.py", "IPython/testing/globalipapp.py", "IPython/testing/plugin/ipdoctest.py"]}], "labels": ["bug"], "created_at": "2011-08-11T16:21:05Z", "closed_at": "2011-11-27T02:45:29Z", "method": ["label"]}
{"issue_number": 692, "title": "use of Tracer() when debugging works but gives error messages", "body": "When I want to debug a certain part of my code, I use the Tracer function from the debugging inside my code like this:\n\nfrom IPython.core.debugger import Tracer\nTracer()\n\nBefore 0.11 this would dump the user into debugging mode at this point in the code flow.\n\nIn 0.11 this also happens. However, when exiting debugging mode with 'q', errors are thrown:\n\n<pre>\nipdb> q\n---------------------------------------------------------------------------\nTypeError                                 Traceback (most recent call last)\n/home/jorgsk/work/3UTR/<ipython-input-8-1623abb037d9> in <module>()\n----> 1 get_ipython().magic(u\"run annotation_parser.py\")\n\n/usr/local/lib/python2.7/dist-packages/IPython/core/interactiveshell.pyc in magic(self, arg_s, next_input)\n   1892                 self._magic_locals = sys._getframe(1).f_locals\n   1893             with self.builtin_trap:\n-> 1894                 result = fn(magic_args)\n   1895             # Ensure we're not keeping object references around:\n\n   1896             self._magic_locals = {}\n\n/usr/local/lib/python2.7/dist-packages/IPython/core/magic.pyc in magic_run(self, parameter_s, runner, file_finder)\n   1703                         else:\n   1704                             # regular execution\n\n-> 1705                             runner(filename,prog_ns,prog_ns,exit_ignore=exit_ignore)\n   1706 \n   1707                 if opts.has_key('i'):\n\n/usr/local/lib/python2.7/dist-packages/IPython/core/interactiveshell.pyc in safe_execfile(self, fname, *where, **kw)\n   2184         with prepended_to_syspath(dname):\n   2185             try:\n-> 2186                 execfile(fname,*where)\n   2187             except SystemExit, status:\n   2188                 # If the call was made with 0 or None exit status (sys.exit(0)\n\n\n/usr/local/lib/python2.7/dist-packages/IPython/core/interactiveshell.pyc in showtraceback(self, exc_tuple, filename, tb_offset, exception_only)\n   1542                     # FIXME: Old custom traceback objects may just return a\n\n   1543                     # string, in that case we just put it into a list\n\n-> 1544                     stb = self.CustomTB(etype, value, tb, tb_offset)\n   1545                     if isinstance(ctb, basestring):\n   1546                         stb = [stb]\n\nTypeError: BdbQuit_IPython_excepthook() takes exactly 4 arguments (5 given)\n</pre>\n\n\nFurther, when running with pdb ON, this error throws you into debugging mode again, forcing another 'q' before you are properly returned to the non-debugging shell.\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU5NDQ2OmVkNTA3OGM5OTU1YzNiMjBjOTI3NTFiMmQyYmViMGVhODAwNmEzYzM=", "commit_message": "protect IPython from bad custom exception handlers\n\nPreviously, errors in custom handlers would result in the custom exception\nhandler's error being printed in lieu of the real exception, and certain cases could cause infinite loops.\n\nNow, if CustomTB fails it is unregistered immediately, and the original TB is also displayed.\n\nIPython's own BdbQuit_IPython_excepthook had an invalid signature, which revealed this issue, and has also been fixed.\n\ntest included.\n\ncloses #692", "commit_timestamp": "2011-10-14T20:58:15Z", "files": ["IPython/core/debugger.py", "IPython/core/interactiveshell.py", "IPython/core/tests/test_interactiveshell.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzpmNzY0ZGFlMWQxNDQwMzhmMTQzMTBmNzY3YjgxMjMzNjVmNTkyNmQz", "commit_message": "protect IPython from bad custom exception handlers\n\nPreviously, errors in custom handlers would result in the custom exception\nhandler's error being printed in lieu of the real exception, and certain cases could cause infinite loops.\n\nNow, if CustomTB fails it is unregistered immediately, and the original TB is also displayed.\n\nIPython's own BdbQuit_IPython_excepthook had an invalid signature, which revealed this issue, and has also been fixed.\n\ntest included.\n\ncloses #692", "commit_timestamp": "2011-10-14T20:58:15Z", "files": ["IPython/core/debugger.py", "IPython/core/interactiveshell.py", "IPython/core/tests/test_interactiveshell.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmFhODQ2ZTMxZWViZWQ0YzlhZjNhYTRlYjE1OTliYzU1YTU2ZmI5ZWM=", "commit_message": "Merge pull request #876 from minrk/customtb\n\nProtect IPython from bad custom exception handlers.  Also ensures that ipdb can be used as a tracing debugger in a manner similar to `pdb.set_trace`, via:\r\n\r\nfrom IPython.core.debugger import Tracer\r\ntracer = Tracer()\r\n# then, call tracer() anywhere in the code to start it up.", "commit_timestamp": "2011-10-16T20:28:27Z", "files": ["IPython/core/application.py", "IPython/core/debugger.py", "IPython/core/interactiveshell.py", "IPython/core/shellapp.py", "IPython/core/tests/test_interactiveshell.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmFhODQ2ZTMxZWViZWQ0YzlhZjNhYTRlYjE1OTliYzU1YTU2ZmI5ZWM=", "commit_message": "Merge pull request #876 from minrk/customtb\n\nProtect IPython from bad custom exception handlers.  Also ensures that ipdb can be used as a tracing debugger in a manner similar to `pdb.set_trace`, via:\r\n\r\nfrom IPython.core.debugger import Tracer\r\ntracer = Tracer()\r\n# then, call tracer() anywhere in the code to start it up.", "commit_timestamp": "2011-10-16T20:28:27Z", "files": ["IPython/core/application.py", "IPython/core/debugger.py", "IPython/core/interactiveshell.py", "IPython/core/shellapp.py", "IPython/core/tests/test_interactiveshell.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo1MjAyYjc2MGMxMThjMDA0ZDZlMGIxNzlmMGJjODRkMmZhODVlY2Rm", "commit_message": "Merge pull request #876 from minrk/customtb\n\nProtect IPython from bad custom exception handlers.  Also ensures that ipdb can be used as a tracing debugger in a manner similar to `pdb.set_trace`, via:\r\n\r\nfrom IPython.core.debugger import Tracer\r\ntracer = Tracer()\r\n# then, call tracer() anywhere in the code to start it up.", "commit_timestamp": "2011-10-16T20:28:27Z", "files": ["IPython/core/application.py", "IPython/core/debugger.py", "IPython/core/interactiveshell.py", "IPython/core/shellapp.py", "IPython/core/tests/test_interactiveshell.py"]}, {"node_id": "C_kwDOAz-HA9oAKGZjMjM1OTg1NTA4ZDA0MzExOTI0MDViNDZjNmZiZmIyMDkwNjkwNDg", "commit_message": "fix uncaught `BdbQuit` exceptions on ipdb `exit`\n\n- `BdbQuit` is now handled in the top-most scope of `InteractiveShell.run_code`. This ensures that `BdbQuit` is correctly handled but can still do its job of breaking out of all user code/loops/further breakpoint requests. Hopefully will work better than previous attempts, which put the `BdqQuit` handling in `Pdb.set_trace`\n\n- fixes:\n  - jupyterlab/jupyterlab#12501\n\n- refs:\n  - ipython/ipython#876\n  - ipython/ipython#1273\n  - ipython/ipython#4474\n  - ipython/ipython#5306\n  - ipython/ipython#9731\n  - ipython/ipython#9942\n  - ipython/ipython#9950\n  - ipython/ipython#10006\n  - ipython/ipython#12378", "commit_timestamp": "2022-05-03T00:36:53Z", "files": ["IPython/core/debugger.py", "IPython/core/interactiveshell.py"]}], "labels": ["bug"], "created_at": "2011-08-10T10:20:14Z", "closed_at": "2011-10-18T22:49:36Z", "linked_pr_number": [692], "method": ["label", "regex"]}
{"issue_number": 690, "title": "debugger does not print error message by default in 0.11", "body": "With pdb OFF\n\n<pre>\nIn [10]: some_variable\n---------------------------------------------------------------------------\nNameError                                 Traceback (most recent call last)\n/home/jorgsk/<ipython-input-10-329cbf4269cc> in <module>()\n----> 1 some_variable\n\nNameError: name 'some_variable' is not defined\n</pre>\n\n\nAs expected.\n\nWith pdb ON\n\n<pre>\nIn [12]: some_variable\n> <ipython-input-12-329cbf4269cc>(1)<module>()\n     -1 some_variable\n</pre>\n\nThere is no error message. I have to quit with 'q':\n\n<pre>\nipdb> q\n---------------------------------------------------------------------------\nNameError                                 Traceback (most recent call last)\n/home/jorgsk/<ipython-input-12-329cbf4269cc> in <module>()\n----> 1 some_variable\n\nNameError: name 'some_variable' is not defined\n</pre>\n\nI think the error message should be given when entering the debugging mode, or is this an intended behavior in 0.11?\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU5NDQ2OjBkMDY1YjEzMTRmOTUxZGI1YjU2MzE3MjA3ZTBkZjliYzAyMmFiMzE=", "commit_message": "show tb before entering debug when %pdb is on\n\ncloses #690", "commit_timestamp": "2011-10-14T21:01:14Z", "files": ["IPython/core/interactiveshell.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo0MWQ0ZjE0ZjI4NjI2OWYzM2VhM2YxNTYzNjY0NDZiYjlmNDVlMWI5", "commit_message": "show tb before entering debug when %pdb is on\n\ncloses #690", "commit_timestamp": "2011-10-14T21:01:14Z", "files": ["IPython/core/interactiveshell.py"]}], "labels": ["bug"], "created_at": "2011-08-10T09:15:48Z", "closed_at": "2011-10-18T19:05:04Z", "method": ["label", "regex"]}
{"issue_number": 688, "title": "local security vulnerability: all ports visible to any local user.", "body": "Maybe there's already a place somewhere in the documentation, but I did not find it. \n\nThis was reported and 'exploited' by @philipn in this vim-ipython pull request: https://github.com/ivanov/vim-ipython/pull/2\n\nBasically, any local user can just `ps ax | grep IPython` to get all of the port numbers used by another user's IPython instance.\n\nI looked into the issue, and one way to hide this information from other users would be to pass the arguments as environment variables. They will still be visible using `ps -e` to the user who started IPython, but not to other users. Though this was/is a bug in Solaris, http://osvdb.org/24200 - where any user could see everyone's environment variables.  Does this sound reasonable?\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU5NDQ2OmViYWMzYjE4YjVmYzEwY2EyMTI0NjRiNTFhMGVkZmNkMjk0NWQzZWM=", "commit_message": "use connection files instead of ports to connect to kernels\n\nthis addresses security issues (#688)\nand ease-of-multi-frontend", "commit_timestamp": "2011-10-13T04:28:04Z", "files": ["IPython/frontend/qt/console/qtconsoleapp.py", "IPython/zmq/entry_point.py", "IPython/zmq/kernelapp.py", "IPython/zmq/kernelmanager.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmY5M2E4Y2EyZTEyOWI0NmVjN2I4OTZlMWM0NjU4Y2JkNjc2ZTMzOTk=", "commit_message": "Merge PR #847 (connection files)\n\n* JSON connection files are now used to connect files\n* HMAC message signing is now on by default in all IPython apps\n* Adds IPython.lib.kernel, which contains utility functions for connecting\n  clients. These were mostly copied out of qtconsoleapp in order to be\n  more general.\n* Adds %connection_info and %qtconsole magics to zmqshell\n\ncloses gh-688\ncloses gh-806\ncloses gh-691", "commit_timestamp": "2011-10-13T19:05:23Z", "files": ["IPython/frontend/html/notebook/handlers.py", "IPython/frontend/html/notebook/kernelmanager.py", "IPython/frontend/html/notebook/notebookapp.py", "IPython/frontend/html/notebook/tests/test_kernelsession.py", "IPython/frontend/qt/console/qtconsoleapp.py", "IPython/lib/kernel.py", "IPython/parallel/apps/ipcontrollerapp.py", "IPython/parallel/apps/ipengineapp.py", "IPython/utils/path.py", "IPython/zmq/entry_point.py", "IPython/zmq/kernelapp.py", "IPython/zmq/kernelmanager.py", "IPython/zmq/session.py", "IPython/zmq/zmqshell.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo2NzhlNjdlYTNmNmFhM2Y2OWMzMzI5NTUyNDY5Y2UzZjU4ODVkNjgw", "commit_message": "use connection files instead of ports to connect to kernels\n\nthis addresses security issues (#688)\nand ease-of-multi-frontend", "commit_timestamp": "2011-10-13T04:28:04Z", "files": ["IPython/frontend/qt/console/qtconsoleapp.py", "IPython/zmq/entry_point.py", "IPython/zmq/kernelapp.py", "IPython/zmq/kernelmanager.py"]}], "labels": ["qtconsole"], "created_at": "2011-08-09T23:06:14Z", "closed_at": "2011-10-13T19:06:01Z", "method": ["regex"]}
{"issue_number": 678, "title": "Input prompt stripping broken with multiline data structures", "body": "We now strip input prompts always, but the logic seems to be broken in certain cases, as reported by @matthew-brett on-list.  Some cases that work:\n\n<pre>\nIn [3]: >>> x =1\n\nIn [4]: x\nOut[4]: 1\n\nIn [5]: >>> if x:\n   ...:     ...     print 1\n   ...:     ...     \n1\n</pre>\n\n\nBut multilie data structures throw an error:\n\n<pre>\nIn [2]: >>> a = {'X':1,\n   ...: ... 'U':2}\n  File \"<ipython-input-2-bfb4765c16e2>\", line 2\n    ... 'U':2}\n    ^\nSyntaxError: invalid syntax\n\nIn [6]: >>> a = [1,2,\n   ...: ... 3]\n  File \"<ipython-input-6-d55d19c4d731>\", line 2\n    ... 3]\n    ^\nSyntaxError: invalid syntax\n\nIn [9]: >>> a = (1,2,\n   ...: ... 3)\n  File \"<ipython-input-9-4ac29872d3db>\", line 2\n    ... 3)\n    ^\nSyntaxError: invalid syntax\n</pre>\n", "commits": [{"node_id": "MDY6Q29tbWl0MjU1NzI3NDowYWIyNjU4NDgyNzFmM2UxNDc5MDA5NWVlMzlkOTY5MjIxNDA5YjFk", "commit_message": "fix for broken input prompt stripping with multiline data structures (issue #678)", "commit_timestamp": "2011-10-14T22:04:50Z", "files": ["IPython/core/inputsplitter.py"]}, {"node_id": "MDY6Q29tbWl0MjU1NzI3NDo1ZmZhYTU2NDg2YmIyZGI4MGFmMDU4ZTM0ZDA0NzVmMWViMmRmMGEz", "commit_message": "added test for issue #678", "commit_timestamp": "2011-10-18T07:08:38Z", "files": ["IPython/core/tests/test_inputsplitter.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmEwMzBmN2ViNWU5YTAxNzU4NGVhY2NmYmRiMDhmY2ZmMTQ0MjMxY2Q=", "commit_message": "Merge branch 'djv-master': partial fix for issue #678.\n\nNow multiline structures pasted from doctests with input prompts work\nin most regular cases.", "commit_timestamp": "2011-10-18T20:17:52Z", "files": ["IPython/core/inputsplitter.py", "IPython/core/tests/test_inputsplitter.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzoyYTYwYzUwYmI1MzM5MzljYmU2ZGJlZjc1NmIxMmEwYTE5YTU5NThj", "commit_message": "fix for broken input prompt stripping with multiline data structures (issue #678)", "commit_timestamp": "2011-10-14T22:04:50Z", "files": ["IPython/core/inputsplitter.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo5YWQxYmVhNjk3NmNhNjdkZTZiNDQyYjBkODE4NjM1MDU0YzQ0MzNi", "commit_message": "added test for issue #678", "commit_timestamp": "2011-10-18T07:08:38Z", "files": ["IPython/core/tests/test_inputsplitter.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzpmN2Q1YmUwMzBkMTlkNzI2MGJlNmQ0NDAyNjNkYjQ3ZWE1MGM3MzEw", "commit_message": "Merge branch 'djv-master': partial fix for issue #678.\n\nNow multiline structures pasted from doctests with input prompts work\nin most regular cases.", "commit_timestamp": "2011-10-18T20:17:52Z", "files": ["IPython/core/inputsplitter.py", "IPython/core/tests/test_inputsplitter.py"]}], "labels": ["bug"], "created_at": "2011-08-04T20:38:22Z", "closed_at": "2013-06-19T14:51:06Z", "method": ["label", "regex"]}
{"issue_number": 676, "title": "IPython.embed() from ipython crashes twice on exit", "body": "when starting an embeded ipython shell from within ipython it crashes when you quit ipython\n\n```\n   $ ipython\n   >> from IPython import embed\n   >> embed()\n   .. embedded shell\n   >>>> exit\n   >> exit\n   -> crash\n```\n\nit crashes twice\nfirst crash:\n\n```\nusr/lib/python2.7/dist-packages/IPython/frontend/terminal/interactiveshell.pyc in interact(self=<IPython.frontend.terminal.interactiveshell.TerminalInteractiveShell object>, display_banner=False)\n    300             except:\n    301                 # exceptions here are VERY RARE, but they can be triggered\n    302                 # asynchronously by signal handlers, for example.\n    303                 self.showtraceback()\n    304             else:\n    305                 self.input_splitter.push(line)\n    306                 more = self.input_splitter.push_accepts_more()\n    307                 if (self.SyntaxTB.last_syntax_error and\n    308                     self.autoedit_syntax):\n    309                     self.edit_syntax_error()\n    310                 if not more:\n    311                     source_raw = self.input_splitter.source_raw_reset()[1]\n    312                     self.run_cell(source_raw)\n    313                 \n    314         # We are off again...\n--> 315         __builtin__.__dict__['__IPYTHON__active'] -= 1\n    316 \n    317         # Turn off the exit flag, so the mainloop can be restarted if desired\n    318         self.exit_now = False\n    319 \n    320     def raw_input(self, prompt=''):\n    321         \"\"\"Write a prompt and read a line.\n    322 \n    323         The returned line does not include the trailing newline.\n    324         When the user enters the EOF key sequence, EOFError is raised.\n    325 \n    326         Optional inputs:\n    327 \n    328           - prompt(''): a string to be printed to prompt the user.\n    329 \n    330           - continue_prompt(False): whether this line is the first one or a\n\nKeyError: '__IPYTHON__active'\n```\n\nsecond crash, follows the first:\n\n```\n/usr/lib/python2.7/dist-packages/IPython/core/displayhook.pyc in flush(self=<IPython.core.displayhook.DisplayHook object>)\n    304             self.update_user_ns(result)\n    305             self.log_output(format_dict)\n    306             self.finish_displayhook()\n    307 \n    308     def flush(self):\n    309         if not self.do_full_cache:\n    310             raise ValueError,\"You shouldn't have reached the cache flush \"\\\n    311                   \"if full caching is not enabled!\"\n    312         # delete auto-generated vars from global namespace\n    313         \n    314         for n in range(1,self.prompt_count + 1):\n    315             key = '_'+`n`\n    316             try:\n    317                 del self.shell.user_ns[key]\n    318             except: pass\n--> 319         self.shell.user_ns['_oh'].clear()\n    320         \n    321         # Release our own references to objects:\n    322         self._, self.__, self.___ = '', '', ''\n    323         \n    324         if '_' not in __builtin__.__dict__:\n    325             self.shell.user_ns.update({'_':None,'__':None, '___':None})\n    326         import gc\n    327         # TODO: Is this really needed?\n    328         gc.collect()\n    329 \n\nKeyError: '_oh'\n```\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU4NTE4OmRiNzYyZDlmZDA3N2IwODAyMzNjMzJiNGY0ODhhNTAxM2E5NmRkNzc=", "commit_message": "Merge pull request #1496 from rkern/fix-finalize-displayhook\n\nBUG: LBYL when clearing the output history on shutdown.\r\n\r\ncloses #1241\r\ncloses #676", "commit_timestamp": "2012-03-16T23:33:04Z", "files": ["IPython/core/displayhook.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzplYTlhNjViY2U2NGI5YWQ4ZTlmYjZkMzM5ODNjM2EwNzA4Zjg1Zjcz", "commit_message": "Merge pull request #1496 from rkern/fix-finalize-displayhook\n\nBUG: LBYL when clearing the output history on shutdown.\r\n\r\ncloses #1241\r\ncloses #676", "commit_timestamp": "2012-03-16T23:33:04Z", "files": ["IPython/core/displayhook.py"]}], "labels": ["bug"], "created_at": "2011-08-04T15:33:53Z", "closed_at": "2012-03-16T23:33:05Z", "method": ["label"]}
{"issue_number": 673, "title": "raw_input appears to be round-robin for qtconsole", "body": "If I start a qtconsole, raw_input() seems to just work. But when I hook up to it from another kernel manager, then raw_input() only responds from qt_console every other time and blocks the other time, and if I attach a 3rd kernel manager, it only responds every 3rd time.\n\nsending stdin_channel.input() from the 2nd and 3rd kernelmanagers always works, regardless of whether or not qtconsole is blocking or properly handling the raw_input.\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU4NTE4OmEyYWMyOThlYWI3M2YxYWM3YjhlODQwMTczYTQ5OTgyOTZmMzEzNmM=", "commit_message": "use ROUTER/DEALER sockets for stdin\n\nstdin requests are now directed to the frontend that made the execution\nrequest that called raw_input.\n\nallow_stdin flag added to execution_request to indicate whether stdin_requests are allowed.\n\nStdInNotImplementedError exception class added to IPython.core.error, and is raised if raw_input is called from execute requests where allow_input is undefined.\n\ncloses gh-673", "commit_timestamp": "2011-10-12T21:29:22Z", "files": ["IPython/core/error.py", "IPython/zmq/ipkernel.py", "IPython/zmq/kernelapp.py", "IPython/zmq/kernelmanager.py", "IPython/zmq/pykernel.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjZlOTJmZmQ5YTZlNTk4YjAzMzExNGEyZmM4MGRiMTc0MDEyZWIxY2Q=", "commit_message": "Merge branch 'stdin'\n\nChanges stdin channel from REQ-REQ to ROUTER-DEALER, fixing\nthe round-robin load-balancing of stdin_requests across frontends.\nstdin_requests now go to the client that made the execute_request\nthat prompted the stdin request.\n\nstdin_requests from frontends that do not support stdin will raise an error,\nrather than hanging on input that will never arrive.\n\nreviewed by @fperez\n\ncloses #673", "commit_timestamp": "2011-10-12T22:27:44Z", "files": ["IPython/core/error.py", "IPython/core/interactiveshell.py", "IPython/zmq/ipkernel.py", "IPython/zmq/kernelapp.py", "IPython/zmq/kernelmanager.py", "IPython/zmq/pykernel.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzpjNWQ1MWRkM2FkZDExNzM2YzcwMDg4ODE4NGUyYjVhNzQ4MTc0MGVm", "commit_message": "use ROUTER/DEALER sockets for stdin\n\nstdin requests are now directed to the frontend that made the execution\nrequest that called raw_input.\n\nallow_stdin flag added to execution_request to indicate whether stdin_requests are allowed.\n\nStdInNotImplementedError exception class added to IPython.core.error, and is raised if raw_input is called from execute requests where allow_input is undefined.\n\ncloses gh-673", "commit_timestamp": "2011-10-12T21:29:22Z", "files": ["IPython/core/error.py", "IPython/zmq/ipkernel.py", "IPython/zmq/kernelapp.py", "IPython/zmq/kernelmanager.py", "IPython/zmq/pykernel.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzpiOWZiZWNjOWIwYjFiZTU3ZWExNDNlODFiODIyMTkxZDE4Y2Q3ZmU3", "commit_message": "Merge branch 'stdin'\n\nChanges stdin channel from REQ-REQ to ROUTER-DEALER, fixing\nthe round-robin load-balancing of stdin_requests across frontends.\nstdin_requests now go to the client that made the execute_request\nthat prompted the stdin request.\n\nstdin_requests from frontends that do not support stdin will raise an error,\nrather than hanging on input that will never arrive.\n\nreviewed by @fperez\n\ncloses #673", "commit_timestamp": "2011-10-12T22:27:44Z", "files": ["IPython/core/error.py", "IPython/core/interactiveshell.py", "IPython/zmq/ipkernel.py", "IPython/zmq/kernelapp.py", "IPython/zmq/kernelmanager.py", "IPython/zmq/pykernel.py"]}], "labels": ["qtconsole", "bug"], "created_at": "2011-08-03T20:40:35Z", "closed_at": "2011-10-12T22:28:45Z", "method": ["label"]}
{"issue_number": 669, "title": "Do not accept an ipython_dir that's not writeable", "body": "As reported by Eric Jones, a colleague found himself with this problem:\n\nPylab failed to start after an EPD install, and he was dead in the water. \n\nAfter poking around, he has a HOMESHARE variable that is set to some strange directory he doesn't know about and also that he does not have write access to.  As a result, ipython will not start up.  This is a show stopper.\n\nWe should add a patch that checks if the get_ipython_dir() is writable.  If it isn't, we should use the temp dir or something, or we should not try to write the ipythonrc file, or something.  We want to ensure that file permissions don't result in the inabliity to start using the app.\n\nJason reported progress on the issue:\n\nIlan and I just looked at it and it appears to be a simple fix.  path.py get_home_dir() checks a bunch of environment variables on different platforms looking for a home directory.  It checks that the directory exists, but not that it's writable.  We can just add check to issue a warning if a given directory isn't writable and move on to the next option.\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU5NDQ2OmIxZWM5OTAyZTFmMjdiMDk2NzZiY2Y4MGVlNDAzZTU1ZDljMTViYWE=", "commit_message": "check for writable dirs, not just existence, in utils.path\n\nreplaces various calls to os.path.isdir and os.path.exists with _writable_dir.\n\ncloses gh-669", "commit_timestamp": "2011-08-03T18:40:44Z", "files": ["IPython/utils/path.py"]}, {"node_id": "MDY6Q29tbWl0NjU5NDQ2OjJhOGRlM2NjYWExNjQ3ZDI0MTI4MTNmMzFkYmNmNjJlNWFjOTYxMjk=", "commit_message": "use tempdir if no usable ipython_dir is found\n\nadd test for gh-669, and ignore nonexistent toy paths in other path tests.", "commit_timestamp": "2011-08-03T21:18:30Z", "files": ["IPython/utils/path.py", "IPython/utils/tests/test_path.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzpkMGM2NGUzZjYxZGU1NzA4NmI4YjI1MGUwZTViOWVjMDIxYTU2MThk", "commit_message": "check for writable dirs, not just existence, in utils.path\n\nreplaces various calls to os.path.isdir and os.path.exists with _writable_dir.\n\ncloses gh-669", "commit_timestamp": "2011-08-03T18:40:44Z", "files": ["IPython/utils/path.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo2ZTc4NmRiOTc0ZTkwOWI3YTMwNTg4ZDYxMjIxNmY1YzA5NWI0YWQ2", "commit_message": "use tempdir if no usable ipython_dir is found\n\nadd test for gh-669, and ignore nonexistent toy paths in other path tests.", "commit_timestamp": "2011-08-03T21:18:30Z", "files": ["IPython/utils/path.py", "IPython/utils/tests/test_path.py"]}], "labels": ["important", "bug"], "created_at": "2011-08-03T18:19:41Z", "closed_at": "2011-08-23T20:16:09Z", "method": ["label"]}
{"issue_number": 667, "title": "qtconsole problem with default pylab profile", "body": "I found a problem when using the qtconsole sub-command\ntogether with the default pylab profile. Reported originally to the ipython-user list:\nhttp://article.gmane.org/gmane.comp.python.ipython.user/6180\n\nWhat I've done:\n\n$ ipython profile create default\n$ ipython profile create pylab\n\nThen this works ok:\n$ ipyhton qtconsole\n\nbut this fails\n$ ipython qtconsole --prfile=pylab\n\nwith the following message repeating endlessly until I press CTRL-C:\nQCoreApplication::exec: The event loop is already running\n\nShould I fill a report?\n\nThe crash report is attached\n\nCrash_report_ipython.txt\n\n---\n\n<pre>\nIPython post-mortem report\n\n{'commit_hash': 'a76c44e',\n 'commit_source': 'repository',\n 'ipython_path': '/home/jscandal/sw/ipython_src/ipython.git/IPython',\n 'ipython_version': '0.12.dev',\n 'os_name': 'posix',\n 'platform': 'Linux-3.0-ARCH-x86_64-Intel-R-_Core-TM-_i5_CPU_M_450_@_2.40GHz-with-glibc2.2.5',\n 'sys_executable': '/usr/bin/python2',\n 'sys_platform': 'linux2',\n 'sys_version': '2.7.2 (default, Jun 29 2011, 11:10:00) \\n[GCC 4.6.1]'}\n\n***************************************************************************\n\n\n\n***************************************************************************\n\nCrash traceback:\n\n---------------------------------------------------------------------------\nKeyError                                     Python 2.7.2: /usr/bin/python2\n                                                   Tue Aug  2 16:24:37 2011\nA problem occured executing Python code.  Here is the sequence of function\ncalls leading up to the error, with the most recent (innermost) call last.\n/home/jscandal/sw/ipython_src/ipython.git/IPython/frontend/qt/base_frontend_mixin.pyc in _dispatch(self=<IPython.frontend.qt.console.rich_ipython_widget.RichIPythonWidget object>, msg={'buffers': [], 'content': {u'status': u'aborted'}, 'header': {u'date': datetime.datetime(2011, 8, 2, 16, 24, 37, 519223), u'msg_id': u'6a1e0c2c-933e-49de-bbca-33f6d864b3bc', u'msg_type': u'history_reply', u'session': u'968174cf-9e0c-4773-b2f0-803dc84654bb', u'username': u'kernel'}, 'msg_type': u'history_reply', 'parent_header': {u'date': datetime.datetime(2011, 8, 2, 16, 24, 34, 912289), u'msg_id': u'cb4cbb54-ab28-432b-867a-76840a040a5e', u'msg_type': u'history_request', u'session': u'67142a7f-df8d-4618-a5aa-7d097311bde8', u'username': u'jscandal'}})\n     87         \"\"\" Called when the KernelManager channels have stopped listening or\n     88             when a listening KernelManager is removed from the frontend.\n     89         \"\"\"\n     90 \n     91     #---------------------------------------------------------------------------\n     92     # 'BaseFrontendMixin' protected interface\n     93     #---------------------------------------------------------------------------\n     94 \n     95     def _dispatch(self, msg):\n     96         \"\"\" Calls the frontend handler associated with the message type of the \n     97             given message.\n     98         \"\"\"\n     99         msg_type = msg['msg_type']\n    100         handler = getattr(self, '_handle_' + msg_type, None)\n    101         if handler:\n--> 102             handler(msg)\n    103 \n    104     def _is_from_this_session(self, msg):\n    105         \"\"\" Returns whether a reply from the kernel originated from a request\n    106             from this frontend.\n    107         \"\"\"\n    108         session = self._kernel_manager.session.session\n    109         return msg['parent_header']['session'] == session\n\n/home/jscandal/sw/ipython_src/ipython.git/IPython/frontend/qt/console/ipython_widget.pyc in _handle_history_reply(self=<IPython.frontend.qt.console.rich_ipython_widget.RichIPythonWidget object>, msg={'buffers': [], 'content': {u'status': u'aborted'}, 'header': {u'date': datetime.datetime(2011, 8, 2, 16, 24, 37, 519223), u'msg_id': u'6a1e0c2c-933e-49de-bbca-33f6d864b3bc', u'msg_type': u'history_reply', u'session': u'968174cf-9e0c-4773-b2f0-803dc84654bb', u'username': u'kernel'}, 'msg_type': u'history_reply', 'parent_header': {u'date': datetime.datetime(2011, 8, 2, 16, 24, 34, 912289), u'msg_id': u'cb4cbb54-ab28-432b-867a-76840a040a5e', u'msg_type': u'history_request', u'session': u'67142a7f-df8d-4618-a5aa-7d097311bde8', u'username': u'jscandal'}})\n    163     def _handle_execute_reply(self, msg):\n    164         \"\"\" Reimplemented to support prompt requests.\n    165         \"\"\"\n    166         info = self._request_info.get('execute')\n    167         if info and info.id == msg['parent_header']['msg_id']:\n    168             if info.kind == 'prompt':\n    169                 number = msg['content']['execution_count'] + 1\n    170                 self._show_interpreter_prompt(number)\n    171             else:\n    172                 super(IPythonWidget, self)._handle_execute_reply(msg)\n    173 \n    174     def _handle_history_reply(self, msg):\n    175         \"\"\" Implemented to handle history tail replies, which are only supported\n    176             by the IPython kernel.\n    177         \"\"\"\n--> 178         history_items = msg['content']['history']\n    179         items = [ line.rstrip() for _, _, line in history_items ]\n    180         self._set_history(items)\n    181 \n    182     def _handle_pyout(self, msg):\n    183         \"\"\" Reimplemented for IPython-style \"display hook\".\n    184         \"\"\"\n    185         if not self._hidden and self._is_from_this_session(msg):\n    186             content = msg['content']\n    187             prompt_number = content['execution_count']\n    188             data = content['data']\n    189             if data.has_key('text/html'):\n    190                 self._append_plain_text(self.output_sep, True)\n    191                 self._append_html(self._make_out_prompt(prompt_number), True)\n    192                 html = data['text/html']\n    193                 self._append_plain_text('\\n', True)\n\nKeyError: 'history'\n\n***************************************************************************\n\nHistory of session input:\n</pre>\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU4NTE4OjE3NDk0YTE0ZTcwOTYzOWVhYWUxNWRmMGZlZWE3MGFmNmM0YjVmMWE=", "commit_message": "Merge pull request #745 from minrk/history\n\nDon't assume history requests succeed in qtconsole\r\n\r\ncloses gh-667", "commit_timestamp": "2011-09-09T21:34:56Z", "files": ["IPython/frontend/qt/console/console_widget.py", "IPython/frontend/qt/console/ipython_widget.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzoxZGM0ZmFhMzg3ZmRkY2Q3OWM2N2QxZmU3NTVhMDExOGJmMDhhNDFj", "commit_message": "Merge pull request #745 from minrk/history\n\nDon't assume history requests succeed in qtconsole\r\n\r\ncloses gh-667", "commit_timestamp": "2011-09-09T21:34:56Z", "files": ["IPython/frontend/qt/console/console_widget.py", "IPython/frontend/qt/console/ipython_widget.py"]}], "labels": ["qtconsole", "bug"], "created_at": "2011-08-03T14:28:11Z", "closed_at": "2011-09-09T21:34:58Z", "method": ["label", "regex"]}
{"issue_number": 665, "title": "Source introspection with ?? is broken", "body": "To reproduce:\n\n<pre>\nIn [1]: def  abcdef(x, y, *args, **kwargs):\n   ...:     pass\n   ...: \n\nIn [2]: abcdef??\n</pre>\n\n\nThe source stops at the first character. The same thing happens with %psource, although that's fixed in my py3compat branch, PR #663. I think it's somehow related to unicode, but I'm not sure how. Debugging it, `page.page()` on the result shows the problem, but `print`ing the same string doesn't.\n\nLinux, problem only affects terminal (not qtconsole), replicated with 0.11.rc3 and current master.\n", "commits": [{"node_id": "MDY6Q29tbWl0MTIzNjAwMzo1ZGUzZjM0MmY2NzA1Y2E4MTFlM2M0OWI1MjFhYmE1ZTM5ZWQyMDkz", "commit_message": "Convert source to native string before doing ANSI formatting.\n\nCloses gh-665", "commit_timestamp": "2011-08-16T10:26:53Z", "files": ["IPython/core/oinspect.py"]}, {"node_id": "MDY6Q29tbWl0MTIzNjAwMzphZmRiNTcwMGQ2YjlkODM1ZDZiM2RkN2EzMzUwMGJhMGUxNmI2NWY5", "commit_message": "Convert source to native string before doing ANSI formatting.\n\nCloses gh-665", "commit_timestamp": "2011-09-07T11:18:47Z", "files": ["IPython/core/oinspect.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzpmMTA4NTFhYjViNmNmNmNiY2NiNWI3Mjk1NDc2NGUyOGRiYWI5ZTZm", "commit_message": "Convert source to native string before doing ANSI formatting.\n\nCloses gh-665", "commit_timestamp": "2011-09-07T11:18:47Z", "files": ["IPython/core/oinspect.py"]}], "labels": [], "created_at": "2011-08-02T18:51:40Z", "closed_at": "2011-09-09T21:31:50Z", "method": ["regex"]}
{"issue_number": 662, "title": "ipython test failures on Mac OS X Lion", "body": "``` python\nIn [1]: import IPython\n\nIn [2]: IPython.test()\n**********************************************************************\nIPython test group: IPython.config\n...............................S.\n----------------------------------------------------------------------\nRan 33 tests in 0.060s\n\nOK (SKIP=1)\n**********************************************************************\nIPython test group: IPython.core\n.............................................................................................................................................................................................K............................................................................................................................................KF.F...\n======================================================================\nFAIL: Test that object's __del__ methods are called on exit.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/opt/local/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/nose/case.py\", line 187, in runTest\n    self.test(*self.arg)\n  File \"/opt/local/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/IPython/core/tests/test_run.py\", line 170, in test_obj_del\n    tt.ipexec_validate(self.fname, 'object A deleted')\n  File \"/opt/local/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/IPython/testing/tools.py\", line 260, in ipexec_validate\n    nt.assert_equals(out.strip(), expected_out.strip())\nAssertionError: '\\x1b[?1034hobject A deleted' != 'object A deleted'\n    \"'\\\\x1b[?1034hobject A deleted' != 'object A deleted'\" = '%s != %s' % (safe_repr('\\x1b[?1034hobject A deleted'), safe_repr('object A deleted'))\n    \"'\\\\x1b[?1034hobject A deleted' != 'object A deleted'\" = self._formatMessage(\"'\\\\x1b[?1034hobject A deleted' != 'object A deleted'\", \"'\\\\x1b[?1034hobject A deleted' != 'object A deleted'\")\n>>  raise self.failureException(\"'\\\\x1b[?1034hobject A deleted' != 'object A deleted'\")\n\n\n======================================================================\nFAIL: IPython.core.tests.test_run.TestMagicRunSimple.test_tclass\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/opt/local/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/nose/case.py\", line 187, in runTest\n    self.test(*self.arg)\n  File \"/opt/local/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/IPython/testing/decorators.py\", line 228, in skipper_func\n    return f(*args, **kwargs)\n  File \"/opt/local/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/IPython/core/tests/test_run.py\", line 208, in test_tclass\n    tt.ipexec_validate(self.fname, out)\n  File \"/opt/local/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/IPython/testing/tools.py\", line 260, in ipexec_validate\n    nt.assert_equals(out.strip(), expected_out.strip())\nAssertionError: \"\\x1b[?1034hARGV 1-: [u'C-first']\\nARGV 1-: [u'C-second']\\ntclass.py: deleting object: C-first\\nARGV 1-: [u'C-third']\\ntclass.py: deleting object: C-second\\ntclass.py: deleting object: C-third\" != \"ARGV 1-: [u'C-first']\\nARGV 1-: [u'C-second']\\ntclass.py: deleting object: C-first\\nARGV 1-: [u'C-third']\\ntclass.py: deleting object: C-second\\ntclass.py: deleting object: C-third\"\n    '\"\\\\x1b[?1034hARGV 1-: [u\\'C-first\\']\\\\nARGV 1-: [u\\'C-second\\']\\\\ntclass.py: deleting object: C-first\\\\nARGV 1-: [u\\'C-third\\']\\\\ntclass.py: deleting object: C-second\\\\ntclass.py: deleting object: C-third\" != \"ARGV 1-: [u\\'C-first\\']\\\\nARGV 1-: [u\\'C-second\\']\\\\ntclass.py: deleting object: C-first\\\\nARGV 1-: [u\\'C-third\\']\\\\ntclass.py: deleting object: C-second\\\\ntclass.py: deleting object: C-third\"' = '%s != %s' % (safe_repr(\"\\x1b[?1034hARGV 1-: [u'C-first']\\nARGV 1-: [u'C-second']\\ntclass.py: deleting object: C-first\\nARGV 1-: [u'C-third']\\ntclass.py: deleting object: C-second\\ntclass.py: deleting object: C-third\"), safe_repr(\"ARGV 1-: [u'C-first']\\nARGV 1-: [u'C-second']\\ntclass.py: deleting object: C-first\\nARGV 1-: [u'C-third']\\ntclass.py: deleting object: C-second\\ntclass.py: deleting object: C-third\"))\n    '\"\\\\x1b[?1034hARGV 1-: [u\\'C-first\\']\\\\nARGV 1-: [u\\'C-second\\']\\\\ntclass.py: deleting object: C-first\\\\nARGV 1-: [u\\'C-third\\']\\\\ntclass.py: deleting object: C-second\\\\ntclass.py: deleting object: C-third\" != \"ARGV 1-: [u\\'C-first\\']\\\\nARGV 1-: [u\\'C-second\\']\\\\ntclass.py: deleting object: C-first\\\\nARGV 1-: [u\\'C-third\\']\\\\ntclass.py: deleting object: C-second\\\\ntclass.py: deleting object: C-third\"' = self._formatMessage('\"\\\\x1b[?1034hARGV 1-: [u\\'C-first\\']\\\\nARGV 1-: [u\\'C-second\\']\\\\ntclass.py: deleting object: C-first\\\\nARGV 1-: [u\\'C-third\\']\\\\ntclass.py: deleting object: C-second\\\\ntclass.py: deleting object: C-third\" != \"ARGV 1-: [u\\'C-first\\']\\\\nARGV 1-: [u\\'C-second\\']\\\\ntclass.py: deleting object: C-first\\\\nARGV 1-: [u\\'C-third\\']\\\\ntclass.py: deleting object: C-second\\\\ntclass.py: deleting object: C-third\"', '\"\\\\x1b[?1034hARGV 1-: [u\\'C-first\\']\\\\nARGV 1-: [u\\'C-second\\']\\\\ntclass.py: deleting object: C-first\\\\nARGV 1-: [u\\'C-third\\']\\\\ntclass.py: deleting object: C-second\\\\ntclass.py: deleting object: C-third\" != \"ARGV 1-: [u\\'C-first\\']\\\\nARGV 1-: [u\\'C-second\\']\\\\ntclass.py: deleting object: C-first\\\\nARGV 1-: [u\\'C-third\\']\\\\ntclass.py: deleting object: C-second\\\\ntclass.py: deleting object: C-third\"')\n>>  raise self.failureException('\"\\\\x1b[?1034hARGV 1-: [u\\'C-first\\']\\\\nARGV 1-: [u\\'C-second\\']\\\\ntclass.py: deleting object: C-first\\\\nARGV 1-: [u\\'C-third\\']\\\\ntclass.py: deleting object: C-second\\\\ntclass.py: deleting object: C-third\" != \"ARGV 1-: [u\\'C-first\\']\\\\nARGV 1-: [u\\'C-second\\']\\\\ntclass.py: deleting object: C-first\\\\nARGV 1-: [u\\'C-third\\']\\\\ntclass.py: deleting object: C-second\\\\ntclass.py: deleting object: C-third\"')\n\n\n----------------------------------------------------------------------\nRan 343 tests in 6.907s\n\nFAILED (KNOWNFAIL=2, failures=2)\n**********************************************************************\nIPython test group: IPython.extensions\n..\n----------------------------------------------------------------------\nRan 2 tests in 0.002s\n\nOK\n**********************************************************************\nIPython test group: IPython.frontend\n..\n----------------------------------------------------------------------\nRan 2 tests in 0.003s\n\nOK\n**********************************************************************\nIPython test group: IPython.lib\n......\n----------------------------------------------------------------------\nRan 7 tests in 0.366s\n\nOK\n**********************************************************************\nIPython test group: IPython.scripts\n\n----------------------------------------------------------------------\nRan 0 tests in 0.000s\n\nOK\n**********************************************************************\nIPython test group: IPython.testing\n.........................S....S....................S\n----------------------------------------------------------------------\nRan 56 tests in 0.127s\n\nOK (SKIP=3)\n**********************************************************************\nIPython test group: IPython.utils\n...............................................SS..SSSS............S.....S...............................................................................................\n----------------------------------------------------------------------\nRan 170 tests in 2.142s\n\nOK (SKIP=8)\n**********************************************************************\nIPython test group: IPython.parallel\n..........................................................................F....................\n======================================================================\nFAIL: test_magic_px_blocking (IPython.parallel.tests.test_view.TestView)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/opt/local/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/IPython/parallel/tests/test_view.py\", line 322, in test_magic_px_blocking\n    self.assertTrue('[stdout:%i]'%v.targets in buf)\nAssertionError: False is not true\n    'False is not true' = self._formatMessage('False is not true', \"%s is not true\" % safe_repr(False))\n>>  raise self.failureException('False is not true')\n\n-------------------- >> begin captured stdout << ---------------------\nParallel execution on engine(s): 21\nParallel execution on engine(s): 21\n\n--------------------- >> end captured stdout << ----------------------\n\n----------------------------------------------------------------------\nRan 95 tests in 61.070s\n\nFAILED (failures=1)\n\n**********************************************************************\nTest suite completed for system with the following information:\n{'commit_hash': '1eea56b',\n 'commit_source': 'repository',\n 'ipython_path': '/Users/deil/github/ipython/IPython',\n 'ipython_version': '0.12.dev',\n 'os_name': 'posix',\n 'platform': 'Darwin-11.0.0-x86_64-i386-64bit',\n 'sys_executable': '/opt/local/Library/Frameworks/Python.framework/Versions/2.7/Resources/Python.app/Contents/MacOS/Python',\n 'sys_platform': 'darwin',\n 'sys_version': '2.7.2 (default, Jul 23 2011, 13:25:29) \\n[GCC 4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2335.15.00)]'}\n\nTools and libraries available at test time:\n   curses matplotlib zmq\n\nTools and libraries NOT available at test time:\n   pexpect pymongo qt wx wx.aui\n\nRan 9 test groups in 84.556s\n\nStatus:\nERROR - 2 out of 9 test groups failed.\n----------------------------------------\nRunner failed: IPython.core\nYou may wish to rerun this one individually, with:\n/opt/local/Library/Frameworks/Python.framework/Versions/2.7/Resources/Python.app/Contents/MacOS/Python /Users/deil/github/ipython/IPython/testing/iptest.py IPython.core\n\n----------------------------------------\nRunner failed: IPython.parallel\nYou may wish to rerun this one individually, with:\n/opt/local/Library/Frameworks/Python.framework/Versions/2.7/Resources/Python.app/Contents/MacOS/Python /Users/deil/github/ipython/IPython/testing/iptest.py IPython.parallel\n\nAn exception has occurred, use %tb to see the full traceback.\n\nSystemExit: 1\n\nTo exit: use 'exit', 'quit', or Ctrl-D.\n\nIn [3]: \n```\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU5NDQ2OjhlZjI4NDJjY2UyMzRkZGM2ZjJjMTE1OGYyZDlhOTkxYzMwNGMwZDM=", "commit_message": "strip leading 'ESC[?1034h' in tests caused by `import readline`\n\n`import readline` causes 'ESC[?1034h' to be the first output sometimes,\nso strip that off the front of the first line if it is found.\n\nThis has been reported to RedHat in 2007, but appears to only apply to\nOSX 10.7 at the moment.\n\ncloses gh-662", "commit_timestamp": "2011-08-02T21:25:42Z", "files": ["IPython/testing/tools.py"]}, {"node_id": "MDY6Q29tbWl0NjU5NDQ2OjY2MDhhNmIzMTJkODVkNjY3ZmUwODc4MGQzNGQwZDQ5YTc2MGI2MTc=", "commit_message": "more general fix for #662\n\nPreviously, the extra readline output was only stripped from the\nfront, but I have recently seen it (Python 3.2, OSX 10.7) elsewhere,\nso the replacement is now a general `re.sub`.", "commit_timestamp": "2012-03-08T18:12:43Z", "files": ["IPython/testing/tools.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjM5MTJlYTdjZjYyNDY0OGEzYzEwNGQ2ZWRhN2I5ZGIzZDlmM2UxNzk=", "commit_message": "Merge pull request #1472 from minrk/ipexec_esc\n\nmore general fix for #662\r\n\r\nPreviously, the extra readline output was only stripped from the front, but I have recently seen it (Python 3.2, OSX 10.7) elsewhere, so the replacement is now a general re.sub.", "commit_timestamp": "2012-03-13T16:42:19Z", "files": ["IPython/testing/tools.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzphNTJmYWE0NjQ2ZDdkZTdmNWJmMTY4YzBiNGNjMWFhMzEyMmY3OTQ4", "commit_message": "strip leading 'ESC[?1034h' in tests caused by `import readline`\n\n`import readline` causes 'ESC[?1034h' to be the first output sometimes,\nso strip that off the front of the first line if it is found.\n\nThis has been reported to RedHat in 2007, but appears to only apply to\nOSX 10.7 at the moment.\n\ncloses gh-662", "commit_timestamp": "2011-08-02T21:25:42Z", "files": ["IPython/testing/tools.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo1YTIxZTA1NjY5YjhjMzgyMWFlM2ZiMzFmZTQzMmMwYmVkOTc2NDA0", "commit_message": "more general fix for #662\n\nPreviously, the extra readline output was only stripped from the\nfront, but I have recently seen it (Python 3.2, OSX 10.7) elsewhere,\nso the replacement is now a general `re.sub`.", "commit_timestamp": "2012-03-08T18:12:43Z", "files": ["IPython/testing/tools.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzplY2JmMDI2OWZkY2E2OGU0MGZmOTYxYWQ3NWZhYjk3NGI2MTEwYmJh", "commit_message": "Merge pull request #1472 from minrk/ipexec_esc\n\nmore general fix for #662\r\n\r\nPreviously, the extra readline output was only stripped from the front, but I have recently seen it (Python 3.2, OSX 10.7) elsewhere, so the replacement is now a general re.sub.", "commit_timestamp": "2012-03-13T16:42:19Z", "files": ["IPython/testing/tools.py"]}], "labels": ["bug", "osx", "testing"], "created_at": "2011-08-01T22:23:30Z", "closed_at": "2011-10-14T19:44:49Z", "method": ["label"]}
{"issue_number": 655, "title": "ipython with qtconsole crashes", "body": "Windows XP, Python 2.6, ipython 0.11\n\nI just ran \"ipython qtconsole\".  It immediately crashed.  This is the post-mortem:\n\n(Moved to gist: https://gist.github.com/1118274 )\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU4NTE4OjZjZjQ5NWM1MjZjNTcyMWY4YWQyZTVmNjQ3OGZlYTUzNzY0YzM5OTY=", "commit_message": "Merge pull request #725 from minrk/i724\n\ndon't assume cursor.selectedText() is a string\r\n\r\ncloses gh-724\r\ncloses gh-655", "commit_timestamp": "2011-09-09T21:28:09Z", "files": ["IPython/external/qt.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzphYzZlZWI0MGE2MTQwODMzZWJiNWI1ZWFmNTI2MThjNDVjZmMzYWNk", "commit_message": "Merge pull request #725 from minrk/i724\n\ndon't assume cursor.selectedText() is a string\r\n\r\ncloses gh-724\r\ncloses gh-655", "commit_timestamp": "2011-09-09T21:28:09Z", "files": ["IPython/external/qt.py"]}], "labels": ["qtconsole", "windows", "bug"], "created_at": "2011-08-01T14:19:40Z", "closed_at": "2011-09-09T21:28:12Z", "method": ["label"]}
{"issue_number": 651, "title": "Completion doesn't work on element of a list", "body": "The auto completion doesn't work on an element of a list. See below::\n\n```\nIn [3]: my_list = ['0', 'second element']\n\nIn [4]: my_list.\nmy_list.append   my_list.count    my_list.extend   my_list.index    my_list.insert   my_list.pop      my_list.remove           my_list.reverse  my_list.sort\n\nIn [4]: my_list[0].\n.ICEauthority              .enthought/                .gtk-bookmarks             .pgadmin3                  .sql_test.py.swp\n.Private/                  .esd_auth                  .gvfs/                     .pip/                      .sqlite_history\n.bash_history              .fetchmailrc               .hplip/                    .pki/                      .ssh/\n.bash_logout               .fontconfig/               .index.sql.swp             .presentation.swp          .subversion/\n```\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU4NTE4OjEwMjFjYmU5Zjg2OTExNDEwOTZiNTYzMWZhZGZkZTU5YmMyYjIwNmE=", "commit_message": "Merge PR #668 (greedy completion)\n\ncloses gh-668\ncloses gh-651", "commit_timestamp": "2011-09-15T17:42:00Z", "files": ["IPython/core/completer.py", "IPython/core/interactiveshell.py", "IPython/core/tests/test_completer.py", "IPython/frontend/terminal/ipapp.py", "IPython/quarantine/ipy_greedycompleter.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo1MzAyN2YwZDE1MzczY2M3ZjlhOTIyNmFlMmE0MGU3NWFiZWM3OTE3", "commit_message": "Merge PR #668 (greedy completion)\n\ncloses gh-668\ncloses gh-651", "commit_timestamp": "2011-09-15T17:42:00Z", "files": ["IPython/core/completer.py", "IPython/core/interactiveshell.py", "IPython/core/tests/test_completer.py", "IPython/frontend/terminal/ipapp.py", "IPython/quarantine/ipy_greedycompleter.py"]}], "labels": [], "created_at": "2011-08-01T11:26:40Z", "closed_at": "2011-09-15T18:00:29Z", "method": ["regex"]}
{"issue_number": 645, "title": "Standalone WX GUI support is broken", "body": "The example in `docs/lib/gui-wx.py` doesn't currently work, and I've failed in all simple attempts at fixing it.  Since we can't hold the 0.11 release for any longer, I'm marking this as a known bug in the release notes, but we should get to the bottom of it.\n\nThe other three examples (Qt, GTK, Tk) do run fine.\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU4NTE4OjZlNDkyYmQ5NjUyOTYyY2ZkOTU4ZWI1ZjI4MWJiZTNkOGI3YTE4Zjk=", "commit_message": "Merge pull request #1296 from fperez/wxgui\n\nFix the broken example for `%gui wx`\r\nIt seems our Wx code was OK, it was just a problem with the example.\r\n\r\nCloses #645", "commit_timestamp": "2012-02-07T21:34:23Z", "files": ["docs/examples/lib/gui-wx.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzozNzFiNGE1Nzg1ODRjZjEwODkwZTdkZDdjZDkyNDRhNGJjZDJhYzY3", "commit_message": "Merge pull request #1296 from fperez/wxgui\n\nFix the broken example for `%gui wx`\r\nIt seems our Wx code was OK, it was just a problem with the example.\r\n\r\nCloses #645", "commit_timestamp": "2012-02-07T21:34:23Z", "files": ["docs/examples/lib/gui-wx.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjZlNDkyYmQ5NjUyOTYyY2ZkOTU4ZWI1ZjI4MWJiZTNkOGI3YTE4Zjk=", "commit_message": "Merge pull request #1296 from fperez/wxgui\n\nFix the broken example for `%gui wx`\r\nIt seems our Wx code was OK, it was just a problem with the example.\r\n\r\nCloses #645", "commit_timestamp": "2012-02-07T21:34:23Z", "files": ["docs/examples/lib/gui-wx.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjZlNDkyYmQ5NjUyOTYyY2ZkOTU4ZWI1ZjI4MWJiZTNkOGI3YTE4Zjk=", "commit_message": "Merge pull request #1296 from fperez/wxgui\n\nFix the broken example for `%gui wx`\r\nIt seems our Wx code was OK, it was just a problem with the example.\r\n\r\nCloses #645", "commit_timestamp": "2012-02-07T21:34:23Z", "files": ["docs/examples/lib/gui-wx.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzozNzFiNGE1Nzg1ODRjZjEwODkwZTdkZDdjZDkyNDRhNGJjZDJhYzY3", "commit_message": "Merge pull request #1296 from fperez/wxgui\n\nFix the broken example for `%gui wx`\r\nIt seems our Wx code was OK, it was just a problem with the example.\r\n\r\nCloses #645", "commit_timestamp": "2012-02-07T21:34:23Z", "files": ["docs/examples/lib/gui-wx.py"]}], "labels": ["bug"], "created_at": "2011-07-30T13:44:09Z", "closed_at": "2012-02-07T21:34:25Z", "linked_pr_number": [645], "method": ["label", "regex"]}
{"issue_number": 640, "title": "matplotlib macosx windows don't respond in qtconsole", "body": "Running 0.11 rc1 and rc4, I can use the osx backend to plot (in new figure windows) but the windows do not respond to mouse clicks or any gui events. Is this my fault or something to be fixed?\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU5NDQ2OjU5NDJlMmExZDFkNjNjNWI2MjA2OTY5NjgxMzZiYjJlNzAxNzE1MzY=", "commit_message": "use CFRunLoop directly in `ipython kernel --pylab osx`\n\nvia matplotlib.backend_macosx.TimerMac, rather than Tk\n\nFallback on Tk if matplotlib is < 1.1.0, which introduces the necessary Timer. This means that it still won't work on current EPD, which has X11-linked libtk and matplotlib 1.0.1,\nbut at least it will display a warning explaining why.\n\nalso remove caveat in docs that qtconsole doesn't work with native MacOSX, since it does on normal (non-EPD) installs.\n\nSo this will work in more places, but still not in most common failure case (stock EPD) described in #640.", "commit_timestamp": "2011-09-20T20:37:26Z", "files": ["IPython/zmq/ipkernel.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo3MTMzMWJjY2NjZDFlODc4YTFkNzJlNTJiZWVjMGI4MzcxYjlmMDgx", "commit_message": "use CFRunLoop directly in `ipython kernel --pylab osx`\n\nvia matplotlib.backend_macosx.TimerMac, rather than Tk\n\nFallback on Tk if matplotlib is < 1.1.0, which introduces the necessary Timer. This means that it still won't work on current EPD, which has X11-linked libtk and matplotlib 1.0.1,\nbut at least it will display a warning explaining why.\n\nalso remove caveat in docs that qtconsole doesn't work with native MacOSX, since it does on normal (non-EPD) installs.\n\nSo this will work in more places, but still not in most common failure case (stock EPD) described in #640.", "commit_timestamp": "2011-09-20T20:37:26Z", "files": ["IPython/zmq/ipkernel.py"]}], "labels": ["qtconsole", "bug", "osx"], "created_at": "2011-07-29T22:33:19Z", "closed_at": "2011-10-14T17:56:25Z", "method": ["label"]}
{"issue_number": 638, "title": "Qt console --pylab=inline and getfigs(), etc.", "body": "I was trying to modify some figures that I'd already created in --pylab=inline mode, and interestingly found that things behave somewhat weirdly, e.g. getfigs() doesn't work, and, for example, calling figure(1) repeatedly gets you a different object each time.\n\n```\nIn [2]: figure(1)\nOut[2]: <matplotlib.figure.Figure at 0x3c95e10>\n\nIn [3]: figure(1)\nOut[3]: <matplotlib.figure.Figure at 0x3d213d0>\n\nIn [4]: figure(1)\nOut[4]: <matplotlib.figure.Figure at 0x3d2ee10>\n```\n\nShould this be considered a bug?\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU5NDQ2OjZjMjJlM2ZmYjViY2NhMTU1MGZlNzc5Y2I2YWMzNTM2OGU3YTkzMmI=", "commit_message": "don't close figures every cycle in inline backend\n\nThis allows gcf(), getfigs(), etc. to be useful again in the qtconsole and notebook.\n\ndraw_if_interactive() signals that the current figure is to be drawn.\n\nFigures that are created and closed in the same cell will not be drawn.\n\nSee #638", "commit_timestamp": "2011-10-18T03:38:50Z", "files": ["IPython/zmq/pylab/backend_inline.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo2MWY3ODFhOGVjNmM3NTEwZTdlNTYxYTA5MTQzN2IyZDQ0YWU3Nzlj", "commit_message": "don't close figures every cycle in inline backend\n\nThis allows gcf(), getfigs(), etc. to be useful again in the qtconsole and notebook.\n\ndraw_if_interactive() signals that the current figure is to be drawn.\n\nFigures that are created and closed in the same cell will not be drawn.\n\nSee #638", "commit_timestamp": "2011-10-18T03:38:50Z", "files": ["IPython/zmq/pylab/backend_inline.py"]}], "labels": ["qtconsole"], "created_at": "2011-07-29T19:41:25Z", "closed_at": "2011-10-19T01:57:05Z", "method": ["regex"]}
{"issue_number": 636, "title": "debugger.py: pydb broken", "body": "pydb support in IPython/core/debugger.py needs updating for the new configuration:\nline 41:\n\n```\n#We have to check this directly from sys.argv, config struct not yet available\nif '-pydb' in sys.argv:\n```\n\nbut -pydb and --pydb are not accepted as a commandline argument for ipython\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU5NDQ2OmQxNmIzOGVkNGY1MjgwYjhhYjExNzQzYjRjY2E2ZWY2OGQ1MWIyYTQ=", "commit_message": "re-enable pydb flag\n\nNote that pydb has been deprecated, and superseded by pydbgr, which may be\nabandoned.\n\nIt would be preferable if the Pdb class could inherit from pydb or pdb\nbased on a runtime flag rather than checking sys.argv at the top level.\nThis at least restores old behavior for pydb users.\n\ncloses #636", "commit_timestamp": "2011-10-15T16:55:47Z", "files": ["IPython/core/debugger.py", "IPython/core/shellapp.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo1OGExYjY5ZTk1NzVhOWRiOTg0NWM0ODFhYmExNGE2NWY3N2M3MzI1", "commit_message": "re-enable pydb flag\n\nNote that pydb has been deprecated, and superseded by pydbgr, which may be\nabandoned.\n\nIt would be preferable if the Pdb class could inherit from pydb or pdb\nbased on a runtime flag rather than checking sys.argv at the top level.\nThis at least restores old behavior for pydb users.\n\ncloses #636", "commit_timestamp": "2011-10-15T16:55:47Z", "files": ["IPython/core/debugger.py", "IPython/core/shellapp.py"]}], "labels": ["bug"], "created_at": "2011-07-29T19:10:39Z", "closed_at": "2011-10-25T00:50:57Z", "method": ["label", "regex"]}
{"issue_number": 633, "title": "Execution count & SyntaxError", "body": "If run_cell is called with `store_history=False`, we don't increment the execution count. Except that, reading the code, we do if the code we're trying to run has a syntax error. We should be consistent.\n\nThis is low priority, because end user code is always run with `store_history=True`.\n", "commits": [{"node_id": "MDY6Q29tbWl0MTIzNjAwMzphOWQ2OWYyMzY0OGRmMTkwNmFjYzA2NmIwMmYzNzE3MTVhOWMwNDEx", "commit_message": "After a SyntaxError in code run by run_cell, only increment execution count where we would normally.\n\nCloses gh-633", "commit_timestamp": "2011-11-30T12:41:15Z", "files": ["IPython/core/interactiveshell.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4Ojc2MmIwZWFhOTBhMzgyYzEwOTMxNGE4ZmE5MzU4NzY2ZjU2YzhkNzg=", "commit_message": "After a SyntaxError in code run by run_cell, only increment execution count where we would normally.\n\nCloses gh-633\ncloses gh-1070", "commit_timestamp": "2011-12-05T23:57:44Z", "files": ["IPython/core/interactiveshell.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzoyNmM4M2IwYmYxOGY2ZGUzNTA2N2YxM2IyZTZlZTM2ZWM2ZjBiODY0", "commit_message": "After a SyntaxError in code run by run_cell, only increment execution count where we would normally.\n\nCloses gh-633\ncloses gh-1070", "commit_timestamp": "2011-12-05T23:57:44Z", "files": ["IPython/core/interactiveshell.py"]}], "labels": ["bug"], "created_at": "2011-07-29T10:23:19Z", "closed_at": "2011-12-05T23:58:11Z", "method": ["label"]}
{"issue_number": 621, "title": "[qtconsole] on windows xp, cannot  PageUp more than once", "body": "pageUp key only pages up once. Multiple key presses on PageUp do not scroll upwards any further.\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU4NTE4OjkwMmU2N2Y3NzYxYWQyMWJkODMzNmY4MjU5ZWVjNDQ0NDI3NDM5NmE=", "commit_message": "Fix ConsoleWidget bug: cannot scroll freely with Page Up/Down.\n\nCloses gh-621.", "commit_timestamp": "2011-07-19T21:12:37Z", "files": ["IPython/frontend/qt/console/console_widget.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo5MDZhZDU1MTdiNTM3NGQyNWQzN2U0ZTc0MjUxZmI2ZjhlMTFmYWIx", "commit_message": "Fix ConsoleWidget bug: cannot scroll freely with Page Up/Down.\n\nCloses gh-621.", "commit_timestamp": "2011-07-19T21:12:37Z", "files": ["IPython/frontend/qt/console/console_widget.py"]}], "labels": ["qtconsole", "bug"], "created_at": "2011-07-22T15:47:55Z", "closed_at": "2011-07-22T18:03:32Z", "method": ["label"]}
{"issue_number": 617, "title": "[qtconsole] %hist doesn't show anything in qtconsole", "body": "I have built rc2 on Windows XP and while the qtconsole works fine for the most part, %hist does not show any history in the qtconsole.\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU4NTE4OmZlNDQ5NDNjZGRlYjNhZDIzZDRjMmJiYmE0MmYyMmFiYzc5NmQ2OTk=", "commit_message": "Revert commit that fixed gh-617 as it broke %run in the Qt console.\n\nUnfortunately b641eb66099e85685d315fb420aab560889fbc48 caused %run to\nstop working in the Qt console, so for now we must disable it (too\nclose to a release).  See gh-617 for further details, and restore once\nthe other issues have been addressed.", "commit_timestamp": "2011-07-26T00:40:28Z", "files": ["IPython/zmq/zmqshell.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjI4MjAyZThlYjZlNDFkZGViYWY1ODliYzdjMWFjNDliZjNiOTk3NjQ=", "commit_message": "Comment explaining overriding readline_use traitlet.", "commit_timestamp": "2011-07-22T19:19:39Z", "files": ["IPython/zmq/zmqshell.py"]}], "labels": ["qtconsole", "windows", "bug"], "created_at": "2011-07-21T14:07:12Z", "closed_at": "2011-09-14T19:35:56Z", "linked_pr_number": [617], "method": ["label"]}
{"issue_number": 597, "title": "UnicodeDecodeError: 'ascii' codec can't decode byte 0xc2", "body": "running following results in an UnicodeDecodeError with current git head:\n\n```\n$ cat test.ipy\nfrom BeautifulSoup import BeautifulSoup\ns = \"\"\"<td>\u00a0\u00a0\u00a0\u00a0\u00a0</td>\n<td>xxxxxxxxxxx</td>\n<td>yyyyyyyyy</td>\n<td>4asfag</td>\"\"\"\nsoup = BeautifulSoup(s)\nsoup.findAll(\"td\")\n\n$ irunner --ipython test.ipy\n...\n----> 1 soup.findAll(\"td\")\n\n/home/jtaylor/tmp/ipython/IPython/core/displayhook.pyc in __call__(self, result)\n    300             self.start_displayhook()\n    301             self.write_output_prompt()\n--> 302             format_dict = self.compute_format_data(result)\n    303             self.write_format_data(format_dict)\n    304             self.update_user_ns(result)\n\n/home/jtaylor/tmp/ipython/IPython/core/displayhook.pyc in compute_format_data(self, result)\n    213             MIME type representation of the object.\n    214         \"\"\"\n--> 215         return self.shell.display_formatter.format(result)\n    216 \n    217     def write_format_data(self, format_dict):\n\n/home/jtaylor/tmp/ipython/IPython/core/formatters.pyc in format(self, obj, include, exclude)\n    120                     continue\n    121             try:\n--> 122                 data = formatter(obj)\n    123             except:\n    124                 # FIXME: log the exception\n\n/home/jtaylor/tmp/ipython/IPython/core/formatters.pyc in __call__(self, obj)\n    440             printer.pretty(obj)\n    441             printer.flush()\n--> 442             return stream.getvalue()\n    443 \n    444 \n\n/usr/lib/python2.7/StringIO.pyc in getvalue(self)\n    268         \"\"\"\n    269         if self.buflist:\n--> 270             self.buf += ''.join(self.buflist)\n    271             self.buflist = []\n    272         return self.buf\n\nUnicodeDecodeError: 'ascii' codec can't decode byte 0xc2 in position 4: ordinal not in range(128)\n```\n\nit works when one prints the last line\n", "commits": [{"node_id": "MDY6Q29tbWl0MTIzNjAwMzo3YTU5ZWYzYTlhMWYxN2M3MTFjOTc5NTJkMWI0ZGI4YmY0NGE4MGNj", "commit_message": "Fix bug with non-ascii reprs inside pretty-printed lists.\n\nCloses gh-597", "commit_timestamp": "2011-07-19T22:36:23Z", "files": ["IPython/core/formatters.py"]}, {"node_id": "MDY6Q29tbWl0MTIzNjAwMzozNTg2OWRiNWQ2Nzc4ZWI3NGQzMTIxYjk1NDZjMTRhNDczNDIzZDMw", "commit_message": "Comment explaining fix for gh-597.", "commit_timestamp": "2011-07-22T19:13:33Z", "files": ["IPython/core/formatters.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo5ODdlZDZiN2M3ZTM0OGI1MTcyOTRkMzQ5YjFhMjBjMzMxZjVhODc3", "commit_message": "Fix bug with non-ascii reprs inside pretty-printed lists.\n\nCloses gh-597", "commit_timestamp": "2011-07-19T22:36:23Z", "files": ["IPython/core/formatters.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo3Nzc3NTc5NmQ3NGJlZjJlOThjMGFiOTY1YjBmNzVkNTZkMjAxNjY1", "commit_message": "Comment explaining fix for gh-597.", "commit_timestamp": "2011-07-22T19:13:33Z", "files": ["IPython/core/formatters.py"]}], "labels": ["unicode", "bug"], "created_at": "2011-07-19T21:33:06Z", "closed_at": "2011-07-22T19:29:20Z", "method": ["label"]}
{"issue_number": 594, "title": "irunner command line options defer to file extensions", "body": "Running `irunner --ipython script.py` currently sees the .py extension, and chooses the Python runner. Command line options should probably override file extensions.\n\n---\n\nOriginal bug report:\n\nwhen running irunner from git head with --interact or -i:\n\n$ irunner  --interact /tmp/test.py\nUsage: \nirunner [options] file_to_run\n\n...\n\nirunner: error: no such option: --interact\n\nalso the --ipython option does not seem to work, it has regular python prompts and not the ipython prompts:\n$ irunner  /tmp/test.py\n\n> > > print \"test\"\n", "commits": [{"node_id": "MDY6Q29tbWl0MjA2NTk3MTo5YWQxNTYzMWYyMmYxYmM4MDkzNDI5ZTUzODM5MTlhZGUxOWEwZTNm", "commit_message": "irunner: prefer command line option over extension for mode\n\ncloses gh-594", "commit_timestamp": "2011-07-19T12:39:15Z", "files": ["IPython/lib/irunner.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo5MTQ4ZDNkYWQ3ZTBhYzkwNDZmNWRhNTliYzMwNTdlODI1NzJkOGMx", "commit_message": "irunner: prefer command line option over extension for mode\n\ncloses gh-594", "commit_timestamp": "2011-07-19T12:39:15Z", "files": ["IPython/lib/irunner.py"]}], "labels": [], "created_at": "2011-07-19T11:40:47Z", "closed_at": "2011-07-23T20:54:09Z", "method": ["regex"]}
{"issue_number": 586, "title": "? + plot() Command B0rks QTConsole Strangely", "body": "In the qtconsole, when I get help on something (not necessarily a valid object) enclosed in the plot command, the interperater hangs (no restart option) and a lot of stuff is generated at the console:\n\nBasically . . .\n\n<pre>\nIn [1]: from pylab import *\nIn [2]: plot?\nIn [3]: a?\nObject `a` not found.\nIn [4]: plot(a?\n[Hang and shell output below, no txt crash file generated either as far as I can tell . . .]\n\n/usr/local/lib/python2.7/dist-packages/IPython/frontend/qt/console/frontend_widget.pyc in _event_filter_console_keypress(self=<IPython.frontend.qt.console.rich_ipython_widget.RichIPythonWidget object>, event=<PyQt4.QtGui.QKeyEvent object>)\n    253 \n    254             # Smart backspace: remove four characters in one backspace if:\n    255             # 1) everything left of the cursor is whitespace\n    256             # 2) the four characters immediately left of the cursor are spaces\n    257             if key == QtCore.Qt.Key_Backspace:\n    258                 col = self._get_input_buffer_cursor_column()\n    259                 cursor = self._control.textCursor()\n    260                 if col > 3 and not cursor.hasSelection():\n    261                     text = self._get_input_buffer_cursor_line()[:col]\n    262                     if text.endswith('    ') and not text.strip():\n    263                         cursor.movePosition(QtGui.QTextCursor.Left,\n    264                                             QtGui.QTextCursor.KeepAnchor, 4)\n    265                         cursor.removeSelectedText()\n    266                         return True\n    267 \n--> 268         return super(FrontendWidget, self)._event_filter_console_keypress(event)\n    269 \n    270     def _insert_continuation_prompt(self, cursor):\n    271         \"\"\" Reimplemented for auto-indentation.\n    272         \"\"\"\n    273         super(FrontendWidget, self)._insert_continuation_prompt(cursor)\n    274         cursor.insertText(' ' * self._input_splitter.indent_spaces)\n    275 \n    276     #---------------------------------------------------------------------------\n    277     # 'BaseFrontendMixin' abstract interface\n    278     #---------------------------------------------------------------------------\n    279 \n    280     def _handle_complete_reply(self, rep):\n    281         \"\"\" Handle replies for tab completion.\n    282         \"\"\"\n    283         cursor = self._get_cursor()\n\n/usr/local/lib/python2.7/dist-packages/IPython/frontend/qt/console/console_widget.pyc in _event_filter_console_keypress(self=<IPython.frontend.qt.console.rich_ipython_widget.RichIPythonWidget object>, event=<PyQt4.QtGui.QKeyEvent object>)\n    968                     self._append_plain_text('\\n')\n    969                     self._reading = False\n    970                     if self._reading_callback:\n    971                         self._reading_callback()\n    972 \n    973                 # If the input buffer is a single line or there is only\n    974                 # whitespace after the cursor, execute. Otherwise, split the\n    975                 # line with a continuation prompt.\n    976                 elif not self._executing:\n    977                     cursor.movePosition(QtGui.QTextCursor.End,\n    978                                         QtGui.QTextCursor.KeepAnchor)\n    979                     at_end = len(cursor.selectedText().strip()) == 0\n    980                     single_line = (self._get_end_cursor().blockNumber() ==\n    981                                    self._get_prompt_cursor().blockNumber())\n    982                     if (at_end or shift_down or single_line) and not ctrl_down:\n--> 983                         self.execute(interactive = not shift_down)\n    984                     else:\n    985                         # Do this inside an edit block for clean undo/redo.\n    986                         cursor.beginEditBlock()\n    987                         cursor.setPosition(position)\n    988                         cursor.insertText('\\n')\n    989                         self._insert_continuation_prompt(cursor)\n    990                         cursor.endEditBlock()\n    991 \n    992                         # Ensure that the whole input buffer is visible.\n    993                         # FIXME: This will not be usable if the input buffer is\n    994                         # taller than the console widget.\n    995                         self._control.moveCursor(QtGui.QTextCursor.End)\n    996                         self._control.setTextCursor(cursor)\n    997 \n    998         #------ Control/Cmd modifier -------------------------------------------\n\n/usr/local/lib/python2.7/dist-packages/IPython/frontend/qt/console/history_console_widget.pyc in execute(self=<IPython.frontend.qt.console.rich_ipython_widget.RichIPythonWidget object>, source=None, hidden=False, interactive=True)\n     30         self._history_edits = {}\n     31         self._history_index = 0\n     32         self._history_prefix = ''\n     33 \n     34     #---------------------------------------------------------------------------\n     35     # 'ConsoleWidget' public interface\n     36     #---------------------------------------------------------------------------\n     37 \n     38     def execute(self, source=None, hidden=False, interactive=False):\n     39         \"\"\" Reimplemented to the store history.\n     40         \"\"\"\n     41         if not hidden:\n     42             history = self.input_buffer if source is None else source\n     43 \n     44         executed = super(HistoryConsoleWidget, self).execute(\n---> 45             source, hidden, interactive)\n        global startswithR = undefined\n        global t = undefined\n        global _store_editsR = undefined\n        global R = undefined\n        global prefixt = undefined\n        global indext = undefined\n        global replaceR = undefined\n        global s = undefined\n        global usr = undefined\n        global local = undefined\n        global lib = undefined\n        global python2 = undefined\n        global dist = undefined\n        global packages = undefined\n        global IPython = undefined\n        global frontend = undefined\n        global qt = undefined\n        global console = undefined\n        global history_console_widget.pyR = undefined\n        global c = undefined\n        global C = undefined\n        global j = undefined\n        global xN = undefined\n        global k = undefined\n        global r_ = undefined\n        global d = undefined\n        global r = undefined\n        global Pq = undefined\n        global q = undefined\n        global W = undefined\n        global _ = undefined\n        global n = undefined\n        global S = undefined\n        global If = undefined\n        global possible = undefined\n        global set = undefined\n        global the = undefined\n        global input = undefined\n        global buffer = undefined\n        global to = undefined\n        global a = undefined\n        global subsequent = undefined\n        history = u'plot(a?'\n        global item. = undefined\n     46 \n     47         if executed and not hidden:\n     48             # Save the command unless it was an empty string or was identical \n     49             # to the previous command.\n     50             history = history.rstrip()\n     51             if history and (not self._history or self._history[-1] != history):\n     52                 self._history.append(history)\n     53 \n     54             # Emulate readline: reset all history edits.\n     55             self._history_edits = {}\n     56 \n     57             # Move the history index to the most recent item.\n     58             self._history_index = len(self._history)\n     59 \n     60         return executed\n\n/usr/local/lib/python2.7/dist-packages/IPython/frontend/qt/console/console_widget.pyc in execute(self=<IPython.frontend.qt.console.rich_ipython_widget.RichIPythonWidget object>, source=u'plot(a?\\n', hidden=False, interactive=True)\n    453         # WARNING: The order in which things happen here is very particular, in\n    454         # large part because our syntax highlighting is fragile. If you change\n    455         # something, test carefully!\n    456 \n    457         # Decide what to execute.\n    458         if source is None:\n    459             source = self.input_buffer\n    460             if not hidden:\n    461                 # A newline is appended later, but it should be considered part\n    462                 # of the input buffer.\n    463                 source += '\\n'\n    464         elif not hidden:\n    465             self.input_buffer = source\n    466             \n    467         # Execute the source or show a continuation prompt if it is incomplete.\n--> 468         complete = self._is_complete(source, interactive)\n        global j = undefined\n        global d = undefined\n        global t = undefined\n    469         if hidden:\n    470             if complete:\n    471                 self._execute(source, hidden)\n    472             else:\n    473                 error = 'Incomplete noninteractive input: \"%s\"'\n    474                 raise RuntimeError(error % source)                \n    475         else:\n    476             if complete:\n    477                 self._append_plain_text('\\n')\n    478                 self._input_buffer_executing = self.input_buffer\n    479                 self._executing = True\n    480                 self._prompt_finished()\n    481 \n    482                 # The maximum block count is only in effect during execution.\n    483                 # This ensures that _prompt_pos does not become invalid due to\n\n/usr/local/lib/python2.7/dist-packages/IPython/frontend/qt/console/frontend_widget.pyc in _is_complete(self=<IPython.frontend.qt.console.rich_ipython_widget.RichIPythonWidget object>, source=u'plot(a?\\n', interactive=True)\n    159         text = self._control.textCursor().selection().toPlainText()\n    160         if text:\n    161             lines = map(transform_classic_prompt, text.splitlines())\n    162             text = '\\n'.join(lines)\n    163             QtGui.QApplication.clipboard().setText(text)\n    164 \n    165     #---------------------------------------------------------------------------\n    166     # 'ConsoleWidget' abstract interface\n    167     #---------------------------------------------------------------------------\n    168 \n    169     def _is_complete(self, source, interactive):\n    170         \"\"\" Returns whether 'source' can be completely processed and a new\n    171             prompt created. When triggered by an Enter/Return key press,\n    172             'interactive' is True; otherwise, it is False.\n    173         \"\"\"\n--> 174         complete = self._input_splitter.push(source)\n        global N = undefined\n        global R = undefined\n        global R0 = undefined\n        global R1 = undefined\n        global t = undefined\n        global SignalR = undefined\n        global floatR = undefined\n        global objectRy = undefined\n        global R3 = undefined\n        global R6 = undefined\n        global R7 = undefined\n        global RD = undefined\n        global RC = undefined\n        global Rn = undefined\n        global Rt = undefined\n        global RX = undefined\n        global sU = undefined\n        global usr = undefined\n        global local = undefined\n        global lib = undefined\n        global python2 = undefined\n        global dist = undefined\n        global packages = undefined\n        global IPython = undefined\n        global frontend = undefined\n        global qt = undefined\n        global console = undefined\n        global frontend_widget.pyR2 = undefined\n        global J = undefined\n        global sd = undefined\n        global __future__R = undefined\n        global collectionsR = undefined\n        global pygments.lexersR = undefined\n        global IPython.external.qtR = undefined\n        global IPython.core.inputsplitterR = undefined\n        global IPython.core.oinspectR = undefined\n        global IPython.frontend.qt.base_frontend_mixinR = undefined\n        global IPython.utils.traitletsR = undefined\n        global bracket_matcherR = undefined\n        global call_tip_widgetR = undefined\n        global completion_lexerR = undefined\n        global history_console_widgetR = undefined\n        global pygments_highlighterR = undefined\n        global R2 = undefined\n        global frontend_widget.pyt = undefined\n        global module = undefined\n        global s = undefined\n    175         if interactive:\n    176             complete = not self._input_splitter.push_accepts_more()\n    177         return complete\n    178 \n    179     def _execute(self, source, hidden):\n    180         \"\"\" Execute 'source'. If 'hidden', do not show any output.\n    181 \n    182         See parent class :meth:`execute` docstring for full details.\n    183         \"\"\"\n    184         msg_id = self.kernel_manager.shell_channel.execute(source, hidden)\n    185         self._request_info['execute'] = self._ExecutionRequest(msg_id, 'user')\n    186         self._hidden = hidden\n    187         if not hidden:\n    188             self.executing.emit(source)\n    189         \n\n/usr/local/lib/python2.7/dist-packages/IPython/core/inputsplitter.pyc in push(self=<IPython.core.inputsplitter.IPythonInputSplitter object>, lines=u'plot(a?\\n')\n    866             changed_input_mode = True\n    867             saved_input_mode = 'cell'\n    868             self.input_mode = 'line'\n    869 \n    870         # Store raw source before applying any transformations to it.  Note\n    871         # that this must be done *after* the reset() call that would otherwise\n    872         # flush the buffer.\n    873         self._store(lines, self._buffer_raw, 'source_raw')\n    874         \n    875         try:\n    876             push = super(IPythonInputSplitter, self).push\n    877             for line in lines_list:\n    878                 if self._is_complete or not self._buffer or \\\n    879                    (self._buffer and self._buffer[-1].rstrip().endswith(':')):\n    880                     for f in transforms:\n--> 881                         line = f(line)\n    882 \n    883                 out = push(line)\n    884         finally:\n    885             if changed_input_mode:\n    886                 self.input_mode = saved_input_mode\n    887         return out\n\n/usr/local/lib/python2.7/dist-packages/IPython/core/inputsplitter.pyc in transform_help_end(line=u'plot(a?')\n    680         tpl = '%sget_ipython().magic(u\"%s %s\", next_input=%s)'\n    681         return tpl % (lspace, method, target, make_quoted_expr(next_input))\n    682     else:\n    683         return '%sget_ipython().magic(u\"%s %s\")' % (lspace, method, target)\n    684 \n    685 _initial_space_re = re.compile(r'\\s*')\n    686 _help_end_re = re.compile(r\"\"\"(%?\n    687                               [a-zA-Z_*][a-zA-Z0-9_*]*       # Variable name\n    688                               (\\.[a-zA-Z_*][a-zA-Z0-9_*]*)*   # .etc.etc\n    689                               )\n    690                               (\\?\\??)$                       # ? or ??\"\"\",\n    691                               re.VERBOSE)\n    692 def transform_help_end(line):\n    693     \"\"\"Translate lines with ?/?? at the end\"\"\"\n    694     m = _help_end_re.search(line)\n--> 695     if m is None or has_comment(line):\n    696         return line\n    697     target = m.group(1)\n    698     esc = m.group(3)\n    699     lspace = _initial_space_re.match(line).group(0)\n    700     newline = _make_help_call(target, esc, lspace)\n    701     \n    702     # If we're mid-command, put it back on the next prompt for the user.\n    703     next_input = line.rstrip('?') if line.strip() != m.group(0) else None\n    704         \n    705     return _make_help_call(target, esc, lspace, next_input)\n    706 \n    707 \n    708 class EscapedTransformer(object):\n    709     \"\"\"Class to transform lines that are explicitly escaped out.\"\"\"\n    710 \n\n/usr/local/lib/python2.7/dist-packages/IPython/core/inputsplitter.pyc in has_comment(src=u'plot(a?')\n    161 def has_comment(src):\n    162     \"\"\"Indicate whether an input line has (i.e. ends in, or is) a comment.\n    163     \n    164     This uses tokenize, so it can distinguish comments from # inside strings.\n    165     \n    166     Parameters\n    167     ----------\n    168     src : string\n    169       A single line input string.\n    170     \n    171     Returns\n    172     -------\n    173     Boolean: True if source has a comment.\n    174     \"\"\"\n    175     readline = StringIO(src).readline\n--> 176     toktypes = set(t[0] for t in tokenize.generate_tokens(readline))\n        global OverflowErrort = undefined\n    177     return(tokenize.COMMENT in toktypes)\n    178 \n    179 \n    180 def get_input_encoding():\n    181     \"\"\"Return the default standard input encoding.\n    182 \n    183     If sys.stdin has no encoding, 'ascii' is returned.\"\"\"\n    184     # There are strange environments for which sys.stdin.encoding is None. We\n    185     # ensure that a valid encoding is returned.\n    186     encoding = getattr(sys.stdin, 'encoding', None)\n    187     if encoding is None:\n    188         encoding = 'ascii'\n    189     return encoding\n    190 \n    191 #-----------------------------------------------------------------------------\n\n/usr/local/lib/python2.7/dist-packages/IPython/core/inputsplitter.pyc in <genexpr>((t=(52, u'?', (1, 6), (1, 7), u'plot(a?'),))\n    161 def has_comment(src):\n    162     \"\"\"Indicate whether an input line has (i.e. ends in, or is) a comment.\n    163     \n    164     This uses tokenize, so it can distinguish comments from # inside strings.\n    165     \n    166     Parameters\n    167     ----------\n    168     src : string\n    169       A single line input string.\n    170     \n    171     Returns\n    172     -------\n    173     Boolean: True if source has a comment.\n    174     \"\"\"\n    175     readline = StringIO(src).readline\n--> 176     toktypes = set(t[0] for t in tokenize.generate_tokens(readline))\n        global OverflowErrort = undefined\n    177     return(tokenize.COMMENT in toktypes)\n    178 \n    179 \n    180 def get_input_encoding():\n    181     \"\"\"Return the default standard input encoding.\n    182 \n    183     If sys.stdin has no encoding, 'ascii' is returned.\"\"\"\n    184     # There are strange environments for which sys.stdin.encoding is None. We\n    185     # ensure that a valid encoding is returned.\n    186     encoding = getattr(sys.stdin, 'encoding', None)\n    187     if encoding is None:\n    188         encoding = 'ascii'\n    189     return encoding\n    190 \n    191 #-----------------------------------------------------------------------------\n\n/usr/lib/python2.7/tokenize.pyc in generate_tokens(readline=<bound method StringIO.readline of <StringIO.StringIO instance>>)\n    342                 continue\n    343 \n    344             if column > indents[-1]:           # count indents or dedents\n    345                 indents.append(column)\n    346                 yield (INDENT, line[:pos], (lnum, 0), (lnum, pos), line)\n    347             while column < indents[-1]:\n    348                 if column not in indents:\n    349                     raise IndentationError(\n    350                         \"unindent does not match any outer indentation level\",\n    351                         (\"<tokenize>\", lnum, pos, line))\n    352                 indents = indents[:-1]\n    353                 yield (DEDENT, '', (lnum, pos), (lnum, pos), line)\n    354 \n    355         else:                                  # continued statement\n    356             if not line:\n--> 357                 raise TokenError, (\"EOF in multi-line statement\", (lnum, 0))\n    358             continued = 0\n    359 \n    360         while pos < max:\n    361             pseudomatch = pseudoprog.match(line, pos)\n    362             if pseudomatch:                                # scan for tokens\n    363                 start, end = pseudomatch.span(1)\n    364                 spos, epos, pos = (lnum, start), (lnum, end), end\n    365                 token, initial = line[start:end], line[start]\n    366 \n    367                 if initial in numchars or \\\n    368                    (initial == '.' and token != '.'):      # ordinary number\n    369                     yield (NUMBER, token, spos, epos, line)\n    370                 elif initial in '\\r\\n':\n    371                     yield (NL if parenlev > 0 else NEWLINE,\n    372                            token, spos, epos, line)\n\nTokenError: ('EOF in multi-line statement', (2, 0))\n\n**********************************************************************\n\nOops, ipython crashed. We do our best to make it stable, but...\n\nA crash report was automatically generated with the following information:\n  - A verbatim copy of the crash traceback.\n  - A copy of your input history during this session.\n  - Data on your current $self.app_name configuration.\n\nIt was left in the file named:\n    'Crash_report_ipython.txt'\nIf you can email this file to the developers, the information in it will help\nthem in understanding and correcting the problem.\n\nYou can mail it to: $self.contact_name at fperez.net@gmail.com\nwith the subject 'ipython Crash Report'.\n\nIf you want to do it now, the following command will work (under Unix):\nmail -s 'ipython Crash Report' fperez.net@gmail.com < Crash_report_ipython.txt\n\nTo ensure accurate tracking of this issue, please file a report about it at:\nhttp://github.com/ipython/ipython/issues\n\nHit <Enter> to quit this message (your terminal may close):QCoreApplication::exec: The event loop is already running\nQCoreApplication::exec: The event loop is already running\nQCoreApplication::exec: The event loop is already running\nQCoreApplication::exec: The event loop is already running\nQCoreApplication::exec: The event loop is already running\nQCoreApplication::exec: The event loop is already running\n</pre>\n\n(this message repeats until I kill the program)\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU4NTE4OmI4ZDg3YzI1N2MwZDhlOTc5ODcxMmE1ZWIxNTM4MGEwMTc4ODA0ZTc=", "commit_message": "Handle tokenizing errors when checking if the ? at the end of the line is in a comment.\n\nCloses gh-586", "commit_timestamp": "2011-07-16T20:25:25Z", "files": ["IPython/core/inputsplitter.py", "IPython/core/tests/test_inputsplitter.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo1N2U1NjJmNDRmMjY5NTQxNjRjYWRiOWQ3YTc4NmM4MzYyYTUxZWQ1", "commit_message": "Handle tokenizing errors when checking if the ? at the end of the line is in a comment.\n\nCloses gh-586", "commit_timestamp": "2011-07-16T20:25:25Z", "files": ["IPython/core/inputsplitter.py", "IPython/core/tests/test_inputsplitter.py"]}], "labels": ["bug"], "created_at": "2011-07-16T20:05:04Z", "closed_at": "2011-07-16T20:26:51Z", "method": ["label"]}
{"issue_number": 585, "title": "%pdoc throws Errors for classes without __init__ or docstring", "body": "The old ipython %pdoc simply printed what was available instead of throwing errors.\n\n---\n\n<pre>\nclass Bug:\n    pass\n\nIn [10]: %pdoc bug.Bug\nAttributeError: class Bug has no attribute '__init__'\n</pre>\n\n---\n\n<pre>\nclass Bug:\n    def __init__(self):\n        pass\n\nIn [15]: %pdoc bug.Bug\nTypeError: sequence item 1: expected string, NoneType found\n</pre>\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU4NTE4OmU1MjNjMmE5NDg5OTMxYmQ5MzdmYzk3MDlhNzY4NmY0NGRiY2EyOTM=", "commit_message": "handle missing docstrings/__init__ in %pdoc\n\nmissing information properly prints 'no documentation', rather than\nraising TypeErrors or AttributeErrors on missing values.\n\ndoctests added for these cases\n\ncloses gh-585", "commit_timestamp": "2011-07-16T16:38:54Z", "files": ["IPython/core/oinspect.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzowNmZiZjYzZGRkMjNhNzFjNzEzMmM4OTgwNTUwOTMzYjVkYmQwMjY1", "commit_message": "handle missing docstrings/__init__ in %pdoc\n\nmissing information properly prints 'no documentation', rather than\nraising TypeErrors or AttributeErrors on missing values.\n\ndoctests added for these cases\n\ncloses gh-585", "commit_timestamp": "2011-07-16T16:38:54Z", "files": ["IPython/core/oinspect.py"]}], "labels": [], "created_at": "2011-07-16T12:35:52Z", "closed_at": "2011-07-16T16:39:05Z", "method": ["regex"]}
{"issue_number": 566, "title": "Can't use exec_file in config file", "body": "I have an empty python file called empty.py in my .ipython directory and I have enabled the following line in my default_profile/ipython_config.py:\n\nc.TerminalIPythonApp.exec_files = ['empty.py']\n\nWhen starting ipython I get the following error:\n\n```\n[TerminalIPythonApp] Unknown error in handling IPythonApp.exec_files:\n---------------------------------------------------------------------------\nValueError                                Traceback (most recent call last)\nc:\\python\\external\\ipython-js\\IPython\\core\\shellapp.pyc in _exec_file(self, fname\n    192         # were run from a system shell.\n\n    193         save_argv = sys.argv\n--> 194         sys.argv = sys.argv[sys.argv.index(fname):]\n    195         try:\n    196             if os.path.isfile(full_filename):\n\nValueError: list.index(x): x not in list\n```\n\nIf I change the filename empty.py to a non-existing filename I get an unknown file error.\n\n/J\u00f6rgen\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU4NTE4OmQzMDZlNTg1YmIzN2U0ZDExNDM1OTg5MDNlOTZhYmIzODZiMjIyYmU=", "commit_message": "exec_files works when specified in config file\n\nalso don't treat IOError (file not found) as an unknown failure.\n\ncloses gh-566", "commit_timestamp": "2011-07-11T19:13:06Z", "files": ["IPython/core/shellapp.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo3YjM2MmI1YjIwMDFmN2RmMTgzNTJjM2NlMDQzNzBmYzhjYTAwYTJj", "commit_message": "exec_files works when specified in config file\n\nalso don't treat IOError (file not found) as an unknown failure.\n\ncloses gh-566", "commit_timestamp": "2011-07-11T19:13:06Z", "files": ["IPython/core/shellapp.py"]}], "labels": ["bug"], "created_at": "2011-07-11T18:54:23Z", "closed_at": "2011-07-11T19:13:41Z", "method": ["label"]}
{"issue_number": 553, "title": "embed() fails if config files not installed", "body": "## From Matthew Brett on the mailing list:\n\nI tried:\n\n<pre>\nfrom IPython import embed\nembed()\n</pre>\n\n\nand got:\n\n<pre>\nTraceback (most recent call last):\n...\nIOError: File u'ipython_config.py' does not exist in any of the search\npaths: (u'/Users/mb312/.ipython/profile_default',)\n</pre>\n\n\nI was surprised that I could start ipython without this error, but the\nembed() shell raised it.  Obviously:\n\n`ipython profile create`\n\nsolved that one, but maybe it would be worth documenting.\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU4NTE4OjMzMGZmYzI4ZDZiN2MzMTRkYTYwZjhkYmM0NWU2YzFhNTU4YmExZDg=", "commit_message": "don't let missing config prevent embed from launching\n\nload_default_config() shouldn't raise on absence of the default config file, since it won't exist for users who don't configure IPython.\n\ncloses gh-553", "commit_timestamp": "2011-07-04T16:40:01Z", "files": ["IPython/frontend/terminal/ipapp.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzoxZTBiZjcwZTkyNDFmMWM2ZWFmZThlZDIzNzM3M2Y3NTA3MGY4YTFj", "commit_message": "don't let missing config prevent embed from launching\n\nload_default_config() shouldn't raise on absence of the default config file, since it won't exist for users who don't configure IPython.\n\ncloses gh-553", "commit_timestamp": "2011-07-04T16:40:01Z", "files": ["IPython/frontend/terminal/ipapp.py"]}], "labels": ["bug"], "created_at": "2011-07-04T16:06:55Z", "closed_at": "2011-07-04T16:40:30Z", "method": ["label", "regex"]}
{"issue_number": 549, "title": "Don't check for 'linux2' value in sys.platform", "body": "The linux kernel is transitioning to version 3.0, and this means that the sys.platform string will become on such machines 'linux3' instead.  Right now, we have explicit checks for linux2:\n\n<pre>\n(master)amirbar[IPython]> grin linux2\n./quarantine/InterpreterExec.py:\n  139 :         sys.platform is: linux2\n./testing/decorators.py:\n  300 : skip_linux = skipif(sys.platform == 'linux2',\n  308 : skip_if_not_linux = skipif(sys.platform != 'linux2',\n./testing/tests/test_decorators.py:\n  179 :     nt.assert_not_equals(sys.platform,'linux2',\"This test can't run under linux\")\n./utils/sysinfo.py:\n  129 :      'sys_platform': 'linux2',\n</pre>\n\n\nAll these should become variants of 'foo[:5] == 'linux'.\n\nI'll tag this as 0.11 in case we can make it, as it's an easy fix and it would be nice to run out of the box for people who upgrade kernels early.  But it's not super critical.\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU5NDQ2OmUxZDFkOGU4ZGRjZjBiZGMzMGRiNTEwN2Y5ZmYzYmNiZDUyY2MxOWU=", "commit_message": "check linux with startswith('linux') instead of =='linux2'\n\nThis allows for sys.platform=='linux3'.\n\ncloses gh-549", "commit_timestamp": "2011-07-01T05:13:52Z", "files": ["IPython/testing/decorators.py", "IPython/testing/tests/test_decorators.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmUxZDFkOGU4ZGRjZjBiZGMzMGRiNTEwN2Y5ZmYzYmNiZDUyY2MxOWU=", "commit_message": "check linux with startswith('linux') instead of =='linux2'\n\nThis allows for sys.platform=='linux3'.\n\ncloses gh-549", "commit_timestamp": "2011-07-01T05:13:52Z", "files": ["IPython/testing/decorators.py", "IPython/testing/tests/test_decorators.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo0NTlhM2RhODYwOWI5ODAxODQ3ZDk2YTg0ZDEwNGI3NDliNTU1ZmYx", "commit_message": "check linux with startswith('linux') instead of =='linux2'\n\nThis allows for sys.platform=='linux3'.\n\ncloses gh-549", "commit_timestamp": "2011-07-01T05:13:52Z", "files": ["IPython/testing/decorators.py", "IPython/testing/tests/test_decorators.py"]}], "labels": ["bug"], "created_at": "2011-07-01T03:23:41Z", "closed_at": "2011-07-01T05:15:15Z", "method": ["label"]}
{"issue_number": 541, "title": "log_level is broken in the  ipython Application", "body": "Currently the following does not work:\n\n```\nipython log_level=DEBUG\n```\n\nBut the following do work:\n\n```\nipython profile list log_level=DEBUG\nipython profile create log_level=DEBUG\n```\n\nI am not sure if this works though:\n\n```\nipython qtconsole log_level=DEBUG\n```\n\nBecause I don't know how to turn on logging to stdout for that app.\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU4NTE4OjBlNGZlOThmNjgyM2IwYmFhZWYzNzBjZjUwYjJhNGU3OTdmYWIzMWY=", "commit_message": "add `log_level` to base app aliases\n\n'log_level' alias to 'Application.log_level' is added to base_alises defined\nin IPython.core.application, which is inherited by most IPython applications.\n\ncloses gh-541", "commit_timestamp": "2011-06-26T08:43:43Z", "files": ["IPython/core/application.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo1ZDJlMTE0ZjhiOGNiOTJmYjc0OTI5OTFlMjU5YjBlZDU2YjBiM2Fl", "commit_message": "add `log_level` to base app aliases\n\n'log_level' alias to 'Application.log_level' is added to base_alises defined\nin IPython.core.application, which is inherited by most IPython applications.\n\ncloses gh-541", "commit_timestamp": "2011-06-26T08:43:43Z", "files": ["IPython/core/application.py"]}], "labels": ["important", "bug"], "created_at": "2011-06-25T20:30:16Z", "closed_at": "2011-06-26T08:49:21Z", "method": ["label", "regex"]}
{"issue_number": 535, "title": "exception unicode handling in %run is faulty in qtconsole", "body": "On  master 1144388 %running:\n\n``` python\n# -*- coding: ISO-8859-1 -*-\na=[]\na.apppend(u\"\u00e5\u00e4\u00f6\")\n```\n\nas a script from the regular ipython console I get:\n\n```\n---------------------------------------------------------------------------\nAttributeError                            Traceback (most recent call last)\nC:\\python\\external\\ipy-bugs\\run_qtcons_bug.py in <module>()\n      2\n      3 a=[]\n----> 4 a.apppend(u\"\u00e5\u00e4\u00f6\")\n\nAttributeError: 'list' object has no attribute 'apppend'\n```\n\nfrom qtconsole I get a long traceback that ends in:\n\n```\nc:\\python26\\lib\\json\\encoder.pyc in _iterencode(self, o, markers)\n292                     and not (_encoding == 'utf-8')):\n293                 o = o.decode(_encoding)\n--> 294             yield encoder(o)\n295         elif o is None:\n296             yield 'null'\nUnicodeDecodeError: 'utf8' codec can't decode byte 0xe5 in position 292: invalid continuation byte\n```\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU5NDQ2OmJjNGUyMDZmZjM3YzQ2ZWZlY2YxODliMzFhMmM5MTJiMDVjNGQ1ZmY=", "commit_message": "json_clean zmqshell replies\n\ncloses gh-535", "commit_timestamp": "2011-09-09T19:42:33Z", "files": ["IPython/zmq/zmqshell.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzoxYzhkNDExMTczZjZkYzQ0YTUxYzdlZWM1ZGExOTljZWNkYzExZDJk", "commit_message": "json_clean zmqshell replies\n\ncloses gh-535", "commit_timestamp": "2011-09-09T19:42:33Z", "files": ["IPython/zmq/zmqshell.py"]}], "labels": ["unicode", "qtconsole", "bug"], "created_at": "2011-06-22T19:09:44Z", "closed_at": "2011-10-14T22:28:29Z", "method": ["label", "regex"]}
{"issue_number": 524, "title": "otool should not be unconditionally called on osx", "body": "On OSX systems without XCode installed, IPython won't run, crashing with:\n\n<pre>\n\nTraceback (most recent call last):\n  File \"/Library/Frameworks/Python.framework/Versions/3.2/bin/ipython3\", line 10, in <module>\n    launch_new_instance()\n  File \"/Library/Frameworks/Python.framework/Versions/3.2/lib/python3.2/site-packages/IPython/frontend/terminal/ipapp.py\", line 662, in launch_new_instance\n    app.start()\n  File \"/Library/Frameworks/Python.framework/Versions/3.2/lib/python3.2/site-packages/IPython/core/application.py\", line 219, in start\n    self.initialize()\n  File \"/Library/Frameworks/Python.framework/Versions/3.2/lib/python3.2/site-packages/IPython/core/application.py\", line 211, in initialize\n    self.construct()\n  File \"/Library/Frameworks/Python.framework/Versions/3.2/lib/python3.2/site-packages/IPython/frontend/terminal/ipapp.py\", line 478, in construct\n    self.shell = TerminalInteractiveShell.instance(config=self.master_config)\n  File \"/Library/Frameworks/Python.framework/Versions/3.2/lib/python3.2/site-packages/IPython/config/configurable.py\", line 203, in instance\n    inst = cls(*args, **kwargs)\n  File \"/Library/Frameworks/Python.framework/Versions/3.2/lib/python3.2/site-packages/IPython/frontend/terminal/interactiveshell.py\", line 86, in __init__\n    user_global_ns=user_global_ns, custom_exceptions=custom_exceptions\n  File \"/Library/Frameworks/Python.framework/Versions/3.2/lib/python3.2/site-packages/IPython/core/interactiveshell.py\", line 400, in __init__\n    self.init_readline()\n  File \"/Library/Frameworks/Python.framework/Versions/3.2/lib/python3.2/site-packages/IPython/core/interactiveshell.py\", line 1542, in init_readline\n    import IPython.utils.rlineimpl as readline\n  File \"/Library/Frameworks/Python.framework/Versions/3.2/lib/python3.2/site-packages/IPython/utils/rlineimpl.py\", line 59, in <module>\n    p = Popen(['otool', '-L', _rl.__file__], stdout=PIPE, stderr=PIPE)\n  File \"/Library/Frameworks/Python.framework/Versions/3.2/lib/python3.2/subprocess.py\", line 736, in __init__\n    restore_signals, start_new_session)\n  File \"/Library/Frameworks/Python.framework/Versions/3.2/lib/python3.2/subprocess.py\", line 1330, in _execute_child\n    raise child_exception_type(errno_num, err_msg)\nOSError: [Errno 2] No such file or directory: 'otool'\n</pre>\n\n\nWe need to make the otool call conditional, since XCode is a fairly large dependency that we don't want to require of all our users.\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU5NDQ2OmYxMjc4Y2JhNTY2OWJkMmQ4NmI4YmE5N2EyYzY3OWE5Y2FjZGQwNTI=", "commit_message": "fallback on lsof if otool not found in libedit detection\n\nThis is necessary for Macs without XCode.\nIt also prevents a crash in the unlikely event that neither is found.\nlsof detection is vulnerable to false positives if other (non-readline)\nmodules are linked against libedit, but this is also unlikely.\n\ncloses gh-524", "commit_timestamp": "2011-06-18T23:40:08Z", "files": ["IPython/utils/rlineimpl.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmYxMjc4Y2JhNTY2OWJkMmQ4NmI4YmE5N2EyYzY3OWE5Y2FjZGQwNTI=", "commit_message": "fallback on lsof if otool not found in libedit detection\n\nThis is necessary for Macs without XCode.\nIt also prevents a crash in the unlikely event that neither is found.\nlsof detection is vulnerable to false positives if other (non-readline)\nmodules are linked against libedit, but this is also unlikely.\n\ncloses gh-524", "commit_timestamp": "2011-06-18T23:40:08Z", "files": ["IPython/utils/rlineimpl.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo4MWFkYzZlYzczOTYwMWZkY2Y0MzAxNGUzMzk4MzM2NmUzNmIyNGY0", "commit_message": "fallback on lsof if otool not found in libedit detection\n\nThis is necessary for Macs without XCode.\nIt also prevents a crash in the unlikely event that neither is found.\nlsof detection is vulnerable to false positives if other (non-readline)\nmodules are linked against libedit, but this is also unlikely.\n\ncloses gh-524", "commit_timestamp": "2011-06-18T23:40:08Z", "files": ["IPython/utils/rlineimpl.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmVjNjk4ZjlmMTljN2I5YzcxNGMyYzAwYjEzZDc1YzM4NzFlMzVhN2Y=", "commit_message": "use a bytes regex to check for libedit\n\nthis eases the work of 2to3, which doesn't catch that `out` is bytes.\n\nAlso use warnings.warn for 'Failed GetOutputFile' message instead of print.", "commit_timestamp": "2011-06-19T17:10:59Z", "files": ["IPython/utils/rlineimpl.py"]}], "labels": ["important", "bug", "osx"], "created_at": "2011-06-18T22:56:56Z", "closed_at": "2011-06-19T19:07:20Z", "linked_pr_number": [524], "method": ["label"]}
{"issue_number": 519, "title": "qtconsole --pure: \"TypeError: string indices must be integers, not str\"", "body": "Not that I ever want to run in pure Python mode, but I keep testing it and finding problems. Running `ipython-qtconsole --pure` I get this:\n\n```\n>>> a = 1\n>>> a\n>>> \n```\n\ni.e. the value of `a` isn't printed. I get this in the parent terminal:\n\n```\n{'content': {'user_variables': [], 'code': 'a\\n', 'user_expressions': {}, 'silent': False},\n 'header': {'username': 'mspacek', 'msg_id': 1, 'session': '6ceda2c2-593f-4741-bd5c-8c8969a2288a'},\n 'msg_type': 'execute_request',\n 'parent_header': {}}\n{'content': {'status': 'ok', 'payload': {}},\n 'header': {'username': u'kernel', 'msg_id': 4, 'session': '4dcdb4cc-eef5-4c86-a915-ccfb26458ca9'},\n 'msg_type': u'execute_reply',\n 'parent_header': {'username': 'mspacek', 'msg_id': 1, 'session': '6ceda2c2-593f-4741-bd5c-8c8969a2288a'}}\nTraceback (most recent call last):\n  File \"/home/mspacek/source/ipython/IPython/frontend/qt/base_frontend_mixin.py\", line 102, in _dispatch\n    handler(msg)\n  File \"/home/mspacek/source/ipython/IPython/frontend/qt/console/frontend_widget.py\", line 372, in _handle_pyout\n    self._append_plain_text(msg['content']['data']['text/plain'] + '\\n')\nTypeError: string indices must be integers, not str\n```\n\nSince I hadn't noticed it before, I think this may be a new problem from a recent commit. I suppose this might be related to #516.\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU5NDQ2OmI1NTcwZjczYjNhNTg5ZGQ2ZGM1ZmI5MmY5OTQ5YWFiZmRhYTg1ZDk=", "commit_message": "use dict.get(key) instead of dict[key] for pure kernel\n\nThis protects against missing keys in object introspection, etc.\nwhen using the pure Python kernel.\n\ncloses gh-516\ncloses gh-519", "commit_timestamp": "2011-06-13T23:37:19Z", "files": ["IPython/core/oinspect.py", "IPython/frontend/qt/console/frontend_widget.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmI1NTcwZjczYjNhNTg5ZGQ2ZGM1ZmI5MmY5OTQ5YWFiZmRhYTg1ZDk=", "commit_message": "use dict.get(key) instead of dict[key] for pure kernel\n\nThis protects against missing keys in object introspection, etc.\nwhen using the pure Python kernel.\n\ncloses gh-516\ncloses gh-519", "commit_timestamp": "2011-06-13T23:37:19Z", "files": ["IPython/core/oinspect.py", "IPython/frontend/qt/console/frontend_widget.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzowMDRkZmY0ZGQyNTVmNDkxYTQ3NWRhNjBhNDI3NGU4NGY1ZTgzZmJl", "commit_message": "use dict.get(key) instead of dict[key] for pure kernel\n\nThis protects against missing keys in object introspection, etc.\nwhen using the pure Python kernel.\n\ncloses gh-516\ncloses gh-519", "commit_timestamp": "2011-06-13T23:37:19Z", "files": ["IPython/core/oinspect.py", "IPython/frontend/qt/console/frontend_widget.py"]}], "labels": ["qtconsole", "bug"], "created_at": "2011-06-13T22:59:01Z", "closed_at": "2011-06-14T00:15:47Z", "method": ["label"]}
{"issue_number": 516, "title": "qtconsole --pure: \"KeyError: 'ismagic'\"", "body": "Running `ipython-qtconsole --pure` and then typing something like `range(` that should print out a docstring raises this error:\n\n```\n{'content': {'oname': 'range'},\n 'header': {'username': 'mspacek', 'msg_id': 0, 'session': 'b744a851-3e62-4d64-930b-71ddefde10b0'},\n 'msg_type': 'object_info_request',\n 'parent_header': {}}\n{'content': {'docstring': 'range([start,] stop[, step]) -> list of integers\\n\\nReturn a list containing an arithmetic progression of integers.\\nrange(i, j) returns [i, i+1, i+2, ..., j-1]; start (!) defaults to 0.\\nWhen step is given, it specifies the increment (or decrement).\\nFor example, range(4) returns [0, 1, 2, 3].  The end point is omitted!\\nThese are exactly the valid indices for a list of 4 elements.'}, 'header': {'username': u'kernel', 'msg_id': 0, 'session': 'c2c4ed08-9765-43c9-b3cf-558331f61237'}, 'parent_header': {'username': 'mspacek', 'msg_id': 0, 'session': 'b744a851-3e62-4d64-930b-71ddefde10b0'}, 'msg_type': 'object_info_reply'}\nTraceback (most recent call last):\n  File \"/home/mspacek/source/ipython/IPython/frontend/qt/base_frontend_mixin.py\", line 102, in _dispatch\n    handler(msg)\n  File \"/home/mspacek/source/ipython/IPython/frontend/qt/console/frontend_widget.py\", line 363, in _handle_object_info_reply\n    if rep['content']['ismagic']:\nKeyError: 'ismagic'\n```\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU5NDQ2OmI1NTcwZjczYjNhNTg5ZGQ2ZGM1ZmI5MmY5OTQ5YWFiZmRhYTg1ZDk=", "commit_message": "use dict.get(key) instead of dict[key] for pure kernel\n\nThis protects against missing keys in object introspection, etc.\nwhen using the pure Python kernel.\n\ncloses gh-516\ncloses gh-519", "commit_timestamp": "2011-06-13T23:37:19Z", "files": ["IPython/core/oinspect.py", "IPython/frontend/qt/console/frontend_widget.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmI1NTcwZjczYjNhNTg5ZGQ2ZGM1ZmI5MmY5OTQ5YWFiZmRhYTg1ZDk=", "commit_message": "use dict.get(key) instead of dict[key] for pure kernel\n\nThis protects against missing keys in object introspection, etc.\nwhen using the pure Python kernel.\n\ncloses gh-516\ncloses gh-519", "commit_timestamp": "2011-06-13T23:37:19Z", "files": ["IPython/core/oinspect.py", "IPython/frontend/qt/console/frontend_widget.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzowMDRkZmY0ZGQyNTVmNDkxYTQ3NWRhNjBhNDI3NGU4NGY1ZTgzZmJl", "commit_message": "use dict.get(key) instead of dict[key] for pure kernel\n\nThis protects against missing keys in object introspection, etc.\nwhen using the pure Python kernel.\n\ncloses gh-516\ncloses gh-519", "commit_timestamp": "2011-06-13T23:37:19Z", "files": ["IPython/core/oinspect.py", "IPython/frontend/qt/console/frontend_widget.py"]}], "labels": ["qtconsole", "bug"], "created_at": "2011-06-11T07:26:40Z", "closed_at": "2011-06-14T00:15:47Z", "method": ["label"]}
{"issue_number": 508, "title": "\"AssertionError: Missing message part.\" in ipython-qtconsole --pure", "body": "Running `ipython-qtconsole --pure` and then entering something into the console that raises an error (like `sdfsdf`) causes this:\n\n```\n{'content': {'user_variables': [], 'code': 'sdfsdf\\n', 'user_expressions': {}, 'silent': False},\n 'header': {'username': 'mspacek', 'msg_id': 0, 'session': 'd3ee91be-fedf-44e6-839a-079946789ed9'},\n 'msg_type': 'execute_request',\n 'parent_header': {}}\n{'content': {u'status': u'error', u'ename': u'NameError', u'evalue': u\"name 'sdfsdf' is not defined\", u'traceback': ['Traceback (most recent call last):\\n', '  File \"/home/mspacek/source/ipython/IPython/zmq/pykernel.py\", line 122, in execute_request\\n    exec comp_code in self.user_ns, self.user_ns\\n', '  File \"<zmq-kernel>\", line 1, in <module>\\n', \"NameError: name 'sdfsdf' is not defined\\n\"]},\n 'header': {'username': u'kernel', 'msg_id': 2, 'session': '808fb1bb-750f-4df9-9787-db19d2f7506a'},\n 'msg_type': u'execute_reply',\n 'parent_header': {'username': 'mspacek', 'msg_id': 0, 'session': 'd3ee91be-fedf-44e6-839a-079946789ed9'}}\n---------------------------------------------------------------------------\nAssertionError                            Traceback (most recent call last)\n/home/mspacek/bzr/neuropy/qt/neuropy/<string> in <module>()\n\n/home/mspacek/source/ipython/IPython/zmq/entry_point.pyc in main()\n    156         namespace = make_argument_parser().parse_args()\n    157         kernel = make_kernel(namespace, kernel_factory, OutStream, DisplayHook)\n--> 158         start_kernel(namespace, kernel)\n    159     return main\n    160 \n\n/home/mspacek/source/ipython/IPython/zmq/entry_point.pyc in start_kernel(namespace=Namespace(hb=51618, ip='127.0.0.1', no_stderr=Fa...e, parent=True, pub=33482, req=45109, xrep=55285), kernel=<IPython.zmq.pykernel.Kernel object>)\n    147 \n    148     # Start the kernel mainloop.\n--> 149     kernel.start()\n    150 \n    151 \n\n/home/mspacek/source/ipython/IPython/zmq/pykernel.pyc in start(self=<IPython.zmq.pykernel.Kernel object>)\n     79                 print >> sys.__stderr__, \"UNKNOWN MESSAGE TYPE:\", omsg\n     80             else:\n---> 81                 handler(ident, omsg)\n        global IJd = undefined\n        global n = undefined\n        global X = undefined\n        global S = undefined\n        global NR1 = undefined\n        global u = undefined\n     82 \n     83     def record_ports(self, xrep_port, pub_port, req_port, hb_port):\n\n/home/mspacek/source/ipython/IPython/zmq/pykernel.pyc in execute_request(self=<IPython.zmq.pykernel.Kernel object>, ident='d3ee91be-fedf-44e6-839a-079946789ed9', parent={'content': {'user_variables': [], 'code': 'sdfs...arent_header': {}, 'msg_type': 'execute_request'})\n    143         print>>sys.__stdout__, Message(reply_msg)\n    144         if reply_msg['content']['status'] == u'error':\n--> 145             self._abort_queue()\n    146 \n    147     def complete_request(self, ident, parent):\n\n/home/mspacek/source/ipython/IPython/zmq/pykernel.pyc in _abort_queue(self=<IPython.zmq.pykernel.Kernel object>)\n    181                     break\n    182             else:\n--> 183                 assert ident is not None, \"Missing message part.\"\n    184             print>>sys.__stdout__, \"Aborting:\"\n    185             print>>sys.__stdout__, Message(msg)\n\nAssertionError: Missing message part.\n```\n\nShortly thereafter, I get the dialog box informing me that the kernel has been inactive for 3.00 seconds, and do I want to restart...\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU5NDQ2OjNmZGIyM2E1M2QzNDFiYjg4YjlhZmM3MjMzZjUzOTA4ZWRkNzYwMGE=", "commit_message": "properly handle nothing to recv in pykernel._abort_queue\n\ncopied from ipkernel\n\ncloses gh-508", "commit_timestamp": "2011-06-08T22:40:39Z", "files": ["IPython/zmq/pykernel.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjNmZGIyM2E1M2QzNDFiYjg4YjlhZmM3MjMzZjUzOTA4ZWRkNzYwMGE=", "commit_message": "properly handle nothing to recv in pykernel._abort_queue\n\ncopied from ipkernel\n\ncloses gh-508", "commit_timestamp": "2011-06-08T22:40:39Z", "files": ["IPython/zmq/pykernel.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzpiZGJiN2FiOTU2MjhkNGUwZWNjMzBiODk2MGM4OTFkY2M5NDk4YWZk", "commit_message": "properly handle nothing to recv in pykernel._abort_queue\n\ncopied from ipkernel\n\ncloses gh-508", "commit_timestamp": "2011-06-08T22:40:39Z", "files": ["IPython/zmq/pykernel.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjNmZGIyM2E1M2QzNDFiYjg4YjlhZmM3MjMzZjUzOTA4ZWRkNzYwMGE=", "commit_message": "properly handle nothing to recv in pykernel._abort_queue\n\ncopied from ipkernel\n\ncloses gh-508", "commit_timestamp": "2011-06-08T22:40:39Z", "files": ["IPython/zmq/pykernel.py"]}], "labels": ["qtconsole", "bug"], "created_at": "2011-06-08T22:19:00Z", "closed_at": "2011-06-10T18:48:21Z", "linked_pr_number": [508], "method": ["label"]}
{"issue_number": 499, "title": "\"ZMQError: Interrupted system call\" when saving inline figure", "body": "Running `ipython-qtconsole --pylab=inline`, and then `plot(range(10))`, followed by right clicking on the inline figure and choosing either \"Save Image As...\" or \"Save SVG As... \" generates:\n\n```\nException in thread Thread-2:\nTraceback (most recent call last):\n  File \"/usr/lib/python2.6/threading.py\", line 532, in __bootstrap_inner\n    self.run()\n  File \"/home/mspacek/source/ipython/IPython/zmq/kernelmanager.py\", line 388, in run\n    self.ioloop.start()\n  File \"/usr/local/lib/python2.6/dist-packages/zmq/eventloop/ioloop.py\", line 251, in start\n    event_pairs = self._impl.poll(poll_timeout)\n  File \"poll.pyx\", line 189, in zmq.core.poll.Poller.poll (zmq/core/poll.c:2108)\n  File \"poll.pyx\", line 101, in zmq.core.poll._poll (zmq/core/poll.c:1391)\nZMQError: Interrupted system call\n\nException in thread Thread-3:\nTraceback (most recent call last):\n  File \"/usr/lib/python2.6/threading.py\", line 532, in __bootstrap_inner\n    self.run()\n  File \"/home/mspacek/source/ipython/IPython/zmq/kernelmanager.py\", line 476, in run\n    self.ioloop.start()\n  File \"/usr/local/lib/python2.6/dist-packages/zmq/eventloop/ioloop.py\", line 251, in start\n    event_pairs = self._impl.poll(poll_timeout)\n  File \"poll.pyx\", line 189, in zmq.core.poll.Poller.poll (zmq/core/poll.c:2108)\n  File \"poll.pyx\", line 101, in zmq.core.poll._poll (zmq/core/poll.c:1391)\nZMQError: Interrupted system call\n\nException in thread Thread-1:\nTraceback (most recent call last):\n  File \"/usr/lib/python2.6/threading.py\", line 532, in __bootstrap_inner\n    self.run()\n  File \"/home/mspacek/source/ipython/IPython/zmq/kernelmanager.py\", line 181, in run\n    self.ioloop.start()\n  File \"/usr/local/lib/python2.6/dist-packages/zmq/eventloop/ioloop.py\", line 251, in start\n    event_pairs = self._impl.poll(poll_timeout)\n  File \"poll.pyx\", line 189, in zmq.core.poll.Poller.poll (zmq/core/poll.c:2108)\n  File \"poll.pyx\", line 101, in zmq.core.poll._poll (zmq/core/poll.c:1391)\nZMQError: Interrupted system call\n```\n\nThe file save dialog box does come up though, and the image saves correctly.\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU5NDQ2OjM3OWEyOTAwOGNiNjE0MTQzMDI0NzcyZjcxNDZhOTI2Y2UwZTkyNzg=", "commit_message": "ignore EINTR in channel loops\n\ncloses gh-499", "commit_timestamp": "2011-06-03T00:57:38Z", "files": ["IPython/zmq/kernelmanager.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjNlMTk0NDQzMjM1MzIwY2IwYWY3ODAyMjU4MGFmYTA0N2FlOTEzN2Y=", "commit_message": "ignore EINTR in channel loops\n\ncloses gh-499\ncloses gh-501", "commit_timestamp": "2011-06-04T05:03:50Z", "files": ["IPython/zmq/kernelmanager.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo1MGMwZjFiOGFlM2RkNjA1ZTE2MzNkMTNiZmI3MGE5ZTIxYzA2MjMy", "commit_message": "ignore EINTR in channel loops\n\ncloses gh-499\ncloses gh-501", "commit_timestamp": "2011-06-04T05:03:50Z", "files": ["IPython/zmq/kernelmanager.py"]}], "labels": ["important", "qtconsole", "bug"], "created_at": "2011-06-02T21:07:11Z", "closed_at": "2011-06-04T05:04:21Z", "method": ["label"]}
{"issue_number": 497, "title": "Don't show info from .pyd files", "body": "As @klonuo reported on ipython-user, we should recognise `.pyd` files (dll format Python modules on Windows) as binary files, and not attempt to display full source from them if the user does `mymod??`.\n", "commits": [{"node_id": "MDY6Q29tbWl0MTIzNjAwMzozOTAyZGQ0MTkxMDdmMTRjYTZhZmRmZDZkNjdjMGVkMzU3YTg1MjI0", "commit_message": "Check for .pyd as extension for binary files.\n\nCloses gh-497", "commit_timestamp": "2011-06-02T10:43:36Z", "files": ["IPython/core/oinspect.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjM5MDJkZDQxOTEwN2YxNGNhNmFmZGZkNmQ2N2MwZWQzNTdhODUyMjQ=", "commit_message": "Check for .pyd as extension for binary files.\n\nCloses gh-497", "commit_timestamp": "2011-06-02T10:43:36Z", "files": ["IPython/core/oinspect.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo0Nzc3Njk3MmVjNzNjMWRkMDlkYmYyYTNjZDNkNTg1MzkwNjgzYTk5", "commit_message": "Check for .pyd as extension for binary files.\n\nCloses gh-497", "commit_timestamp": "2011-06-02T10:43:36Z", "files": ["IPython/core/oinspect.py"]}], "labels": ["windows", "bug"], "created_at": "2011-06-02T09:19:14Z", "closed_at": "2011-06-02T11:36:05Z", "method": ["label"]}
{"issue_number": 489, "title": "UnicodeEncodeError in qt.svg.save_svg", "body": "Matplotlib defaults to \"axes.unicode_minus  : True\", which means plots with minus signs in them that you try to save to svg have at least that one unicode character. Running `ipython-qtconsole --pylab=inline`, typing `plot(range(-1, 10))`, right clicking the image, and saving it as svg results in:\n\n```\nTraceback (most recent call last):\n  File \"/home/mspacek/source/ipython/IPython/frontend/qt/console/rich_ipython_widget.py\", line 60, in <lambda>\n    lambda: save_svg(svg, self._control))\n  File \"/home/mspacek/source/ipython/IPython/frontend/qt/svg.py\", line 32, in save_svg\n    f.write(string)\nUnicodeEncodeError: 'ascii' codec can't encode character u'\\u2212' in position 12271: ordinal not in range(128)\n```\n\nI guess the svg string needs to be encoded in UTF-8 before being written to file.\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU4NTE4OjVhY2RjYzE4NGY3MDE1MjgxMDJhODFlMzllOTg3M2UxOGUzZmY0NDM=", "commit_message": "fix UnicodeEncodeError writing SVG string to .svg file, fixes #489", "commit_timestamp": "2011-06-01T03:36:29Z", "files": ["IPython/frontend/qt/svg.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjZhMGZhOTk0Y2E2NjIzZDMxMjIxYjE3MDVmNWNhYmMzYjY0NTk2YTk=", "commit_message": "Merge pull request #490 from mspacek/svg-unicode\n\nfix UnicodeEncodeError writing SVG string to .svg file\r\n \r\ncloses gh-489", "commit_timestamp": "2011-06-01T22:11:31Z", "files": ["IPython/frontend/qt/svg.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo5ZmRjNTYyNTZmNjRiZDY0YWJlM2I3YmVkNzdkOGQ5OGYxNDcyNzky", "commit_message": "fix UnicodeEncodeError writing SVG string to .svg file, fixes #489", "commit_timestamp": "2011-06-01T03:36:29Z", "files": ["IPython/frontend/qt/svg.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo1ZWIzN2Y2MmE3MzQyNDgyMmEwMjNmODE4MWRhYTc3Y2Y3YjczZWQ0", "commit_message": "Merge pull request #490 from mspacek/svg-unicode\n\nfix UnicodeEncodeError writing SVG string to .svg file\r\n \r\ncloses gh-489", "commit_timestamp": "2011-06-01T22:11:31Z", "files": ["IPython/frontend/qt/svg.py"]}], "labels": ["unicode", "qtconsole", "bug"], "created_at": "2011-06-01T02:57:57Z", "closed_at": "2011-06-01T22:11:33Z", "method": ["label"]}
{"issue_number": 484, "title": "Drop nosepatch", "body": "Our test suite monkeypatches nose because of a bug we needed fixed. This issue is just to track that we should one day remove that monkeypatch.\n\nDoing hg blame on the nose source code, it looks like the issue was fixed around September 2010 - see this commit: http://code.google.com/p/python-nose/source/detail?spec=svn8dac5828bdf9ff6c1dd52e47a73561c1517114b8&r=8dac5828bdf9ff6c1dd52e47a73561c1517114b8\n", "commits": [{"node_id": "MDY6Q29tbWl0MTIzNjAwMzo1OWMzNGZiMjJmM2VlN2M0NDYwODQ3OTI2N2U4YWFjODcwMDlkYWNm", "commit_message": "Drop monkeypatch for pre-1.0 nose\n\nCloses gh-484", "commit_timestamp": "2013-08-19T21:56:45Z", "files": ["IPython/testing/iptest.py", "IPython/testing/nosepatch.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjU5YzM0ZmIyMmYzZWU3YzQ0NjA4NDc5MjY3ZThhYWM4NzAwOWRhY2Y=", "commit_message": "Drop monkeypatch for pre-1.0 nose\n\nCloses gh-484", "commit_timestamp": "2013-08-19T21:56:45Z", "files": ["IPython/testing/iptest.py", "IPython/testing/nosepatch.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzoxZDJiNzk2NWE5NzVmYmM2ZTM3MmZmNjZlNWQ1NDE0OGMzMzZjNGY1", "commit_message": "Drop monkeypatch for pre-1.0 nose\n\nCloses gh-484", "commit_timestamp": "2013-08-19T21:56:45Z", "files": ["IPython/testing/iptest.py", "IPython/testing/nosepatch.py"]}], "labels": ["testing"], "created_at": "2011-05-29T22:32:58Z", "closed_at": "2013-08-22T01:36:17Z", "method": ["regex"]}
{"issue_number": 473, "title": "OSX readline detection fails in the debugger", "body": "This is a continuation of an old bug:\n\nhttps://bugs.launchpad.net/ipython/+bug/411599\n\nDarrel Schiebel reports:\n\nI find that the fixed loop duration is insufficient. I needed to set it to 150 (see below). At 50 or less repetitions, ipython startup consistently dies within gdb.\n\n<pre>\n--- /opt/local/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/site-packages/IPython/rlineimpl.py.orig 2011-05-09 18:52:30.000000000 -0400\n+++ /opt/local/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/site-packages/IPython/rlineimpl.py 2011-05-09 18:42:42.000000000 -0400\n@@ -37,7 +37,7 @@\n     # infinite loops with such code, so for now I'm taking a more conservative\n     # approach. See https://bugs.launchpad.net/ipython/+bug/411599.\n     #while True:\n-    for i in range(10):\n+    for i in range(150):\n         try:\n             (status, result) = commands.getstatusoutput( \"otool -L %s | grep libedit\" % _rl.__file__ )\n             break\n</pre>\n\n\nI tried to find a way to either re-open this defect or submit a new defect from launch pad, but it claims that it no longer knows how to submit ipython defects.\n# End Darrell's report\n\nI'm wondering if the right approach shouldn't be to have an exponential backoff of the retries... It strikes me as ugly to rapid-fire 150 subcommands...\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU5NDQ2OmRlM2ExYzQ4ZmYzY2M1MjRhNWRjMzY3MmI2MTY4ZmMxNmU3YWM3MzA=", "commit_message": "use Popen instead of getstatusoutput to check for libedit.\n\ngetstatusoutput uses os.popen, and is vulnerable to EINTR weirdness\nin environments such as gdb or PyQt.\n\nExponential falloff is also used, to prevent waiting forever or firing requests too fast, though I haven't had it fire more than once\nafter moving to Popen.\n\ncloses gh-473", "commit_timestamp": "2011-05-27T04:43:33Z", "files": ["IPython/utils/rlineimpl.py"]}, {"node_id": "MDY6Q29tbWl0NjU5NDQ2OmNmMjZjZThhODViZmFjZmRiNDJlNjA4OTQwZTk5NmRiMjcyNTExNmU=", "commit_message": "use Popen instead of getstatusoutput to check for libedit.\n\ngetstatusoutput uses os.popen, and is vulnerable to EINTR weirdness\nin environments such as gdb or PyQt.\n\nExponential falloff is also used, to prevent waiting forever or firing requests too fast, though I haven't had it fire more than once\nafter moving to Popen.\n\ncloses gh-473", "commit_timestamp": "2011-05-27T17:55:12Z", "files": ["IPython/utils/rlineimpl.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmNmMjZjZThhODViZmFjZmRiNDJlNjA4OTQwZTk5NmRiMjcyNTExNmU=", "commit_message": "use Popen instead of getstatusoutput to check for libedit.\n\ngetstatusoutput uses os.popen, and is vulnerable to EINTR weirdness\nin environments such as gdb or PyQt.\n\nExponential falloff is also used, to prevent waiting forever or firing requests too fast, though I haven't had it fire more than once\nafter moving to Popen.\n\ncloses gh-473", "commit_timestamp": "2011-05-27T17:55:12Z", "files": ["IPython/utils/rlineimpl.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo1NGFmNWJjZWIxZWQ3ODBmYzU3ZmM0MWU0ZGRjMDczZTBiYmZhNTMw", "commit_message": "use Popen instead of getstatusoutput to check for libedit.\n\ngetstatusoutput uses os.popen, and is vulnerable to EINTR weirdness\nin environments such as gdb or PyQt.\n\nExponential falloff is also used, to prevent waiting forever or firing requests too fast, though I haven't had it fire more than once\nafter moving to Popen.\n\ncloses gh-473", "commit_timestamp": "2011-05-27T17:55:12Z", "files": ["IPython/utils/rlineimpl.py"]}], "labels": ["osx"], "created_at": "2011-05-25T21:21:32Z", "closed_at": "2011-05-27T17:56:28Z", "method": ["regex"]}
{"issue_number": 467, "title": "magic_install_default_config test fails when there is no .ipython directory", "body": "when there is no .ipython directory in home and XDG_CONFIG the doctest of\nIPython.core.magic.Magic.magic_install_default_config\nfails as it outputs\n\n```\nInstalling default config file: $HOME/.ipython/ipython_config.py\n```\n\nwhich is not expected\n\n$ PATH=$PWD/IPython/scripts/:$PATH PYTHONPATH=$PWD IPython/scripts/iptest -v IPython.core\n    ======================================================================\n    FAIL: Doctest: IPython.core.magic.Magic.magic_install_default_config\n    ----------------------------------------------------------------------\n    Traceback (most recent call last):\n      File \"/tmp/buildd/ipython-0.11/IPython/testing/plugin/ipdoctest.py\", line 265, in runTest\n        raise self.failureException(self.format_failure(new.getvalue()))\n    AssertionError: Failed doctest test for IPython.core.magic.Magic.magic_install_default_config\n      File \"/tmp/buildd/ipython-0.11/IPython/core/magic.py\", line 3363, in magic_install_default_config\n\n```\n----------------------------------------------------------------------\nFile \"/tmp/buildd/ipython-0.11/IPython/core/magic.py\", line 3370, in IPython.core.magic.Magic.magic_install_default_config\nFailed example:\n    get_ipython().magic(u\"install_default_config \")\nExpected nothing\nGot:\n    Installing default config file: /tmp/buildd/.ipython/ipython_config.py\n\n>>  raise self.failureException(self.format_failure(<StringIO.StringIO instance at 0x30c1a70>.getvalue()))\n```\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU4NTE4OjM0ZTIyODM4YTVhODJhYmYyNWEzNmFmMWIwYTAwNTBlNDc1ZjBjMzc=", "commit_message": "Add skip_doctest decorator for magic_install_default_config.\n\nCloses gh-467", "commit_timestamp": "2011-05-24T12:15:53Z", "files": ["IPython/core/magic.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzpkMDU4YjNhY2RhNWFkZjFiZjdjMzViNTU5ZTUwZmI5OGZhNTI5MjNh", "commit_message": "Add skip_doctest decorator for magic_install_default_config.\n\nCloses gh-467", "commit_timestamp": "2011-05-24T12:15:53Z", "files": ["IPython/core/magic.py"]}], "labels": ["bug", "testing"], "created_at": "2011-05-24T11:43:59Z", "closed_at": "2011-05-24T12:16:11Z", "method": ["label", "regex"]}
{"issue_number": 466, "title": "tests fail without unicode filename support", "body": "two tests fail when there is no unicode filename support:\n\n$ LANG=C PATH=$PWD/IPython/scripts/:$PATH PYTHONPATH=$PWD IPython/scripts/iptest -v IPython.core\n\n```\n======================================================================\nERROR: Check that IPython starts with non-ascii characters in the path.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib/pymodules/python2.7/nose/case.py\", line 186, in runTest\n    self.test(*self.arg)\n  File \"/home/jtaylor/tmp/ipython/IPython/core/tests/test_application.py\", line 11, in test_unicode_cwd\n    wd = tempfile.mkdtemp(suffix=u\"\u20ac\")\n  File \"/usr/lib/python2.7/tempfile.py\", line 318, in mkdtemp\n    _os.mkdir(file, 0700)\nUnicodeEncodeError: 'ascii' codec can't encode character u'\\u20ac' in position 14: ordinal not in range(128)\n\n======================================================================\nERROR: Check that IPython starts with non-ascii characters in the IP dir.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib/pymodules/python2.7/nose/case.py\", line 186, in runTest\n    self.test(*self.arg)\n  File \"/home/jtaylor/tmp/ipython/IPython/core/tests/test_application.py\", line 38, in test_unicode_ipdir\n    ipdir = tempfile.mkdtemp(suffix=u\"\u20ac\")\n  File \"/usr/lib/python2.7/tempfile.py\", line 318, in mkdtemp\n    _os.mkdir(file, 0700)\nUnicodeEncodeError: 'ascii' codec can't encode character u'\\u20ac' in position 14: ordinal not in range(128)\n```\n\nif this is only a test issue then they should be skipped if os.path.supports_unicode_filenames is False\n", "commits": [{"node_id": "MDY6Q29tbWl0MTIzNjAwMzpkZjg2ZTcwZWQyMzE4YTE0OWU4MDQ2OWUxYjc1YmE1YmYwNzYwODhj", "commit_message": "Add test decorator onlyif_unicode_paths.\n\nCloses gh-466", "commit_timestamp": "2011-05-26T18:14:29Z", "files": ["IPython/core/tests/test_application.py", "IPython/testing/decorators.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmRmODZlNzBlZDIzMThhMTQ5ZTgwNDY5ZTFiNzViYTViZjA3NjA4OGM=", "commit_message": "Add test decorator onlyif_unicode_paths.\n\nCloses gh-466", "commit_timestamp": "2011-05-26T18:14:29Z", "files": ["IPython/core/tests/test_application.py", "IPython/testing/decorators.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo3OTQyZTg1ZmRlMzA5MTk3NDJhZTc0MTg1Njg3MzcwNWI2NTUzYTRk", "commit_message": "Add test decorator onlyif_unicode_paths.\n\nCloses gh-466", "commit_timestamp": "2011-05-26T18:14:29Z", "files": ["IPython/core/tests/test_application.py", "IPython/testing/decorators.py"]}], "labels": ["unicode", "bug"], "created_at": "2011-05-24T11:22:24Z", "closed_at": "2011-05-26T18:17:18Z", "method": ["label"]}
{"issue_number": 447, "title": "Instantiating classes without __init__ function causes kernel to crash", "body": "<pre>\nIn [1]: class A(object): pass\nIn [2]: A()\nOut[2]: <__main__.A at 0x924806c>\nIn [3]: class A(): pass\nIn [4]: A()\n\n(Heartbeat down window)  Error trace:\n\nAttributeError                            Traceback (most recent call last)\n/media/Dropbox/git-repos/pypline/<string> in <module>()\n\n/usr/local/lib/python2.6/dist-packages/IPython/zmq/ipkernel.pyc in main()\n    679                                 shell=kernel.shell)\n    680 \n--> 681     start_kernel(namespace, kernel)\n    682 \n    683 \n\n/usr/local/lib/python2.6/dist-packages/IPython/zmq/entry_point.pyc in start_kernel(namespace=Namespace(colors=None, hb=42345, ip='127.0.0.1',...ue, pub=39708, pylab=None, req=53755, xrep=54374), kernel=<IPython.zmq.ipkernel.Kernel object>)\n    148     # Start the kernel mainloop.\n--> 149     kernel.start()\n\n/usr/local/lib/python2.6/dist-packages/IPython/zmq/ipkernel.pyc in start(self=<IPython.zmq.ipkernel.Kernel object>)\n    169         while True:\n    170             time.sleep(self._poll_interval)\n--> 171             self.do_one_iteration()\n        global stdin = undefined\n        global stdout = undefined\n        global stderr = undefined\n        global optional = undefined\n        global default = undefined\n        global None = undefined\n    172 \n    173     def record_ports(self, xrep_port, pub_port, req_port, hb_port):\n\n/usr/local/lib/python2.6/dist-packages/IPython/zmq/ipkernel.pyc in do_one_iteration(self=<IPython.zmq.ipkernel.Kernel object>)\n    153             logger.error(\"UNKNOWN MESSAGE TYPE:\" +str(msg))\n    154         else:\n--> 155             handler(ident, msg)\n    156             \n    157         # Check whether we should exit, in case the incoming message set the\n\n/usr/local/lib/python2.6/dist-packages/IPython/zmq/ipkernel.pyc in object_info_request(self=<IPython.zmq.ipkernel.Kernel object>, ident='662dab72-d0d4-4ff0-af1c-7e1ca6439e55', parent={'content': {'oname': 'A'}, 'header': {'msg_id': 9, 'session': '662dab72-d0d4-4ff0-af1c-7e1ca6439e55', 'username': 'meawoppl'}, 'msg_type': 'object_info_request', 'parent_header': {}})\n    318 \n    319     def object_info_request(self, ident, parent):\n--> 320         object_info = self.shell.object_inspect(parent['content']['oname'])\n    321         # Before we send this object over, we scrub it for JSON usage\n    322         oinfo = json_clean(object_info)\n\n/usr/local/lib/python2.6/dist-packages/IPython/core/interactiveshell.pyc in object_inspect(self=<IPython.zmq.zmqshell.ZMQInteractiveShell object>, oname='A')\n   1292             info = self._object_find(oname)\n   1293             if info.found:\n-> 1294                 return self.inspector.info(info.obj, oname, info=info)\n   1295             else:\n   1296                 return oinspect.object_info(name=oname, found=False)\n\n/usr/local/lib/python2.6/dist-packages/IPython/core/oinspect.pyc in info(self=<IPython.core.oinspect.Inspector instance>, obj=<class __main__.A>, oname='A', formatter=None, info={'obj': <class __main__.A at 0x923a7ac>, 'parent...se, 'namespace': 'Interactive', 'ismagic': False}, detail_level=0)\n    815         \n    816         if inspect.isclass(obj):\n--> 817             callable_obj = obj.__init__\n    818         elif callable(obj):\n    819             callable_obj = obj\nAttributeError: class A has no attribute '__init__'\n</pre>\n", "commits": [{"node_id": "MDY6Q29tbWl0MTIzNjAwMzowNDM3YTFmMjk3Y2IxOWFhNDk5ZGQyZjljMTgzYWEwOThlZjZmZTBl", "commit_message": "Tweak Inspector.info() so it doesn't fail on old style classes. Added test.\n\nCloses gh-447", "commit_timestamp": "2011-05-17T20:06:46Z", "files": ["IPython/core/oinspect.py", "IPython/core/tests/test_oinspect.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzoyYzZmMzRiMzBkZDhiMGI5YmE4ZmNiZWI3ZGM2NTlmNjU2M2QyYTcz", "commit_message": "Tweak Inspector.info() so it doesn't fail on old style classes. Added test.\n\nCloses gh-447", "commit_timestamp": "2011-05-17T20:06:46Z", "files": ["IPython/core/oinspect.py", "IPython/core/tests/test_oinspect.py"]}], "labels": ["bug"], "created_at": "2011-05-17T18:53:58Z", "closed_at": "2011-05-17T22:27:47Z", "method": ["label"]}
{"issue_number": 440, "title": "%run filename autocompletion \"The kernel heartbeat has been inactive ... \" error", "body": "It only happens when I run it as an application, with \"Run in terminal\" unchecked.\n(When I run it in terminal, it does not happen)\n\nWhen I press tab to autocomplete during the input of the argument of the run magic command, for example:\n\nIn [2]: %run 'work[TAB]\n\nipython-qtconsole hangs for a while, and then gives me the following error:\n\nThe kernel heartbeat has been inactive for 3.00 seconds. Do you want to restart the kernel? You may first want to check the network connection.\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU5NDQ2OmY1MTlmMTdmYmZiZmU2MDYzMTEzOTBkNDEzZTY0NTljMzIzZDM0MDQ=", "commit_message": "catch another unconditional encode in completerlib\n\ncloses gh-440", "commit_timestamp": "2011-06-28T17:10:09Z", "files": ["IPython/core/completerlib.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmY1MTlmMTdmYmZiZmU2MDYzMTEzOTBkNDEzZTY0NTljMzIzZDM0MDQ=", "commit_message": "catch another unconditional encode in completerlib\n\ncloses gh-440", "commit_timestamp": "2011-06-28T17:10:09Z", "files": ["IPython/core/completerlib.py"]}], "labels": ["qtconsole", "bug"], "created_at": "2011-05-14T00:02:26Z", "closed_at": "2011-06-28T17:11:04Z", "method": ["label"]}
{"issue_number": 432, "title": "Silent request fails", "body": "Hi,\n\nI created a script that does an execute_request to  IPython via zmq. The script works fine as long as the 'silent' flag is set to False. When 'silent' is set to True, the last error seems to be replicated.  To demonstrate the issue:\n\n``` python\nimport zmq, json\ncontext = zmq.Context()\nsocketReq = context.socket(zmq.XREQ)\nsocketReq.connect(\"tcp://127.0.0.1:8000\")\n\ndef create_msg(code, silent):\n  execute = {\n      'code' : code,\n      'silent' : silent,\n      'user_variables' : [],\n      'user_expressions' : {},\n      }\n\n  contents = { 'header' : \n      { 'msg_id' : 'msg', \n      'username' : 'user', \n      'session' : 'session'},\n      'parent_header' : {},\n      'msg_type' : 'execute_request',\n      'content' : execute\n      }\n\n  return json.dumps(contents)\n\ndef get_status(message):\n  val = json.loads(message)\n  return val[\"content\"][\"status\"]\n\n\nprint \"Silent: False\"\nprint \"Incorrect call: error expected\"\nsocketReq.send( create_msg(\"incorrect.call()\", False ) )\nprint \"GOT: \", get_status( socketReq.recv() ); \n\nprint \"Correct call: no error expected\"\nsocketReq.send( create_msg(\"2 + 2\", False )) \nprint \"GOT: \", get_status( socketReq.recv() ); \n\nprint \nprint \"Silent: True\"\n\nprint \"Incorrect call: error expected\"\nsocketReq.send( create_msg(\"incorrect.call()\", True ) )\nprint \"GOT: \", get_status( socketReq.recv() ); \n\nprint \"Correct call, no error expected\"\nsocketReq.send( create_msg(\"2 + 2\", True ) )\nprint \"GOT: \", get_status( socketReq.recv() ); \n```\n\nThe output of the script is as follows:\n\n```\nSilent: False\nIncorrect call: error expected\nGOT:  error\nCorrect call: no error expected\nGOT:  ok\n\nSilent: True\nIncorrect call: error expected\nGOT:  error\nCorrect call, no error expected\nGOT:  error\n```\n\nIs this indeed incorrect behavior, or am I doing something wrong?\n\nRegards, Raymond\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU4NTE4OjYzMDZjYjEyM2NiMzEwMzZjNTkwMDg2NmY2YmIwMjEzMTZmYzZjOGM=", "commit_message": "cleanup shell._reply_content after use\n\ncloses gh-432", "commit_timestamp": "2011-05-12T18:50:48Z", "files": ["IPython/zmq/ipkernel.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo4NWI1YzAyYWQ1YWQ3ZDM1Y2RkNWIyNGIyMTY3YTQzOGE1MDU3YjU4", "commit_message": "cleanup shell._reply_content after use\n\ncloses gh-432", "commit_timestamp": "2011-05-12T18:50:48Z", "files": ["IPython/zmq/ipkernel.py"]}], "labels": [], "created_at": "2011-05-12T12:43:43Z", "closed_at": "2011-05-12T18:50:59Z", "method": ["regex"]}
{"issue_number": 412, "title": "add support to automatic retry of tasks", "body": "Like in the old releases, it should be possible to specifiy the number of retries when creating a new task. \nIn load balanced view, if one task fails on one engine that task could be rerun on another engine. \n\nminrk suggests the following workaround, which makes a copy of the same task depend on the original one and running that only if the first try fails.\n\n``` python\nars = [view.apply_async(task)]\nwith view.temp_flags(after=Dependency(ars, success=False,failure=True)):\n    ars.append(view.apply_async(task))\n```\n\nThis workaround might be ok if you only want to have 1 retry. But if you need a higher number of retries you will create lots of tasks which might never be executed.\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU5NDQ2OjY1NDlkMDkxNjU1ODI5ZWI2NDg3YjJiZmE3MTM0ZjdmNzQ4MzAyNWU=", "commit_message": "add retries flag to LoadBalancedView\n\nalso add some lbv tests, and related fixes\n\ncloses gh-412", "commit_timestamp": "2011-05-17T21:27:10Z", "files": ["IPython/parallel/client/view.py", "IPython/parallel/controller/scheduler.py", "IPython/parallel/tests/__init__.py", "IPython/parallel/tests/test_lbview.py", "IPython/parallel/tests/test_view.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzpkNTVjZjgwMzAzMzdhMzgxY2M0ZDllNTk0OWEyMjljODUwMjEyODRm", "commit_message": "add retries flag to LoadBalancedView\n\nalso add some lbv tests, and related fixes\n\ncloses gh-412", "commit_timestamp": "2011-05-17T21:27:10Z", "files": ["IPython/parallel/client/view.py", "IPython/parallel/controller/scheduler.py", "IPython/parallel/tests/__init__.py", "IPython/parallel/tests/test_lbview.py", "IPython/parallel/tests/test_view.py"]}], "labels": ["parallel"], "created_at": "2011-05-04T02:23:42Z", "closed_at": "2011-05-05T23:37:32Z", "method": ["regex"]}
{"issue_number": 409, "title": "Test failure in IPython.lib", "body": "I'm getting this test failure in IPython.lib on master: https://gist.github.com/954331\n\nI think it's happening since I upgraded to Python 2.7: I guess the error that's produced (in response to `cos pi`) has changed.\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU5NDQ2OjQyOWRhYzI2YzY5Y2Y5ZTM1YTEzY2Y3NmIxYWQwYTRmOWY4MDk4NjM=", "commit_message": "ensure ast.parse() gets code that ends with a newline\n\nalso fix an issue where irunner could send last newline after child exits, raising OSError\n\ncloses gh-409\ncloses gh-424", "commit_timestamp": "2011-05-11T22:43:04Z", "files": ["IPython/core/interactiveshell.py", "IPython/lib/irunner.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmYwMmExYWE4ODQ2NWQ1NTJiYTg2YzU0NWYzNDMyODYxYTgzZTgwNWU=", "commit_message": "Fix subtle bug with error message on Python 2.6 - code to be compiled must end in a newline.\n\ncloses gh-409\ncloses gh-424\ncloses gh-427\ncloses gh-431", "commit_timestamp": "2011-05-11T23:12:38Z", "files": ["IPython/core/interactiveshell.py", "IPython/lib/tests/test_irunner.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo0MWY0YWFiODExY2ZhMDI4NTk0ZDJmYTYyZjAwN2FhMTQ0ZDBkMzkw", "commit_message": "Fix subtle bug with error message on Python 2.6 - code to be compiled must end in a newline.\n\ncloses gh-409\ncloses gh-424\ncloses gh-427\ncloses gh-431", "commit_timestamp": "2011-05-11T23:12:38Z", "files": ["IPython/core/interactiveshell.py", "IPython/lib/tests/test_irunner.py"]}], "labels": ["bug"], "created_at": "2011-05-03T21:48:34Z", "closed_at": "2011-05-11T23:15:41Z", "method": ["label"]}
{"issue_number": 405, "title": "TraitError in traitlets.py(332) on any input", "body": "For the past month or so with ipython master, on any input, the following error is raised:\n\nTraitError: The 'pprint' trait of a PlainTextFormatter instance must be a boolean, but a value of 0 <type 'int'> was specified.\n\n<pre>\n  ~ $ ipython\n  >>> 2+2\n  > /usr/lib64/python2.7/site-packages/IPython/utils/traitlets.py(332)error()\n      331                 % (self.name, self.info(), repr_type(value))            \n  --> 332         raise TraitError(e)\n      333 \n\n  ipdb> q\n  Traceback (most recent call last):\n    File \"<ipython-input-1-fa50b8b61646>\", line 1, in <module>\n      2+2\n    File \"/usr/lib64/python2.7/site-packages/IPython/core/displayhook.py\", line 302, in __call__\n      format_dict = self.compute_format_data(result)\n    File \"/usr/lib64/python2.7/site-packages/IPython/core/displayhook.py\", line 215, in compute_format_data\n      return self.shell.display_formatter.format(result)\n    File \"/usr/lib64/python2.7/site-packages/IPython/core/formatters.py\", line 113, in format\n      for format_type, formatter in self.formatters.items():\n    File \"/usr/lib64/python2.7/site-packages/IPython/utils/traitlets.py\", line 283, in __get__\n      value = obj._trait_dyn_inits[self.name](obj)\n    File \"/usr/lib64/python2.7/site-packages/IPython/core/formatters.py\", line 59, in _formatters_default\n      f = cls(config=self.config)\n    File \"/usr/lib64/python2.7/site-packages/IPython/config/configurable.py\", line 83, in __init__\n      self.config = config\n    File \"/usr/lib64/python2.7/site-packages/IPython/utils/traitlets.py\", line 305, in __set__\n      obj._notify_trait(self.name, old_value, new_value)\n    File \"/usr/lib64/python2.7/site-packages/IPython/utils/traitlets.py\", line 456, in _notify_trait\n      c(name, old_value, new_value)\n    File \"/usr/lib64/python2.7/site-packages/IPython/config/configurable.py\", line 138, in _config_changed\n      setattr(self, k, deepcopy(config_value))\n    File \"/usr/lib64/python2.7/site-packages/IPython/utils/traitlets.py\", line 301, in __set__\n      new_value = self._validate(obj, value)\n    File \"/usr/lib64/python2.7/site-packages/IPython/utils/traitlets.py\", line 309, in _validate\n      return self.validate(obj, value)\n    File \"/usr/lib64/python2.7/site-packages/IPython/utils/traitlets.py\", line 963, in validate\n      self.error(obj, value)\n    File \"/usr/lib64/python2.7/site-packages/IPython/utils/traitlets.py\", line 332, in error\n      raise TraitError(e)\n  TraitError: The 'pprint' trait of a PlainTextFormatter instance must be a boolean, but a value of 0 <type 'int'> was specified.\n</pre>\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU4NTE4OmJhNTZjYzlkZDAyZjI5Y2ZlOGE4YzBiZmZhMDU3NTBjNTUxMTQ2MmY=", "commit_message": "ENH: Add dynamic initializers (_x_default methods) to traitlets.", "commit_timestamp": "2010-10-29T19:01:46Z", "files": ["IPython/utils/tests/test_traitlets.py", "IPython/utils/traitlets.py"]}], "labels": ["bug"], "created_at": "2011-04-29T14:36:06Z", "closed_at": "2011-04-29T20:11:08Z", "method": ["label"]}
{"issue_number": 391, "title": "MongoDB.add_record() does not work in 0.11dev", "body": "First, add_record() calls _binary_buffers() instead of self._binary_buffers(). If you try to fix that, you'll get the following error:\n\n<pre>\nTraceback (most recent call last):\n  File \"/opt/local/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/site-packages/zmq/eventloop/zmqstream.py\", line 346, in _run_callback\n    callback(*args, **kwargs)\n  File \"/opt/local/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/contextlib.py\", line 34, in __exit__\n    self.gen.throw(type, value, traceback)\n  File \"/opt/local/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/site-packages/zmq/eventloop/stack_context.py\", line 97, in NullContext\n    yield\n  File \"/opt/local/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/site-packages/zmq/eventloop/zmqstream.py\", line 346, in _run_callback\n    callback(*args, **kwargs)\n  File \"/opt/local/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/site-packages/zmq/eventloop/stack_context.py\", line 133, in wrapped\n    callback(*args, **kwargs)\n  File \"/opt/local/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/site-packages/IPython/parallel/controller/hub.py\", line 462, in dispatch_monitor_traffic\n    handler(idents, msg)\n  File \"/opt/local/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/site-packages/IPython/parallel/controller/hub.py\", line 655, in save_task_request\n    self.db.add_record(msg_id, record)\n  File \"/opt/local/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/site-packages/IPython/parallel/controller/mongodb.py\", line 46, in add_record\n    rec = self._binary_buffers(rec)\n  File \"/opt/local/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/site-packages/IPython/parallel/controller/mongodb.py\", line 41, in _binary_buffers\n    rec[key] = map(Binary, rec[key])\nTypeError: argument 2 to map() must support iteration\n</pre>\n\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU5NDQ2OjVkYWRlZjhhMTY4ZTU3MDlmNjcyN2QxMTQwZmViYmQwZTg1ZTQ2ZmE=", "commit_message": "General improvements to database backend\n\nDB backend changes:\n* add db.get_history method\n* db.find_records returns list, allows filtering of keys\n* add db_backend tests\n\nNew Client methods exposing db backends:\n* rc.hub_history() # proxy for db.get_history\n* rc.db_query() # proxy for db.find_records\n\nExtra fixes along the way:\n* Harder for db issues to crash the Hub\n* Better JSON handling of date objects\n* Don't raise NoEnginesRegistered when load-balancing on all engines\n* rc.get_result works with whole history if database is persistent\n\ncloses gh-391", "commit_timestamp": "2011-04-21T21:09:00Z", "files": ["IPython/parallel/client/client.py", "IPython/parallel/controller/dictdb.py", "IPython/parallel/controller/hub.py", "IPython/parallel/controller/mongodb.py", "IPython/parallel/controller/sqlitedb.py", "IPython/parallel/streamsession.py", "IPython/parallel/tests/test_db.py", "IPython/parallel/util.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjVkYWRlZjhhMTY4ZTU3MDlmNjcyN2QxMTQwZmViYmQwZTg1ZTQ2ZmE=", "commit_message": "General improvements to database backend\n\nDB backend changes:\n* add db.get_history method\n* db.find_records returns list, allows filtering of keys\n* add db_backend tests\n\nNew Client methods exposing db backends:\n* rc.hub_history() # proxy for db.get_history\n* rc.db_query() # proxy for db.find_records\n\nExtra fixes along the way:\n* Harder for db issues to crash the Hub\n* Better JSON handling of date objects\n* Don't raise NoEnginesRegistered when load-balancing on all engines\n* rc.get_result works with whole history if database is persistent\n\ncloses gh-391", "commit_timestamp": "2011-04-21T21:09:00Z", "files": ["IPython/parallel/client/client.py", "IPython/parallel/controller/dictdb.py", "IPython/parallel/controller/hub.py", "IPython/parallel/controller/mongodb.py", "IPython/parallel/controller/sqlitedb.py", "IPython/parallel/streamsession.py", "IPython/parallel/tests/test_db.py", "IPython/parallel/util.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo0Y2RhMzc0ZDEwZjhhODIzMTdlMWJkZDQ4OTNlZjBmMGY3NTQ2YmMz", "commit_message": "General improvements to database backend\n\nDB backend changes:\n* add db.get_history method\n* db.find_records returns list, allows filtering of keys\n* add db_backend tests\n\nNew Client methods exposing db backends:\n* rc.hub_history() # proxy for db.get_history\n* rc.db_query() # proxy for db.find_records\n\nExtra fixes along the way:\n* Harder for db issues to crash the Hub\n* Better JSON handling of date objects\n* Don't raise NoEnginesRegistered when load-balancing on all engines\n* rc.get_result works with whole history if database is persistent\n\ncloses gh-391", "commit_timestamp": "2011-04-21T21:09:00Z", "files": ["IPython/parallel/client/client.py", "IPython/parallel/controller/dictdb.py", "IPython/parallel/controller/hub.py", "IPython/parallel/controller/mongodb.py", "IPython/parallel/controller/sqlitedb.py", "IPython/parallel/streamsession.py", "IPython/parallel/tests/test_db.py", "IPython/parallel/util.py"]}], "labels": ["important", "bug", "parallel"], "created_at": "2011-04-17T22:16:06Z", "closed_at": "2011-04-21T21:11:34Z", "method": ["label", "regex"]}
{"issue_number": 386, "title": "FAIL: test that pushed functions have access to globals", "body": "This failure started a few days ago, but I haven't bisected it yet.\n\nMaking it critical because it's in the master branch, and we should try to keep master always failure-clean.\n\n<pre>\niptest IPython.parallel\n======================================================================\nFAIL: test that pushed functions have access to globals\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/home/fperez/usr/lib/python2.6/site-packages/IPython/parallel/tests/test_view.py\", line 118, in test_push_function_globals\n    self.assertRaisesRemote(NameError, v.execute, 'b=f()')\n  File \"/home/fperez/usr/lib/python2.6/site-packages/IPython/parallel/tests/clienttest.py\", line 91, in assertRaisesRemote\n    self.fail(\"should have raised a RemoteError\")\nAssertionError: should have raised a RemoteError\n    \"\"\"Fail immediately, with the given message.\"\"\"\n>>  raise self.failureException, 'should have raised a RemoteError'\n    \n\n----------------------------------------------------------------------\nRan 58 tests in 34.498s\n\nFAILED (failures=1)\n</pre>\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU5NDQ2OjBkM2Q4MDdjZjE0YTAzMDdkNTI5ZDM2MTA4ZWQ2MTRmMDg3ZGU3OTU=", "commit_message": "Start each test with clear engine namespaces\n\ncloses gh-386", "commit_timestamp": "2011-04-20T21:02:00Z", "files": ["IPython/parallel/tests/clienttest.py", "IPython/parallel/tests/test_client.py", "IPython/parallel/tests/test_view.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjBkM2Q4MDdjZjE0YTAzMDdkNTI5ZDM2MTA4ZWQ2MTRmMDg3ZGU3OTU=", "commit_message": "Start each test with clear engine namespaces\n\ncloses gh-386", "commit_timestamp": "2011-04-20T21:02:00Z", "files": ["IPython/parallel/tests/clienttest.py", "IPython/parallel/tests/test_client.py", "IPython/parallel/tests/test_view.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzplMWRhZTk5ZjYzMWRiMGQ3NDk5MzU4YWQ3YjdmNTczNWZjZDhlNDg3", "commit_message": "Start each test with clear engine namespaces\n\ncloses gh-386", "commit_timestamp": "2011-04-20T21:02:00Z", "files": ["IPython/parallel/tests/clienttest.py", "IPython/parallel/tests/test_client.py", "IPython/parallel/tests/test_view.py"]}], "labels": ["important", "bug", "parallel"], "created_at": "2011-04-14T22:10:29Z", "closed_at": "2011-04-21T19:24:13Z", "method": ["label"]}
{"issue_number": 379, "title": "Minor doc nit: --paging argument", "body": "The %guiref help says the values to the \"--paging\" command-line argument are \"default\", \"vertical\", \"horizontal\".  The actual arguments are 'inside', 'hsplit', 'vsplit', 'none'.\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU4NTE4OjJjOWMyYzZlYzdhNTk2NzNkMTA0ZDhjNGNiM2YxYTZmNmJkYWYwMWI=", "commit_message": "Update guiref with correct paging options.\n\nCloses gh-379.", "commit_timestamp": "2011-04-26T18:24:53Z", "files": ["IPython/core/usage.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo5MzE4NzA4ZGM1MWViMjg0MzkxOGM1ZDNkODIyOGZhOGRhZTI3YWQz", "commit_message": "Update guiref with correct paging options.\n\nCloses gh-379.", "commit_timestamp": "2011-04-26T18:24:53Z", "files": ["IPython/core/usage.py"]}], "labels": ["documentation", "bug"], "created_at": "2011-04-14T01:20:04Z", "closed_at": "2011-04-26T18:25:21Z", "method": ["label"]}
{"issue_number": 375, "title": "Missing libraries cause ImportError in tests", "body": "If pexepect, pyzmq or sympy are not installed I get ImportErrors in the testsuite. \n\nSee log from testrun: https://gist.github.com/918116\n\nTest suite completed for system with the following information:\n{'commit_hash': '9e2a3f4',\n 'commit_source': 'repository',\n 'ipython_path': 'c:\\python\\external\\ipython\\IPython',\n 'ipython_version': '0.11.dev',\n 'os_name': 'nt',\n 'platform': 'Windows-7-6.1.7601-SP1',\n 'sys_executable': 'c:\\python26\\python.exe',\n 'sys_platform': 'win32',\n 'sys_version': '2.6.6 (r266:84297, Aug 24 2010, 18:46:32) [MSC v.1500 32 bit (Intel)]'}\n\nTools and libraries NOT available at test time:\n   curses foolscap gobject gtk pexpect twisted wx wx.aui zope.interface\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU4NTE4OjMwODU5MDQzMTkyMTk1MGM2NjkxZjQwYmJhOGEyMzQxYjlkMDdiYTg=", "commit_message": "update test exclusions\n\nexclude test_irunner w/o pexpect\nexclude frontend/qt w/o pyzmq or qt\n\ncloses gh-375", "commit_timestamp": "2011-04-14T21:48:26Z", "files": ["IPython/testing/iptest.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjMwODU5MDQzMTkyMTk1MGM2NjkxZjQwYmJhOGEyMzQxYjlkMDdiYTg=", "commit_message": "update test exclusions\n\nexclude test_irunner w/o pexpect\nexclude frontend/qt w/o pyzmq or qt\n\ncloses gh-375", "commit_timestamp": "2011-04-14T21:48:26Z", "files": ["IPython/testing/iptest.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo5NmVmYjk5NDU5OGZlNzE0ZDhkNmU5MjMyYzQxNDRlNWMwMDhiZDlh", "commit_message": "update test exclusions\n\nexclude test_irunner w/o pexpect\nexclude frontend/qt w/o pyzmq or qt\n\ncloses gh-375", "commit_timestamp": "2011-04-14T21:48:26Z", "files": ["IPython/testing/iptest.py"]}], "labels": ["windows", "bug", "testing"], "created_at": "2011-04-13T18:46:46Z", "closed_at": "2011-04-14T21:48:37Z", "method": ["label"]}
{"issue_number": 369, "title": "windows source install doesn't create scripts correctly", "body": "Reported on-list, see \nhttp://mail.scipy.org/pipermail/ipython-dev/2011-April/007477\n\nInstalling IPython from source went fine, again using python setup.py install.\nAt this stage I was at a bit of a loss as to how to test it, my normal ipython\nshortcut seemed to still load up my old version 10.1. I found a file\n\"ipython-qtconsole\" in my Python26/Scripts directory but without a suffix or\nassociated .bat file it wasn't directly executable. This was easily resolved by\ncreating a bat file iqlab.bat with the contents:\n\n<pre>\n@\"C:\\dev\\bin\\Python26\\python.exe\"\n\"C:\\dev\\bin\\Python26\\scripts\\ipython-qtconsole\"\n--paging vsplit --pylab inline %*\n</pre>\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU4NTE4OjkzM2UyZDk4Zjc4MjFkMjI1OTdmOTAzOTA2YzMyMzA5OWMyYWE1MGQ=", "commit_message": "Merge branch 'winsetup' (PR #536)\n\nintroduces install dependency of setuptools on Windows\n\nThis is a temporary fix, and the setuptools dependency should\nbe removed in 0.12.\n\ncloses gh-536\ncloses gh-351\ncloses gh-369", "commit_timestamp": "2011-06-24T23:54:47Z", "files": ["IPython/parallel/apps/ipcontrollerapp.py", "scripts/ipython_win_post_install.py", "setup.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo1ZDVkODFmMDBiMWUzNTU0ZGMwN2IyN2Q0YjBjN2NkYmUxMjBkZGY0", "commit_message": "Merge branch 'winsetup' (PR #536)\n\nintroduces install dependency of setuptools on Windows\n\nThis is a temporary fix, and the setuptools dependency should\nbe removed in 0.12.\n\ncloses gh-536\ncloses gh-351\ncloses gh-369", "commit_timestamp": "2011-06-24T23:54:47Z", "files": ["IPython/parallel/apps/ipcontrollerapp.py", "scripts/ipython_win_post_install.py", "setup.py"]}], "labels": ["important", "windows", "bug"], "created_at": "2011-04-12T00:59:14Z", "closed_at": "2011-06-24T23:58:49Z", "method": ["label"]}
{"issue_number": 351, "title": "Make sure that the Windows installer handles the top-level IPython scripts.", "body": "We have some hacky, fragile code that installs the top-level scripts for the MSI installer.  This code need to be tested, checked, etc. before the release.\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU4NTE4OjkzM2UyZDk4Zjc4MjFkMjI1OTdmOTAzOTA2YzMyMzA5OWMyYWE1MGQ=", "commit_message": "Merge branch 'winsetup' (PR #536)\n\nintroduces install dependency of setuptools on Windows\n\nThis is a temporary fix, and the setuptools dependency should\nbe removed in 0.12.\n\ncloses gh-536\ncloses gh-351\ncloses gh-369", "commit_timestamp": "2011-06-24T23:54:47Z", "files": ["IPython/parallel/apps/ipcontrollerapp.py", "scripts/ipython_win_post_install.py", "setup.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo1ZDVkODFmMDBiMWUzNTU0ZGMwN2IyN2Q0YjBjN2NkYmUxMjBkZGY0", "commit_message": "Merge branch 'winsetup' (PR #536)\n\nintroduces install dependency of setuptools on Windows\n\nThis is a temporary fix, and the setuptools dependency should\nbe removed in 0.12.\n\ncloses gh-536\ncloses gh-351\ncloses gh-369", "commit_timestamp": "2011-06-24T23:54:47Z", "files": ["IPython/parallel/apps/ipcontrollerapp.py", "scripts/ipython_win_post_install.py", "setup.py"]}], "labels": ["important", "windows", "bug"], "created_at": "2011-04-10T05:50:17Z", "closed_at": "2011-06-24T23:58:49Z", "method": ["label"]}
{"issue_number": 328, "title": "%run script.ipy raises \"ERROR! Session/line number was not unique in database.\"", "body": "running an IPython script (*.ipy) with %run will cause an error in the history manager:\n\n```\nIn [1]: run script.ipy\nERROR! Session/line number was not unique in database. History logging moved to new session 427\n```\n", "commits": [{"node_id": "MDY6Q29tbWl0OTc3NTQwOjdkMWJkZmFmZjc0YTA0MGI4OGQxNzI2YjQ3Y2VkNjczZjIyN2JlZDE=", "commit_message": "Do not store file contents in history when running a .ipy file.\n\ncloses gh-328", "commit_timestamp": "2011-04-01T09:39:44Z", "files": ["IPython/core/interactiveshell.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo0YjBlOTlhODNiMDNmOWU2NjFkZGYzYjFiYmY2ODM2MGQ2MGJhYzIy", "commit_message": "Do not store file contents in history when running a .ipy file.\n\ncloses gh-328", "commit_timestamp": "2011-04-01T09:39:44Z", "files": ["IPython/core/interactiveshell.py"]}], "labels": ["bug"], "created_at": "2011-04-01T05:42:55Z", "closed_at": "2011-04-02T21:02:04Z", "method": ["label"]}
{"issue_number": 327, "title": "PyPy compatibility", "body": "The current version of IPython crashes on PyPy because of an infinite recursion inside Config.**getitem**.  The different behavior of PyPy and CPython in these corner cases is documented here:\nhttp://pypy.readthedocs.org/en/latest/cpython_differences.html#subclasses-of-built-in-types\n\nThe following patch fixes the bug and make IPython working on PyPy:\n\n```\ndiff --git a/IPython/config/loader.py b/IPython/config/loader.py\nindex 652d321..d000b3a 100644\n--- a/IPython/config/loader.py\n+++ b/IPython/config/loader.py\n@@ -118,6 +118,11 @@ class Config(dict):\n         return type(self)(copy.deepcopy(self.items()))\n\n     def __getitem__(self, key):\n+        # we cannot use directly self._is_section_key, because it triggers\n+        # infinite recursion on top of PyPy. Instead, we manually fish the\n+        # bound method.\n+        _is_section_key = self.__class__._is_section_key.__get__(self)\n+        #\n         # Because we use this for an exec namespace, we need to delegate\n         # the lookup of names in __builtin__ to itself.  This means\n         # that you can't have section or attribute names that are \n@@ -126,7 +131,7 @@ class Config(dict):\n             return getattr(__builtin__, key)\n         except AttributeError:\n             pass\n-        if self._is_section_key(key):\n+        if _is_section_key(key):\n             try:\n                 return dict.__getitem__(self, key)\n             except KeyError:\n```\n", "commits": [{"node_id": "MDY6Q29tbWl0OTc3NTQwOjdlYjU4ZDMwZmZjMzQwNTNjMmI2YWZmOTA2ZDdlZmNiY2YzOWI3MjQ=", "commit_message": "Tweak config loader for PyPy compatibility.\n\ncloses gh-327", "commit_timestamp": "2011-04-02T21:17:18Z", "files": ["IPython/config/loader.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzowNjE1YmRlMWExZjM3Nzg0ZTYyOGExNjkyNTUxN2MxNjlhMDdmMDdm", "commit_message": "Tweak config loader for PyPy compatibility.\n\ncloses gh-327", "commit_timestamp": "2011-04-02T21:17:18Z", "files": ["IPython/config/loader.py"]}], "labels": [], "created_at": "2011-03-31T14:50:34Z", "closed_at": "2011-04-04T17:39:22Z", "method": ["regex"]}
{"issue_number": 322, "title": "Embedding an interactive IPython shell ", "body": "The way I understand it you should now be able to simply start a embedded console by\n\n```\nimport IPython\nIPython.embed()\n```\n\nHowever, this raises \n\n> TraitError: The 'exit_msg' trait of an InteractiveShellEmbed instance must be a string,    but a value of u'' <type 'unicode'> was specified.\n\nIf we pass a string for `exit_msg` by\n\n```\nIPython.embed(exit_msg='Whatever')\n```\n\nThen it raises a different error\n\n> AttributeError: 'InteractiveShellEmbed' object has no attribute 'set_completer'\n\nAm I missing something here? I am using Python 2.6.1. Thanks a lot.\n", "commits": [{"node_id": "MDY6Q29tbWl0OTc3NTQwOjYzMDFhMTRhMWVmYzk3ZGEwMGQ5NjIzYjEyMjY3NmZhMWY2NmFmMWM=", "commit_message": "Fix function call in terminal embed code.\n\nCloses gh-322", "commit_timestamp": "2011-03-29T19:12:46Z", "files": ["IPython/frontend/terminal/embed.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzoxYzgxNTUzNTAzNGQyYWRkMGY0NGFhNjQ4OTVkMzRjODNhN2U1NzQ1", "commit_message": "Fix function call in terminal embed code.\n\nCloses gh-322", "commit_timestamp": "2011-03-29T19:12:46Z", "files": ["IPython/frontend/terminal/embed.py"]}], "labels": ["bug"], "created_at": "2011-03-29T17:58:33Z", "closed_at": "2011-03-29T19:13:31Z", "method": ["label"]}
{"issue_number": 318, "title": "%debug broken in master: invokes missing save_history() method", "body": "The session below illustrates the AttributeError raised by attempting to use %debug after an Exception has been raised.   This is with current master, head is 2b37a36d696b77ac4a86688f1c679dccd9a06b7a.\n\nEric\n\n<pre>\nefiring@manini:~$ ipython \nPython 2.6.6 (r266:84292, Sep 15 2010, 16:22:56) \nType \"copyright\", \"credits\" or \"license\" for more information.\n\nIPython 0.11.dev -- An enhanced Interactive Python.\n?         -> Introduction and overview of IPython's features.\n%quickref -> Quick reference.\nhelp      -> Python's own help system.\nobject?   -> Details about 'object', use 'object??' for extra details.\n\nIn [1]: raise Exception(\"testing\")\n---------------------------------------------------------------------------\nException                                 Traceback (most recent call last)\n/home/efiring/<ipython-input-1-e61d64a81109> in <module>()\n----> 1 raise Exception(\"testing\")\n\nException: testing\n\nIn [2]: %debug\n---------------------------------------------------------------------------\nAttributeError                            Traceback (most recent call last)\n/home/efiring/<ipython-input-2-86050904a938> in <module>()\n----> 1 get_ipython().magic(u\"debug\")\n\n/home/efiring/programs/py/ipython/ipython_git/IPython/core/interactiveshell.pyc in magic(self, arg_s)\n   1743             with nested(self.builtin_trap,):\n   1744                 result = fn(magic_args)\n-> 1745                 return result\n   1746 \n   1747     def define_magic(self, magicname, func):\n\n/usr/lib/python2.6/contextlib.pyc in __exit__(self, type, value, traceback)\n     32                 value = type()\n     33             try:\n---> 34                 self.gen.throw(type, value, traceback)\n     35                 raise RuntimeError(\"generator didn't stop after throw()\")\n     36             except StopIteration, exc:\n\n/usr/lib/python2.6/contextlib.pyc in nested(*managers)\n    111             vars.append(enter())\n    112             exits.append(exit)\n--> 113         yield vars\n    114     except:\n    115         exc = sys.exc_info()\n\n/home/efiring/programs/py/ipython/ipython_git/IPython/core/interactiveshell.pyc in magic(self, arg_s)\n   1742             magic_args = self.var_expand(magic_args,1)\n   1743             with nested(self.builtin_trap,):\n-> 1744                 result = fn(magic_args)\n   1745                 return result\n   1746 \n\n/home/efiring/programs/py/ipython/ipython_git/IPython/core/magic.pyc in magic_debug(self, parameter_s)\n   1254         the %pdb magic for more details.\n   1255         \"\"\"\n-> 1256         self.shell.debugger(force=True)\n   1257 \n   1258     @testdec.skip_doctest\n\n/home/efiring/programs/py/ipython/ipython_git/IPython/core/interactiveshell.pyc in debugger(self, force)\n    738             # fallback to our internal debugger\n\n    739             pm = lambda : self.InteractiveTB.debugger(force=True)\n--> 740         self.history_saving_wrapper(pm)()\n    741 \n    742     #-------------------------------------------------------------------------\n\n\n/home/efiring/programs/py/ipython/ipython_git/IPython/core/interactiveshell.pyc in wrapper()\n   1263 \n   1264         def wrapper():\n-> 1265             self.save_history()\n   1266             try:\n   1267                 func()\n\nAttributeError: 'TerminalInteractiveShell' object has no attribute 'save_history'\n\nIn [3]: \n</pre>\n", "commits": [{"node_id": "MDY6Q29tbWl0OTc3NTQwOjdkZjk2NzYxYTg3ZTc0NWViZTQyODdhMTI3YTU4OTk4N2JlNGY5YmM=", "commit_message": "Cleanup old calls to save_history and reload_history methods, which were removed.\n\nCloses gh-318", "commit_timestamp": "2011-03-27T16:55:18Z", "files": ["IPython/core/interactiveshell.py", "IPython/core/magic.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzplZWVmZmU5ZTdlZjk0MTY4M2Y3ZTY3OWQyY2RmYWZjOTM0NDQ5ODYx", "commit_message": "Cleanup old calls to save_history and reload_history methods, which were removed.\n\nCloses gh-318", "commit_timestamp": "2011-03-27T16:55:18Z", "files": ["IPython/core/interactiveshell.py", "IPython/core/magic.py"]}], "labels": ["bug"], "created_at": "2011-03-26T22:17:05Z", "closed_at": "2011-04-08T22:24:45Z", "method": ["label", "regex"]}
{"issue_number": 307, "title": "lines ending with semicolon should not go to cache", "body": "on ipython 0.10.2 and prior, putting a semicolon at the end of a matplotlib object causes it to not be cached. \ni.e.\n\n<pre>\nIn [1]: plt.figure();\nIn [2]:\n</pre>\n\n\nHowever, on trunk\n\n<pre>\nIn [1]: plt.figure();\nOut[1]: &lt;matplotlib.figure.Figure at 0x95cd34c&gt;\nIn [2]:\n</pre>\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU4NTE4OjFmMGU5ZGFkMDhhMzU4ZjZhZTM5YWZiYzk1M2Y4MzBlZjA3ZjIyMWM=", "commit_message": "fix displayhook.quiet() check\n\nenable @ivanov's test, as it now passes\n\ncloses gh-307", "commit_timestamp": "2011-04-08T22:20:37Z", "files": ["IPython/core/displayhook.py", "IPython/core/tests/test_interactiveshell.py"]}, {"node_id": "MDY6Q29tbWl0OTc3NTQwOjllM2RkMzE2ZWU2NzZhZjVjZTc5ODMzYjBhZGQ2NGYzNDkwNmNjNGI=", "commit_message": "added test for GH-307", "commit_timestamp": "2011-04-03T06:43:52Z", "files": ["IPython/core/tests/test_interactiveshell.py"]}, {"node_id": "MDY6Q29tbWl0NzUzNzY4OmQxYmEyZDRkYjFiNWU3ZjU2YjU5YjNkOTY4NThmZTVhYmMxNWQwZGE=", "commit_message": "added test for GH-307", "commit_timestamp": "2011-03-25T09:02:46Z", "files": ["IPython/core/tests/test_interactiveshell.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo1MDVhMjcxNzQyNDVmM2RmNWUzYzA2ZGIwN2RmOTc5NGEwMDA5MTFk", "commit_message": "added test for GH-307", "commit_timestamp": "2011-04-03T06:43:52Z", "files": ["IPython/core/tests/test_interactiveshell.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzpjMTk4YTViMTg4NmFhZDZlOTk3NTkwODAyZGRkYWE2MDkzYmIxYjNk", "commit_message": "fix displayhook.quiet() check\n\nenable @ivanov's test, as it now passes\n\ncloses gh-307", "commit_timestamp": "2011-04-08T22:20:37Z", "files": ["IPython/core/displayhook.py", "IPython/core/tests/test_interactiveshell.py"]}], "labels": ["bug"], "created_at": "2011-03-25T07:41:41Z", "closed_at": "2011-04-08T22:20:48Z", "method": ["label"]}
{"issue_number": 306, "title": "multiline strings at end of input cause noop", "body": "## Overview\n\nTriple-quoted strings cause expressions before or after it to be ignored and not executed (in both qtconsole and terminal)\n\nNote how the error from In[2] is suppressed, and expression in In[3] not\nevaluated in trunk, whereas the desired behavior occurred in 0.10.2.\n## trunk behavior:\n\n<pre>\nIn [1]: a\nNameError                                 Traceback (most recent call last)\n/home/pi/<ipython-input-1-60b725f10c9c> in <module>()\n----> 1 a\nNameError: name 'a' is not defined\nIn [2]: a;\"\"\"\n   ...: \"\"\"\n\nIn [3]: a=10;\"\"\"\n   ...: \"\"\"\n\nIn [4]: a\nNameError                                 Traceback (most recent call last)\n/home/pi/<ipython-input-5-60b725f10c9c> in <module>()\n----> 1 a\n\nNameError: name 'a' is not defined\n</pre>\n\n## 0.10.2 behavior\n\n<pre>\nIn [1]: a\nNameError                                 Traceback (most recent call last)\n/home/pi/<ipython console> in <module>()\nNameError: name 'a' is not defined\n\nIn [2]: a;\"\"\"\n   ...: \"\"\"\nNameError                                 Traceback (most recent call last)\n/home/pi/<ipython console> in <module>()\nNameError: name 'a' is not defined\n\nIn [3]: a=10;\"\"\"\n   ...: \"\"\"\nOut[3]: '\\n'\n\nIn [4]: a\nOut[4]: 10\n</pre>\n\n", "commits": [{"node_id": "MDY6Q29tbWl0OTc3NTQwOjFhODFkM2UxMmQxMjliY2ViYzZkNDlhMGQ0ZTkzMWRmZGZmMzIyMGI=", "commit_message": "added test for GH-306", "commit_timestamp": "2011-04-03T06:42:58Z", "files": ["IPython/core/tests/test_interactiveshell.py"]}, {"node_id": "MDY6Q29tbWl0OTc3NTQwOjQ4NjNjNTE4ODRmNzM3YjljOWExMzFmYWZjMmNhNTczNWQ0MTNiZGE=", "commit_message": "Enable test for cells ending in multiline strings, as it now passes.\n\nCloses gh-306", "commit_timestamp": "2011-04-07T20:45:12Z", "files": ["IPython/core/tests/test_interactiveshell.py"]}, {"node_id": "MDY6Q29tbWl0NzUzNzY4OmM4ZTAxMDI0N2VjYzczYjZiNDQ1ZDMxMWMwM2E3NzA0OThhYzlkZDQ=", "commit_message": "added test for GH-306", "commit_timestamp": "2011-03-25T09:02:46Z", "files": ["IPython/core/tests/test_interactiveshell.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo2OTUwOWVlYjRmNmU5YWNhNzQ2ZWY4Mjk2NDBiYzIzMmNjNThkODZj", "commit_message": "added test for GH-306", "commit_timestamp": "2011-04-03T06:42:58Z", "files": ["IPython/core/tests/test_interactiveshell.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo0YjRjMjAwMjgyZDk1Y2UyNjNhYjY5M2VlMmVlODY2MTU2NmJjY2Fi", "commit_message": "Enable test for cells ending in multiline strings, as it now passes.\n\nCloses gh-306", "commit_timestamp": "2011-04-07T20:45:12Z", "files": ["IPython/core/tests/test_interactiveshell.py"]}], "labels": ["bug"], "created_at": "2011-03-25T06:58:36Z", "closed_at": "2011-04-07T23:28:12Z", "method": ["label"]}
{"issue_number": 297, "title": "Shouldn't use pexpect for subprocesses in in-process terminal frontend", "body": "Doing things like:\n\n```\nIn [1]: !nano testfile.py\n```\n\nWill do crazy and wrong things in the terminal, after the move to pexpect for all subprocesses.\n\nThis must be fixed.\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU5NDQ2OmJkYjAxMmNlMGI3ZTY3MTdjNzcwNjU5NWExNWY4ZGYxOTNlMjNkNGY=", "commit_message": "split shell.system into shell.system_raw/system_piped\n\nsystem_raw calls os.system, system_piped uses pexpect/utils.platform magic\n\nuse system_raw in Terminal except on Windows and in tests\nuse system_piped elsewhere\n\ncloses gh-297\ncloses gh-457", "commit_timestamp": "2011-05-27T18:08:00Z", "files": ["IPython/core/interactiveshell.py", "IPython/frontend/terminal/interactiveshell.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmJkYjAxMmNlMGI3ZTY3MTdjNzcwNjU5NWExNWY4ZGYxOTNlMjNkNGY=", "commit_message": "split shell.system into shell.system_raw/system_piped\n\nsystem_raw calls os.system, system_piped uses pexpect/utils.platform magic\n\nuse system_raw in Terminal except on Windows and in tests\nuse system_piped elsewhere\n\ncloses gh-297\ncloses gh-457", "commit_timestamp": "2011-05-27T18:08:00Z", "files": ["IPython/core/interactiveshell.py", "IPython/frontend/terminal/interactiveshell.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo0MjFjODU4NTU4YWQ1NzZjMWZhN2ZkZmY1YTBjMmM1ZGM3MTgyYzE2", "commit_message": "split shell.system into shell.system_raw/system_piped\n\nsystem_raw calls os.system, system_piped uses pexpect/utils.platform magic\n\nuse system_raw in Terminal except on Windows and in tests\nuse system_piped elsewhere\n\ncloses gh-297\ncloses gh-457", "commit_timestamp": "2011-05-27T18:08:00Z", "files": ["IPython/core/interactiveshell.py", "IPython/frontend/terminal/interactiveshell.py"]}], "labels": ["important", "bug"], "created_at": "2011-03-23T20:05:19Z", "closed_at": "2011-05-27T18:26:48Z", "method": ["label"]}
{"issue_number": 296, "title": "Automatic PDB via %pdb doesn't work", "body": "`%pdb` magic enables \"Automatic pdb calling has been turned ON\", but this behavior doesn't actually happen anymore. (In case it's my fault: OSX 10.6.7, system Python 2.6.1, IPython 0.11dev (31c1e49))\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU4NTE4OjBjNDFkMWIzN2Y4NzFjMmMwOTI2Mjg5NWUxM2YxMzhiNTY2ZTZmZDU=", "commit_message": "restore auto debug behavior\n\nCloses gh-296.", "commit_timestamp": "2011-04-09T19:01:12Z", "files": ["IPython/core/interactiveshell.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzpiYjAyMWM5ZDZlN2RmY2M1MzYwZTcxNTBlM2FhZTEyMWFmMjMyYTQz", "commit_message": "restore auto debug behavior\n\nCloses gh-296.", "commit_timestamp": "2011-04-09T19:01:12Z", "files": ["IPython/core/interactiveshell.py"]}], "labels": ["qtconsole", "bug"], "created_at": "2011-03-23T19:51:12Z", "closed_at": "2011-04-09T19:02:05Z", "method": ["label", "regex"]}
{"issue_number": 290, "title": "try/except/else clauses can't be typed, code input stops too early.", "body": "Trying to input code like:\n\n<pre>\ntry:\n    a = 5\nexcept:\n    raise\nelse:\n    print a\n</pre>\n\n\nis currently impossible in master, regardless of autoindent state:\n\n<pre>\nIn [1]: try:\n   ...:     a=5\n   ...: except:\n   ...:     raise\n\nIn [2]: autoindent\nAutomatic indentation is: OFF\n\nIn [3]: try:\n   ...:     a=5\n   ...: except:\n   ...:     raise\n\nIn [4]: \n</pre>\n\n\nwhat happens is that _immediately_ after the raise statement is entered, the input handling code thinks we're done, and it stops accepting more input.\n\nThe problem occurs both in the terminal and in the qtconsole, because the bug itself is most likely in inputsplitter, which is being to aggressive to bail out early when encountering a 'raise' statement.\n", "commits": [{"node_id": "MDY6Q29tbWl0OTc3NTQwOjk1MGE5NzBhNDA3ZTE2Nzc3NjM5MDI2MmQ1ZGUzYzgzZDMyYzQxNDI=", "commit_message": "Require blank line to end input cell immediately after dedenting.\n\nCloses gh-290", "commit_timestamp": "2011-03-25T00:12:56Z", "files": ["IPython/core/inputsplitter.py", "IPython/core/tests/test_inputsplitter.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzoxMDQ5ZTcyNjg2OTdhNDNlMGM1M2YxNTY1YmU3YTU2MTVjOGFmNTc5", "commit_message": "Require blank line to end input cell immediately after dedenting.\n\nCloses gh-290", "commit_timestamp": "2011-03-25T00:12:56Z", "files": ["IPython/core/inputsplitter.py", "IPython/core/tests/test_inputsplitter.py"]}], "labels": ["important", "bug"], "created_at": "2011-03-13T06:28:17Z", "closed_at": "2011-03-25T00:15:20Z", "method": ["label", "regex"]}
{"issue_number": 284, "title": "In variable no longer works in 0.11", "body": "I discovered this while working on getting a py3k setup working, but it happens even on my 2.6.5 EPD installation as well. \n\nUsing the EPD installation of IPython (0.10), the following works:\n    In [1]: x = 3\n\n```\nIn [2]: y = 4\n\nIn [3]: print(In)\n['\\n', u'x = 3\\n', u'y = 4\\n', u'print(In)\\n']\n```\n\nWhereas using the latest git repository of IPython, the following happens:\n    In [1]: x = 3\n\n```\nIn [2]: y = 4\n\nIn [3]: print(In)\n['']\n```\n\nIs that normal/expected behavior? The Out variable seems to work fine, and normally I don't really need the In variable, but it might be related to a more serious bug I've seen in ipython-py3k (https://github.com/ipython/ipython-py3k/issues/3)\n\nFor reference, I'm working on Mac OS X 10.6.6, Enthought Python Distribution 6.2-2 (which has Python 2.6.5), and the bug seems to happen irrespective of which terminal I'm using.\n", "commits": [{"node_id": "MDY6Q29tbWl0OTc3NTQwOmE0NjE0OGI5NTJhNjgzNzY3MzBkZGFhMDVhMWYyYmQ2Y2ZjYmMyMzE=", "commit_message": "added test for GH-284: ensure In variable is works", "commit_timestamp": "2011-04-03T06:43:52Z", "files": ["IPython/core/tests/test_interactiveshell.py"]}, {"node_id": "MDY6Q29tbWl0NzUzNzY4OjY5MTk2NmM3NDhlMTNjZmYwOTVkMTMyYjZkM2I4ZDZkYzY2MjBmZjc=", "commit_message": "added test for GH-284: ensure In variable is works", "commit_timestamp": "2011-03-25T09:41:52Z", "files": ["IPython/core/tests/test_interactiveshell.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo4ZTk2MGMwNGM2NGZkZGNkZTY3M2MwYzk2ODQ5YjVlNGU2M2ZjODI1", "commit_message": "added test for GH-284: ensure In variable is works", "commit_timestamp": "2011-04-03T06:43:52Z", "files": ["IPython/core/tests/test_interactiveshell.py"]}], "labels": ["bug"], "created_at": "2011-03-03T19:00:00Z", "closed_at": "2011-03-28T19:59:29Z", "method": ["label", "regex"]}
{"issue_number": 276, "title": "Calling `sip.setapi` does not work if app has already imported from PyQt4", "body": "Take the following example for a minimal Qt shell:\n\n```\n#!/usr/bin/env python\nimport sys\n\nfrom PyQt4.QtCore import Qt\nfrom PyQt4.QtGui import QMainWindow, QApplication\n\nfrom IPython.frontend.qt.kernelmanager import QtKernelManager\nfrom IPython.frontend.qt.console.ipython_widget import IPythonWidget\n\n\nclass MainWin(QMainWindow):\n  def __init__(self):\n    QMainWindow.__init__(self)\n    self.resize(1000,1000)\n\n    self.kernel = QtKernelManager()\n    self.kernel.start_kernel()\n    self.kernel.start_channels()\n\n    self.console = IPythonWidget()\n    self.console.kernel_manager = self.kernel\n\n    self.setCentralWidget(self.console)\n\ndef main():\n    app = QApplication(sys.argv)\n\n    main_win = MainWin()\n    main_win.show()\n    main_win.activateWindow()\n\n    app.exec_()\n\nif __name__ == '__main__':\n    main()\n```\n\nTrying to run this fails with the following error:\n\n```\nTraceback (most recent call last):\n  File \"./console_test.py\", line 7, in <module>\n    from IPython.frontend.qt.kernelmanager import QtKernelManager\n  File \"/usr/local/lib/python2.7/site-packages/IPython/frontend/qt/kernelmanager.py\", line 5, in <module>\n    from IPython.external.qt import QtCore\n  File \"/usr/local/lib/python2.7/site-packages/IPython/external/qt.py\", line 17, in <module>\n    sip.setapi('QString', 2)\n ValueError: API 'QString' has already been set to version 1\n```\n\nRearranging the imports in the following order allows it to succeed:\n\n```\nfrom IPython.frontend.qt.kernelmanager import QtKernelManager\nfrom IPython.frontend.qt.console.ipython_widget import IPythonWidget\n\nfrom PyQt4.QtCore import Qt\nfrom PyQt4.QtGui import QMainWindow, QApplication\n```\n\nApparently, in order for the `sip.setapi` to be valid, a PyQt application can't have made any PyQt4 imports before importing from the IPython interface.  For a simple one-file script like this there is no problem.  However, adding an IPython widget into a large project would be difficult.\n\nIs there any alternative to using `sip.setapi`?\n", "commits": [{"node_id": "MDY6Q29tbWl0NzAxODU4OTE6ZmRhYjc4MWY4NmY2MmYxMTNlODJlMzJmOWYxMGIzN2I5NzVmNjA3NA==", "commit_message": "try/except sip.setapi because Katana see https://github.com/ipython/ipython/issues/276", "commit_timestamp": "2017-03-07T17:31:45Z", "files": ["Qt.py"]}], "labels": [], "created_at": "2011-02-20T03:22:58Z", "closed_at": "2011-03-13T04:27:55Z", "method": ["regex"]}
{"issue_number": 216, "title": "crash of ipython when alias is used with %s and echo", "body": "This bug is present in alias of magic commands\nIn [1]: alias parts echo first %s second %s\nIn [2]: parts A\n  After executing the first line of command when we give command as parts A \ninstead of printing\n                  \"Incorrect number of arguments: 2 expected.\" ipython automatically crashes.\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU5NDQ2OjI5YzQ2MjQxMGRhZTY4NTE1OTlhYzkzNTgxN2M4MDAxN2I4MWMwNTg=", "commit_message": "prevent errors in prefilter from crashing IPython\n\ncloses gh-216", "commit_timestamp": "2011-05-04T22:04:10Z", "files": ["IPython/core/interactiveshell.py", "IPython/core/tests/test_interactiveshell.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjI4NWE3ZjdjYjEzN2Y3Y2Q2MTk3MTcyOTQwNDRkNzVlZjljMjczZmI=", "commit_message": "Merge pull request #415 from minrk/i216\n\nPrevent prefilter from crashing IPython\r\n\r\ncloses gh-216", "commit_timestamp": "2011-05-09T20:32:46Z", "files": ["IPython/core/interactiveshell.py", "IPython/core/tests/test_interactiveshell.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzplZTcwMmMyOTcyNTU0N2M0YTI4Yzk1MjU0NDg2Yzc5OGJiMDRkZDAz", "commit_message": "prevent errors in prefilter from crashing IPython\n\ncloses gh-216", "commit_timestamp": "2011-05-04T22:04:10Z", "files": ["IPython/core/interactiveshell.py", "IPython/core/tests/test_interactiveshell.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo3OWQ4ZTY2ZjgyMTg4YmU2NmQ3NWYyOTgzMjI4M2MwZDJlZjA3ZTll", "commit_message": "Merge pull request #415 from minrk/i216\n\nPrevent prefilter from crashing IPython\r\n\r\ncloses gh-216", "commit_timestamp": "2011-05-09T20:32:46Z", "files": ["IPython/core/interactiveshell.py", "IPython/core/tests/test_interactiveshell.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjI4NWE3ZjdjYjEzN2Y3Y2Q2MTk3MTcyOTQwNDRkNzVlZjljMjczZmI=", "commit_message": "Merge pull request #415 from minrk/i216\n\nPrevent prefilter from crashing IPython\r\n\r\ncloses gh-216", "commit_timestamp": "2011-05-09T20:32:46Z", "files": ["IPython/core/interactiveshell.py", "IPython/core/tests/test_interactiveshell.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjI4NWE3ZjdjYjEzN2Y3Y2Q2MTk3MTcyOTQwNDRkNzVlZjljMjczZmI=", "commit_message": "Merge pull request #415 from minrk/i216\n\nPrevent prefilter from crashing IPython\r\n\r\ncloses gh-216", "commit_timestamp": "2011-05-09T20:32:46Z", "files": ["IPython/core/interactiveshell.py", "IPython/core/tests/test_interactiveshell.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo3OWQ4ZTY2ZjgyMTg4YmU2NmQ3NWYyOTgzMjI4M2MwZDJlZjA3ZTll", "commit_message": "Merge pull request #415 from minrk/i216\n\nPrevent prefilter from crashing IPython\r\n\r\ncloses gh-216", "commit_timestamp": "2011-05-09T20:32:46Z", "files": ["IPython/core/interactiveshell.py", "IPython/core/tests/test_interactiveshell.py"]}], "labels": ["bug"], "created_at": "2010-12-18T10:48:30Z", "closed_at": "2011-05-09T20:32:48Z", "linked_pr_number": [216], "method": ["label", "regex"]}
{"issue_number": 211, "title": "paste command not working", "body": "I apologize if this is user error. I'm new to Python and even newer to IPython. :)\n\nWindows XP, sp3.\nPython 2.6\nIPython 0.10.1  win32\n\nIf I understand correctly, the paste command doesn't need any parameters. It's supposed to pull the contents of the clipboard then paste and run it.\n\n<pre>\nClipboard contents:\nprint \"my clipboard paste test\"\n--\n\nResult:\n\nIn [43]: paste\n---------------------------------------------------------------------------\nTypeError                                 Traceback (most recent call last)\n\nC:\\Dev\\Python\\<ipython console> in <module>()\n\nC:\\Program Files\\Python26\\lib\\site-packages\\IPython\\iplib.pyc in ipmagic(self, arg_s)\n   1180         else:\n   1181             magic_args = self.var_expand(magic_args,1)\n-> 1182             return fn(magic_args)\n   1183\n   1184     def ipalias(self,arg_s):\n\nC:\\Program Files\\Python26\\lib\\site-packages\\IPython\\Magic.pyc in magic_paste(self, parameter_s)\n   3411             return\n   3412\n-> 3413         text = self.shell.hooks.clipboard_get()\n   3414         block = self._strip_pasted_lines_for_code(text.splitlines())\n   3415         self._execute_block(block, par)\n\nC:\\Program Files\\Python26\\lib\\site-packages\\IPython\\hooks.pyc in __call__(self, *args, **kw)\n    139             #print \"prio\",prio,\"cmd\",cmd #dbg\n\n    140             try:\n--> 141                 ret = cmd(*args, **kw)\n    142                 return ret\n    143             except ipapi.TryNext, exc:\n\nC:\\Program Files\\Python26\\lib\\site-packages\\IPython\\hooks.pyc in clipboard_get(self)\n    260     dispatcher = CommandChainDispatcher()\n    261     for func in chain:\n    262         dispatcher.add(func)\n--> 263     text = dispatcher()\n    264     return text\n\nC:\\Program Files\\Python26\\lib\\site-packages\\IPython\\hooks.pyc in __call__(self, *args, **kw)\n    139             #print \"prio\",prio,\"cmd\",cmd #dbg\n\n    140             try:\n--> 141                 ret = cmd(*args, **kw)\n    142                 return ret\n    143             except ipapi.TryNext, exc:\n\nTypeError: tkinter_clipboard_get() takes no arguments (1 given)\n</pre>\n", "commits": [{"node_id": "MDY6Q29tbWl0MTIzNjAwMzpjZGQzYzg1MDliOGQxNDdmOWYxM2I3MjhhYmZiZWQwZDVjZDliNGQ2", "commit_message": "Allow TryNext to have an error message without it affecting the command chain.\n\nCloses gh-211", "commit_timestamp": "2012-05-06T11:09:02Z", "files": ["IPython/core/error.py", "IPython/lib/clipboard.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmNkZDNjODUwOWI4ZDE0N2Y5ZjEzYjcyOGFiZmJlZDBkNWNkOWI0ZDY=", "commit_message": "Allow TryNext to have an error message without it affecting the command chain.\n\nCloses gh-211", "commit_timestamp": "2012-05-06T11:09:02Z", "files": ["IPython/core/error.py", "IPython/lib/clipboard.py"]}, {"node_id": "MDY6Q29tbWl0MTIzNjAwMzpjYjE5ZDBkYjczMWU4ZTM1ZjI1MTBmNGI1MDE5NGE2N2NmYjRmNzA4", "commit_message": "Merge pull request #1703 from takluyver/i211\n\nAllow TryNext to have an error message without it affecting the command chain\r\n\r\nadded as `_msg`, relaying `**kwargs`\r\n\r\ncloses #211", "commit_timestamp": "2012-05-09T17:44:49Z", "files": ["IPython/core/error.py", "IPython/lib/clipboard.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzpjOTA2ZjVhMWIwNzFjZTVkMjU0MWVjM2FmYjY2NGNlMGY3ZmEwY2Fi", "commit_message": "Allow TryNext to have an error message without it affecting the command chain.\n\nCloses gh-211", "commit_timestamp": "2012-05-06T11:09:02Z", "files": ["IPython/core/error.py", "IPython/lib/clipboard.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo1MzE1MzA5MzU0MGMwYThmNDg2ZWQ0ZWY2NThiY2NiODM0YzJhZjc5", "commit_message": "Merge pull request #1703 from takluyver/i211\n\nAllow TryNext to have an error message without it affecting the command chain\r\n\r\nadded as `_msg`, relaying `**kwargs`\r\n\r\ncloses #211", "commit_timestamp": "2012-05-09T17:44:49Z", "files": ["IPython/core/error.py", "IPython/lib/clipboard.py"]}], "labels": ["windows", "bug"], "created_at": "2010-12-05T02:58:20Z", "closed_at": "2012-05-09T17:44:51Z", "method": ["label", "regex"]}
{"issue_number": 207, "title": "ipython crashes if atexit handler raises exception", "body": "See below. I think IPython should not crash when an unhandles exception is raised in the exit-handler. It would be better to give a warning or so.\n\n<pre>\nIn [4]: def foo(): 1/0\n   ...: \n\nIn [5]: import atexit\n\nIn [6]: atexit.register(foo)\nOut[6]: <function foo at 0x15aab90>\n\nIn [7]: exit()\nDo you really want to exit ([y]/n)? y\nError in atexit._run_exitfuncs:\nTraceback (most recent call last):\n  File \"/usr/lib/python2.6/atexit.py\", line 24, in _run_exitfuncs\n    func(*targs, **kargs)\n  File \"<ipython console>\", line 1, in foo\nZeroDivisionError: integer division or modulo by zero\nError in sys.exitfunc:\n---------------------------------------------------------------------------\nZeroDivisionError                             Python 2.6.5: /usr/bin/python\n                                                   Sun Nov 28 16:17:50 2010\nA problem occured executing Python code.  Here is the sequence of function\ncalls leading up to the error, with the most recent (innermost) call last.\n\n/usr/lib/python2.6/atexit.pyc in _run_exitfuncs()\n      9 \n     10 import sys\n     11 \n     12 _exithandlers = []\n     13 def _run_exitfuncs():\n     14     \"\"\"run any registered exit functions\n     15 \n     16     _exithandlers is traversed in reverse order so functions are executed\n     17     last in, first out.\n     18     \"\"\"\n     19 \n     20     exc_info = None\n     21     while _exithandlers:\n     22         func, targs, kargs = _exithandlers.pop()\n     23         try:\n---> 24             func(*targs, **kargs)\n        func = <bound method InteractiveShell.atexit_operations of <IPython.iplib.InteractiveShell object at 0x7fc5f71c1050>>\n        global function = undefined\n        global to = undefined\n        global be = undefined\n        global called = undefined\n        global at = undefined\n        global exit = undefined\n     25         except SystemExit:\n     26             exc_info = sys.exc_info()\n     27         except:\n     28             import traceback\n     29             print >> sys.stderr, \"Error in atexit._run_exitfuncs:\"\n     30             traceback.print_exc()\n     31             exc_info = sys.exc_info()\n     32 \n     33     if exc_info is not None:\n     34         raise exc_info[0], exc_info[1], exc_info[2]\n     35 \n     36 \n     37 def register(func, *targs, **kargs):\n     38     \"\"\"register a function to be executed upon normal program termination\n     39 \n\n/home/gerrit/<ipython console> in foo()\n----> 1 \n      2 \n      3 \n      4 \n      5 \n      6 \n      7 \n      8 \n      9 \n     10 \n     11 \n     12 \n     13 \n     14 \n     15 \n     16 \n     17 \n     18 \n     19 \n     20 \n     21 \n     22 \n     23 \n     24 \n     25 \n     26 \n     27 \n     28 \n     29 \n     30 \n     31 \n\nZeroDivisionError: integer division or modulo by zero\n\n**********************************************************************\n\nOops, IPython crashed. We do our best to make it stable, but...\n\nA crash report was automatically generated with the following information:\n  - A verbatim copy of the crash traceback.\n  - A copy of your input history during this session.\n  - Data on your current IPython configuration.\n\nIt was left in the file named:\n        '/home/gerrit/.ipython/IPython_crash_report.txt'\nIf you can email this file to the developers, the information in it will help\nthem in understanding and correcting the problem.\n\nYou can mail it to: Fernando Perez at fperez.net@gmail.com\nwith the subject 'IPython Crash Report'.\n\nIf you want to do it now, the following command will work (under Unix):\nmail -s 'IPython Crash Report' fperez.net@gmail.com < /home/gerrit/.ipython/IPython_crash_report.txt\n\nTo ensure accurate tracking of this issue, please file a report about it at:\nhttps://bugs.launchpad.net/ipython/+filebug\n\nPress enter to exit:\n</pre>\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU5NDQ2OmQ1NTQ4ZmE0YWUwODU3ZTI4NTY5Mjg5YjVjYWZkZjU1YmIwYTNlZmY=", "commit_message": "prevent atexit handlers from generating crash report\n\nregister `sys.excepthook = sys.__excepthook__` with atexit on aplication startup,\nso it should be the first handler called.  This removes the crash handler.\n\ncloses #207", "commit_timestamp": "2011-10-14T22:39:50Z", "files": ["IPython/core/application.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzozMjI0MjRlZWZlNmM0ZTI4ZmQ1MGRmZTdkZjU5NzEzNDRiNWU4N2Ri", "commit_message": "prevent atexit handlers from generating crash report\n\nregister `sys.excepthook = sys.__excepthook__` with atexit on aplication startup,\nso it should be the first handler called.  This removes the crash handler.\n\ncloses #207", "commit_timestamp": "2011-10-14T22:39:50Z", "files": ["IPython/core/application.py"]}], "labels": [], "created_at": "2010-11-28T15:21:11Z", "closed_at": "2011-10-18T22:50:39Z", "method": ["regex"]}
{"issue_number": 202, "title": "Matplotlib native 'MacOSX' backend broken in '-pylab' mode", "body": "When the matplotlib backend is specified as native MacOSX, and ipython is started with '-pylab' the plotting backend hangs, and no plots ever appear.\n\nWhen not started in '-pylab' mode, the MacOSX backend works fine.\n\nPerhaps related: MacOSX is not one of the options available to pass to pylab mode, as in:\n        ipython -pylab macosx\n\nwhich should certainly work.\n\nThis is a new issue introduced in 0.11, and 0.10.2 still works fine with the native backend.\n", "commits": [{"node_id": "MDY6Q29tbWl0OTc3NTQwOjg2ZGUxM2Y5NmNmZjZkNmFlYWI3ZDJmNzZhMDZlM2RmNGEzMGNiNmM=", "commit_message": "add 'osx' to known pylab backends, fix pylab mode with MacOSX backend\n\ncloses gh-202", "commit_timestamp": "2011-03-25T06:04:30Z", "files": ["IPython/core/magic.py", "IPython/lib/inputhook.py", "IPython/lib/pylabtools.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo5OGVlZjE1ZjViMjViZjY0OTc0N2UzMGMyOTljNTlkM2RlYzVjNWJi", "commit_message": "add 'osx' to known pylab backends, fix pylab mode with MacOSX backend\n\ncloses gh-202", "commit_timestamp": "2011-03-25T06:04:30Z", "files": ["IPython/core/magic.py", "IPython/lib/inputhook.py", "IPython/lib/pylabtools.py"]}], "labels": ["important", "bug", "osx"], "created_at": "2010-11-12T05:14:10Z", "closed_at": "2011-03-25T06:04:45Z", "method": ["label", "regex"]}
{"issue_number": 190, "title": "Add option to format float point output", "body": "Currently it is not possible to format how many digits of precision one wants to have in the output of IPython. For example, typing 1.0/3 returns 0.33333333333333331. In Octave, the same computation returns: ans =  0.33333. The set_printoptions function partially solves this:\n\nIn [4]: set_printoptions(precision=4)\nIn [5]: array([1.0/3])\nOut[5]: array([ 0.3333])\n\nHowever, it doesn't work for regular python floats. Matlab has this, Octave has this (format long/short). It would be very nice if IPython had it too.\n", "commits": [{"node_id": "MDY6Q29tbWl0OTc3NTQwOjYzN2Y4ODc1YmZiMjA5NWY1OGEwYmY4OTA1ODEwMjJlZmI3M2ZjMTc=", "commit_message": "add %precision magic\n\ncloses gh-190", "commit_timestamp": "2011-02-22T00:40:48Z", "files": ["IPython/core/magic.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzoxMDYzNDJjODJjMjY4ZjBkZWQ1MjFkMTZkYTA4OTU2OTk4MTg4M2Nk", "commit_message": "add %precision magic\n\ncloses gh-190", "commit_timestamp": "2011-02-22T00:40:48Z", "files": ["IPython/core/magic.py"]}], "labels": [], "created_at": "2010-10-27T11:22:08Z", "closed_at": "2011-02-23T00:13:38Z", "method": ["regex"]}
{"issue_number": 189, "title": "Crash on tab completion", "body": "The following makes ipython crash on my computer:\n\nIn [1]: import numpy\n\nIn [2]: numpy.s &lt;press TAB&gt;\n\nright next to the last text (\"numpy.s\") I get:\n\npython(53854,0x7fff70cb7c20) malloc: **\\* error for object 0x10195f8e0: incorrect checksum for freed object - object was probably modified after being freed.\n**\\* set a breakpoint in malloc_error_break to debug\nAbort trap\n\nI'm running ipython v0.10.1 with python v2.6.1 on a MacBook with OS X .6.4 (Snow Leopard)\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU5NDQ2OjYwY2RiNDg3ZWNlNTI5YjM3ZWQyMGM3ZTg4YWM1MmMwOWNkMGNlZjE=", "commit_message": "Merge pull request #189 from jdfreder/add_standard_header\n\nAdded standard IPy header to globalconfig", "commit_timestamp": "2013-06-30T21:14:28Z", "files": ["nbconvert/utils/config.py"]}], "labels": [], "created_at": "2010-10-27T09:54:37Z", "closed_at": "2011-03-13T05:21:25Z", "method": ["regex"]}
{"issue_number": 181, "title": "cls command does not work on windows", "body": "Hi,\n\nthe cls command does not work on windows with the pull from the master branch. \nInstead of clearing the screen I only get a garbage character output (see below, \\* is placeholder for garbage character that was not possible to paste into the issue)\n\n/J\u00f6rgen\n\nC:\\python\\external>ipython\nPython 2.6.4 (r264:75708, Oct 26 2009, 08:23:19) [MSC v.1500 32 bit (Intel)]\nType \"copyright\", \"credits\" or \"license\" for more information.\n\nIPython 0.11.alpha1.git -- An enhanced Interactive Python.\n?         -> Introduction and overview of IPython's features.\n%quickref -> Quick reference.\nhelp      -> Python's own help system.\nobject?   -> Details about 'object', use 'object??' for extra details.\n\nIn [1]: cls\n\f*\f\f\n", "commits": [{"node_id": "MDY6Q29tbWl0MTUwNzk1NzpmYTk1MTQ1YjgwODUyNDc5YTQ0NmNmNmRlM2I0Y2MzMTkzY2EzYzhk", "commit_message": "Add magic for cls on windows. Fix for #181.", "commit_timestamp": "2011-10-20T19:30:01Z", "files": ["IPython/core/magic.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjI0MzYwNGEwNTNmYzU1MWRkNTNmNTUzMzdlN2RkZjg4NTI0ZWVjMzU=", "commit_message": "Add magic for cls on windows. Fix for #181.", "commit_timestamp": "2011-10-21T11:55:57Z", "files": ["IPython/core/magic.py"]}, {"node_id": "MDY6Q29tbWl0NjU5NDQ2OmE3YjQ4MDk2ZmI3MmQ4M2Q2NGE2YzBjYzU1NmNlMzlkMTg5N2MyYzE=", "commit_message": "use system_raw in terminal, even on Windows\n\n`system_raw` uses `os.system` instead of `utils.process.system`, and makes\nmore sense in a Terminal session.\n\nThere was discussion that it should be otherwise on Windows, but I can't\nfind any actual evidence for why this would be the case, and there are very\nclear disadvantages to not using `os.system` (see #978 and #181).\n\ncloses gh-978", "commit_timestamp": "2011-11-09T03:47:18Z", "files": ["IPython/frontend/terminal/interactiveshell.py"]}], "labels": ["windows", "bug"], "created_at": "2010-10-22T17:08:23Z", "closed_at": "2011-10-21T21:46:44Z", "method": ["label", "regex"]}
{"issue_number": 177, "title": "Report tracebacks of interactively entered input", "body": "This has been an issue always, but it becomes _far_ more critical with a client like the Qt console that can handle complex multiline input.  Python by default won't give a traceback of interactively entered input, which means that errors on complex multiline input are very hard to debug.\n\nAt the old terminal console, we typically used %run for complex codes, so tracebacks can be read from a file.  But now we're typing complex codes even at the terminal, so we need to have good tracebacks there.\n\nApproach: create a scratch file with the last input being executed as the first step of exception traceback construction.  This will allow the python exception machinery to find the information it wants.\n\nThe name of the scratch file should be constant through the life of the kernel, so that it's hardcoded in the compile() calls.\n", "commits": [{"node_id": "MDY6Q29tbWl0OTc3NTQwOmM5NDEyNmMyMGI5Yjc2MWY3OGE1NzRlYjRkY2FjYzA0ZjE2NGIzOTg=", "commit_message": "Complete implementation of interactive traceback support.\n\nEver since IPython started, we've had no proper tracebacks for\ninteractively entered code.  The terminal version was fairly\nuncomfortable for more than just a few lines of code, so this was\nnever too big of a deal.  But the new architecture allows clients with\ncomplex multiline input, and having proper tracebacks becomes now\ncritical for real-world use.\n\nThanks to Robert Kern for key implementation ideas and original patch.\n\nCloses gh-177.", "commit_timestamp": "2010-10-22T07:14:51Z", "files": ["IPython/core/compilerop.py", "IPython/core/interactiveshell.py", "IPython/core/tests/test_compilerop.py", "IPython/core/tests/test_iplib.py", "IPython/core/ultratb.py", "IPython/lib/tests/test_irunner.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo5Yzk1ZWM1YmEzNDRkYTQ5ODE0NzljNDRiODRmYzk1NDFmY2I0YjVj", "commit_message": "Complete implementation of interactive traceback support.\n\nEver since IPython started, we've had no proper tracebacks for\ninteractively entered code.  The terminal version was fairly\nuncomfortable for more than just a few lines of code, so this was\nnever too big of a deal.  But the new architecture allows clients with\ncomplex multiline input, and having proper tracebacks becomes now\ncritical for real-world use.\n\nThanks to Robert Kern for key implementation ideas and original patch.\n\nCloses gh-177.", "commit_timestamp": "2010-10-22T07:14:51Z", "files": ["IPython/core/compilerop.py", "IPython/core/interactiveshell.py", "IPython/core/tests/test_compilerop.py", "IPython/core/tests/test_iplib.py", "IPython/core/ultratb.py", "IPython/lib/tests/test_irunner.py"]}], "labels": ["important"], "created_at": "2010-10-21T00:50:39Z", "closed_at": "2010-10-22T07:20:07Z", "method": ["regex"]}
{"issue_number": 165, "title": "Installer fails to create Start Menu entries on Windows", "body": "The install script fails with an error, but unfortunately the post-install script mechanism doesn't provide any traceback or info, so it's quite difficult to know exactly what is failing.\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU5NDQ2OjRiZWZiNjc1YTNlOGNkNjUyNTgwYjdjMWVkNTgyNjlkZjI2NzVmZjQ=", "commit_message": "Merge pull request #165 from damianavila/fix_reveal_new_nb\n\nFixed reveal in the new nbconvert to make it work.\r\n\r\nThe fixes:\r\n\r\nChange in reveal.tpl:\r\nFixed paths to reveal.js folder\r\nChange location of mathjax config file\r\nAdd mathjax onload in the template (to avoid mathjax rendering bad, we render at the end).\r\nHide solcial buttons (to have a simpler slideshow, let the user complicate it!)\r\nChanges in revealhelp.py to fix a bug when there is no slideshow metadata in a cell.\r\nChanges in exporter/reveal.py to register the CSSHtmlHeaderTransformer", "commit_timestamp": "2013-06-02T21:03:35Z", "files": ["nbconvert/exporters/reveal.py", "nbconvert/transformers/revealhelp.py"]}], "labels": ["windows", "bug"], "created_at": "2010-10-10T06:35:36Z", "closed_at": "2013-01-19T21:46:45Z", "method": ["label", "regex"]}
{"issue_number": 148, "title": "dictionary having multiple keys having frozenset fails to print on iPython", "body": "<pre>\nIn [59]: d1 = { frozenset([1,2,3]) : [1,2,3], 'key1' : 'value1' }\n\nIn [60]: d1\nOut[60]: ---------------------------------------------------------------------------\nTypeError                                 Traceback (most recent call last)\n\n/home/.../<ipython console> in <module>()\n\n/usr/lib/pymodules/python2.6/IPython/Prompts.pyc in __call__(self, arg)\n    550 \n    551             # and now call a possibly user-defined print mechanism\n\n--> 552             manipulated_val = self.display(arg)\n    553 \n    554             # user display hooks can change the variable to be stored in\n\n\n/usr/lib/pymodules/python2.6/IPython/Prompts.pyc in _display(self, arg)\n    576             return IPython.generics.result_display(arg)\n    577         except TryNext:\n--> 578             return self.shell.hooks.result_display(arg)\n    579 \n    580     # Assign the default display method:\n\n\n/usr/lib/pymodules/python2.6/IPython/hooks.pyc in __call__(self, *args, **kw)\n    139             #print \"prio\",prio,\"cmd\",cmd #dbg\n\n    140             try:\n--> 141                 ret = cmd(*args, **kw)\n    142                 return ret\n    143             except ipapi.TryNext, exc:\n\n/usr/lib/pymodules/python2.6/IPython/hooks.pyc in result_display(self, arg)\n    169 \n    170     if self.rc.pprint:\n--> 171         out = pformat(arg)\n    172         if '\\n' in out:\n    173             # So that multi-line strings line up with the left column of\n\n\n/usr/lib/python2.6/pprint.pyc in pformat(self, object)\n    109     def pformat(self, object):\n    110         sio = _StringIO()\n--> 111         self._format(object, sio, 0, 0, {}, 0)\n    112         return sio.getvalue()\n    113 \n\n/usr/lib/python2.6/pprint.pyc in _format(self, object, stream, indent, allowance, context, level)\n    127             self._readable = False\n    128             return\n--> 129         rep = self._repr(object, context, level - 1)\n    130         typ = _type(object)\n    131         sepLines = _len(rep) > (self._width - 1 - indent - allowance)\n\n/usr/lib/python2.6/pprint.pyc in _repr(self, object, context, level)\n    221     def _repr(self, object, context, level):\n    222         repr, readable, recursive = self.format(object, context.copy(),\n--> 223                                                 self._depth, level)\n    224         if not readable:\n    225             self._readable = False\n\n/usr/lib/python2.6/pprint.pyc in format(self, object, context, maxlevels, level)\n    233         and whether the object represents a recursive construct.\n    234         \"\"\"\n--> 235         return _safe_repr(object, context, maxlevels, level)\n    236 \n    237 \n\n/usr/lib/python2.6/pprint.pyc in _safe_repr(object, context, maxlevels, level)\n    275         level += 1\n    276         saferepr = _safe_repr\n--> 277         for k, v in sorted(object.items()):\n    278             krepr, kreadable, krecur = saferepr(k, context, maxlevels, level)\n    279             vrepr, vreadable, vrecur = saferepr(v, context, maxlevels, level)\n\nTypeError: can only compare to a set\n</pre>\n", "commits": [{"node_id": "MDY6Q29tbWl0NzU1NjA1OmE1NWI3NGE2Mjk0MjVlMzM0NGM4YmFkN2I1OTk0ZWJmYzViMTIwODU=", "commit_message": "Work around bug in pprint.pformat.  Closes gh-148", "commit_timestamp": "2010-10-10T05:16:27Z", "files": ["IPython/core/displayhook.py", "IPython/core/hooks.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzoyNDAzODU4ZGJmYmE4M2RiMDBiN2Y4MTQ3M2ZkYTkzNGQ4ZTY5MmUx", "commit_message": "Work around bug in pprint.pformat.  Closes gh-148", "commit_timestamp": "2010-10-10T05:16:27Z", "files": ["IPython/core/displayhook.py", "IPython/core/hooks.py"]}], "labels": [], "created_at": "2010-09-08T10:30:01Z", "closed_at": "2010-10-10T05:16:49Z", "method": ["regex"]}
{"issue_number": 147, "title": "On Windows, %page is being too restrictive to split line by \\r\\n only", "body": "%page break line on os.linesep, which is \\r\\n on windows. But \\n is often used as line break in Windows also. The current algorithm is being too restrictive.\n\nA very simple patch should fix this.\n\n```\n--- genutils.0.py       2009-08-04 09:26:20.000000000 -0700\n+++ genutils.py 2010-09-04 13:22:21.650766000 -0700\n@@ -1638,7 +1638,7 @@\n         print strng\n         return\n     # chop off the topmost part of the string we don't want to see\n-    str_lines = strng.split(os.linesep)[start:]\n+    str_lines = strng.splitlines()[start:]\n     str_toprint = os.linesep.join(str_lines)\n     num_newlines = len(str_lines)\n     len_str = len(str_toprint)\n```\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU4NTE4OmNmNzA4MWY5ZTA0YmE4MjUxYTc2YmJiZTkxM2NjZGY3M2YzZDAwZmY=", "commit_message": "fix too-restrictive use of split(os.linesep) in %page\n\nreplaced with splitlines()\n\ncloses gh-147", "commit_timestamp": "2011-04-11T20:01:49Z", "files": ["IPython/core/page.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo4NzkzYjhlOTk0MjU4MmFjMzU5MjA2NWNiY2NmMjA0NWZmY2Q2NjFh", "commit_message": "fix too-restrictive use of split(os.linesep) in %page\n\nreplaced with splitlines()\n\ncloses gh-147", "commit_timestamp": "2011-04-11T20:01:49Z", "files": ["IPython/core/page.py"]}], "labels": ["windows", "bug"], "created_at": "2010-09-05T01:53:01Z", "closed_at": "2011-04-11T20:03:50Z", "method": ["label"]}
{"issue_number": 142, "title": "unexpected auto-indenting when varibles names that start with 'pass' ", "body": "using 0.1, on Debian unstable with Python 2.6.5\nMinor issue after the second line the auto-indent jumps back to the first column,\nthen I manually enter four spaces enter the if statement, then it auto-indents four spaces\nafter entering the if statement, so I enter in four more and I get an IndentationError:\n\nIn [3]: for i in range(10):\n   ...:     pass_arg=i\n   ...:     if i==pass_arg:\n##    ...:         print(i)\n\nIndentationError: expected an indented block (<ipython console>, line 4)\n\nIn [4]: % hist -n\n\nfor i in range(10):\n    pass_arg=i\n    if i==pass_arg:\n    print(i)\n_ip.magic(\"hist -n\")\n\nIn [5]: \n", "commits": [{"node_id": "MDY6Q29tbWl0NjU4NTE4OjJiOTI5MDU5ZDlkYmY5MzhiMTU1YWE5ZGE5MmY5MjU0YzE1ZDZhMjg=", "commit_message": "Fix behaviour of dedent triggering. Closes gh-142.", "commit_timestamp": "2011-04-10T06:15:28Z", "files": ["IPython/core/inputsplitter.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzpkNmMxNjIxN2U0ZTEyYjFjOGY0MmU0MzFlOGVlNDBhYjBlYzMyMjQ2", "commit_message": "New tests related to issue #142.", "commit_timestamp": "2011-04-09T06:21:41Z", "files": ["IPython/core/tests/test_inputsplitter.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo3NWM5M2ZhYjA1YjMxMDYwNjhmMmNmMDhjNDY1NDJjNDBhZWI0MTIy", "commit_message": "Fix behaviour of dedent triggering. Closes gh-142.", "commit_timestamp": "2011-04-10T06:15:28Z", "files": ["IPython/core/inputsplitter.py"]}], "labels": ["bug"], "created_at": "2010-08-12T17:41:55Z", "closed_at": "2011-04-10T06:42:55Z", "method": ["label"]}
{"issue_number": 137, "title": "sys.getfilesystemencoding return value not checked", "body": "On HP-UX, sys.getfilesystemencoding returns None. On line 993 of genutils.py, the result of calling that function is decoded without first checking the return value.\n\nThis small patch solved it for me.\n\n```\n-    return ipdir.decode(sys.getfilesystemencoding())\n+    fsenc = sys.getfilesystemencoding()\n+    if fsenc:\n+        return ipdir.decode(fsenc)\n+    else:\n+        return ipdir\n```\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU4NTE4OmVhZGUwNTc0ZjFlYmY4ZmNiZGVhZThlMWMzOTAxY2IxZWZhOWNiYjY=", "commit_message": "fallback on defaultencoding if filesystemencoding is None\n\ncloses gh-137", "commit_timestamp": "2011-04-11T19:49:05Z", "files": ["IPython/utils/path.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4Ojk1MjFiZWE1YTc2MmRmMDE1MWE1ZjgyZmFlNWNmZTYwZDIzOWY0NzM=", "commit_message": "fallback on defaultencoding if filesystemencoding is None\n\ncloses gh-137", "commit_timestamp": "2011-04-29T16:53:00Z", "files": ["IPython/utils/path.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo2MDMyMDE5OTFmM2RjY2JhNDQ1YTIyOGVlNjgyMzliNzBhNGIxNWMz", "commit_message": "fallback on defaultencoding if filesystemencoding is None\n\ncloses gh-137", "commit_timestamp": "2011-04-29T16:53:00Z", "files": ["IPython/utils/path.py"]}], "labels": ["bug"], "created_at": "2010-07-23T17:02:22Z", "closed_at": "2011-04-29T17:01:39Z", "method": ["label"]}
{"issue_number": 129, "title": "psearch: TypeError: expected string or buffer", "body": "version: 0.10-2 (Debian sid)\noriginal report: http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=565351\n\nI've ran into this issue many times and finally decided to report ;)\n\nIn [1]: import numpy\n## In [2]: %psearch numpy._._s\n\nTypeError                                 Traceback (most recent call last)\n\n...\n\n/usr/lib/pymodules/python2.5/IPython/wildcard.pyc in glob_filter(lista, name_pattern, hidehidden, ignore_case)\n    113             else:\n    114                 reg=re.compile(pattern+\"$\")\n--> 115             result=[x for x in lista if reg.match(x) and show_hidden(x,hidehidden)]\n    116             return result\n    117         ns=self._ns\n\nTypeError: expected string or buffer\n\nhappens with\nipdb> p lista\n[<type 'numpy.void'>, <type 'numpy.float128'>, 'f4', <type 'numpy.int8'>, 'f8', <type 'numpy.float64'>, 'Complex128', <type 'numpy.int32'>, <type 'numpy.int16'>, 'Bool', 'b1', <type 'numpy.string_'>, 'String0', 'q', <type 'numpy.complex64'>, 'Complex64', 'G', 'u4', <type 'numpy.int64'>, 'Unicode0', 'u1', <type 'numpy.complex128'>, 'u2', 'i1', 'UInt16', 'Float32', <type 'numpy.int64'>, 'Int64', <type 'numpy.complex256'>, 'c16', '?', 'Void0', <type 'numpy.bool_'>, 'i8', <type 'numpy.uint8'>, 'B', 'D', <type 'numpy.object_'>, 'F', 'I', 'H', 'i2', <type 'numpy.uint16'>, 'L', 'O', 'i4', 'Q', 'S', 'c8', 'U', 'Int8', 'Complex32', 'V', <type 'numpy.uint32'>, <type 'numpy.unicode_'>, 'u8', 'UInt64', 'Float64', 'b', 'd', 'g', 'f', 'i', 'h', 'UInt8', 'l', 'UInt32', 'Object0', <type 'numpy.uint64'>, 'Float128', <type 'numpy.uint64'>, 'c32', 'f16', 'Int16', <type 'numpy.float32'>, 'Int32']\n\nipdb>  reg.match(lista[0])\n**\\* TypeError: expected string or buffer\n\nI guess safest way would be to check first if x is a string at all ;)\n", "commits": [{"node_id": "MDY6Q29tbWl0OTc3NTQwOjI2ZmI5NTU4ZDVlM2UzOWVjMjk4MGU2OTM3ZTFkYjY5ZWE5OTk3NjQ=", "commit_message": "Merge branch 'issue-129'\n\ncloses gh-129\ncloses gh-251", "commit_timestamp": "2011-02-23T22:07:04Z", "files": ["IPython/utils/tests/test_wildcard.py", "IPython/utils/wildcard.py"]}, {"node_id": "MDY6Q29tbWl0NjU5NDQ2OjExNWJhZGYzOTc1ZTE2YmViMjcwZDU3NTZhZjJkZTA3MjBlYzY1MGY=", "commit_message": "Merge pull request #129 from minrk/fixcwd\n\nallow nbconvert to run from anywhere", "commit_timestamp": "2013-04-14T17:17:57Z", "files": ["nbconvert2.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzoxMTMyOGJkNWFiZWY1OTljZjdjZDA5YmYwZjM5NmIxNTRjOTNjMTNm", "commit_message": "Merge branch 'issue-129'\n\ncloses gh-129\ncloses gh-251", "commit_timestamp": "2011-02-23T22:07:04Z", "files": ["IPython/utils/tests/test_wildcard.py", "IPython/utils/wildcard.py"]}], "labels": [], "created_at": "2010-06-21T15:13:50Z", "closed_at": "2011-02-23T22:07:30Z", "method": ["regex"]}
{"issue_number": 127, "title": "%edit does not work on filenames consisted of pure numbers", "body": "SUMMARY:\n\nI am using ipython 0.10-1ubuntu1 and Python 2.6.5 on Ubuntu 10.04. The magic command '%edit' does not work on filenames consisted of pure numbers, such as '09.py'. Although numbers following '%edit' are interpreted as lines of previous input, in my opinion, a string like '09.py' should be interpreted as a filename for sure.\n\nHOW TO REPEAT THIS PROBLEM:\n\n<pre>\n$ cat 09.py\n\n#!/usr/bin/python\n\nprint \"hello\"\n\n$ cp 09.py a09.py\n\n$ ls\n09.py  a09.py\n\n$ ipython\nPython 2.6.5 (r265:79063, Apr 16 2010, 13:09:56)\n...\n\nIn [1]: ed -x a09.py\n... everything is OK ...\n\nIn [2]: ed -x 09.py\n---------------------------------------------------------------------------\nValueError                                Traceback (most recent call last)\n\n/home/user/test/<ipython console> in <module>()\n\n/usr/lib/pymodules/python2.6/IPython/iplib.pyc in ipmagic(self, arg_s)\n   1180         else:\n   1181             magic_args = self.var_expand(magic_args,1)\n-> 1182             return fn(magic_args)\n   1183\n   1184     def ipalias(self,arg_s):\n\n/usr/lib/pymodules/python2.6/IPython/Magic.py in magic_ed(self, parameter_s)\n   2127     def magic_ed(self,parameter_s=''):\n   2128         \"\"\"Alias to %edit.\"\"\"\n-> 2129         return self.magic_edit(parameter_s)\n   2130\n   2131     @testdec.skip_doctest\n\n/usr/lib/pymodules/python2.6/IPython/Magic.py in magic_edit(self, parameter_s, last_call)\n   2323             # numbers this way. Tough.\n\n   2324             ranges = args.split()\n-> 2325             data = ''.join(self.extract_input_slices(ranges,opts_r))\n   2326         elif args.endswith('.py'):\n   2327             filename = make_filename(args)\n\n/usr/lib/pymodules/python2.6/IPython/Magic.py in extract_input_slices(self, slices, raw)\n    187                 fin += 1\n    188             else:\n--> 189                 ini = int(chunk)\n    190                 fin = ini+1\n    191             cmds.append(hist[ini:fin])\n\nValueError: invalid literal for int() with base 10: '09.py'\n</pre>\n", "commits": [{"node_id": "MDY6Q29tbWl0OTc3NTQwOmQ0M2MzZGM1MWZlZTExZjM0MGU1YmNkZTcyZDMyMzljMTJiYjRkYjg=", "commit_message": "Change order in which things are tried in %edit, so filenames starting with numbers can be edited.\n\nCloses gh-127\nCloses gh-55", "commit_timestamp": "2011-03-21T23:35:03Z", "files": ["IPython/core/magic.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzpiYjM3NDhiZTBjZDE3YTE1NTgwYjZiN2FiYzJhMDY2MmJmMGEyMTIx", "commit_message": "Change order in which things are tried in %edit, so filenames starting with numbers can be edited.\n\nCloses gh-127\nCloses gh-55", "commit_timestamp": "2011-03-21T23:35:03Z", "files": ["IPython/core/magic.py"]}], "labels": [], "created_at": "2010-06-06T06:30:30Z", "closed_at": "2011-03-23T21:47:19Z", "method": ["regex"]}
{"issue_number": 123, "title": "Define sys.ps{1,2}", "body": "See https://bugs.launchpad.net/ipython/+bug/512826 for prior history.\n\nSummary: we should define sys.ps{1,2} to make it easier for scripts to detect if they are being loaded interactively or not, and without ipython-specific checks.\n", "commits": [{"node_id": "MDY6Q29tbWl0MjkwOTI5MDo1ZWIwM2JmMDYwNjc0Zjc4NWZmZGE0OTBkZTk5ZDE0N2ZhODFlNTIz", "commit_message": "Define generic sys.ps{1,2,3}, for use by scripts.\n\nCloses #123", "commit_timestamp": "2012-05-10T00:34:11Z", "files": ["IPython/core/interactiveshell.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjVlYjAzYmYwNjA2NzRmNzg1ZmZkYTQ5MGRlOTlkMTQ3ZmE4MWU1MjM=", "commit_message": "Define generic sys.ps{1,2,3}, for use by scripts.\n\nCloses #123", "commit_timestamp": "2012-05-10T00:34:11Z", "files": ["IPython/core/interactiveshell.py"]}, {"node_id": "MDY6Q29tbWl0MTczNDM4MzplYTljMjkzNjZkZmFiYWUwMmFhNDA2YzFhNDYxMzRjMzQzNGVhZTFm", "commit_message": "Merge pull request #1717 from bfroehle/_123_sys_ps1\n\nDefine generic sys.ps{1,2,3}, for use by scripts.\r\n\r\nCloses #123.", "commit_timestamp": "2012-05-10T00:46:16Z", "files": ["IPython/core/interactiveshell.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzphZmJjOWEwMjBmZjIyZGRhMDZlMzQ5YjZhNzAzYTk0NGI0YTU4ZjZk", "commit_message": "Define generic sys.ps{1,2,3}, for use by scripts.\n\nCloses #123", "commit_timestamp": "2012-05-10T00:34:11Z", "files": ["IPython/core/interactiveshell.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo2MWFjZjEzZGU4YTVkODM5ODQxMDkxYmNhMzBlNTEwOTdiNzBmZDlm", "commit_message": "Merge pull request #1717 from bfroehle/_123_sys_ps1\n\nDefine generic sys.ps{1,2,3}, for use by scripts.\r\n\r\nCloses #123.", "commit_timestamp": "2012-05-10T00:46:16Z", "files": ["IPython/core/interactiveshell.py"]}], "labels": [], "created_at": "2010-05-24T06:11:34Z", "closed_at": "2012-05-10T00:46:17Z", "method": ["regex"]}
{"issue_number": 122, "title": "Ctrl-C doesn't work to clear a line of input when using wx", "body": "In previous versions of IPython, you could use Ctrl-C to clear a line of input.  This no longer works if GUI event loop integration is running with wx or qt.  This is because of how the wx and qt inputhooks handle KeyboardInterrupt.  But, this does work in Tk, which means it is possible to fix this issue.  We need to investigate and fix.\n", "commits": [{"node_id": "MDY6Q29tbWl0MjQzNTYzMjoxZDZlOWEwODgxYzBlZjEyZTAwZjkwYTRhYTIzYjI5ZGZhZjhiYzlk", "commit_message": "inputhook: move the new CTRL+C handling logic to this level\n\nThe inputhookqt4 module now only contains a simple, straightforward\ninputhook_qt4 input hook doing only Qt4 event processing in short\nbatches (#481).\n\nThe logic to handle CTRL+C is now entirely done at the level of the\nInputHookManager, where a new set_safe_inputhook() method can be used\nto install a hook which will automatically benefit of the two-step\nCTRL+C handling (first for interrupting the event loop and suspending\nthe input hook, second for returning to the prompt, at which point the\ninput hook is restored). This should help to address issues #122 and\ncatch KeyboardInterrupt and has to be installed using\nset_safe_inputhook).\n\nSome extra care is taken on Unix where we want to make sure no\nKeyboardInterrupt is raised upon entering the Python callback (e.g. in\nreadline.c, if a KeyboardInterrupt is received during a select(), the\nPyOS_InputHook is executed directly afterward and if it's a ctypes\nPython callback the exception will be raised immediately on entering\nthe function, even before an initial `try:` could be executed).", "commit_timestamp": "2011-10-11T18:18:44Z", "files": ["IPython/lib/inputhook.py", "IPython/lib/inputhookqt4.py"]}, {"node_id": "MDY6Q29tbWl0NjU5NDQ2Ojk3OTA5NDlhNzIzOWM4ZDkyN2NkYmYyOTA3Y2RjOGRkZmMyNjI4NmU=", "commit_message": "Merge pull request #122 from jdfreder/master\n\nChanged input/output size (formatting)", "commit_timestamp": "2013-04-23T17:28:50Z", "files": ["converters/sphinx_transformer.py"]}], "labels": [], "created_at": "2010-05-20T15:45:28Z", "closed_at": "2016-07-19T23:45:28Z", "method": ["regex"]}
{"issue_number": 120, "title": "inspect.getsource fails for functions defined on command line", "body": "I believe the problem is the function doesn't exist in a module for which source is available.\n\nThis is problematic for packages which parse Python source to do various things with. There is a possible ugly workaround involving detecting iPython and then going up the history and trying to find a match for the function, but I haven't tried that yet.\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU5NDQ2OjM0MGU4ODFmM2I3MzUzZmM0YmYyM2E3MGUyODRlNTViNTEzZWYzNGM=", "commit_message": "Merge pull request #120 from minrk/figure_index_collision\n\nband-aid to avoid figure collision", "commit_timestamp": "2013-04-14T17:19:24Z", "files": ["converters/transformers.py"]}], "labels": [], "created_at": "2010-05-18T18:12:28Z", "closed_at": "2011-03-23T19:18:28Z", "method": ["regex"]}
{"issue_number": 119, "title": "Broken type filter in magic_who_ls", "body": "%who_ls (hence also %who and %whos) mistakenly interpret any type filter as str.\nBroken by http://github.com/ipython/ipython/commit/c870360cc5e0b06054ab92a649f034f47824bf3b\nFixed by http://github.com/jdmarch/ipython/commit/322eec22bf6fc65d34a6ebe7e4c4728c8a2cd4e8\nwhich also removes lots of trailing white space (was that a no-no?)\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU5NDQ2OjNkYzQ3OGM3N2UyMTU3ODUwYzY0NjZiYWYwMThkOTM1YzExMTkxMTg=", "commit_message": "Merge pull request #119 from minrk/nbcv\n\ndon't use custom nbcv for plain-Python config files", "commit_timestamp": "2013-04-05T12:14:15Z", "files": ["nbconvert2.py", "profile/base_html.py", "profile/blogger_html.py", "profile/full_html.py", "profile/latex_base.py", "profile/latex_sphinx_base.py", "profile/latex_sphinx_howto.py", "profile/latex_sphinx_manual.py", "profile/markdown.py", "profile/python.py", "profile/reveal.py", "profile/rst.py", "tests/test_templates.py"]}], "labels": [], "created_at": "2010-05-17T14:58:54Z", "closed_at": "2011-02-21T21:21:27Z", "method": ["regex"]}
{"issue_number": 111, "title": "Iterator version of TaskClient.map() that returns results as they become available", "body": "Original Launchpad bug 520691: https://bugs.launchpad.net/ipython/+bug/520691\nReported by: jonovik (Jon Olav Vik).\n\nFrom http://article.gmane.org/gmane.comp.python.ipython.user/4975\n\nI have lots of trivially parallel computations and will store the results to \ndisk. Output order does not matter.\n\nThe TaskClient.map() function or TaskClient.parallel() decorator is convenient \nand load-balanced, but blocks until all the results are in. What I would like \ninstead is a map()-like iterator that returns each result as it becomes \navailable; similarly, an iparallel() decorator that returns an iterator. Then I \ncould do:\n\nfrom IPython.kernel import client\ntc = client.TaskClient()\n# Tasks that take an varying amount of time\n\nimport numpy as np\nimport time\n@tc.iparallel()   # <-- nifty feature to be written\ndef f(x):\n    time.sleep(np.random.random())\n    return -x\nN = 1000\nfor result in f(range(N)):\n    print result # or save to file, or plot a data point\n\nBy flushing the output from time to time, I could then watch results take shape \nas they get computed.\n\nI tried digging into the source code for TaskClient.map(), but was overwhelmed \nby the layers and intricacies of Twisted. Any pointers in the right direction \nwould be highly appreciated.\n\nResponse by Brian Granger:\nYes, the code is pretty complicated right now and definitely uses\nTwisted heavily.\n\nThe place to start looking is in:\n\nIPython.kernel.task\nIPython.kernel.taskclient\nIPython.kernel.taskfc\n\nIn particular look at the code for barrier.  I would have to think\nabout it more, but we really want a barrier method that has a mode\nthat will return a list of task ids that are complete at the time\nbarrier is called, rather than waiting for all tasks to be finished.\nMight not be too difficult to implement this.\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU5NDQ2OjkzNGE5MmQ5NmU0YTk1NGUzMzhkOWIzN2FmNDVjZWEwMzg2MGM2MjU=", "commit_message": "Merge pull request #111 from jdfreder/master\n\nSphinx output style improvements", "commit_timestamp": "2013-03-28T08:08:17Z", "files": ["converters/jinja_filters.py", "converters/latex_transformer.py", "converters/sphinx_transformer.py", "converters/template.py", "converters/utils.py", "nbconvert2.py", "tests/test_transformers.py"]}], "labels": [], "created_at": "2010-05-10T09:43:14Z", "closed_at": "2011-03-23T08:01:40Z", "method": ["regex"]}
{"issue_number": 110, "title": "magic to return exit status", "body": "Original Launchpad bug 365553: https://bugs.launchpad.net/ipython/+bug/365553\nReported by: ben-holroyd-1 (benholroyd).\n\nwhat im suggesting is basically something similar to $? in bash to get the exit status,  both for magic functions, and normal programs run through the shell.\n\nAt the moment there isn't a way (that ive discoved) of checking if a magic function successfully did what it was supposed to, and no way of returning an exit status without it displaying on screen.\nexample: i wrote a magic to cd to a directory and ls its contents (cdl), the obvious way would be to use the existing cd command, except you can't test if its run successfully.\n\ni know you can use the subprocess or commands module to get exit codes but its not straight forward and has the disadvantage that you can't check after the fact if a program exited successfully.\n\nanyway thank great program, i basically use it as my default shell now.\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU4NTE4OjZjNjZlMmIzOTI4YTQ2YWQwMTVlNzNmNDQwODgwYjM3MDg4NDdiYWE=", "commit_message": "Merge PR #459 (issue 297)\n\ncloses gh-110\ncloses gh-459", "commit_timestamp": "2011-05-27T18:25:31Z", "files": ["IPython/core/interactiveshell.py", "IPython/core/tests/test_interactiveshell.py", "IPython/frontend/terminal/interactiveshell.py", "IPython/utils/_process_posix.py", "IPython/utils/_process_win32.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzpmZDAyMjJlZWQ2NGEzMDM5MTBkZjQ2OGJmY2QzZmEwMDEzZTc1Njhj", "commit_message": "Merge PR #459 (issue 297)\n\ncloses gh-110\ncloses gh-459", "commit_timestamp": "2011-05-27T18:25:31Z", "files": ["IPython/core/interactiveshell.py", "IPython/core/tests/test_interactiveshell.py", "IPython/frontend/terminal/interactiveshell.py", "IPython/utils/_process_posix.py", "IPython/utils/_process_win32.py"]}], "labels": [], "created_at": "2010-05-10T09:42:10Z", "closed_at": "2011-05-27T18:26:48Z", "method": ["regex"]}
{"issue_number": 109, "title": "WinHPCLauncher is a hard dependency that causes errors in the test suite", "body": "Original Launchpad bug 506839: https://bugs.launchpad.net/ipython/+bug/506839\nReported by: fdo.perez (Fernando Perez).\n\nUnder win32 (I'm running EPD 6 and my trunk-dev of ipython on top, ipython is the only non-EPD piece), the 'trial IPython.kernel' part of the test suite gives the two errors below.\n\nThe problem can't be fixed just with decorators, because the modules don't even import.  For nose I use the exclusions mechanism to prevent nose from looking at modules it can't import, but I don't know how to do that for trial.\n\nThese are the only two failures in the whole test suite under win32 with EPD6 though (with my trunk-dev branch)!  We're in pretty good shape.\n# \n\nTraceback (most recent call last):\n  File \"C:\\Python26\\lib\\site-packages\\twisted\\trial\\runner.py\", line 563, in loa\ndPackage\n    module = modinfo.load()\n  File \"C:\\Python26\\lib\\site-packages\\twisted\\python\\modules.py\", line 381, in l\noad\n    return self.pathEntry.pythonPath.moduleLoader(self.name)\n  File \"C:\\Python26\\lib\\site-packages\\twisted\\python\\reflect.py\", line 462, in n\namedAny\n    topLevelPackage = _importAndCheckStack(trialname)\n  File \"C:\\Python26\\lib\\site-packages\\twisted\\python\\reflect.py\", line 398, in _\nimportAndCheckStack\n    return __import__(importName)\n  File \"H:\\ipython\\ipython\\IPython\\kernel\\tests\\test_multienginefc.py\", line 30,\n in <module>\n    from IPython.kernel.clientconnector import ClientConnector\n  File \"H:\\ipython\\ipython\\IPython\\kernel\\clientconnector.py\", line 28, in <modu\nle>\n    from IPython.kernel.launcher import IPClusterLauncher\n  File \"H:\\ipython\\ipython\\IPython\\kernel\\launcher.py\", line 565, in <module>\n    class WindowsHPCLauncher(BaseLauncher):\n  File \"H:\\ipython\\ipython\\IPython\\kernel\\launcher.py\", line 577, in WindowsHPCL\nauncher\n    job_cmd = Str(find_job_cmd(), config=True)\n  File \"H:\\ipython\\ipython\\IPython\\kernel\\launcher.py\", line 560, in find_job_cm\nd\n    return find_cmd('job')\n  File \"H:\\ipython\\ipython\\IPython\\utils\\platutils.py\", line 83, in find_cmd\n    raise FindCmdError('command could not be found: %s' % cmd)\n# IPython.utils.platutils.FindCmdError: command could not be found: job\n\nTraceback (most recent call last):\n  File \"C:\\Python26\\lib\\site-packages\\twisted\\trial\\runner.py\", line 563, in loa\ndPackage\n    module = modinfo.load()\n  File \"C:\\Python26\\lib\\site-packages\\twisted\\python\\modules.py\", line 381, in l\noad\n    return self.pathEntry.pythonPath.moduleLoader(self.name)\n  File \"C:\\Python26\\lib\\site-packages\\twisted\\python\\reflect.py\", line 462, in n\namedAny\n    topLevelPackage = _importAndCheckStack(trialname)\n  File \"C:\\Python26\\lib\\site-packages\\twisted\\python\\reflect.py\", line 398, in _\nimportAndCheckStack\n    return __import__(importName)\n  File \"H:\\ipython\\ipython\\IPython\\kernel\\tests\\test_taskfc.py\", line 34, in <mo\ndule>\n    from IPython.kernel.clientconnector import ClientConnector\n  File \"H:\\ipython\\ipython\\IPython\\kernel\\clientconnector.py\", line 28, in <modu\nle>\n    from IPython.kernel.launcher import IPClusterLauncher\n  File \"H:\\ipython\\ipython\\IPython\\kernel\\launcher.py\", line 565, in <module>\n    class WindowsHPCLauncher(BaseLauncher):\n  File \"H:\\ipython\\ipython\\IPython\\kernel\\launcher.py\", line 577, in WindowsHPCL\nauncher\n    job_cmd = Str(find_job_cmd(), config=True)\n  File \"H:\\ipython\\ipython\\IPython\\kernel\\launcher.py\", line 560, in find_job_cm\nd\n    return find_cmd('job')\n  File \"H:\\ipython\\ipython\\IPython\\utils\\platutils.py\", line 83, in find_cmd\n    raise FindCmdError('command could not be found: %s' % cmd)\n## IPython.utils.platutils.FindCmdError: command could not be found: job\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU5NDQ2Ojk5NTNkOWFkMDkzYWNlODcxNGQ3YmJmOGQ3OWJkODRiNTVhNWY0NDY=", "commit_message": "Merge pull request #109 from Carreau/nodtype\n\nallow nonexistent output", "commit_timestamp": "2013-03-17T17:24:05Z", "files": ["converters/jinja_filters.py"]}], "labels": ["important", "windows"], "created_at": "2010-05-10T09:42:05Z", "closed_at": "2011-03-23T07:58:05Z", "method": ["regex"]}
{"issue_number": 108, "title": "ipython disables python logger", "body": "Original Launchpad bug 514518: https://bugs.launchpad.net/ipython/+bug/514518\nReported by: kghose (Kaushik Ghose).\n\nThe simple logging example from the python docs will run properly under the python shell, put produce no log file when fun from within python\n\nimport logging\nLOG_FILENAME = '/tmp/logging_example.out'\nlogging.basicConfig(filename=LOG_FILENAME,level=logging.DEBUG)\n\nlogging.debug('This message should go to the log file')\n\nPython 2.6.4 (r264:75821M, Oct 27 2009, 19:48:32)\nIPython 0.10\nPlatform is Mac OS X (10.5.8) Darwin Kernel Version 9.8.0: Wed Jul 15 16:55:01 PDT 2009\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU5NDQ2OmI2ODNhZDk0MGVlY2I0OTRiYmI2NTI5MDMyYmFiODQ3ODU1OThiYmY=", "commit_message": "Merge pull request #108 from Carreau/binfig\n\nfix writing both kind of figures", "commit_timestamp": "2013-03-28T08:12:01Z", "files": ["converters/transformers.py", "nbconvert2.py"]}], "labels": [], "created_at": "2010-05-10T09:42:04Z", "closed_at": "2011-03-23T19:17:05Z", "method": ["regex"]}
{"issue_number": 107, "title": "bdist_rpm causes traceback looking for a non-existant file", "body": "Original Launchpad bug 483918: https://bugs.launchpad.net/ipython/+bug/483918\nReported by: riggs (Benjamin Riggs).\n\n<pre>\n[ipython-0.10]$ python2.6 -i setup.py bdist_rpm\nTraceback (most recent call last):\n  File \"setup.py\", line 146, in <module>\n    [ target_update(*t) for t in to_update ]\n  File \"/var/tmp/BUILD/ipython-0.10/IPython/genutils.py\", line 605, in target_update\n    if target_outdated(target,deps):\n  File \"/var/tmp/BUILD/ipython-0.10/IPython/genutils.py\", line 589, in target_outdated\n    dep_time = os.path.getmtime(dep)\n  File \"/usr/lib/python2.6/genericpath.py\", line 54, in getmtime\n    return os.stat(filename).st_mtime\nOSError: [Errno 2] No such file or directory: 'docs/man/ipcluster.1'\n...\n(Pdb) to_update\n[('docs/man/ipcluster.1.gz', ['docs/man/ipcluster.1'], 'cd docs/man && gzip -9c ipcluster.1 > ipcluster.1.gz'), ('docs/man/ipcontroller.1.gz', ['docs/man/ipcontroller.1'], 'cd docs/man && gzip -9c ipcontroller.1 > ipcontroller.1.gz'), ('docs/man/ipengine.1.gz', ['docs/man/ipengine.1'], 'cd docs/man && gzip -9c ipengine.1 > ipengine.1.gz'), ('docs/man/ipython.1.gz', ['docs/man/ipython.1'], 'cd docs/man && gzip -9c ipython.1 > ipython.1.gz'), ('docs/man/ipython-wx.1.gz', ['docs/man/ipython-wx.1'], 'cd docs/man && gzip -9c ipython-wx.1 > ipython-wx.1.gz'), ('docs/man/ipythonx.1.gz', ['docs/man/ipythonx.1'], 'cd docs/man && gzip -9c ipythonx.1 > ipythonx.1.gz'), ('docs/man/irunner.1.gz', ['docs/man/irunner.1'], 'cd docs/man && gzip -9c irunner.1 > irunner.1.gz'), ('docs/man/pycolor.1.gz', ['docs/man/pycolor.1'], 'cd docs/man && gzip -9c pycolor.1 > pycolor.1.gz')]\n...\n[ipython-0.10]$ ls -A docs/man/\nipcluster.1.gz  ipcontroller.1.gz  ipengine.1.gz  ipython.1.gz  ipython-wx.1.gz  ipythonx.1.gz  irunner.1.gz  pycolor.1.gz\n</pre>\n\n\nIt's looking for the non-gz'd versions of the files which don't exist in the tarball ipython-0.10.tar.gz which I downloaded today.\n\nI do see there is a FIXME in setup.py saying something is disabled, but it appears to be referencing the generation of docs from a tex file.\n\nI'm running this on a CentOS 5 install with python 2.6.2 installed along side the 'native' 2.4.3, attempting to get a source rpm so I can customize and distribute it.\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU5NDQ2OjI2MTIxZTE3NDJjMzEzM2Q0NTA2ODVkZmZhZmVhMjBmMjYwNjQzM2E=", "commit_message": "fix writing both kind of figures\n\nsplit figures into 2 kinds text and binary\n\nfixes #107", "commit_timestamp": "2013-03-28T08:11:07Z", "files": ["converters/transformers.py", "nbconvert2.py"]}], "labels": [], "created_at": "2010-05-10T09:42:02Z", "closed_at": "2011-03-13T06:19:17Z", "method": ["regex"]}
{"issue_number": 105, "title": "Refactor the task dependencies system", "body": "Original Launchpad bug 361419: https://bugs.launchpad.net/ipython/+bug/361419\nReported by: ellisonbg (Brian Granger).\n\nCurrently the task dependency system does lots of work on the controller.  This makes the system difficult to use and causes potential performance problems for the controller.  It also leads to user code being run on the controller, which we want to avoid.  To fix these issue, we will look into refactoring the dependency system in the following manner:\n1.  We will create an exception TaskRejectError or something that users should raise in the task code if an engine does have the required deps.\n2.  The user will specify the retries argument to get the task to be rerun.\n3.  We will also add a new keyword argument to our task objects that tells which engines the task can be run on.  We will also modify the scheduler to use this information.\n\nThe only issue that needs to be worked out is whether or not we want the schedular to distinguish between a task that fails with TaskRejectError and one that fails for another reason.  If we don't distinguish tasks that truly do fail could be retried a large number of times.\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU5NDQ2OjZiZTg3OTVkYTRkOGM4MGY5ODRhOWQ5MmE0OTYwNThkNWU4MTEyYmQ=", "commit_message": "Merge pull request #105 from Carreau/rmfakefix\n\nremove fake files", "commit_timestamp": "2013-03-28T08:09:12Z", "files": ["converters/utils.py"]}], "labels": [], "created_at": "2010-05-10T09:41:57Z", "closed_at": "2010-12-09T23:29:41Z", "method": ["regex"]}
{"issue_number": 104, "title": "have ipengine run start-up scripts before registering with the controller", "body": "Original Launchpad bug 381386: https://bugs.launchpad.net/ipython/+bug/381386\nReported by: yichun-wei (yichun).\n\nThis is late in the 0.10, but I am wondering can we get this feature in: being \nable to launch ipengines with \"ipengine -s initscript.py\" so the ipengine \nprepares itself before registering with the ipcontroller?\n\nThis suggestion comes from a previous \"Won't Fix\" bug:\nhttps://bugs.launchpad.net/ipython/+bug/289561\n\n> On Wed, Nov 21, 2008 at 6:38 PM, Brian Granger ellisonbg@gmail.com  wrote:\n> \n> > For my own engine initialization problem, I started to like the simple\n> > method Ming proposed: to have engines run a script when they come up\n> > and before they register to the controller, say, by launching the\n> > engines with \"ipengine -s initscript.py\". However, I did not see an\n> > apparent way to manage it. Maybe again I am missing something here?\n> \n> Can you submit a new bug report about this particular issue. It\n> should work, but it doesn't! Also, this will be easy to fix!\n\n-yichun\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU4NTE4OmIzYmI2YjQ4NWQzYmRkNjhlYzhhYzAzM2UyMjQyZWRmOWI4M2EzOTM=", "commit_message": "add '-s' for startup script in ipengine\n\ncloses gh-104", "commit_timestamp": "2011-04-08T16:59:29Z", "files": ["IPython/parallel/apps/ipengineapp.py", "IPython/parallel/client/client.py", "IPython/parallel/controller/hub.py", "IPython/parallel/engine/streamkernel.py"]}, {"node_id": "MDY6Q29tbWl0OTc3NTQwOmIzYmI2YjQ4NWQzYmRkNjhlYzhhYzAzM2UyMjQyZWRmOWI4M2EzOTM=", "commit_message": "add '-s' for startup script in ipengine\n\ncloses gh-104", "commit_timestamp": "2011-04-08T16:59:29Z", "files": ["IPython/parallel/apps/ipengineapp.py", "IPython/parallel/client/client.py", "IPython/parallel/controller/hub.py", "IPython/parallel/engine/streamkernel.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo5N2MzYmQyYTc2Mjg1YzI2Y2U2ZjkwYzdjYzBiYzE3M2I3N2E4ZjBl", "commit_message": "add '-s' for startup script in ipengine\n\ncloses gh-104", "commit_timestamp": "2011-04-08T16:59:29Z", "files": ["IPython/parallel/apps/ipengineapp.py", "IPython/parallel/client/client.py", "IPython/parallel/controller/hub.py", "IPython/parallel/engine/streamkernel.py"]}], "labels": [], "created_at": "2010-05-10T09:41:54Z", "closed_at": "2011-04-08T16:59:36Z", "method": ["regex"]}
{"issue_number": 97, "title": "Make ';' suppresion of output optional", "body": "Original Launchpad bug 509864: https://bugs.launchpad.net/ipython/+bug/509864\nReported by: fdo.perez (Fernando Perez).\n\nWe supress output when an input line ends with ';', in contrast to how python itself works.  Make it possible for the user to optionally disable this.\n\nThe code is in prompts.py, around line 548 (as of 2010/01/19):\n\n```\n       # do not print output if input ends in ';'\n       try:\n           if self.input_hist[self.prompt_count].endswith(';\\n'):\n               return\n       except IndexError:\n           # some uses of ipshellembed may fail here\n           pass\n```\n\nReported by Sage, for reference: http://trac.sagemath.org/sage_trac/ticket/6650.\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU5NDQ2OmZlYWMxMGRlZTYwZjRmODI1MDFmNjdkNDRjOTg5OWIxNjI4ZGU4ZGM=", "commit_message": "use notebookapp.DEFAULT_STATIC_FILES_PATH to get static path\n\nallows use of nbconvert with system packaged versions of IPython\ncloses #97", "commit_timestamp": "2013-03-23T12:12:03Z", "files": ["converters/html.py"]}, {"node_id": "MDY6Q29tbWl0NjU5NDQ2OmJhOGEzN2JiZWExODI3MTU5YjlhNDA4ZGJlODhlYzNhNDQ3YTQyYTE=", "commit_message": "Merge pull request #112 from juliantaylor/static-path\n\nuse notebookapp.DEFAULT_STATIC_FILES_PATH to get static path\r\n\r\nallows use of nbconvert with system packaged versions of IPython\r\ncloses #97", "commit_timestamp": "2013-03-24T20:24:20Z", "files": ["converters/html.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmZlYWMxMGRlZTYwZjRmODI1MDFmNjdkNDRjOTg5OWIxNjI4ZGU4ZGM=", "commit_message": "use notebookapp.DEFAULT_STATIC_FILES_PATH to get static path\n\nallows use of nbconvert with system packaged versions of IPython\ncloses #97", "commit_timestamp": "2013-03-23T12:12:03Z", "files": ["converters/html.py"]}], "labels": [], "created_at": "2010-05-10T09:40:32Z", "closed_at": "2016-07-25T22:41:15Z", "method": ["regex"]}
{"issue_number": 89, "title": "%pdoc np.ma.compress shows docstring twice", "body": "Original Launchpad bug 521612: https://bugs.launchpad.net/ipython/+bug/521612\nReported by: fdo.perez (Fernando Perez).\n\nNo idea why, but querying np.ma.compress with ? or %pdoc double-prints the docstring, with the second copy indented.\n\nSee this numpy thread for some context:\n\nhttp://mail.scipy.org/pipermail/numpy-discussion/2010-February/048634.html\n\nThat object has a runtime-generated docstring, but I checked and its **doc** is OK (no duplication there).  So the bug is definitely ours.\n", "commits": [{"node_id": "MDY6Q29tbWl0MTIzNjAwMzpiYmJjOWQwMTBmMjY0MTEzOWE0NGQ4ZjM2MTYwYmYxMDcyOTEzZDAw", "commit_message": "If object has a getdoc() method, override its normal docstring.\n\nCloses gh-89", "commit_timestamp": "2011-11-30T18:59:54Z", "files": ["IPython/core/oinspect.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjhhNGU4ZDliOGQ3OWZlYTk2YjZmN2MyZWQ2ODA1YTJiZjMzM2JlMzQ=", "commit_message": "Merge pull request #1072 from takluyver/i89\n\nIf object has a getdoc() method, use its return value (as long as it's a string) as the object's docstring.\r\n\r\nCloses gh-89 (duplicate docstrings when objects have getdoc).", "commit_timestamp": "2011-12-06T00:30:18Z", "files": ["IPython/core/oinspect.py", "IPython/core/tests/test_oinspect.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo0MmEwYmU4Y2M1ZGI1MGJiMDlkMDE1NTI4YmNjYzU2MzVmMzQ0MmM2", "commit_message": "If object has a getdoc() method, override its normal docstring.\n\nCloses gh-89", "commit_timestamp": "2011-11-30T18:59:54Z", "files": ["IPython/core/oinspect.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo4YTU3ZWY4ODVmYzc3OGIzNTczZGJlZDNjOWMyYmU5MjVlM2UzMGJk", "commit_message": "Merge pull request #1072 from takluyver/i89\n\nIf object has a getdoc() method, use its return value (as long as it's a string) as the object's docstring.\r\n\r\nCloses gh-89 (duplicate docstrings when objects have getdoc).", "commit_timestamp": "2011-12-06T00:30:18Z", "files": ["IPython/core/oinspect.py", "IPython/core/tests/test_oinspect.py"]}], "labels": [], "created_at": "2010-05-10T09:38:54Z", "closed_at": "2011-12-06T00:30:20Z", "method": ["regex"]}
{"issue_number": 88, "title": "Error when inputting UTF8 CJK characters", "body": "Original Launchpad bug 264587: https://bugs.launchpad.net/ipython/+bug/264587\nReported by: ngu-kho (ngU khO).\n\nI'm using a UTF8 locale on my system and it's been working well for years. But when I try to input CJK characters into the IPython console in gnome-terminal via scim(an input method platform), some of the characters may go wrong in the console.\n\nAn example is the CJK character '\u9009'('\\u9009'), it should be encoded as '\\xe9\\x80\\x89' in UTF8. However, trying to type this character into IPython is always a failure. The character will be display as several spaces followed by two question marks surrounded by a diamond(the \ufffd character):\n\nIn [1]: s = raw_input()\n    \ufffd\ufffd (I was actually inputting '\u9009', however this character could be displayed correctly)\n\nAnd the read string is not the one I input(the first byte in original string becomes several spaces)\n\nIn [3]: s\nOut[3]: '    \\x80\\x89'\n\nMoreover, making an assignment to such characters may cause IPython to exit:\n\nIn [1]: s = '    \ufffd\ufffd'\nWARNING: \n\n---\n\nYou or a %run:ed script called sys.stdin.close() or sys.stdout.close()!\nExiting IPython!\n\nSuch things do not happen in the original python console(/usr/bin/python). And it should not be a problem of scim since the same thing happens when I paste the character from the clipboard instead of typing.\n\nAttached is the screenshot of problem.\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU4NTE4OmIyMTQ2YWVjNTgyN2NkMGQ1ODNhMGJiYjU3NDVhODY4Njg1OTE4MjA=", "commit_message": "Remove \"\\M-\" readline bindings\n\nThey conflict with 8-bit encodings\n\ncloses gh-88", "commit_timestamp": "2011-05-10T21:03:52Z", "files": ["IPython/config/default/ipython_config.py", "IPython/core/interactiveshell.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo2ZDFkMjZmMGI0NWY5YzhmODU2YWVkYTE4MTg3YTAzZDFjNzViY2Jl", "commit_message": "Remove \"\\M-\" readline bindings\n\nThey conflict with 8-bit encodings\n\ncloses gh-88", "commit_timestamp": "2011-05-10T21:03:52Z", "files": ["IPython/config/default/ipython_config.py", "IPython/core/interactiveshell.py"]}], "labels": ["unicode", "bug"], "created_at": "2010-05-10T09:38:51Z", "closed_at": "2011-05-10T21:04:12Z", "method": ["label", "regex"]}
{"issue_number": 87, "title": "test_exampleip and dtexample both fail on win32", "body": "Original Launchpad bug 366982: https://bugs.launchpad.net/ipython/+bug/366982\nReported by: ellisonbg (Brian Granger).\n\nThese files are in testing.plugin and they fail on win32 because they make calls to the shell using unix commands like echo, rm, ls, etc.\n\nThese tests are currently being skipped by hand in iptest, but these tests should be made cross platform.\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU5NDQ2OmFkMjc0OTEyNDk3NzMyMTZmODI1ZjQ3YjE4MTQ2YjMwNDkxYzc0OWU=", "commit_message": "Merge pull request #87 from esc/rst2ipynb/improve_cell_extraction\n\nimprove extraction of code cells, support for ipy prompt", "commit_timestamp": "2013-04-23T17:27:05Z", "files": ["rst2ipynblib/__init__.py"]}], "labels": ["windows", "bug"], "created_at": "2010-05-10T09:38:49Z", "closed_at": "2016-07-19T23:22:59Z", "method": ["label", "regex"]}
{"issue_number": 81, "title": "Autocall fails if first function argument begins with \"-\" or \"+", "body": "Original Launchpad bug 315706: https://bugs.launchpad.net/ipython/+bug/315706\nReported by: dmuders (Dirk Muders).\n\nAuto parentheses fail if the first argument of a function begins with \"-\" or \"+\". Thus these examples fail:\n\n```\n%autocall 2\ndef f(a):\n    print a\n\nf -1\n\nf +1\n```\n\nThe reason is the re_exclude_auto in prefilter.py which reads\n\n```\nre_exclude_auto = re.compile(r'^[,&^\\|\\*/\\+-]'\n                                                   r'|^is |^not |^in |^and |^or ')\n```\n\nin v0.9.1. It appears that this line had been changed at some point after v0.6.2 to also catch operators. However, \"-\" and \"+\" can be used with numbers as shown above. Changing the line to\n\n```\nre_exclude_auto = re.compile(r'^[,&^\\|\\*/]'\n                                                   r'|^is |^not |^in |^and |^or ')\n```\n\nfixes the problem but I do not know if something else was intended by adding \"+-\". If so, then this would need to be caught in a different way.\n", "commits": [{"node_id": "MDY6Q29tbWl0MjkwOTI5MDpkMWYxMDdmNjA0MTU3ZjAxNThiNDdmMmNlYmQ0NzkyNjc4YjRiZTMz", "commit_message": "Make fun_name_regexp and exclude_regexp configurable.\n\nCloses #81.", "commit_timestamp": "2012-05-08T21:13:51Z", "files": ["IPython/core/prefilter.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmQxZjEwN2Y2MDQxNTdmMDE1OGI0N2YyY2ViZDQ3OTI2NzhiNGJlMzM=", "commit_message": "Make fun_name_regexp and exclude_regexp configurable.\n\nCloses #81.", "commit_timestamp": "2012-05-08T21:13:51Z", "files": ["IPython/core/prefilter.py"]}, {"node_id": "MDY6Q29tbWl0MjkwOTI5MDpmZGQ4ODI2MGY3NGZkYjQzNTQzMGZhNDkzYTQ4ODUzMzA5Mjg5NTE2", "commit_message": "Merge pull request #1713 from bfroehle/_81_autocall_exclude_configurable\n\nMake autocall regexp's configurable.\r\n\r\n* Creates a new trait type \"CRegExp\" which casts a string or regular expression into a compiled regular expression.\r\n\r\n* Makes the autocall regular expressions, which are only used in AutocallChecker, configurable.\r\n\r\nCloses #81.", "commit_timestamp": "2012-05-09T23:47:08Z", "files": ["IPython/core/prefilter.py", "IPython/core/tests/test_prefilter.py", "IPython/utils/traitlets.py"]}, {"node_id": "MDY6Q29tbWl0NjU5NDQ2OjdhNTAyZGY1Y2QwYmYxOGNlOWQ0OGVhNTgwNzIxNmQzZTczOTgyMDI=", "commit_message": "Merge pull request #81 from kevinwuhoo/master\n\nHandling Exclude Flag in HTML, Markdown, and rST", "commit_timestamp": "2013-04-23T17:24:37Z", "files": ["converters/html.py", "converters/markdown.py", "converters/rst.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzphNWQyZmFhYjQ2YjhlMTEwNmViYjAwM2RjMGIwYWE0NTgzNWM3NmJj", "commit_message": "Make fun_name_regexp and exclude_regexp configurable.\n\nCloses #81.", "commit_timestamp": "2012-05-08T21:13:51Z", "files": ["IPython/core/prefilter.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzpiNzc5MTg1YjE1NTAyMDYwM2E1NGM4ZmM3NzljMWQ3MWE1NDY4NmQ3", "commit_message": "Merge pull request #1713 from bfroehle/_81_autocall_exclude_configurable\n\nMake autocall regexp's configurable.\r\n\r\n* Creates a new trait type \"CRegExp\" which casts a string or regular expression into a compiled regular expression.\r\n\r\n* Makes the autocall regular expressions, which are only used in AutocallChecker, configurable.\r\n\r\nCloses #81.", "commit_timestamp": "2012-05-09T23:47:08Z", "files": ["IPython/core/prefilter.py", "IPython/core/tests/test_prefilter.py", "IPython/utils/traitlets.py"]}], "labels": [], "created_at": "2010-05-10T09:38:33Z", "closed_at": "2012-05-09T23:47:09Z", "method": ["regex"]}
{"issue_number": 79, "title": "Implement more robust handling of config stages in Application", "body": "Original Launchpad bug 514903: https://bugs.launchpad.net/ipython/+bug/514903\nReported by: ellisonbg (Brian Granger).\n\nCurrently, we have various stages of config in our Application class.  We need to refactor this to simplify the logic:\n- Create a bootstrap config object that contains things like ipython_dir\n- Have a single self.config object that hold the current state of the config.  All code in Application should use this\n  as the single source of config data while Application is being initialized.\n- As each config stage is completed, the config will always be merged into self.config.\n- We need to implement configuration key freezing to allow an Application to disallow particular config keys from\n  changing.\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU4NTE4OmZiZDVhZTk0Y2ZkNjNjMWU2MDRiOWMwYjQyNTljYjY3NDlkYjRhZTQ=", "commit_message": "Merge branch 'newapp'\n\ncloses gh-503\ncloses gh-454\ncloses gh-79\ncloses gh-456\ncloses gh-451", "commit_timestamp": "2011-06-21T03:47:08Z", "files": ["IPython/config/application.py", "IPython/config/configurable.py", "IPython/config/default/__init__.py", "IPython/config/default/ipcluster_config.py", "IPython/config/default/ipcontroller_config.py", "IPython/config/default/ipengine_config.py", "IPython/config/default/ipython_config.py", "IPython/config/loader.py", "IPython/config/profile/cluster/ipython_config.py", "IPython/config/profile/ipython_config_numeric.py", "IPython/config/profile/math/ipython_config.py", "IPython/config/profile/pylab/ipython_config.py", "IPython/config/profile/pysh/ipython_config.py", "IPython/config/profile/sympy/ipython_config.py", "IPython/config/tests/test_application.py", "IPython/config/tests/test_configurable.py", "IPython/config/tests/test_loader.py", "IPython/core/application.py", "IPython/core/history.py", "IPython/core/interactiveshell.py", "IPython/core/magic.py", "IPython/core/profileapp.py", "IPython/core/profiledir.py", "IPython/core/shellapp.py", "IPython/core/tests/test_application.py", "IPython/extensions/parallelmagic.py", "IPython/frontend/qt/base_frontend_mixin.py", "IPython/frontend/qt/console/console_widget.py", "IPython/frontend/qt/console/frontend_widget.py", "IPython/frontend/qt/console/ipython_widget.py", "IPython/frontend/qt/console/ipythonqt.py", "IPython/frontend/qt/console/qtconsoleapp.py", "IPython/frontend/qt/kernelmanager.py", "IPython/frontend/terminal/interactiveshell.py", "IPython/frontend/terminal/ipapp.py", "IPython/lib/irunner.py", "IPython/lib/pylabtools.py", "IPython/lib/tests/test_pylabtools.py", "IPython/parallel/__init__.py", "IPython/parallel/apps/baseapp.py", "IPython/parallel/apps/clusterdir.py", "IPython/parallel/apps/ipclusterapp.py", "IPython/parallel/apps/ipcontrollerapp.py", "IPython/parallel/apps/ipengineapp.py", "IPython/parallel/apps/iploggerapp.py", "IPython/parallel/apps/launcher.py", "IPython/parallel/apps/logwatcher.py", "IPython/parallel/apps/win32support.py", "IPython/parallel/apps/winhpcjob.py", "IPython/parallel/client/asyncresult.py", "IPython/parallel/client/client.py", "IPython/parallel/client/map.py", "IPython/parallel/client/remotefunction.py", "IPython/parallel/client/view.py", "IPython/parallel/controller/controller.py", "IPython/parallel/controller/dependency.py", "IPython/parallel/controller/dictdb.py", "IPython/parallel/controller/heartmonitor.py", "IPython/parallel/controller/hub.py", "IPython/parallel/controller/mongodb.py", "IPython/parallel/controller/scheduler.py", "IPython/parallel/controller/sqlitedb.py", "IPython/parallel/engine/engine.py", "IPython/parallel/engine/kernelstarter.py", "IPython/parallel/engine/streamkernel.py", "IPython/parallel/error.py", "IPython/parallel/factory.py", "IPython/parallel/streamsession.py", "IPython/parallel/tests/__init__.py", "IPython/parallel/tests/clienttest.py", "IPython/parallel/tests/test_asyncresult.py", "IPython/parallel/tests/test_client.py", "IPython/parallel/tests/test_db.py", "IPython/parallel/tests/test_dependency.py", "IPython/parallel/tests/test_lbview.py", "IPython/parallel/tests/test_mongodb.py", "IPython/parallel/tests/test_newserialized.py", "IPython/parallel/tests/test_view.py", "IPython/parallel/util.py", "IPython/testing/tools.py", "IPython/utils/daemonize.py", "IPython/utils/jsonutil.py", "IPython/utils/path.py", "IPython/utils/text.py", "IPython/zmq/__init__.py", "IPython/zmq/blockingkernelmanager.py", "IPython/zmq/entry_point.py", "IPython/zmq/ipkernel.py", "IPython/zmq/kernelapp.py", "IPython/zmq/kernelmanager.py", "IPython/zmq/pykernel.py", "IPython/zmq/pylab/backend_inline.py", "IPython/zmq/session.py", "IPython/zmq/tests/test_message_spec.py", "IPython/zmq/tests/test_session.py", "docs/examples/core/appconfig.py", "setup.py", "setupbase.py", "setupext/setupext.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo5NGEwYTkxZGU0MDBlNjIzOTE2NzhkNzAwNGVmN2VhZWRhMmNhY2Nm", "commit_message": "Merge branch 'newapp'\n\ncloses gh-503\ncloses gh-454\ncloses gh-79\ncloses gh-456\ncloses gh-451", "commit_timestamp": "2011-06-21T03:47:08Z", "files": ["IPython/config/application.py", "IPython/config/configurable.py", "IPython/config/default/__init__.py", "IPython/config/default/ipcluster_config.py", "IPython/config/default/ipcontroller_config.py", "IPython/config/default/ipengine_config.py", "IPython/config/default/ipython_config.py", "IPython/config/loader.py", "IPython/config/profile/cluster/ipython_config.py", "IPython/config/profile/ipython_config_numeric.py", "IPython/config/profile/math/ipython_config.py", "IPython/config/profile/pylab/ipython_config.py", "IPython/config/profile/pysh/ipython_config.py", "IPython/config/profile/sympy/ipython_config.py", "IPython/config/tests/test_application.py", "IPython/config/tests/test_configurable.py", "IPython/config/tests/test_loader.py", "IPython/core/application.py", "IPython/core/history.py", "IPython/core/interactiveshell.py", "IPython/core/magic.py", "IPython/core/profileapp.py", "IPython/core/profiledir.py", "IPython/core/shellapp.py", "IPython/core/tests/test_application.py", "IPython/extensions/parallelmagic.py", "IPython/frontend/qt/base_frontend_mixin.py", "IPython/frontend/qt/console/console_widget.py", "IPython/frontend/qt/console/frontend_widget.py", "IPython/frontend/qt/console/ipython_widget.py", "IPython/frontend/qt/console/ipythonqt.py", "IPython/frontend/qt/console/qtconsoleapp.py", "IPython/frontend/qt/kernelmanager.py", "IPython/frontend/terminal/interactiveshell.py", "IPython/frontend/terminal/ipapp.py", "IPython/lib/irunner.py", "IPython/lib/pylabtools.py", "IPython/lib/tests/test_pylabtools.py", "IPython/parallel/__init__.py", "IPython/parallel/apps/baseapp.py", "IPython/parallel/apps/clusterdir.py", "IPython/parallel/apps/ipclusterapp.py", "IPython/parallel/apps/ipcontrollerapp.py", "IPython/parallel/apps/ipengineapp.py", "IPython/parallel/apps/iploggerapp.py", "IPython/parallel/apps/launcher.py", "IPython/parallel/apps/logwatcher.py", "IPython/parallel/apps/win32support.py", "IPython/parallel/apps/winhpcjob.py", "IPython/parallel/client/asyncresult.py", "IPython/parallel/client/client.py", "IPython/parallel/client/map.py", "IPython/parallel/client/remotefunction.py", "IPython/parallel/client/view.py", "IPython/parallel/controller/controller.py", "IPython/parallel/controller/dependency.py", "IPython/parallel/controller/dictdb.py", "IPython/parallel/controller/heartmonitor.py", "IPython/parallel/controller/hub.py", "IPython/parallel/controller/mongodb.py", "IPython/parallel/controller/scheduler.py", "IPython/parallel/controller/sqlitedb.py", "IPython/parallel/engine/engine.py", "IPython/parallel/engine/kernelstarter.py", "IPython/parallel/engine/streamkernel.py", "IPython/parallel/error.py", "IPython/parallel/factory.py", "IPython/parallel/streamsession.py", "IPython/parallel/tests/__init__.py", "IPython/parallel/tests/clienttest.py", "IPython/parallel/tests/test_asyncresult.py", "IPython/parallel/tests/test_client.py", "IPython/parallel/tests/test_db.py", "IPython/parallel/tests/test_dependency.py", "IPython/parallel/tests/test_lbview.py", "IPython/parallel/tests/test_mongodb.py", "IPython/parallel/tests/test_newserialized.py", "IPython/parallel/tests/test_view.py", "IPython/parallel/util.py", "IPython/testing/tools.py", "IPython/utils/daemonize.py", "IPython/utils/jsonutil.py", "IPython/utils/path.py", "IPython/utils/text.py", "IPython/zmq/__init__.py", "IPython/zmq/blockingkernelmanager.py", "IPython/zmq/entry_point.py", "IPython/zmq/ipkernel.py", "IPython/zmq/kernelapp.py", "IPython/zmq/kernelmanager.py", "IPython/zmq/pykernel.py", "IPython/zmq/pylab/backend_inline.py", "IPython/zmq/session.py", "IPython/zmq/tests/test_message_spec.py", "IPython/zmq/tests/test_session.py", "docs/examples/core/appconfig.py", "setup.py", "setupbase.py", "setupext/setupext.py"]}], "labels": ["important"], "created_at": "2010-05-10T09:37:29Z", "closed_at": "2011-06-21T04:15:50Z", "method": ["regex"]}
{"issue_number": 78, "title": "StringTask won't take unicode code strings", "body": "Original Launchpad bug 511318: https://bugs.launchpad.net/ipython/+bug/511318\nReported by: ellisonbg (Brian Granger).\n\nAs reported by Travis O., the StringTask won't in kernel.client doesn't allow unicode code strings.  We need to fix this.\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU5NDQ2OjU4ZTIxNmJmMGY0ZmQxOTRiNmVjMzI4NjY1Y2ZmODlmNjE0Zjc5MmY=", "commit_message": "add basic unicode tests in test_view\n\ncloses gh-78", "commit_timestamp": "2011-04-21T21:34:37Z", "files": ["IPython/parallel/tests/test_view.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjU4ZTIxNmJmMGY0ZmQxOTRiNmVjMzI4NjY1Y2ZmODlmNjE0Zjc5MmY=", "commit_message": "add basic unicode tests in test_view\n\ncloses gh-78", "commit_timestamp": "2011-04-21T21:34:37Z", "files": ["IPython/parallel/tests/test_view.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo5ZDU0MTFlOTQxNTVhMDU1YTFlZTRjY2FjM2ZlM2FkNDZmYzFmYjAw", "commit_message": "add basic unicode tests in test_view\n\ncloses gh-78", "commit_timestamp": "2011-04-21T21:34:37Z", "files": ["IPython/parallel/tests/test_view.py"]}], "labels": ["unicode", "parallel"], "created_at": "2010-05-10T09:37:26Z", "closed_at": "2011-04-21T21:36:17Z", "method": ["regex"]}
{"issue_number": 77, "title": "ipython oops in cygwin", "body": "Original Launchpad bug 372564: https://bugs.launchpad.net/ipython/+bug/372564\nReported by: kiyolee (kiyolee).\n\nGet the latest development source of today with bzr.\nIn cygwin 1.7 (Windows Vista SP1 Business), sys.getfilesystemencoding() returns None and causes problem at line 993 of genutils.py: ipdir.decode(sys.getfilesystemencoding()).\nCan't tell if this is actually a bug of cygwin or python.\nHowever, it seems the code in genutils.py may probably be better not to assume sys.getfilesystemencoding() always returns sensible value.\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU5NDQ2OmZhZTAwNjNiMWEzMzU2NGI2ODI4NGI2OTNmY2ZjYzU0YzM0NzVjODA=", "commit_message": "Merge pull request #77 from Carreau/templates\n\nJinja Templates\r\n\r\nnbconvert basically rewritten entirely", "commit_timestamp": "2013-03-11T22:17:22Z", "files": ["converters/base.py", "converters/config.py", "converters/html.py", "converters/jinja_filters.py", "converters/latex_transformer.py", "converters/notebook.py", "converters/reveal.py", "converters/sphinx_transformer.py", "converters/template.py", "converters/transformers.py", "converters/utils.py", "nbconvert.py", "nbconvert2.py", "profile/test/display_priority.py", "profile/test/display_priority_tex.py", "profile/test/null.py", "profile/test/null_tex.py", "rst2ipynblib/__init__.py", "tests/ipynbref/00_notebook_tour.orig.py", "tests/ipynbref/Gun_Data.orig.py", "tests/ipynbref/XKCD_plots.orig.py", "tests/ipynbref/data_geeks_team_calendar.orig.py", "tests/test_nbconverter.py", "tests/test_references.py", "tests/test_simple.py", "tests/test_templates.py", "tests/test_transformers.py"]}], "labels": ["windows", "bug"], "created_at": "2010-05-10T09:37:23Z", "closed_at": "2011-03-23T08:18:07Z", "method": ["label", "regex"]}
{"issue_number": 75, "title": "No tab completion after \"/", "body": "Original Launchpad bug 267596: https://bugs.launchpad.net/ipython/+bug/267596\nReported by: oc-spam66 (O.C.).\n\nHello,\n\nif \"alpha\" is a variable, I can use TAB to complete the statement : \"2*alpha\", but it does not work for the statement \"2/alpha\" (I need to add a space after \"/\" so that it works).\n\nIs there a reason for this difference ? Can it be corrected ?\n\nRegards,\n\nO.C.\n\n(ipython 0.8.4)\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU5NDQ2OjYyMDYxZWI4YTdkNDAxN2YwZWFlNDc4MWNkMmE4ZmJiNTkzZTI1ODk=", "commit_message": "Merge pull request #75 from Carreau/fix-tests\n\nfix text for exclude", "commit_timestamp": "2012-12-29T18:59:59Z", "files": ["converters/latex.py", "converters/markdown.py", "converters/notebook.py", "converters/python.py", "nbconvert.py", "tests/test_references.py"]}], "labels": [], "created_at": "2010-05-10T09:37:18Z", "closed_at": "2011-11-30T07:37:18Z", "method": ["regex"]}
{"issue_number": 73, "title": "feature request: simple exceptions", "body": "Original Launchpad bug 367427: https://bugs.launchpad.net/ipython/+bug/367427\nReported by: culler (Marc Culler).\n\nThere are cases where python tracebacks are completely useless to users, such as when they refer to code in a cython file which the user does not have.  In these cases the traceback is just a distracting pile of useless text that fills up your terminal.  It would be nice to have the option of disabling the printing of tracebacks.\n\nREQUEST: please add another xmode value: Simple which reports the exception type and its value, but suppresses the traceback.\n- Marc Culler\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU5NDQ2OmMzODEwM2QyOGZlMmExZGI2YTlmODFhZjFmMWFkNTkyMDZjMzM2ZGE=", "commit_message": "Merge pull request #73 from scopatz/master\n\nUpdated to relative imports in converters sub-package", "commit_timestamp": "2012-12-29T19:00:30Z", "files": ["converters/base.py", "converters/bloggerhtml.py", "converters/html.py", "converters/latex.py", "converters/markdown.py", "converters/notebook.py", "converters/python.py", "converters/rst.py"]}], "labels": [], "created_at": "2010-05-10T09:37:15Z", "closed_at": "2016-07-19T23:20:26Z", "method": ["regex"]}
{"issue_number": 69, "title": "Usage of \"mycluster\" profile in docs and examples", "body": "Original Launchpad bug 515377: https://bugs.launchpad.net/ipython/+bug/515377\nReported by: ellisonbg (Brian Granger).\n\nI have started to use the cluster profile \"mycluster\" in some of the docs and kernel examples.  The problem with this is that most users will start by using the \"default\" profile, so the examples and docs will be confusing.  I need to decide what to do about this.\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU5NDQ2OjVjYzI4MDQ3YWI2M2E0ZWZkNmU0NjE5Y2JiMDg0ZGQ2NmRjYTZiOWM=", "commit_message": "Merge pull request #69 from damianavila/reveal_converter\n\nImproved reveal converter", "commit_timestamp": "2013-02-13T19:19:30Z", "files": ["converters/__init__.py", "converters/reveal.py", "nbconvert.py", "tests/test_references.py", "tests/test_simple.py"]}], "labels": [], "created_at": "2010-05-10T09:36:05Z", "closed_at": "2010-05-13T22:18:58Z", "method": ["regex"]}
{"issue_number": 68, "title": "Problems with Control-C stopping ipcluster on Windows/Python2.6", "body": "Original Launchpad bug 515376: https://bugs.launchpad.net/ipython/+bug/515376\nReported by: ellisonbg (Brian Granger).\n\nWhen ipcluster is running and you hit Control-C, it should stop all of its child processes and then exit.  On Windows, under Python 2.6, doing Control-C exits immediately and doesn't stop the child processes.  When using the WinbHPC scheduler, these child processe are job.exe.  When I add --log-level 10 to ipcluster and then retry, I see that it looks like the job.exe processes have already exited.  This could be a tough one to track down and the problem could even be in Twisted.\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU5NDQ2Ojk5NzljNzM2N2ViNTBkYWE5MzNlZGM4NTU2YTY2ZjlkMTUwNGI2YTk=", "commit_message": "Merge pull request #68 from scopatz/master\n\nFix for minor issue with upstream docutils.", "commit_timestamp": "2012-12-23T16:26:25Z", "files": ["notebook_sphinxext.py"]}], "labels": ["windows", "bug"], "created_at": "2010-05-10T09:36:03Z", "closed_at": "2011-03-23T20:00:07Z", "method": ["label", "regex"]}
{"issue_number": 66, "title": "Update the main What's New document to reflect work on 0.11", "body": "Original Launchpad bug 515357: https://bugs.launchpad.net/ipython/+bug/515357\nReported by: ellisonbg (Brian Granger).\n\nFernando and I have merged two huge branches into trunk.  We need to update the What's New for our branches before 0.11 is released.\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU4NTE4OmExMThlYmYxMGZkODQxNGYzZWE3NWI0MWJiNDM3Mjk2YjBhODVmOGI=", "commit_message": "Merge branch 'docs'\n\ncloses gh-66\ncloses gh-269\ncloses gh-546", "commit_timestamp": "2011-07-01T05:23:15Z", "files": ["docs/autogen_api.py", "docs/examples/core/demo-exercizer.py", "docs/examples/core/example-demo.py", "docs/examples/core/example-embed-short.py", "docs/examples/core/example-embed.py", "docs/examples/core/new-embed.py", "docs/examples/lib/gui-gtk.py", "docs/examples/lib/gui-qt.py", "docs/examples/lib/gui-tk.py", "docs/examples/lib/gui-wx.py"]}, {"node_id": "MDY6Q29tbWl0NjU5NDQ2OjQ1NTM1NzA4ZTE4ODlhYTNiYWYwNDRhYTY0MzliNDBhNWJhNzFiYTA=", "commit_message": "Merge pull request #66 from Carreau/fix-exclude\n\nrestore exclude flag", "commit_timestamp": "2012-12-19T09:28:58Z", "files": ["converters/base.py", "nbconvert.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzplZTFiODE4MTRmMTA3ZTQ4YWQzOGY0ZTA1ODA1ODVkYTIwODFkYTM1", "commit_message": "Merge branch 'docs'\n\ncloses gh-66\ncloses gh-269\ncloses gh-546", "commit_timestamp": "2011-07-01T05:23:15Z", "files": ["docs/autogen_api.py", "docs/examples/core/demo-exercizer.py", "docs/examples/core/example-demo.py", "docs/examples/core/example-embed-short.py", "docs/examples/core/example-embed.py", "docs/examples/core/new-embed.py", "docs/examples/lib/gui-gtk.py", "docs/examples/lib/gui-qt.py", "docs/examples/lib/gui-tk.py", "docs/examples/lib/gui-wx.py"]}], "labels": ["important", "documentation"], "created_at": "2010-05-10T09:35:57Z", "closed_at": "2011-07-01T05:28:03Z", "method": ["regex"]}
{"issue_number": 61, "title": "add a data-import magic", "body": "Original Launchpad bug 420099: https://bugs.launchpad.net/ipython/+bug/420099\nReported by: timmie (Tim).\n\nImplement a data import tool that helps users to quickly load data sets from files into the desired python object.\n\nThinking of something like R-Commander for R-Project:\nhttp://yfrog.com/e4rcommanderdataimportj\n\nFor instance, IPython could have a magic:\n%fileimport\n\nThis could open a dialog to select any file that can be read in with numpy,\nscipy tools or any other library imported before which have IO or beyond capabilities: timeseries, hdf, pytables\n\nThis could be convenient for interactive data analysis and for quick checking.\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU5NDQ2Ojg0NTE1MGE1MDUwODlmNGI5NTU4MDM2MDhiZmYxYWE4MDZhYmVlNWI=", "commit_message": "Merge pull request #61 from dwf/syntax_highlight\n\nSyntax highlighting redux + other cleanup", "commit_timestamp": "2012-12-16T11:35:52Z", "files": ["converters/__init__.py", "converters/base.py", "converters/bloggerhtml.py", "converters/html.py", "converters/latex.py", "converters/lexers.py", "converters/markdown.py", "converters/notebook.py", "converters/python.py", "converters/rst.py", "converters/utils.py", "nbconvert.py"]}, {"node_id": "MDY6Q29tbWl0NjU5NDQ2OjhiYmEzYzI5ZWU4Mjc5N2ZhYjc2ZjhjODc3MWY0NTA3YzZlMDhiOTY=", "commit_message": "fix typo after #61 merge making ./nbconvert crash\n\nhilight_code -> highlight_source", "commit_timestamp": "2012-12-16T11:44:02Z", "files": ["nbconvert.py"]}], "labels": [], "created_at": "2010-05-10T09:35:42Z", "closed_at": "2014-11-11T20:12:36Z", "method": ["regex"]}
{"issue_number": 60, "title": "Improve absolute import management for iptest.py", "body": "Original Launchpad bug 506112: https://bugs.launchpad.net/ipython/+bug/506112\nReported by: fdo.perez (Fernando Perez).\n\nOn Mon, Jan 11, 2010 at 11:36 AM, J\u00f6rgen Stenarson jorgen.stenarson@bostream.nu wrote:\n\n> I often run IPython/testing/iptest.py as a script but this is not possible\n> now due to a relative import:\n\n<pre>\n\n> C:\\python\\external\\ipython-perez\\IPython>python testing\\iptest.py\n> Traceback (most recent call last):\n>  File \"testing\\iptest.py\", line 39, in <module>\n>    from . import globalipapp\n> ValueError: Attempted relative import in non-package\n</pre>\n\n\nArgh, yes.  This is unfortunately only fixed for 2.6:\n\nhttp://www.python.org/dev/peps/pep-0366/\n\nWe might just add that boilerplate\n\n<pre>\nif __name__ == \"__main__\" and __package__ is None:\n    __package__ = \"expected.package.name\"\n</pre>\n\n\nprotected by a version check, so your approach continues to work.\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU5NDQ2OjA5MWY4NDQxMDM4ODU0MDExYzY5MjkzYzlkNGU5ZjliMmM3YTFkMmU=", "commit_message": "Merge pull request #60 from jakobgager/master\n\nSome enhancements of the latex export option", "commit_timestamp": "2012-12-16T11:57:35Z", "files": ["converters/latex.py"]}], "labels": [], "created_at": "2010-05-10T09:34:39Z", "closed_at": "2011-03-23T22:11:26Z", "method": ["regex"]}
{"issue_number": 59, "title": "test_magic.test_obj_del fails on win32", "body": "Original Launchpad bug 366334: https://bugs.launchpad.net/ipython/+bug/366334\nReported by: ellisonbg (Brian Granger).\n\ntest_obj_del fails on win32 because getoutput is called like this:\n\nIP.getoutput('ipython obj_del.py')\n\nBut on Windows, the ipython executable is not found.  This causes stdout to be empty\nand stderr to have an error saying that ipython can't be found.\n# \n## FAIL: Test that object's **del** methods are called on exit.\n\nTraceback (most recent call last):\n  File \"c:\\python24\\lib\\site-packages\\nose-0.10.4-py2.4.egg\\nose\\case.py\", line 182, in runTest\n    self.test(*self.arg)\n  File \"c:\\python24\\external\\ipython\\IPython\\tests\\test_magic.py\", line 86, in test_obj_del\n    nt.assert_equals(out,'obj_del.py: object A deleted')\nAssertionError: '' != 'obj_del.py: object A deleted'\n\n> > raise self.failureException, \\\n> >           (None or '%r != %r' % ('', 'obj_del.py: object A deleted'))\n\n---\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU4NTE4OjIyYTNjOWExZGQwNWQ3NTJjZWRlMDRmYmQxMWYzMjBhNTE3NzI5MjE=", "commit_message": "IPython.core.tests.test_run.test_obj_del apparently no longer fails on Windows, so we don't need to skip it.\n\nCloses gh-59", "commit_timestamp": "2011-05-29T21:26:31Z", "files": ["IPython/core/tests/test_run.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzoyODZmNGE3MWIwN2QxMDlmNTdmZmFkNGU2ODg0MzJhMDA1NWI1OWE4", "commit_message": "IPython.core.tests.test_run.test_obj_del apparently no longer fails on Windows, so we don't need to skip it.\n\nCloses gh-59", "commit_timestamp": "2011-05-29T21:26:31Z", "files": ["IPython/core/tests/test_run.py"]}], "labels": ["windows", "bug"], "created_at": "2010-05-10T09:34:34Z", "closed_at": "2011-05-29T21:27:25Z", "method": ["label", "regex"]}
{"issue_number": 58, "title": "ipython change char '0xe9' to 4 spaces", "body": "Original Launchpad bug 328942: https://bugs.launchpad.net/ipython/+bug/328942\nReported by: lidaobing (LI Daobing).\n\nBinary package hint: ipython\n\nHow to reproduce:\n1. start a terminal support unicode (such as gnome-terminal or mlterm)\n2. start ipython, then run \"print unichr(0x9000)\", the output in terminal should like:\n\nIn [1]: print unichr(0x9000)\n\u9000\n1. copy this character (\"\u9000\") and paste it to  ipython again (after \"In [2]:\"), then press enter, ipython will quit.\n\nchange 0x9000 to 0x8fff, ipython will not crash. change 0x9000 to other number bigger than 0x9000, ipython will also crash (I test many number, but not all, :-)\n\npython don't have this bug.\n\nthis bug can be reproduce in gnome-terminal and mlterm.\n\nProblemType: Bug\nArchitecture: i386\nDistroRelease: Ubuntu 8.10\nPackage: ipython 0.8.4-1\nPackageArchitecture: all\nProcEnviron:\n PATH=/home/username/.local/bin:/home/username/bin:/home/username/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games\n LANG=en_US.UTF-8\n SHELL=/bin/bash\nSourcePackage: ipython\nUname: Linux 2.6.27-7-generic i686\n", "commits": [{"node_id": "MDY6Q29tbWl0OTc3NTQwOmM3MDlkOGI1OTk3NjEwMDllZGMzYzgxMjY5ZGJkNDA1NDAzMWViOGQ=", "commit_message": "Disable readline \\M-i, so characters 0x9000-0x9fff don't crash IPython.\n\ncloses gh-58", "commit_timestamp": "2011-03-23T20:03:27Z", "files": ["IPython/core/interactiveshell.py"]}, {"node_id": "MDY6Q29tbWl0NjU5NDQ2OmY5NzllODc3N2RkMTU2MzVmNTkwNGI1NjE2MzhhMWJlY2ZmNjE1YTY=", "commit_message": "Merge pull request #58 from maxalbert/test_cleanup_and_bugfix\n\nTest cleanup and bugfix", "commit_timestamp": "2012-11-17T11:29:27Z", "files": ["converters/base.py", "converters/html.py", "converters/markdown.py", "converters/python.py", "converters/rst.py", "tests/test_simple.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzoxZTY3MWQ1MzMxZWZiNjkzZGFhZjI5ZjY1Mzg4NzY3Y2UwMDJmMTVi", "commit_message": "Disable readline \\M-i, so characters 0x9000-0x9fff don't crash IPython.\n\ncloses gh-58", "commit_timestamp": "2011-03-23T20:03:27Z", "files": ["IPython/core/interactiveshell.py"]}], "labels": ["unicode"], "created_at": "2010-05-10T09:34:28Z", "closed_at": "2011-03-23T20:04:45Z", "method": ["regex"]}
{"issue_number": 57, "title": "debugging with ipython does not work well outside ipython", "body": "Original Launchpad bug 412396: https://bugs.launchpad.net/ipython/+bug/412396\nReported by: cimrman3 (Robert Cimrman).\n\nPython 2.5.4, IPython 0.9.1, gentoo linux\n\nThe Tracer does not work outside ipython, short summary follows below, for details see the thread [1].\n\n[1] http://mail.scipy.org/pipermail/ipython-user/2009-July/006451.html\n\nWhen running  the attachment file ipython_debug1.py:\n\n```\n  $ python ipython_debug1.py\nTraceback (most recent call last):\n   File \"ipython_debug1.py\", line 6, in <module>\n     debug = Tracer()\n   File \"/usr/lib64/python2.5/site-packages/IPython/Debugger.py\", line\n135, in __init__\n     self.debugger = Pdb(colors)\n   File \"/usr/lib64/python2.5/site-packages/IPython/Debugger.py\", line\n213, in __init__\n     self.color_scheme_table = ExceptionColors.copy()\n   File \"/usr/lib64/python2.5/site-packages/IPython/ColorANSI.py\", line\n151, in copy\n     return ColorSchemeTable(self.values(),self.active_scheme_name)\n   File \"/usr/lib64/python2.5/site-packages/IPython/ColorANSI.py\", line\n144, in __init__\n     raise ValueError,'you must specify the default color scheme'\nValueError: you must specify the default color scheme\n```\n\nThe second file ipython_debug2.py performs better - the debugging is actually possible, but any exception after the 'continue' command causes the ipython crash dump:\n\n```\n$ python ipython_debug2.py\nhello\n > ipython_debug2.py(14)<module>()\n      13\n---> 14 print 'hello again'\n      15\n\nipdb>\n```\n\nthen type 'c' to continue, and you get the error. I would like to see\njust the ZeroDivisionError, not the ipython crash dump that follows.\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU5NDQ2OmZhMGUzZmVhOGFjMTE2ZmM4OTk1ODA4ODQyMWFlZGQxNjAyZDY5ZGY=", "commit_message": "Merge pull request #57 from maxalbert/cleanup\n\nCleanup of format selection\r\n\r\nTwo small cleanups/fixes:\r\n\r\nMuch cleaner way of finding the right converter. This will result in much cleaner diffs when changing the API, adding arguments, etc. It also allows us to extract the known formats automatically.\r\n\r\nFixed an assertion which didn't actually check the file extension but an arbitrary occurrence of 'rst'", "commit_timestamp": "2012-11-16T14:08:35Z", "files": ["nbconvert.py", "tests/test_simple.py"]}], "labels": [], "created_at": "2010-05-10T09:34:19Z", "closed_at": "2011-11-28T05:24:57Z", "method": ["regex"]}
{"issue_number": 56, "title": "Have %cpaste accept also Ctrl-D as a termination marker", "body": "Original Launchpad bug 510686: https://bugs.launchpad.net/ipython/+bug/510686\nReported by: adeodato (Adeodato Sim\u00f3).\n\nHello,\n\nI think it would be an usability improvement if %cpaste would also accept Ctrl-D as a termination marker. It is standard speak for \"end of stream\", and quicker to type when you're pasting with your right hand using the mouse. It should be easily detectable by catching EOFError, I think.\n\nThanks for considering!\n", "commits": [{"node_id": "MDY6Q29tbWl0MjU1NzI3NDo2MDlkODNlZmQzMjVhNmQ5Yjg5Y2M2YmFhMTgyMTM0Y2IxMTFlN2Zh", "commit_message": "fixing issue #56", "commit_timestamp": "2011-10-12T08:08:19Z", "files": ["IPython/core/magic.py", "IPython/frontend/terminal/interactiveshell.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmRiODRmYzlkYzQ2ZTJhNTdhZDgzNTYzZmJlM2Y0N2QxNDI2MzNkMWU=", "commit_message": "Merge pull request #861 from djv/master\n\nAdd support for terminating `%cpaste` blocks with `Ctrl-D`.\r\n\r\nCloses gh-56.", "commit_timestamp": "2011-10-14T01:21:37Z", "files": ["IPython/core/magic.py", "IPython/frontend/terminal/interactiveshell.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzphOGY2YzdlNTkyMGI1NTBjMDQzOTZhYzZjOTJhMjZkZWJhM2ZhMTAx", "commit_message": "fixing issue #56", "commit_timestamp": "2011-10-12T08:08:19Z", "files": ["IPython/core/magic.py", "IPython/frontend/terminal/interactiveshell.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzozNDlkZDY3OTk5NmVjNDE4OWViNGMyMThjNmFhNTdkNTEyYmVjNzhi", "commit_message": "Merge pull request #861 from djv/master\n\nAdd support for terminating `%cpaste` blocks with `Ctrl-D`.\r\n\r\nCloses gh-56.", "commit_timestamp": "2011-10-14T01:21:37Z", "files": ["IPython/core/magic.py", "IPython/frontend/terminal/interactiveshell.py"]}], "labels": [], "created_at": "2010-05-10T09:34:16Z", "closed_at": "2011-10-14T01:21:39Z", "method": ["regex"]}
{"issue_number": 55, "title": "Can't edit files whose names begin with numbers", "body": "Original Launchpad bug 237781: https://bugs.launchpad.net/ipython/+bug/237781\nReported by: rick-fawo (Rick van Hattem).\n\nWhen doing something like %edit 123.py the edit mode automatically tries to look for row 123.py which naturally fails since it can't convert the input to an int. The code in Magic.py already mentions this (line 3273):\n# This means that you can't edit files whose names begin with\n# numbers this way. Tough.\n\nTo avoid this problem I recommend changing the regex from r'\\d' to something like r'^\\d+(.*\\d+)?$' (looking for one or more digits, optionally followed by some other character followed by more digits, with the constraint that it has to start and end with this pattern. In my simple tests this hack seems to work but I'm not sure I've covered all the possible cases.\n\nAnother option might be changing the if so the args.endswith('.py'): comes before the regular expression.\n", "commits": [{"node_id": "MDY6Q29tbWl0OTc3NTQwOmQ0M2MzZGM1MWZlZTExZjM0MGU1YmNkZTcyZDMyMzljMTJiYjRkYjg=", "commit_message": "Change order in which things are tried in %edit, so filenames starting with numbers can be edited.\n\nCloses gh-127\nCloses gh-55", "commit_timestamp": "2011-03-21T23:35:03Z", "files": ["IPython/core/magic.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzpiYjM3NDhiZTBjZDE3YTE1NTgwYjZiN2FiYzJhMDY2MmJmMGEyMTIx", "commit_message": "Change order in which things are tried in %edit, so filenames starting with numbers can be edited.\n\nCloses gh-127\nCloses gh-55", "commit_timestamp": "2011-03-21T23:35:03Z", "files": ["IPython/core/magic.py"]}], "labels": ["bug"], "created_at": "2010-05-10T09:34:13Z", "closed_at": "2011-03-28T20:01:39Z", "method": ["label", "regex"]}
{"issue_number": 49, "title": "%clear should also delete _NN references and Out[NN] ones", "body": "Original Launchpad bug 412350: https://bugs.launchpad.net/ipython/+bug/412350\nReported by: fdo.perez (Fernando Perez).\n\nWe need a few things regarding variable/namespace clearing:\n- A 'hard reset' that really nukes _NN, Out[NN], _, __, ___ and all other references we create behind the user's back.\n- Visible name reset: what %reset does today.\n- Integration of %reset and %clear in a nice, unified interface for cleaning various parts of the things we cache.  Users shouldn't have to know about these two.\n\nI'm making this high (but not critical) importance because it is a problem that keeps coming back on the mailing lists.\n", "commits": [{"node_id": "MDY6Q29tbWl0OTc3NTQwOjE0OTYzMzY3ZDU0YmZjOTQ5MDhlZmE1ODU4NTkzYTdmOGI1ZGQ4M2Y=", "commit_message": "Implement hard reset with '%reset -h' call.\n\nCloses gh-49", "commit_timestamp": "2011-04-07T12:24:44Z", "files": ["IPython/core/displayhook.py", "IPython/core/interactiveshell.py", "IPython/core/magic.py"]}, {"node_id": "MDY6Q29tbWl0NjU5NDQ2OjgyMDRmMWNlOGRiNDhkNmI3Y2EwZDk2YTU3OWY1MjIxYmExNmZkNTE=", "commit_message": "Merge pull request #49 from dwf/test_cleanup\n\nTest cleanup", "commit_timestamp": "2012-11-16T14:00:18Z", "files": ["converters/base.py", "converters/notebook.py", "tests/test_nbconverter.py", "tests/test_references.py", "tests/test_rst2ipynb.py", "tests/test_simple.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo2OTYwMTk4NWQzZmJiNDAwNmUzNDhlNWY1MGJkMmVkZDE3NTZkNmU5", "commit_message": "Implement hard reset with '%reset -h' call.\n\nCloses gh-49", "commit_timestamp": "2011-04-07T12:24:44Z", "files": ["IPython/core/displayhook.py", "IPython/core/interactiveshell.py", "IPython/core/magic.py"]}], "labels": [], "created_at": "2010-05-10T09:32:53Z", "closed_at": "2011-04-08T13:10:23Z", "method": ["regex"]}
{"issue_number": 48, "title": "IPython should follow the XDG Base Directory spec for configuration", "body": "Original Launchpad bug 409277: https://bugs.launchpad.net/ipython/+bug/409277\nReported by: bernd-sch (Bernd Schlapsi).\n\nCould IPython please follow the XDG Base Directory Specification for the configuration/data directory on linux. \n\nmore infos here:\n- http://standards.freedesktop.org/basedir-spec/basedir-spec-latest.html\n- http://www.freedesktop.org/wiki/Software/pyxdg\n- https://wiki.ubuntu.com/LittleDetails#Use%20XDG%20folders\n\nI am using:\npython 2.6.2\nipython 0.9.1\nUbuntu 9.04 with latest updates\n", "commits": [{"node_id": "MDY6Q29tbWl0OTc3NTQwOmMxYzJhNzEwNGFhODU5Yzk4MGUwZDA1MDY0MjljMGNmYWIzNzY2Y2U=", "commit_message": "use XDG_CONFIG_HOME if available\n\npriority is:\n\n$XDG/ipython if both or neither exist\n$HOME/.ipython if it exists and $XDG/ipython does not exist\n\ncloses gh-48\ncloses gh-246", "commit_timestamp": "2011-02-21T05:42:00Z", "files": ["IPython/utils/path.py", "IPython/utils/tests/test_path.py"]}, {"node_id": "MDY6Q29tbWl0OTc3NTQwOjE1Y2U5YmY1ZjEyOTYzNmFmNWRhMGRlMTM5M2JhYjVmZTU2MDg4YTc=", "commit_message": "Merge 'XDG', introducing basic XDG_CONFIG_HOME support\n\ncloses gh-278\ncloses gh-246\ncloses gh-48", "commit_timestamp": "2011-02-23T03:00:25Z", "files": ["IPython/core/application.py", "IPython/core/magic.py", "IPython/core/usage.py", "IPython/kernel/controllerservice.py", "IPython/kernel/ipcontrollerapp.py", "IPython/kernel/ipengineapp.py", "IPython/utils/path.py", "IPython/utils/tests/test_path.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzphYzA2MDRjNTEzOGMwNzliZjAwZGQ5NjI2NmM1MTY5ODZiMzk0Zjg5", "commit_message": "use XDG_CONFIG_HOME if available\n\npriority is:\n\n$XDG/ipython if both or neither exist\n$HOME/.ipython if it exists and $XDG/ipython does not exist\n\ncloses gh-48\ncloses gh-246", "commit_timestamp": "2011-02-21T05:42:00Z", "files": ["IPython/utils/path.py", "IPython/utils/tests/test_path.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzozNzBlNWM2NjU3ODFhYjZkYThjYTg5OTE3MDA5OWM1MTU4MmNmM2E0", "commit_message": "Merge 'XDG', introducing basic XDG_CONFIG_HOME support\n\ncloses gh-278\ncloses gh-246\ncloses gh-48", "commit_timestamp": "2011-02-23T03:00:25Z", "files": ["IPython/core/application.py", "IPython/core/magic.py", "IPython/core/usage.py", "IPython/kernel/controllerservice.py", "IPython/kernel/ipcontrollerapp.py", "IPython/kernel/ipengineapp.py", "IPython/utils/path.py", "IPython/utils/tests/test_path.py"]}], "labels": [], "created_at": "2010-05-10T09:32:50Z", "closed_at": "2011-02-22T23:55:00Z", "method": ["regex"]}
{"issue_number": 46, "title": "Input to %timeit is not preparsed", "body": "Original Launchpad bug 296116: https://bugs.launchpad.net/ipython/+bug/296116\nReported by: fdo.perez (Fernando Perez).\n\n%timeit should preparse the input just like %time does.\n\nBug reported at SageDays11.\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU5NDQ2OjI5YTczY2RlYWZhYzhhNmFlY2RjNTQ5OTljMjA2ZjQ5NDRmMTIxNTM=", "commit_message": "Merge pull request #46 from dkua/b1\n\nRemoved &nbsp; from html.py\r\n\r\nSo the In and Out prompts in a static HTML conversion are the same length/aligned.\r\n\r\nNormal notebook does not have nbsp either.", "commit_timestamp": "2012-11-12T19:48:57Z", "files": ["converters/html.py"]}], "labels": [], "created_at": "2010-05-10T09:32:43Z", "closed_at": "2011-03-23T16:02:47Z", "method": ["regex"]}
{"issue_number": 42, "title": "In-place %editing of methods", "body": "Original Launchpad bug 561693: https://bugs.launchpad.net/ipython/+bug/561693\nReported by: fdo.perez (Fernando Perez).\n\nBy Robert Kern on the dev-list\n\nIt just occurred to me that someone could write a very useful magic for editing\nmethods and functions in-place. The following is a loose sketch to record my\nthoughts in public.\n\nWorkflow:\n\nYou think you have a problem with a particular method. You use Foo.bar?? to view\nits source. You realize that you need a print statement somewhere in there. What\nto do?!\n\nSolution:\n\n%inplace Foo.bar\n\nThis will inspect the source for just the method and open it in your editor.\nWhen you are finished, it will create a new module object with an ad hoc name\n(maybe inplace_<hashsum>.py) with a corresponding fake entry in the linecache\nfor tracebacks and future %inplaces. The globals dict is populated with the\nentries from the method object's globals dict (.im_func.func_globals) in order\nto ensure that you have the appropriate global referents (be sure to fix the\n**file** entry to the ad hoc name). If the new function needs extra imports or\nother module-level functions, that's fine (untested). No new methods, though.\n\nExecute the code in this module's namespace. Extract the function object by\nname. If the original is a method, look up the class and assign the new function\nobject to it. If the original is a function, look up the module and assign it.\nNone of this is particularly difficult or problematic. Only when you need to\nedit whole classes and adjust living objects to use the new type do you run into\ndifficulties. There are solutions on PyPI, but they are larger and more\nerror-prone than we probably care for.\n\n%inplace should keep a record of these modifications. Many of them are going to\nbe throwaway debugging things, but some will be genuine modifications that\nshould be propagated into the actual source code. A SQLite database in\n~/.ipython/ is a nice, robust location to keep them. Upon exit, IPython should\nprint out the final versions of the modified functions. Additionally, you can\nhave a couple of --options for %inplace that let you view/clean up the database\ninstead of editing something. For bonus points, generate a unified diff against\nthe actual files.\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU5NDQ2OjNlYmY3Mzk3OTFkMDI1NTc0ODZlMGE1NmFhNDU1NzZjOTlkZTFhMTc=", "commit_message": "Merge pull request #42 from Carreau/refactor\n\nReorganize nbconvert.py into multiple file.\r\n\r\nRewrite some test.", "commit_timestamp": "2012-11-04T12:13:15Z", "files": ["converters/__init__.py", "converters/base.py", "converters/bloggerhtml.py", "converters/html.py", "converters/latex.py", "converters/lexers.py", "converters/markdown.py", "converters/notebook.py", "converters/python.py", "converters/rst.py", "converters/utils.py", "nbconvert.py", "tests/ipynbref/IntroNumPy.orig.py", "tests/test_references.py", "tests/test_rst2ipynb.py", "tests/test_simple.py"]}], "labels": [], "created_at": "2010-05-10T09:32:33Z", "closed_at": "2016-07-19T23:17:21Z", "method": ["regex"]}
{"issue_number": 40, "title": "The tests in test_process fail under Windows", "body": "Original Launchpad bug 266923: https://bugs.launchpad.net/ipython/+bug/266923\nReported by: ellisonbg (Brian Granger).\n\nAll the tests in test_process.py fail in some way or another on Windows.\n\ntest_capture_out and test_kill:  fail on Vista when iptest is run using the shortcut in the Start Menu.  The error is realted to Windows permissions.  But, they pass when iptest is run from the command line.\n\ntest_io:  fails always on Windows.  Something related to how the string are quoted.\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU5NDQ2OmJkOTJiMDQxOTRhYWUwYmJkNDlmNGQ5MGI2OWViYWYwNjliN2NhYzg=", "commit_message": "Merge pull request #40 from ivanov/auto-docinherit\n\nmake automatic __doc__ inheritance", "commit_timestamp": "2012-10-28T16:13:20Z", "files": ["decorators.py", "nbconvert.py"]}], "labels": ["windows", "bug"], "created_at": "2010-05-10T09:31:26Z", "closed_at": "2013-08-20T23:11:20Z", "method": ["label", "regex"]}
{"issue_number": 39, "title": "Add Lisandro's makezip script", "body": "Original Launchpad bug 559784: https://bugs.launchpad.net/ipython/+bug/559784\nReported by: fdo.perez (Fernando Perez).\n\nAdd this script to our distribution, it's a useful tool (and he agreed to allow us to distribute it with ipython):\n\nhttp://ipython.scipy.org/Wiki/Cookbook/StandaloneZip\n\nWe should probably also run it on nightlies to make these self-contained zips easily available.\n\nThanks to Lisandro for the contribution!\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU5NDQ2OjhiMmFmYjRkOGMyZWQxNDI1ZjFhOTFiYjc2NTkyODJiMGQyZGMwMzc=", "commit_message": "Merge pull request #39 from Carreau/htmloutput\n\nadd missing html classes to output div", "commit_timestamp": "2012-10-28T16:13:06Z", "files": ["nbconvert.py"]}], "labels": [], "created_at": "2010-05-10T09:31:24Z", "closed_at": "2014-11-11T20:10:04Z", "method": ["regex"]}
{"issue_number": 36, "title": "tab completion does not escape ()", "body": "Original Launchpad bug 258721: https://bugs.launchpad.net/ipython/+bug/258721\nReported by: peter-bienstman (Peter Bienstman).\n\nI have a file coming from a Windows user called aaaa(1).txt, tab completion under linux expands this to\n\naaaa(1).txt\n\nas opposed to\n\naaaa(1).txt\n\nas is done by bash.\n", "commits": [{"node_id": "MDY6Q29tbWl0OTc3NTQwOmVjMWY0ZDY3ZjI2ZTIxNTVlYzA4MmM4NTg0MjlmMWFkMGZkZjY1MjQ=", "commit_message": "Fix protection of special characters on tab completion.\n\nThanks to a patch by Batz (http://github.com/batz), added unit tests.\n\nCloses gh-36.", "commit_timestamp": "2010-10-22T07:34:19Z", "files": ["IPython/core/completer.py", "IPython/core/tests/test_completer.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo2ZTRiZmM0OTAxMDg3MmYzNjEzZTg3NDU4NmNlODBkYWEwZjI5YmMz", "commit_message": "Fix protection of special characters on tab completion.\n\nThanks to a patch by Batz (http://github.com/batz), added unit tests.\n\nCloses gh-36.", "commit_timestamp": "2010-10-22T07:34:19Z", "files": ["IPython/core/completer.py", "IPython/core/tests/test_completer.py"]}], "labels": [], "created_at": "2010-05-10T09:31:01Z", "closed_at": "2010-10-22T07:35:35Z", "method": ["regex"]}
{"issue_number": 35, "title": "stderr missing in IPython + Emacs + WinXP", "body": "Original Launchpad bug 237204: https://bugs.launchpad.net/ipython/+bug/237204\nReported by: jietang86 (Jie Tang).\n\nWinXP Pro SP2\nEmacs 22.1\nipython.el \npython-mode.el \n\nstderr doesn't show up when using IPython with ipython.el inside Emacs.\n\ne.g.:\n\nIn [2]: from sys import stderr,stdout\n\nIn [3]: stdout.write('\\nfoo\\n')\n\nfoo\n\nIn [4]: stderr.write('\\nbar\\n')\n\nIn [5]:\n\nIt seems like sys.stderr has some buffering issues; if I flush the stream using stderr.flush() after writing to it the text displays.\n\nIn [6]: stderr.flush()\n\nbar\n\nIn [7]:\n\nAs a workaround I added calls to\n\nTerm.cout.flush()\nTerm.cerr.flush()\n\nright before IPython's \"In[]\" input prompt is displayed (around line 1675 in iplib.py)\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU5NDQ2OmFlZWUwODAzMGYyMTJiNzliNzIyOTkxMzVjYjAyNjI3YWJiODI4OTc=", "commit_message": "Merge pull request #35 from jakevdp/sphinx-extension\n\nWIP: Sphinx Notebook Extension", "commit_timestamp": "2012-10-28T16:12:50Z", "files": ["nbconvert.py", "notebook_sphinxext.py"]}], "labels": ["windows", "bug"], "created_at": "2010-05-10T09:30:57Z", "closed_at": "2015-01-14T21:13:29Z", "method": ["label", "regex"]}
{"issue_number": 32, "title": "dreload produces spurious traceback when numpy is involved", "body": "Original Launchpad bug 306805: https://bugs.launchpad.net/ipython/+bug/306805\nReported by: fdo.perez (Fernando Perez).\n\nOriginal report by Robin on the ipython user list is below.\n\nI see the problem by using dreload(), but I can't reproduce  it by manually calling the pieces of the code that break in that traceback.  Will need to investigate further; there's a slim chance it's a problem in numpy's machinery that tries to detect that it's being imported from the build directory.\n# Original report:\n\nFrom: Robin robince@gmail.com\nDate: Fri, Dec 5, 2008 at 10:12 AM\nSubject: [IPython-user] dreload numpy - source dir error\nTo: \"ipython-user@scipy.org\" ipython-user@scipy.org\n\nHi,\n\nI thought I had seen this come up but I can't find it - so sorry if it has...\n\nI have an error using dreload with numpy... I get the error about\nimporting numpy in the source directory whenever I try to dreload\nsomething that uses numpy. For the most part it does seem to work (I'm\nnot changing numpy - its my own code I'm trying to dreload) but the\nlong trace back is a bit annoying because it breaks the list of\nresults when scrolling through the history...\n\nAnyway here is an example:\n\n<pre>\nrobin-mbp:amaripool robince$ ipython\nPython 2.5.1 (r251:54869, Apr 18 2007, 22:08:04)\nType \"copyright\", \"credits\" or \"license\" for more information.\n\nIPython 0.9.1 -- An enhanced Interactive Python.\n?         -> Introduction and overview of IPython's features.\n%quickref -> Quick reference.\nhelp      -> Python's own help system.\nobject?   -> Details about 'object'. ?object also works, ?? prints more.\nIn [1]: import numpy\nIn [2]: reload numpy\n------> reload(numpy)\nOut[2]: <module 'numpy' from\n'/Library/Frameworks/Python.framework/Versions/2.5/lib/python2.5/site-packages/numpy/__init__.pyc'>\nIn [3]: dreload numpy\n------> dreload(numpy)\nReloading numpy\nReloading numpy.numpy\nReloading numpy.show\n---------------------------------------------------------------------------\nImportError                               Traceback (most recent call last)\n\n/Users/robince/phd/amaripool/<ipython console> in <module>()\n\n/Library/Frameworks/Python.framework/Versions/2.5/lib/python2.5/site-packages/ipython-0.9.1-py2.5.egg/IPython/deep_reload.pyc\nin reload(module, exclude)\n   179     __builtin__.__import__ = deep_import_hook\n   180     try:\n--> 181         ret = deep_reload_hook(module)\n   182     finally:\n   183         __builtin__.__import__ = original_import\n\n/Library/Frameworks/Python.framework/Versions/2.5/lib/python2.5/site-packages/ipython-0.9.1-py2.5.egg/IPython/deep_reload.pyc\nin deep_reload_hook(module)\n   157     name = module.__name__\n   158     if '.' not in name:\n--> 159         return import_module(name, name, None)\n   160     i = name.rfind('.')\n   161     pname = name[:i]\n\n/Library/Frameworks/Python.framework/Versions/2.5/lib/python2.5/site-packages/ipython-0.9.1-py2.5.egg/IPython/deep_reload.pyc\nin import_module(partname, fqname, parent)\n   145\n   146     try:\n--> 147         m = imp.load_module(fqname, fp, pathname, stuff)\n   148     finally:\n   149         if fp: fp.close()\n\n/Library/Frameworks/Python.framework/Versions/2.5/lib/python2.5/site-packages/numpy/__init__.pyc\nin <module>()\n   119         its source directory; please exit the numpy source\ntree, and relaunch\n   120         your python intepreter from there.\"\"\"\n--> 121         raise ImportError(msg)\n   122     from version import version as __version__\n   123\n\nImportError: Error importing numpy: you should not try to import numpy from\n       its source directory; please exit the numpy source tree, and relaunch\n       your python intepreter from there.\n</pre>\n\n\nCheers\n\nRobin\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU4NTE4OmEyMDZlZTI5ODk3MzkwODY0YzUyZDFlZjEzMjFkYjM2M2Q4NzdlMWM=", "commit_message": "Merge pull request #1457 from bfroehle/dreload\n\nUpdate deepreload to use a rewritten knee.py. \r\n\r\nThis fixes the long-standing bug with `dreload(numpy)` not working.\r\n\r\n`knee.py`, a Python re-implementation of hierarchical module import was removed from the standard library because it no longer functioned properly.  This uses `deepreload.py`, a fixed version of `knee.py` which overrides `__builtin__.__import__` to ensure that each module is re-imported once (before just referring to sys.modules as usual).\r\n\r\nIn addition, `os.path` was added to the default excluded modules, since somehow it has an entry in sys.modules without `os' being a package.\r\n\r\nAdded tests for this functionality (which had never had any tests).\r\n\r\nCloses gh-32.", "commit_timestamp": "2012-04-18T01:06:18Z", "files": ["IPython/lib/deepreload.py", "IPython/lib/tests/test_deepreload.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzphN2Y2NGVlMzViNmQ1NmFlNWYxYTBhNjI0NTQwYmNlNWI3MmI1MDhm", "commit_message": "Merge pull request #1457 from bfroehle/dreload\n\nUpdate deepreload to use a rewritten knee.py. \r\n\r\nThis fixes the long-standing bug with `dreload(numpy)` not working.\r\n\r\n`knee.py`, a Python re-implementation of hierarchical module import was removed from the standard library because it no longer functioned properly.  This uses `deepreload.py`, a fixed version of `knee.py` which overrides `__builtin__.__import__` to ensure that each module is re-imported once (before just referring to sys.modules as usual).\r\n\r\nIn addition, `os.path` was added to the default excluded modules, since somehow it has an entry in sys.modules without `os' being a package.\r\n\r\nAdded tests for this functionality (which had never had any tests).\r\n\r\nCloses gh-32.", "commit_timestamp": "2012-04-18T01:06:18Z", "files": ["IPython/lib/deepreload.py", "IPython/lib/tests/test_deepreload.py"]}], "labels": [], "created_at": "2010-05-10T09:30:50Z", "closed_at": "2012-04-18T01:06:19Z", "method": ["regex"]}
{"issue_number": 31, "title": "Issues in magic_whos code", "body": "Original Launchpad bug 509043: https://bugs.launchpad.net/ipython/+bug/509043\nReported by: gokhansever (Gokhan Sever).\n\n1-) In .../IPython/core/magic.py looking at the magic_whos code:\n\nYou still mention of Numeric. Shouldn't these instances be cleared both in code and documentation providing that you drop support for Python 2.4 and below?\n\n2-) Lines 966-967 in magic.py:\n\n<pre>\n        # for these types, show len() instead of data:\n        seq_types = [types.DictType,types.ListType,types.TupleType]\n</pre>\n\n\nwith a sample code:\n\n<pre>\nIn [18]: ll = range(10)\n\nIn [19]: whos\nVariable   Type                Data/Info\n----------------------------------------\na          InteractiveShell    <InteractiveShell('ipython.component0')>\nb          NoneType            None\nll           list                       [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]\n</pre>\n\n\nFrom this, either the comment or the output of the whos needs to be updated.\n\nPython version: 0.11.bzr.r1346\nPlatform info  : os.name -> posix, sys.platform -> linux2\n                     : Linux-2.6.31.9-174.fc12.i686.PAE-i686-with-fedora-12-Constantine\nPython info    : 2.6.2 (r262:71600, Aug 21 2009, 12:22:21) [GCC 4.4.1 20090818 (Red Hat 4.4.1-6)]\n", "commits": [{"node_id": "MDY6Q29tbWl0OTc3NTQwOjExZTMwYjI3ZWI4NDJiZDhiOTM1Zjk1ODUwMWY2MTZhN2M5YzRhNmM=", "commit_message": "Merge branch 'issue-31'\n\nConflicts:\n\tIPython/core/magic.py\n\ncloses gh-31", "commit_timestamp": "2011-03-25T00:09:09Z", "files": ["IPython/core/magic.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo2NzRlMWJiZWQzZmYzZGRjMWJlOTc5NDE1MzhiNGRmODQyY2E0MzZh", "commit_message": "Merge branch 'issue-31'\n\nConflicts:\n\tIPython/core/magic.py\n\ncloses gh-31", "commit_timestamp": "2011-03-25T00:09:09Z", "files": ["IPython/core/magic.py"]}], "labels": [], "created_at": "2010-05-10T09:30:47Z", "closed_at": "2011-03-23T22:05:20Z", "method": ["regex"]}
{"issue_number": 29, "title": "cPickle works in standard interpreter, but not in IPython", "body": "Original Launchpad bug 363115: https://bugs.launchpad.net/ipython/+bug/363115\nReported by: reckoner (reckoner).\n\nFor example in IPython:\n\n```\nclass Mylist(list):\n     def __init__(self,x=[]):\n          list.__init__(self,x)\n\nfrom cPickle import dumps\nw=Mylist([1,2,3])\ndumps(w)\n\nPicklingError: Can't pickle <class '__main__.Mylist'>: attribute\nlookup __main__.Mylist failed\n```\n\nHowever, using the standard Python interpreter:\n\n```\n Python 2.5.2 (r252:60911, Feb 21 2008, 13:11:45) [MSC v.1310 32 bit (Intel)] on win32\n Type \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n >>> from cPickle import dumps\n >>> class Mylist(list):\n ...         def __init__(self,x=[]):\n ...             list.__init__(self,x)\n ...\n >>> w=Mylist([1,2,3])\n >>> dumps(w)\n 'ccopy_reg\\n_reconstructor\\np1\\n(c__main__\\nMylist\\np2\\nc__builtin__\\nlist\\np3\\n\n (lp4\\nI1\\naI2\\naI3\\natRp5\\n.'\n >>>\n```\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU4NTE4OmExZTQ5MTFiNmU3Zjk3M2UzZDVjZjM1M2U2MDQ3M2FiODViZTliNTc=", "commit_message": "Merge pull request #648 from takluyver/usermod\n\nClean up handling of global namespaces with the proper semantics.\r\n\r\nA global namespace should always be tied to a module: pickle accesses classes via the module in which they're defined. So I've changed the arguments for instantiating an InteractiveShell to include `user_module` in place of `user_global_ns`. The global namespace simply becomes a reference to `user_module.__dict__`.\r\n\r\nFor instantiating InteractiveShell, there are four possibilities:\r\n\r\n* Neither `user_ns` nor `user_module` is given. A new (real) module is created named `__main__`, and its `__dict__` becomes the global and local namespace. This is what happens when starting IPython normally.\r\n* Only `user_module` is given. Its `__dict__` becomes the global and local namespace.\r\n* Both `user_ns` and `user_module` are given. `user_module.__dict__` is the global namespace, and `user_ns` is the local namespace. Note that we can't interactively define closures over variables in the local namespace (this seems to be a limitation of Python).\r\n* Only `user_ns` is given. It is treated as the global and local namespace, and a `DummyMod` object is created to refer to it. This is intended as a convenience, especially for the test suite. The recommended way to pass in a single global namespace is as a reference to the module.\r\n\r\n`embed()` digs out the locals and the module from the frame in which it's called.\r\n\r\nCloses gh-29, closes gh-693.", "commit_timestamp": "2011-11-27T02:45:27Z", "files": ["IPython/core/displayhook.py", "IPython/core/history.py", "IPython/core/interactiveshell.py", "IPython/core/magic.py", "IPython/core/prefilter.py", "IPython/core/tests/test_interactiveshell.py", "IPython/core/tests/test_iplib.py", "IPython/core/tests/test_run.py", "IPython/frontend/terminal/embed.py", "IPython/frontend/terminal/interactiveshell.py", "IPython/testing/globalipapp.py", "IPython/testing/plugin/ipdoctest.py"]}, {"node_id": "MDY6Q29tbWl0MjIxMjQyNjpiNDYwOTQ1OTQ4MjE1NGJmNTA0MTBhNzVkNmEzMWY3Y2Q3MTY1ZmJl", "commit_message": "Use user_ns as global namespace if it is passed without user_module, and add test for pickling interactively defined objects.\n\nCloses gh-29", "commit_timestamp": "2011-11-27T00:57:32Z", "files": ["IPython/core/interactiveshell.py", "IPython/core/tests/test_interactiveshell.py", "IPython/testing/globalipapp.py", "IPython/testing/plugin/ipdoctest.py"]}], "labels": ["bug"], "created_at": "2010-05-10T09:29:39Z", "closed_at": "2011-11-27T02:45:29Z", "method": ["label", "regex"]}
{"issue_number": 28, "title": "Offer finer control for initialization of input streams", "body": "Original Launchpad bug 337002: https://bugs.launchpad.net/ipython/+bug/337002\nReported by: fdo.perez (Fernando Perez).\n\nFor details, see:\n\nhttps://mail.enthought.com/pipermail/enthought-dev/2009-March/020086.html\n\nFor embedding in GUI toolkits, we need finer control over raw_input at ipython startup time.\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU5NDQ2OjAzMzViYmIxNzJkOTY4ODJiNGNlYjk2ODI5M2E2ZjkyMGUwYTRmMzQ=", "commit_message": "Merge pull request #28 from ivanov/doc-inherit\n\nremove redundant docstrings with @DocInherit", "commit_timestamp": "2012-08-27T15:15:43Z", "files": ["nbconvert.py"]}], "labels": [], "created_at": "2010-05-10T09:29:37Z", "closed_at": "2011-03-23T21:41:13Z", "method": ["regex"]}
{"issue_number": 26, "title": "find_job_cmd is too hasty to fail on Windows", "body": "Original Launchpad bug 503903: https://bugs.launchpad.net/ipython/+bug/503903\nReported by: ellisonbg (Brian Granger).\n\nThe find_job_cmd function at line 565 of launcher.py fails on line 560 when the Windows HPC stuff is not installed.\nBut find_job_cmd is called at import (always), so it fails.\n\nWe should probably just return 'job' if find_cmd('job')  fails.\n# This is only used on Windows.\n\ndef find_job_cmd():\n    if os.name=='nt':\n        return find_cmd('job')\n    else:\n        return 'job'\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU5NDQ2OmVmNjdmODRkMzQxYTg3ZmZiN2I2YjJjMDBiMGNjNTFjMDYzOGQzYTI=", "commit_message": "Merge pull request #26 from Carreau/utf8fix\n\nfix utf8 for html output.\r\n\r\nThis hardcode utf-8 in html templates", "commit_timestamp": "2012-08-10T16:31:27Z", "files": ["nbconvert.py"]}], "labels": ["windows", "bug"], "created_at": "2010-05-10T09:29:34Z", "closed_at": "2011-04-18T21:39:51Z", "method": ["label", "regex"]}
{"issue_number": 25, "title": "unicode bug - encoding input", "body": "Original Launchpad bug 339642: https://bugs.launchpad.net/ipython/+bug/339642\nReported by: vsevolod-solovyov (Murkt).\n\nDefault Python shell:\n\n> > > u'\u0430\u0431\u0432\u0433\u0434'\n> > > u'\\u0430\\u0431\\u0432\\u0433\\u0434'\n\nIPython 0.9.1:\n\n> > > u'\u0430\u0431\u0432\u0433\u0434'\n> > > u'\\xd0\\xb0\\xd0\\xb1\\xd0\\xb2\\xd0\\xb3\\xd0\\xb4'\n> > > '\u0430\u0431\u0432\u0433\u0434'.decode('utf8')\n> > > u'\\u0430\\u0431\\u0432\\u0433\\u0434'\n\nsys.stdin.encoding is 'UTF-8'.\n\nHow to fix: remove the line \u21162022 from IPython/iplib.py (for 0.9.1 release). Here it is:\n\n--- a/iplib.py\n+++ b/iplib.py\n@@ -2019,7 +2019,6 @@\n         # this allows execution of indented pasted code. It is tempting\n         # to add '\\n' at the end of source to run commands like ' a=1'\n         # directly, but this fails for more complicated scenarios\n-        source=source.encode(self.stdin_encoding)\n       if source[:1] in [' ', '\\t']:\n           source = 'if 1:\\n%s' % source\n\nI didn't find any intoduced bugs by a quick check.\n\nAdditionaly, I checked ipython-wx and ipythonx - latter doesn't have this bug.\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU5NDQ2OjMyOTAwNTNiZWNkZDQ1ZWNkYjI0MjM0NzMzZTA5ODAwNTc4ZGM0NmI=", "commit_message": "Merge pull request #25 from Carreau/no_md_subprocess\n\nuse markdown package instead instead of subprocess", "commit_timestamp": "2012-08-27T15:13:49Z", "files": ["nbconvert.py"]}], "labels": ["important", "unicode", "bug"], "created_at": "2010-05-10T09:29:16Z", "closed_at": "2011-03-25T02:01:50Z", "method": ["label", "regex"]}
{"issue_number": 20, "title": "Robust readline support on OS X's builtin Python", "body": "Original Launchpad bug 254023: https://bugs.launchpad.net/ipython/+bug/254023\nReported by: seanj-xyke (Sean Jensen-Grey).\n\nRe-edited 9/25/2008,\n\nShort:\n\nThe bug contains a description and a solution for getting readline to work reliably on the mac. The solution outlined recommends shipping the egg for readline with ipython and installing it in site-packages. Optionally modifying the ipython.py script to contain a reference to the egg.\n\nSee below.\n\n---\n\nWith a default source install of IPython 0.8.4, typing code into the ipython shell is a little frustrating since I cannot use the tab key to indent code.\n\nEven with the -noreadline option used when starting ipython, the tab key will not emit a tab or spaces in the ipython shell.\n\nI understand that readline support on OS X 10.5 is provided by libedit which does not have the same functionality as gnureadline.\n\nAnd that by installing gnu readline I get the behavior I want.\n\nAnd that there is an install guide @ http://ipython.scipy.org/moin/InstallationOSXLeopard\n\nIt would seem to me that the usability of ipython on the mac under leopard is pretty flawed due to poor readline implementation (out of the box). At least with how IPython interacts with it. \n\nA couple possibilities to remedy this would be:\n1. Rather than say that libedit was detected, say something along the lines of \n\n(only on darwin and if libedit was detected ...)\n\n\"\"\"\n\nThe libedit replacement for gnu readline was detected on your mac.\n\nIPython needs gnu readline to function optimally. Using the tab key to indent code\nwill not work without it.\n\nPlease install pyreadline for osx. Or modify the ipython script itself.\n\nsee, http://pypi.python.org/pypi/readline/2.5.1\n\n\"\"\"\n1. Ship the pyreadline.egg with the tar.gz of the source, during setup if they are using darwin, include the egg and modify the ipython start script.\n\nMy new start script looks like\n\nimport sys\nsys.path.insert( 0, '/Users/sean/python/readline-2.5.1-py2.5-macosx-10.5-fat.egg')\n\nimport IPython.Shell\nIPython.Shell.start().mainloop()\n\nAnd it works great. I just had to download the egg from pypi and add it to my sys.path, INFRONT of everything else.pur\n\nAdding in pyreadline support on the mac would only take 360k of extra space, it would save an extra configuration step. The setup command purveyed on blogs and on the OSX install page failed with a gcc error on my machine (new leopard 10.5.2 install with latest xcode tools).\n\nI think shipping a binary egg that only ipython used would be best solution.\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU4NTE4OjkwMTE5NmIzYWYyOGQ1NDhhYjk3MmY5YTk0ODIwYzY2YzUyZTY3OGM=", "commit_message": "make display_status optional at runtime in setupext\n\nThis allow the check_for_readline to *not* print its indented status line\n\ncloses gh-361\ncloses gh-20", "commit_timestamp": "2011-04-12T00:42:43Z", "files": ["setup.py", "setupext/setupext.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjUwMDVmN2Q4YjczZWQ5ZGYyY2ZkMjkwMGQ4NzRjNTVkNjk4ZGUwYjY=", "commit_message": "Merge pull request #20 from takluyver/latex-complete-docstring\n\nAdd docstring for latex_matches method", "commit_timestamp": "2014-09-09T21:09:01Z", "files": ["IPython/core/completer.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo2NTI3Yjc0NjNlNGMxOGNjNjYzMzM0NTQwMDRjMGUzOTc1MGY3MzEz", "commit_message": "make display_status optional at runtime in setupext\n\nThis allow the check_for_readline to *not* print its indented status line\n\ncloses gh-361\ncloses gh-20", "commit_timestamp": "2011-04-12T00:42:43Z", "files": ["setup.py", "setupext/setupext.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzozZTliMmZlY2VlMzI5ZWEwMzE2MGZiNzg5OTRiYmFkMzgyZjE2ZTYz", "commit_message": "Merge pull request #20 from takluyver/latex-complete-docstring\n\nAdd docstring for latex_matches method", "commit_timestamp": "2014-09-09T21:09:01Z", "files": ["IPython/core/completer.py"]}], "labels": ["osx"], "created_at": "2010-05-10T09:27:53Z", "closed_at": "2011-04-12T00:44:04Z", "method": ["regex"]}
{"issue_number": 19, "title": "CrashHandler doesn't inspect modules properly", "body": "Original Launchpad bug 515652: https://bugs.launchpad.net/ipython/+bug/515652\nReported by: ellisonbg (Brian Granger).\n\nIf I make Magic an object and look at the crash reporter I see things like:\n\n```\n   global The = undefined\n   global Component = <class 'IPython.core.component.Component'>\n   global subclass = undefined\n   global that = undefined\n   instance = undefined\n   global will = undefined\n   global   = undefined\n   global to = undefined\n   global be. = undefined\n```\n\nThe variables here are not in Python code but are words from a\ndocstring in that module.\nAny idea on what is going on here?\n\nIs it by any chance being loaded at runtime and the file may have\nchanged since you started ipython?  The python inspection libraries\nhave caching bugs, I try in several places to flush those caches to\navoid this problem, but I may not be doing it right everywhere.\n\nThis is old, old, horrible code I hacked very early on in ipython's\nlife on top of something I hadn't written and that was pretty bad to\nbegin with.  It's in serious need of a test suite so it can be\nrefactored...\n\nAt least as a pointer, the machinery responsible is around here:\n\nhttp://bazaar.launchpad.net/%7Efdo.perez/ipython/trunk-dev/annotate/head%3A/IPython/core/ultratb.py#L788\n\nSo what's happening is that the list of 'unique names' being generated\nis for some reason being computed from the wrong line of code, so text\nfrom a docstring is read instead of text from the proper line of\nsource that originated the exception.\n\nSorry not to be more helpful, this is something that needs a solid\nchunk of deep work at some point, not something we can clear quickly\n(the refactoring I mean, this little bug might be fixable with a\none-line change somewhere).\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU5NDQ2Ojc4MmU1MjFiNjJhODVjYzYzMTc0ZGE5YTdiYmJmNTJhYjk0MjNjNzI=", "commit_message": "Merge pull request #19 from minrk/html\n\nAdd further HTML export", "commit_timestamp": "2012-07-20T12:58:53Z", "files": ["lexers.py", "nbconvert.py"]}, {"node_id": "MDY6Q29tbWl0MTIzNjAwMzplZGMzOGM1NDFiM2UxNWJlNjg5NjAzMDA0YTJiODEyZjFlZGI3YTIy", "commit_message": "Merge pull request #19 from takluyver/latex-complete-fixes\n\nLatex completion fixes", "commit_timestamp": "2014-09-09T20:40:51Z", "files": ["IPython/core/tests/test_completer.py", "tools/gen_latex_symbols.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo3ZjQwMzk4MTAwZDEzNmNjYTAwOTg0NmMxYjg3YWNmYzRhODZmZmVj", "commit_message": "Merge pull request #19 from takluyver/latex-complete-fixes\n\nLatex completion fixes", "commit_timestamp": "2014-09-09T20:40:51Z", "files": ["IPython/core/tests/test_completer.py", "tools/gen_latex_symbols.py"]}], "labels": ["bug"], "created_at": "2010-05-10T09:27:51Z", "closed_at": "2014-02-01T02:35:42Z", "method": ["label", "regex"]}
{"issue_number": 18, "title": "%cpaste freeze sync frontend", "body": "Original Launchpad bug 329739: https://bugs.launchpad.net/ipython/+bug/329739\nReported by: laurent-dufrechou (Laurent Dufrechou).\n\nunder linux:\n\nlaunch ipythonx then:\n\n%cpaste\n\nthen push a key.\nAll freeze\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU5NDQ2Ojg1OGU5MjQxNGQ2YzMzMjVjMWZiNDAyY2E1YWVjYWMyMGVmMTg2OTU=", "commit_message": "Merge pull request #18 from tkf/nbstripout\n\nAdd a script to clear outputs from notebooks", "commit_timestamp": "2012-07-20T12:58:17Z", "files": ["nbstripout.py"]}, {"node_id": "MDY6Q29tbWl0MjMyMzE0NTU6ZTE5ZGQ1YTIzYTlmZDdiY2E5M2QxZmM4Mjk2Y2Y4YTMwMGM0NzEzMw==", "commit_message": "Merge pull request #18 from quantopian/contents-test-reuse-3\n\nTEST: Refactor symlink tests.", "commit_timestamp": "2014-12-15T20:43:22Z", "files": ["IPython/html/services/contents/tests/test_manager.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjdiNzI2YWMyNjU5ZTFlNzgyOTliMmIzNDJhYmQ3MDM3Nzk3OTc4NTU=", "commit_message": "Merge pull request #18 from Carreau/test-nested\n\ntest nested", "commit_timestamp": "2017-02-09T20:04:34Z", "files": ["IPython/core/inputsplitter.py", "IPython/core/tests/test_inputsplitter.py"]}], "labels": [], "created_at": "2010-05-10T09:27:49Z", "closed_at": "2011-03-23T18:49:39Z", "method": ["regex"]}
{"issue_number": 17, "title": "redefining stdout in imported module breaks cmdprompt on windows", "body": "Original Launchpad bug 383554: https://bugs.launchpad.net/ipython/+bug/383554\nReported by: techtonik (anatoly techtonik).\n\nWhen import the module that redefines stdout, the colorful IPython prompt breaks (pyreadline is at 1.5), although other colors work in error messages.\n\n```\nPython 2.5.4 (r254:67916, Dec 23 2008, 15:10:54) [MSC v.1310 32 bit (Intel)]\nType \"copyright\", \"credits\" or \"license\" for more information.\n\nIPython 0.9.1 -- An enhanced Interactive Python.\n?         -> Introduction and overview of IPython's features.\n%quickref -> Quick reference.\nhelp      -> Python's own help system.\nobject?   -> Details about 'object'. ?object also works, ?? prints more.\n\nIn [1]: from yyy import xxx\n\n\u263a\u2190[0;32m\u263bIn [\u263a\u2190[1;32m\u263b2\u263a\u2190[0;32m\u263b]: \u263a\u2190[0m\u263b\n\n\u263a\u2190[0;32m\u263bIn [\u263a\u2190[1;32m\u263b3\u263a\u2190[0;32m\u263b]: \u263a\u2190[0m\u263bsome strange command\n------------------------------------------------------------\n   File \"<ipython console>\", line 1\n     some strange command\n                ^\nSyntaxError: invalid syntax\n\n\n\u263a\u2190[0;32m\u263bIn [\u263a\u2190[1;32m\u263b4\u263a\u2190[0;32m\u263b]: \u263a\u2190[0m\u263b\n```\n\n-- cut xxx.py ---\n\n``` python\nimport sys\n\nclass restdout:\n    def __init__(self, fp):\n        self.fp = fp\n\n    def write(self, s):\n        self.fp.write(s)\n\nsys.stdout = restdout(sys.stdout)\n```\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU5NDQ2OjJhZWQ5YjM2MmFjNzJmMmY2OTBhMTg1OTcwY2M2ZmNhYmRlMDRjOTY=", "commit_message": "Merge pull request #17 from jonathan-taylor/json2json\n\nI added one more converter to nbconvert, that takes .ipynb to .ipynb.\n\nThe basic class is a null-op but it traverses each cell like all the\nother converters. This allows a custom converter subclass to produce a\nnew notebook with some attributes of each cell modified in a custom\nfashion.\n\nNote: the DocInherit decorator is causing subclasses to have recursion\ndepth errors.", "commit_timestamp": "2012-06-10T00:37:48Z", "files": ["custom_converter.py", "nbconvert.py", "tests/test_nbconverter.py"]}], "labels": ["windows", "bug"], "created_at": "2010-05-10T09:27:46Z", "closed_at": "2016-07-19T23:14:08Z", "method": ["label", "regex"]}
{"issue_number": 16, "title": "%store raises exception when storing compiled regex", "body": "Original Launchpad bug 396351: https://bugs.launchpad.net/ipython/+bug/396351\nReported by: tmp-ipython (matt_ipython).\n\n<pre>\n> import re\n> compiled_re = re.compile(r'^(\\d+)')\n> %store compiled_re\n\nAttributeError: __class__\n</pre>\n\n\nThe object \"compiled_re\" does in fact get pickled and is automatically restored when ipython is next launched. But code to print out user feedback is assuming that the object being stored has an attribute \"**class**\", which a compiled regular expression does not have.\n\nI'm not sure if there is a reliable way to always get equivalent of the \"**name**\" attribute for all objects or not.  In the couple cases I tried however (including for the compiled_re object), replacing:\n\n  obj.**class**.**name**\n\nwith\n\n  type(obj).**name**\n\nworked.  I would think that doing something like this which is not necessarily 100% reliable should be inside of a try/except block.\n\nI'm new to iPython as of today.  I'm running version \"0.10.bzr.r1163\".\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU5NDQ2Ojk1ZjU2NDRiZWVkMDBkMzBkMTI1ZjVlN2E2MmM0MmU4NjEyMWViNTE=", "commit_message": "Merge pull request #16 from Carreau/unicode-support\n\nsomme support for utf-8 in latex conversion.\r\n\r\ncloses #15", "commit_timestamp": "2012-05-28T21:47:37Z", "files": ["nbconvert.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjMwZTI1OTdmMGQzZjQ4OGY5MGFiZjZlNDIxNDRlNjhiZjFhNmFiMjg=", "commit_message": "Merge pull request #16 from minrk/more-ctuple\n\ndon't validate ContainerWidget.children", "commit_timestamp": "2014-02-26T16:40:16Z", "files": ["IPython/html/widgets/widget_container.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo0Y2QwYjdkMWEyMzE5ZGE3MGU3Y2E2MDkzNGU1YWY0MDNmNmI3ZDQ0", "commit_message": "Merge pull request #16 from minrk/more-ctuple\n\ndon't validate ContainerWidget.children", "commit_timestamp": "2014-02-26T16:40:16Z", "files": ["IPython/html/widgets/widget_container.py"]}], "labels": ["bug"], "created_at": "2010-05-10T09:27:44Z", "closed_at": "2011-11-28T05:41:09Z", "method": ["label", "regex"]}
{"issue_number": 15, "title": "Implement SGE support in ipcluster", "body": "Original Launchpad bug 502794: https://bugs.launchpad.net/ipython/+bug/502794\nReported by: ellisonbg (Brian Granger).\n\nThis is needed by a number of folks.\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU5NDQ2Ojk1ZjU2NDRiZWVkMDBkMzBkMTI1ZjVlN2E2MmM0MmU4NjEyMWViNTE=", "commit_message": "Merge pull request #16 from Carreau/unicode-support\n\nsomme support for utf-8 in latex conversion.\r\n\r\ncloses #15", "commit_timestamp": "2012-05-28T21:47:37Z", "files": ["nbconvert.py"]}, {"node_id": "MDY6Q29tbWl0NjU5NDQ2OjcxMGNlMjg1ZGUyODdjOGY2MzVhYTgzYTBjNTdjNDQxYWRlZDA3MzU=", "commit_message": "Merge pull request #15 from minrk/ctuple\n\nfix validation of ContainerWidget.children", "commit_timestamp": "2014-02-26T01:06:59Z", "files": ["IPython/html/widgets/widget_container.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo2OThiODQzMjc4ODY1MGNlNmQ0MWYxN2ZmNGM2ZWJkNDk4ZjM2ZmMz", "commit_message": "Merge pull request #15 from minrk/ctuple\n\nfix validation of ContainerWidget.children", "commit_timestamp": "2014-02-26T01:06:59Z", "files": ["IPython/html/widgets/widget_container.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjY4ODRlOGIzNmRjMWUyZDU5ZTFkOGRkYjVlOTU3ODg3MjhkNzZlNmY=", "commit_message": "Merge pull request #15 from ipython/json-error-2.x\n\nSet content type in json_error to application/json", "commit_timestamp": "2015-06-22T04:47:27Z", "files": ["IPython/html/base/handlers.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjIzOTE0MWU4NzM1OTM0NzI4Yjg0ODVkMjYzOWM3MDUxYWEyZWZmODQ=", "commit_message": "Merge pull request #15 from Carreau/fixeventloop\n\nEventloops are not created if IPY_TEST_SIMPLE_PROMPT set, or not a tty.", "commit_timestamp": "2016-05-17T21:25:04Z", "files": ["IPython/terminal/ptshell.py"]}], "labels": [], "created_at": "2010-05-10T09:27:42Z", "closed_at": "2011-03-23T06:58:49Z", "method": ["regex"]}
{"issue_number": 14, "title": "Decide when to use Term and when to print", "body": "Original Launchpad bug 514613: https://bugs.launchpad.net/ipython/+bug/514613\nReported by: ellisonbg (Brian Granger).\n\nCurrently in IPython.core we sometimes use IPython.utils.io.Term to print and sometimes we just do print.  The advantage of using Term is that it will properly handle colors on Windows.  But we don't use it everywhere.  Really, we need to come up with a uniform way of handling printing to stdout/stderr in IPython.  This is particularly relevant as we refactor the core to be used without a terminal.\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU5NDQ2Ojk3YTZhNTk4NWRhNTI2NGIzZTY5NzlmNzkzODRlYWNmYmM1Nzk3NGM=", "commit_message": "Merge pull request #14 from minrk/cast-tuple\n\nCast from list in Tuple traitlet", "commit_timestamp": "2014-02-25T21:53:05Z", "files": ["IPython/utils/tests/test_traitlets.py", "IPython/utils/traitlets.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzowNTYxYTczZTVmYWQzMTZjMTBkNmFjNjA2ZmZkNDhmZjBhZjk0Y2Fl", "commit_message": "Merge pull request #14 from minrk/cast-tuple\n\nCast from list in Tuple traitlet", "commit_timestamp": "2014-02-25T21:53:05Z", "files": ["IPython/utils/tests/test_traitlets.py", "IPython/utils/traitlets.py"]}, {"node_id": "MDY6Q29tbWl0MjM0NDA3MzpjNTMzOTIxYmYyNDk1M2VmNTI2NWZjN2QzMzdhODg5YmZkMGQ1MWFi", "commit_message": "Remove old unused class\n\nIt seem unused in our codebase. The only place where it is used in\ngithub import from genutils which don't exist in IPython.\n\nCloses ipython/ipython#14", "commit_timestamp": "2015-06-09T23:58:51Z", "files": ["IPython/core/profiledir.py", "IPython/utils/io.py"]}, {"node_id": "MDY6Q29tbWl0MjM0NDA3MzplOGE5YWNjMGQxMTViYmI1NWIyNjI1MDgwY2VmM2NhYzJjY2I2YThk", "commit_message": "Remove old unused class\n\nIt seem unused in our codebase. The only place where it is used in\ngithub import from genutils which don't exist in IPython.\n\nCloses ipython/ipython#14", "commit_timestamp": "2015-06-10T00:01:46Z", "files": ["IPython/core/profiledir.py", "IPython/utils/io.py"]}, {"node_id": "MDY6Q29tbWl0MjM0NDA3Mzo1ZGU5Mjc2YmFlYjI4NmM3ZDAxNDVlMWQ3ZTM5NzI5YjkwMjliMDk5", "commit_message": "Remove old unused class\n\nIt seem unused in our codebase. The only place where it is used in\ngithub import from genutils which don't exist in IPython.\n\nCloses ipython/ipython#14", "commit_timestamp": "2015-06-10T00:04:33Z", "files": ["IPython/core/profiledir.py", "IPython/utils/io.py"]}, {"node_id": "MDY6Q29tbWl0MjM0NDA3MzplNmI0MDM0ZmJjNGFjODk0ZmNlYmFiNzUyODZkNjZjMWJjZTFmYjM2", "commit_message": "Remove old unused class\n\nIt seem unused in our codebase. The only place where it is used in\ngithub import from genutils which don't exist in IPython.\n\nCloses ipython/ipython#14", "commit_timestamp": "2015-06-10T00:12:08Z", "files": ["IPython/core/magics/execution.py", "IPython/core/profiledir.py", "IPython/utils/io.py"]}, {"node_id": "MDY6Q29tbWl0MjM0NDA3MzphMzNhMDYzMmMwMGI2MDQ2ODNhYWI4NDU0OTgzNzE2ODIzNTUwNDA3", "commit_message": "Remove old unused class\n\nIt seem unused in our codebase. The only place where it is used in\ngithub import from genutils which don't exist in IPython.\n\nCloses ipython/ipython#14", "commit_timestamp": "2015-06-10T00:13:48Z", "files": ["IPython/core/magics/execution.py", "IPython/core/profiledir.py", "IPython/utils/io.py"]}], "labels": [], "created_at": "2010-05-10T09:27:38Z", "closed_at": "2015-06-10T00:42:54Z", "method": ["regex"]}
{"issue_number": 13, "title": "Improve robustness and debuggability of test suite", "body": "Original Launchpad bug 508971: https://bugs.launchpad.net/ipython/+bug/508971\nReported by: fdo.perez (Fernando Perez).\n\nThis bug is a follow-up of:\n\nhttps://bugs.launchpad.net/ipython/+bug/362142\n\nwhich is now closed and split into several more specific reports.  See the above for extra background.\n\nThe main points brought up by Brian:\n\nOur test suite is still quite fragile and difficult to debug when things go wrong (case in point, your recent bug report about the history being dumped to the screen).  If we can get the dpendency issues worked out (to isolate twisted and nose) I think most of this fragility is localized to the nose extension that handles the one time IPython shell.  I think our test infrastructure has to be completely independent of our main IPython code (the testing infrastucture should never do \"from IPython import ...\").  \n\nAt some point, we figured out how we could enable the writing of IPython doctests without the nose extension (do you remember how this can be done?).  As I remember we talked about using this idea along with pexpect to isolate the running IPython to another process.\n\nJorgen noted:\n\nI think using pexpect requires some research if you want to keep the the\ntests running on windows.\n\nBrian's reply:\nYes, this is a huge problem - pexpect doesn't work on Windows...\n\nWe should check with the Sage folks, I know at one point, they were working on a windows port of pexpect called wexpect.\n\nTwisted does have many of the same capabilities that pexpect has for working with external processes.  That might be our best bet.\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU4NTE4OjQzNzBhMTU1Y2NlNjM5NzUzZmMyZTgyNDI2ZTM2Yzg0MWE5N2QyZDU=", "commit_message": "Merge pull request #13 from ipython/next_url\n\nrestrict login redirect to notebook app\n\ncloses #8314", "commit_timestamp": "2015-06-22T00:54:37Z", "files": ["IPython/html/auth/login.py"]}], "labels": [], "created_at": "2010-05-10T09:27:35Z", "closed_at": "2012-04-15T08:11:30Z", "method": ["regex"]}
{"issue_number": 12, "title": "Better dependency handling for test suite", "body": "Original Launchpad bug 508970: https://bugs.launchpad.net/ipython/+bug/508970\nReported by: fdo.perez (Fernando Perez).\n\nThis bug is a follow-up of:\n\nhttps://bugs.launchpad.net/ipython/+bug/362142\n\nwhich is now closed and split into several more specific reports.  See the above for extra background.\n\nThe main point of this ticket is best summarized by Brian here:\n\nIt is still super easy for a single developer to break the test suite by making their new module depend on something (twisted, wx, etc.). For that dev, they always have the dep. installed, so they never see the failure, so all their new tests will run fine. This is particularly insidious (still) for twisted because iptest does not have a clean way of declaring test dependencies and run methods for individual files. \n\nWe are trying to do this by subpackage, but that is quite inflexible - what if only a single file in a subpackage depends on twisted - then the rest of the subpackage can't be tested using nose.\n\nWe need a simple, declarative API for \"declaring\" the testing related information on a per subpackage or per module basis.  This includes:\n- Dependencies\n- Method of running the test (nose+iptest/trial)\n- Thing like \"test this subpackage this way, but these two modules are different\"  We run into this with frontend, which uses twisted in a few places, but not everywhere.\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU5NDQ2OmYyMjNlNjkwYjM5ZDRhNjZjZDk2MDZlMmIxNmZkYjRjMjgxNjU2Zjg=", "commit_message": "Merge pull request #12 from fperez/latex-conv\n\nLatex converter, lots of fixes and some refactoring", "commit_timestamp": "2012-05-15T00:12:34Z", "files": ["nbconvert.py"]}, {"node_id": "MDY6Q29tbWl0NzUzNzY4OmJkN2Y2NDc0YTE0NDkyNjFkY2E2ZDVjYjdmMTBlYzc4YjU0NDFkZGM=", "commit_message": "Merge pull request #12 from ivanov/js-test-refact\n\nmake tests actually run", "commit_timestamp": "2014-02-07T22:49:47Z", "files": ["IPython/testing/iptestcontroller.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzpkMWVmNDAxM2Y4ZGQxZWU0ODUyNDlkNjE4NGRmNWIyNDE4ODE0ZjYy", "commit_message": "Merge pull request #12 from ivanov/js-test-refact\n\nmake tests actually run", "commit_timestamp": "2014-02-07T22:49:47Z", "files": ["IPython/testing/iptestcontroller.py"]}], "labels": [], "created_at": "2010-05-10T09:27:34Z", "closed_at": "2014-06-15T17:00:13Z", "method": ["regex"]}
{"issue_number": 11, "title": "Create a daily build PPA for ipython", "body": "Original Launchpad bug 417969: https://bugs.launchpad.net/ipython/+bug/417969\nReported by: fdo.perez (Fernando Perez).\n\nOnce our trunk stabilizes some, we should offer a daily PPA to make it easy for interested users to follow our tree.\n\nSome useful links and references:\n\nhttps://code.edge.launchpad.net/~fta/+junk/ppa-confs\nhttps://code.edge.launchpad.net/~fta/+junk/ppa-scripts\nhttps://wiki.ubuntu.com/DailyBuilds\nhttp://castrojo.wordpress.com/2009/08/21/making-daily-builds/\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU4NTE4OjRjMTQxYWYzODJkMDBmNmU0OWRkZWU3N2NhNmUxOTFkNjg5ODg3MWU=", "commit_message": "Merge pull request #11 from minrk/widgets\n\nWidget review", "commit_timestamp": "2014-01-28T17:27:43Z", "files": ["IPython/core/display.py", "IPython/core/displayhook.py", "IPython/html/widgets/widget.py", "IPython/html/widgets/widget_button.py", "IPython/html/widgets/widget_string.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzoxZDM0NzBlNWNhYWVjMGY0Njk4ZGQwOGFhYjFlYzc4MTZlY2JlNGMz", "commit_message": "Merge pull request #11 from minrk/widgets\n\nWidget review", "commit_timestamp": "2014-01-28T17:27:43Z", "files": ["IPython/core/display.py", "IPython/core/displayhook.py", "IPython/html/widgets/widget.py", "IPython/html/widgets/widget_button.py", "IPython/html/widgets/widget_string.py"]}], "labels": [], "created_at": "2010-05-10T09:27:32Z", "closed_at": "2010-10-26T19:54:56Z", "method": ["regex"]}
{"issue_number": 10, "title": "Add Robert Kern's run_examples magic", "body": "Original Launchpad bug 409633: https://bugs.launchpad.net/ipython/+bug/409633\nReported by: fdo.perez (Fernando Perez).\n\nFrom a discussion on the scipy-dev list, starting here:\n\nhttp://mail.scipy.org/pipermail/scipy-dev/2009-August/012486.html\n\nRobert went ahead and implemented it as a magic using the new demo improvements:\n\nhttp://www.enthought.com/~rkern/cgi-bin/hgwebdir.cgi/kernmagic/file/c18f492e9688/kernmagic/mymagics.py\n\nWe should fold these into ipython itself.\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU5NDQ2OmJjOGNkZThjNjE5MTk5MzVhNjQ4ZWU3ZjkzMTk4ODMyZTg3NmU1YzU=", "commit_message": "Merge pull request #10 from slojo404/rst2ipynb_update\n\nadding a basic test and moving tutorial.rst test file to tests directory", "commit_timestamp": "2012-04-28T20:39:11Z", "files": ["tests/test_rst2ipynb.py"]}], "labels": [], "created_at": "2010-05-10T09:26:30Z", "closed_at": "2014-11-11T20:05:27Z", "method": ["regex"]}
{"issue_number": 9, "title": "Getting \"DeadReferenceError: Calling Stale Broker\" after ipcontroller restart", "body": "Original Launchpad bug 308253: https://bugs.launchpad.net/ipython/+bug/308253\nReported by: vvatsa (Vishal Vatsa).\n\nNot Sure that is a bug or an expected behavior.\n\nI am starting the ipcontoller such that it reuses the ipcontroller-tc.furl between restarts.\nAfter the restart, if I invoke a DeadReferenceError with the following traceback:\nI am using the blocking TaskClient from an ipython shell.\n## In [8]: tc.spin()\n\nDeadReferenceError                        Traceback (most recent call last)\n\n/home/vishal/<ipython console> in <module>()\n\n/usr/lib/python2.5/site-packages/IPython/kernel/taskclient.pyc in spin(self)\n    119         scheduler is idle for some reason.\n    120         \"\"\"\n--> 121         return blockingCallFromThread(self.task_controller.spin)\n    122\n    123     def queue_status(self, verbose=False):\n\n/usr/lib/python2.5/site-packages/IPython/kernel/twistedutil.pyc in blockingCallFromThread(f, _a, *_kw)\n     67         @raise: any error raised during the callback chain.\n     68         \"\"\"\n---> 69         return twisted.internet.threads.blockingCallFromThread(reactor, f, _a, *_kw)\n     70\n     71 else:\n\n/usr/lib/python2.5/site-packages/twisted/internet/threads.pyc in blockingCallFromThread(reactor, f, _a, *_kw)\n     81     result = queue.get()\n     82     if isinstance(result, failure.Failure):\n---> 83         result.raiseException()\n     84     return result\n     85\n\n/usr/lib/python2.5/site-packages/twisted/python/failure.pyc in raiseException(self)\n    317         information if available.\n    318         \"\"\"\n--> 319         raise self.type, self.value, self.tb\n    320\n    321\n\nDeadReferenceError: Calling Stale Broker\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU5NDQ2OjFkNmUzZWUzMmEwYTNhMGI3ZmFmZjdhY2YyOGJlYTNlMzYzZDU1ZjA=", "commit_message": "Merge pull request #9 from ivanov/rst2ipynb_update\n\nyeah wow that seems a lot better", "commit_timestamp": "2012-03-21T02:31:24Z", "files": ["rst2ipynb.py", "rst2ipynblib/__init__.py"]}, {"node_id": "MDY6Q29tbWl0NjU5NDQ2OmE4YWYzM2ExZjRmOTA5OTM0OThjOTdiZTUzNTc2MTZmMDM0Y2RlMGM=", "commit_message": "Merge pull request #9 from jdfreder/master\n\nSphinx Latex Jinja Template", "commit_timestamp": "2013-02-23T22:14:06Z", "files": ["converters/base.py", "converters/jinja_filters.py", "converters/latex_transformer.py", "converters/sphinx_transformer.py", "converters/template.py", "converters/utils.py", "nbconvert.py", "nbconvert2.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmY3ZjA3MGRkNThkMTA3MjRkYTA4YzQ5OGM2Yzc2YWFkNzNhNTNlNTk=", "commit_message": "Merge pull request #9 from ivanov/testfunc\n\nadded a doc string example", "commit_timestamp": "2013-12-03T23:36:22Z", "files": ["IPython/testing/__init__.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzplYTZiMzBjM2M2MTk2Mzk3MTk2NTNlNGMxMWMzZThlNWUzMjFjMTY5", "commit_message": "Merge pull request #9 from ivanov/testfunc\n\nadded a doc string example", "commit_timestamp": "2013-12-03T23:36:22Z", "files": ["IPython/testing/__init__.py"]}], "labels": ["bug"], "created_at": "2010-05-10T09:26:25Z", "closed_at": "2011-03-24T19:49:01Z", "method": ["label", "regex"]}
{"issue_number": 7, "title": "Update the changes doc to reflect the kernel config work", "body": "Original Launchpad bug 502799: https://bugs.launchpad.net/ipython/+bug/502799\nReported by: ellisonbg (Brian Granger).\n\nIPython.kernel was refactored in the Fall of 2009 to use the new config system.  We need to write the changes for this merge in our Sphinx docs.\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU5NDQ2OjY2N2M2YmI1ZDJhNWJlYmJhOWJmNjVhMGQ4ZDljNTFjM2FkOWZjMTU=", "commit_message": "closes #7", "commit_timestamp": "2012-03-19T22:44:24Z", "files": ["nbconvert.py"]}, {"node_id": "MDY6Q29tbWl0MTczNDM4MzphNzhhMjNiMmEzM2U4MGVlNTNiNjUyZjQyNGViZTM4NmNlN2NkOGY0", "commit_message": "Merge pull request #7 from jasongrout/backbone-flat\n\nJason's improvements", "commit_timestamp": "2014-01-02T01:10:07Z", "files": ["IPython/html/widgets/widget.py", "IPython/html/widgets/widget_button.py", "IPython/html/widgets/widget_container.py", "IPython/html/widgets/widget_multicontainer.py", "IPython/utils/traitlets.py"]}], "labels": ["documentation"], "created_at": "2010-05-10T09:26:17Z", "closed_at": "2011-03-31T06:27:08Z", "method": ["regex"]}
{"issue_number": 6, "title": "Update the Sphinx docs for the new ipcluster", "body": "Original Launchpad bug 502798: https://bugs.launchpad.net/ipython/+bug/502798\nReported by: ellisonbg (Brian Granger).\n\nThe ipcluster program has been completely refactored to use the new config system.  The Sphinx docs for ipcluster need to be updated to reflect this.\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU4NTE4OjRjYjFmOWJkZmZmZDMzYmRkZmU4ZGE5NGFlOGM1Mjg4YzQwZjEzMTk=", "commit_message": "Merge pull request #6 from ivanov/backport-add\n\nsave a Popen call", "commit_timestamp": "2013-08-12T17:47:10Z", "files": ["tools/backport_pr.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmRjMWQ1YWFkMmFiMGI3ODZhNWFlNDdlYjQwNGM2MDEwNDljYjIwYTM=", "commit_message": "Merge pull request #6 from ivanov/parametric-begone\n\nremove unused imports", "commit_timestamp": "2013-09-04T16:13:52Z", "files": ["IPython/core/tests/test_prefilter.py", "IPython/external/mathjax.py", "IPython/kernel/tests/test_launcher.py", "IPython/nbconvert/filters/tests/test_strings.py", "IPython/parallel/tests/test_magics.py", "IPython/parallel/tests/test_view.py", "IPython/testing/ipunittest.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzowNWM5Zjc0MjVhNGQ1MWRlYjY4NmY4OTYzN2E2Mzc2MTcxMjU5MzM5", "commit_message": "Merge pull request #6 from ivanov/backport-add\n\nsave a Popen call", "commit_timestamp": "2013-08-12T17:47:10Z", "files": ["tools/backport_pr.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzphYzFkMDA1YWJjZGEzMDRjZGY2NDc5MWI5ZjFmMGIyMWEwNjg0NmVk", "commit_message": "Merge pull request #6 from ivanov/parametric-begone\n\nremove unused imports", "commit_timestamp": "2013-09-04T16:13:52Z", "files": ["IPython/core/tests/test_prefilter.py", "IPython/external/mathjax.py", "IPython/kernel/tests/test_launcher.py", "IPython/nbconvert/filters/tests/test_strings.py", "IPython/parallel/tests/test_magics.py", "IPython/parallel/tests/test_view.py", "IPython/testing/ipunittest.py"]}], "labels": ["documentation"], "created_at": "2010-05-10T09:26:13Z", "closed_at": "2011-03-24T19:50:14Z", "method": ["regex"]}
{"issue_number": 5, "title": "ls command not supported in ipythonx wx frontend", "body": "Original Launchpad bug 345611: https://bugs.launchpad.net/ipython/+bug/345611\nReported by: laurent-dufrechou (Laurent Dufrechou).\n\nrelated to ipythonx (wx frontend) pre v0.10\n\n!dir works well\nls don't work while it works in classical ipython console\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU5NDQ2OjE2MTIzMTQ5Y2I2NTM4Y2ZjNjI5NjkyY2U1NjQ1N2I2MDJjMTBjODM=", "commit_message": "Merge pull request #5 from ivanov/master\n\nadded stream cell type", "commit_timestamp": "2012-03-14T18:13:55Z", "files": ["nbconvert.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4Ojg2ODM2OTE5MjI2NTExODE1MGFlZGMwNmE4ZmMwYWI3MGFlNzZjYzM=", "commit_message": "Merge pull request #5 from ivanov/existing_ip\n\nremove unused imports", "commit_timestamp": "2013-08-10T16:22:29Z", "files": ["IPython/consoleapp.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo1MjUzNWE4ZmEzMzc5ZTM1ODAzMGM3NjgyNjUyMTRlYzIyZjdmOGQy", "commit_message": "Merge pull request #5 from ivanov/existing_ip\n\nremove unused imports", "commit_timestamp": "2013-08-10T16:22:29Z", "files": ["IPython/consoleapp.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjA0N2U0N2U5NmM3OTIxZTAyMGQ2OWJmNWYxN2RmMWY4YmUzZjk0YTc=", "commit_message": "Merge pull request #5 from Carreau/9551\n\nRemove forgotten print statements", "commit_timestamp": "2016-06-07T20:14:20Z", "files": ["IPython/core/interactiveshell.py"]}], "labels": [], "created_at": "2010-05-10T09:26:11Z", "closed_at": "2010-12-09T23:39:37Z", "method": ["regex"]}
{"issue_number": 4, "title": "wx frontend don't display well commands output", "body": "Original Launchpad bug 345610: https://bugs.launchpad.net/ipython/+bug/345610\nReported by: laurent-dufrechou (Laurent Dufrechou).\n\nThere must be locale error for commands taht goes throught process under VISTA SP1 french:\n\n!dir ->\n\n Le volume dans le lecteur C n'a pas de nom.\n Le num\u201aro de s\u201arie du volume est 1860-8F8E\n\n R\u201apertoire de C:\\Users\\ldufrechou\\Desktop\\Ipython-dev\\test\\ipython-sync-frontend-retweaks\\IPython\\frontend\\wx\n\n19/03/2009  21:57    <REP>          .\n19/03/2009  21:57    <REP>          ..\n19/03/2009  21:55            20\u00ff691 console_widget.py\n19/03/2009  21:57            15\u00ff647 console_widget.pyc\n19/03/2009  21:56             5\u00ff754 ipythonx.py\n19/03/2009  21:55            20\u00ff476 wx_frontend.py\n19/03/2009  21:57            18\u00ff174 wx_frontend.pyc\n19/03/2009  21:55                 0 **init**.py\n               6 fichier(s)           80\u00ff742 octets\n               2 R\u201ap(s)   1\u00ff123\u00ff250\u00ff176 octets libres\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU4NzYwOmRkMWM1ZmIxYzI2MDI3ZjRkYTgxOTE1YTI5MGQwMjJlNTY1OTA5NDg=", "commit_message": "Merge pull request #4 from ivanov/reset-stdinless\n\nRelevant docstring changes.", "commit_timestamp": "2012-01-19T22:48:49Z", "files": ["IPython/core/history.py", "IPython/core/magic.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjlhM2NhYmUyY2Y2N2U3NTNhMDA5Y2M4N2Y0OTk3NzEwMDM1YzBhMTI=", "commit_message": "Merge pull request #4 from fperez/nbparallel\n\nNbparallel - add tests for profile listing.", "commit_timestamp": "2012-03-09T06:15:50Z", "files": ["IPython/core/tests/test_profile.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjA0NDc1NjcxYTQzMzY5ZGVhZTM5ZGY3ZTAyNmY5NGViMTAyMTlkMWI=", "commit_message": "Merge pull request #4 from minrk/pr/3816\n\nFinish up PR #3816", "commit_timestamp": "2013-07-29T19:50:02Z", "files": ["IPython/html/notebookapp.py", "IPython/terminal/ipapp.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjFjMTExN2RhMzg5ZWRjNWVmMTE3NjM3ZTU0Y2MxZTYzYWQwMjQ3MTA=", "commit_message": "Merge pull request #4 from ivanov/posix_path\n\nadd missing import, properly use os.path.join", "commit_timestamp": "2013-08-04T01:23:30Z", "files": ["IPython/nbconvert/filters/tests/test_strings.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzplMmFlZWVhYTA3MDQ3Y2IzYmNlYjU1YzA5ZjdjMGIxNzE1NjhjZTEx", "commit_message": "Merge pull request #4 from ivanov/reset-stdinless\n\nRelevant docstring changes.", "commit_timestamp": "2012-01-19T22:48:49Z", "files": ["IPython/core/history.py", "IPython/core/magic.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo4ZjgwM2I5MmEwMDlkMjdhOGViNTI1MGFmYzU3YWUzNmQ3OTkxNzZi", "commit_message": "Merge pull request #4 from fperez/nbparallel\n\nNbparallel - add tests for profile listing.", "commit_timestamp": "2012-03-09T06:15:50Z", "files": ["IPython/core/tests/test_profile.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo0OWUyOGI5NTYzYzM1MjhmNjhkN2E0YjhmN2ExMjAzZjFhMzczMGI3", "commit_message": "Merge pull request #4 from minrk/pr/3816\n\nFinish up PR #3816", "commit_timestamp": "2013-07-29T19:50:02Z", "files": ["IPython/html/notebookapp.py", "IPython/terminal/ipapp.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo2MmNkMWI4Y2IxNWE1MGY4MGFkYTBjNTE1ZjljMmJiYTViZjE3Zjll", "commit_message": "Merge pull request #4 from ivanov/posix_path\n\nadd missing import, properly use os.path.join", "commit_timestamp": "2013-08-04T01:23:30Z", "files": ["IPython/nbconvert/filters/tests/test_strings.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmIyOGIxYzY2NWE0MmM4NTlmODkyYWY3ODFlNDIwYTE3OWM3MWNhMGU=", "commit_message": "Merge pull request #4 from Carreau/9551\n\nSome docs", "commit_timestamp": "2016-06-07T19:25:38Z", "files": ["IPython/core/interactiveshell.py", "IPython/core/oinspect.py"]}], "labels": [], "created_at": "2010-05-10T09:26:09Z", "closed_at": "2010-12-09T23:40:06Z", "method": ["regex"]}
{"issue_number": 3, "title": "Implement PBS support in ipcluster", "body": "Original Launchpad bug 502793: https://bugs.launchpad.net/ipython/+bug/502793\nReported by: ellisonbg (Brian Granger).\n\nIt is currently broken.\n", "commits": [{"node_id": "MDY6Q29tbWl0MTIzNjAwMzo4NTM4MmExZTJmZGUxZTE0OTM0Njg4ODg3NzA1ZmM4YTIzZjM4M2Fi", "commit_message": "Merge pull request #3 from takluyver/refactor-zmqterminal\n\nRefactor zmqterminal", "commit_timestamp": "2011-05-25T00:02:42Z", "files": ["IPython/frontend/terminal/completer.py", "IPython/frontend/terminal/kernelmanager.py", "IPython/frontend/zmqterminal/__init__.py", "IPython/frontend/zmqterminal/completer.py", "IPython/frontend/zmqterminal/frontend.py", "IPython/zmq/blockingkernelmanager.py", "setupbase.py"]}, {"node_id": "MDY6Q29tbWl0NjU5NDQ2OjExYTQ2YjU5YmNjYzhkY2E5MjNjMGE4ZTg4NTMwMTgxNjRmYWIxN2Q=", "commit_message": "Merge pull request #3 from slojo404/rst2ipynb", "commit_timestamp": "2012-03-13T18:02:49Z", "files": ["rst2ipynb.py", "rst2ipynblib/__init__.py"]}, {"node_id": "MDY6Q29tbWl0NjU5NDQ2Ojc0Nzc1YjRjZTM2ZGQ4MTJiOGM5OTY1YTQ0MWI4ODU5ODVjYjNhYWQ=", "commit_message": "Merge pull request #3 from stefanv/fix_output_path\n\nFix output path to write to current directory instead of source dir.", "commit_timestamp": "2012-05-01T00:14:02Z", "files": ["nbconvert.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjNiMTExMmMzNDNiODI5YWE4N2UyYzQ1YTFhZmViYWVkZDY1ZmRhNzk=", "commit_message": "Merge pull request #3 from ivanov/noshellpdf\n\nwait for subprocess to finish", "commit_timestamp": "2013-08-02T21:34:39Z", "files": ["IPython/nbconvert/post_processors/pdf.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjU0OGQyZWNiYWRmYmJjNWYwYmNjYThkMzg2Nzc0NzZjOGUyZDk5ZTc=", "commit_message": "Merge pull request #3 from minrk/pr/3951\n\nUpdate PR #3951", "commit_timestamp": "2013-08-08T16:50:02Z", "files": ["IPython/nbconvert/filters/latex.py", "IPython/nbconvert/filters/tests/test_latex.py"]}, {"node_id": "MDY6Q29tbWl0MTU4MDg3MjA6YjExZjU1MzAxNjRiNjQzYTEyZTRkODA2ZDE3ODAxOTQ2ZTdiMjVmZg==", "commit_message": "Merge pull request #3 from jdfreder/jason-immediate-widget-comm\n\nCheck for null session in _publish_msg and _session_default", "commit_timestamp": "2014-07-22T15:08:49Z", "files": ["IPython/kernel/comm/comm.py"]}, {"node_id": "MDY6Q29tbWl0MjE3NzcxMzk6MDEyNjI5ZWNkZjkyYWIwODI4NDQyNmIzZGI1OTUyYjUwYWE5NjMzNQ==", "commit_message": "Merge pull request #3 from KesterTong/gdrive\n\nAdds a Google Drive base Content Manager, and moves \"load_notebook\" to content manager", "commit_timestamp": "2014-07-28T22:15:39Z", "files": ["IPython/html/base/handlers.py", "IPython/html/services/notebooks/clientsidenbmanager.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo4NGMzOGZkNWQ3YTNkNjVlMTU5NWIzNWI4NTA4ZmVlMDY0Njg1Yzc0", "commit_message": "Merge pull request #3 from ivanov/noshellpdf\n\nwait for subprocess to finish", "commit_timestamp": "2013-08-02T21:34:39Z", "files": ["IPython/nbconvert/post_processors/pdf.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzoxMWYwODEwYTdjZTU0YjZlOThiMjFlNzY2Y2RhNmY4NDU4ZTI5MzBj", "commit_message": "Merge pull request #3 from minrk/pr/3951\n\nUpdate PR #3951", "commit_timestamp": "2013-08-08T16:50:02Z", "files": ["IPython/nbconvert/filters/latex.py", "IPython/nbconvert/filters/tests/test_latex.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4Ojg3YjM4OWU2NzIxNWZmZTUzNGZhNmUzN2E5MGNhOGRjZDgwMmFjYzg=", "commit_message": "Merge pull request #3 from minrk/in-process-weird\n\nremove problematic in-process kernel behavior", "commit_timestamp": "2015-03-21T03:55:54Z", "files": ["IPython/kernel/inprocess/ipkernel.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjFkNjJlMWYzYzY3ZGQxNmZmNTYyYjQ5ODRhODU3MWZiYmVkOTgwZjU=", "commit_message": "Merge pull request #3 from lgautier/patch-4\n\nUpdate test_completer.py", "commit_timestamp": "2018-12-01T22:59:15Z", "files": ["IPython/core/tests/test_completer.py"]}], "labels": [], "created_at": "2010-05-10T09:26:07Z", "closed_at": "2011-03-23T06:57:39Z", "method": ["regex"]}
{"issue_number": 2, "title": "Fix the copyright statement in source code files to be accurate", "body": "Original Launchpad bug 502789: https://bugs.launchpad.net/ipython/+bug/502789\nReported by: ellisonbg (Brian Granger).\n\nThe copyright statements in some source files are inaccurate and need to be updated.\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU4NTE4OmM4MjY0OWVhMTcyYWE3N2U5OWYxMGI2YWMzZjY4MWY2YWZkZGRiMzg=", "commit_message": "update copyright to 2011/20xx-2011\n\nCloses #1033 (rebased to prevent recursive merge). Closes #2.\n\n\t459  *.py files in :\n\t 39  empty files\n\t176  files without copyright\n\t 36  have copyright but don't cite the dev team\n\t208  have copyright and cite the dev team\n\t-----------------------------------------\n\t  0  not up to date (cite dev team but not right year)\n\n\t  FYI, list of files that don't have copyright (and are not empty..)\n\n [\n 'IPython/config/profile/cluster/ipython_config.py',\n 'IPython/config/profile/math/ipython_config.py',\n 'IPython/config/profile/pylab/ipython_config.py',\n 'IPython/config/profile/pysh/ipython_config.py',\n 'IPython/config/profile/python3/ipython_config.py',\n 'IPython/config/profile/sympy/ipython_config.py',\n 'IPython/core/shadowns.py',\n 'IPython/core/tests/refbug.py',\n 'IPython/core/tests/simpleerr.py',\n 'IPython/core/tests/tclass.py',\n 'IPython/core/tests/test_application.py',\n 'IPython/core/tests/test_autocall.py',\n 'IPython/core/tests/test_completer.py',\n 'IPython/core/tests/test_fakemodule.py',\n 'IPython/core/tests/test_formatters.py',\n 'IPython/core/tests/test_handlers.py',\n 'IPython/core/tests/test_history.py',\n 'IPython/core/tests/test_imports.py',\n 'IPython/core/tests/test_iplib.py',\n 'IPython/core/tests/test_logger.py',\n 'IPython/core/tests/test_magic.py',\n 'IPython/core/tests/test_plugin.py',\n 'IPython/core/tests/test_prefilter.py',\n 'IPython/core/tests/test_profile.py',\n 'IPython/core/tests/test_run.py',\n 'IPython/core/tests/test_splitinput.py',\n 'IPython/deathrow/astyle.py',\n 'IPython/deathrow/dtutils.py',\n 'IPython/deathrow/Gnuplot2.py',\n 'IPython/deathrow/GnuplotInteractive.py',\n 'IPython/deathrow/GnuplotRuntime.py',\n 'IPython/deathrow/gui/wx/ipshell_nonblocking.py',\n 'IPython/deathrow/gui/wx/ipython_history.py',\n 'IPython/deathrow/gui/wx/thread_ex.py',\n 'IPython/deathrow/ibrowse.py',\n 'IPython/deathrow/igrid.py',\n 'IPython/deathrow/ipipe.py',\n 'IPython/deathrow/ipy_defaults.py',\n 'IPython/deathrow/ipy_kitcfg.py',\n 'IPython/deathrow/ipy_legacy.py',\n 'IPython/deathrow/ipy_p4.py',\n 'IPython/deathrow/ipy_profile_none.py',\n 'IPython/deathrow/ipy_profile_numpy.py',\n 'IPython/deathrow/ipy_profile_scipy.py',\n 'IPython/deathrow/ipy_profile_sh.py',\n 'IPython/deathrow/ipy_traits_completer.py',\n 'IPython/deathrow/ipy_vimserver.py',\n 'IPython/deathrow/numeric_formats.py',\n 'IPython/deathrow/oldfrontend/process/__init__.py',\n 'IPython/deathrow/oldfrontend/wx/ipythonx.py',\n 'IPython/deathrow/scitedirector.py',\n 'IPython/deathrow/tests/test_prefilter.py',\n 'IPython/deathrow/twshell.py',\n 'IPython/extensions/__init__.py',\n 'IPython/extensions/autoreload.py',\n 'IPython/extensions/storemagic.py',\n 'IPython/extensions/tests/test_autoreload.py',\n 'IPython/external/__init__.py',\n 'IPython/external/argparse/__init__.py',\n 'IPython/external/decorator/__init__.py',\n 'IPython/external/decorators/__init__.py',\n 'IPython/external/decorators/_decorators.py',\n 'IPython/external/decorators/_numpy_testing_noseclasses.py',\n 'IPython/external/decorators/_numpy_testing_utils.py',\n 'IPython/external/guid/__init__.py',\n 'IPython/external/Itpl/__init__.py',\n 'IPython/external/mglob/__init__.py',\n 'IPython/external/mglob/_mglob.py',\n 'IPython/external/path/__init__.py',\n 'IPython/external/path/_path.py',\n 'IPython/external/pexpect/__init__.py',\n 'IPython/external/pyparsing/__init__.py',\n 'IPython/external/qt.py',\n 'IPython/external/qt_for_kernel.py',\n 'IPython/external/simplegeneric/__init__.py',\n 'IPython/external/simplegeneric/_simplegeneric.py',\n 'IPython/frontend/html/notebook/__init__.py',\n 'IPython/frontend/html/notebook/tests/test_kernelsession.py',\n 'IPython/frontend/qt/base_frontend_mixin.py',\n 'IPython/frontend/qt/console/ansi_code_processor.py',\n 'IPython/frontend/qt/console/bracket_matcher.py',\n 'IPython/frontend/qt/console/call_tip_widget.py',\n 'IPython/frontend/qt/console/completion_lexer.py',\n 'IPython/frontend/qt/console/completion_widget.py',\n 'IPython/frontend/qt/console/console_widget.py',\n 'IPython/frontend/qt/console/history_console_widget.py',\n 'IPython/frontend/qt/console/ipython_widget.py',\n 'IPython/frontend/qt/console/kill_ring.py',\n 'IPython/frontend/qt/console/mainwindow.py',\n 'IPython/frontend/qt/console/pygments_highlighter.py',\n 'IPython/frontend/qt/console/qtconsoleapp.py',\n 'IPython/frontend/qt/console/rich_ipython_widget.py',\n 'IPython/frontend/qt/console/styles.py',\n 'IPython/frontend/qt/console/tests/test_ansi_code_processor.py',\n 'IPython/frontend/qt/console/tests/test_completion_lexer.py',\n 'IPython/frontend/qt/console/tests/test_kill_ring.py',\n 'IPython/frontend/qt/kernelmanager.py',\n 'IPython/frontend/qt/rich_text.py',\n 'IPython/frontend/qt/svg.py',\n 'IPython/frontend/qt/util.py',\n 'IPython/kernel/__init__.py',\n 'IPython/lib/clipboard.py',\n 'IPython/lib/display.py',\n 'IPython/lib/irunner.py',\n 'IPython/lib/security.py',\n 'IPython/lib/tests/test_imports.py',\n 'IPython/lib/tests/test_irunner.py',\n 'IPython/lib/tests/test_irunner_pylab_magic.py',\n 'IPython/lib/tests/test_security.py',\n 'IPython/nbformat/v1/tests/nbexamples.py',\n 'IPython/nbformat/v1/tests/test_json.py',\n 'IPython/nbformat/v1/tests/test_nbbase.py',\n 'IPython/nbformat/v2/tests/nbexamples.py',\n 'IPython/nbformat/v2/tests/test_json.py',\n 'IPython/nbformat/v2/tests/test_nbbase.py',\n 'IPython/nbformat/v2/tests/test_nbpy.py',\n 'IPython/quarantine/clearcmd.py',\n 'IPython/quarantine/envpersist.py',\n 'IPython/quarantine/ext_rescapture.py',\n 'IPython/quarantine/ipy_app_completers.py',\n 'IPython/quarantine/ipy_completers.py',\n 'IPython/quarantine/ipy_editors.py',\n 'IPython/quarantine/ipy_exportdb.py',\n 'IPython/quarantine/ipy_extutil.py',\n 'IPython/quarantine/ipy_fsops.py',\n 'IPython/quarantine/ipy_gnuglobal.py',\n 'IPython/quarantine/ipy_jot.py',\n 'IPython/quarantine/ipy_lookfor.py',\n 'IPython/quarantine/ipy_profile_doctest.py',\n 'IPython/quarantine/ipy_pydb.py',\n 'IPython/quarantine/ipy_rehashdir.py',\n 'IPython/quarantine/ipy_render.py',\n 'IPython/quarantine/ipy_server.py',\n 'IPython/quarantine/ipy_signals.py',\n 'IPython/quarantine/ipy_synchronize_with.py',\n 'IPython/quarantine/ipy_system_conf.py',\n 'IPython/quarantine/ipy_which.py',\n 'IPython/quarantine/ipy_winpdb.py',\n 'IPython/quarantine/ipy_workdir.py',\n 'IPython/quarantine/jobctrl.py',\n 'IPython/quarantine/ledit.py',\n 'IPython/quarantine/win32clip.py',\n 'IPython/testing/mkdoctests.py',\n 'IPython/testing/plugin/dtexample.py',\n 'IPython/testing/plugin/ipdoctest.py',\n 'IPython/testing/plugin/iptest.py',\n 'IPython/testing/plugin/setup.py',\n 'IPython/testing/plugin/show_refs.py',\n 'IPython/testing/plugin/simple.py',\n 'IPython/testing/plugin/simplevars.py',\n 'IPython/testing/plugin/test_ipdoctest.py',\n 'IPython/testing/plugin/test_refs.py',\n 'IPython/testing/skipdoctest.py',\n 'IPython/testing/tests/test_decorators.py',\n 'IPython/utils/autoattr.py',\n 'IPython/utils/nested_context.py',\n 'IPython/utils/pickleshare.py',\n 'IPython/utils/py3compat.py',\n 'IPython/utils/PyColorize.py',\n 'IPython/utils/rlineimpl.py',\n 'IPython/utils/strdispatch.py',\n 'IPython/utils/tempdir.py',\n 'IPython/utils/tests/test_imports.py',\n 'IPython/utils/tests/test_wildcard.py',\n 'IPython/utils/upgradedir.py',\n 'IPython/zmq/completer.py',\n 'IPython/zmq/displayhook.py',\n 'IPython/zmq/entry_point.py',\n 'IPython/zmq/frontend.py',\n 'IPython/zmq/iostream.py',\n 'IPython/zmq/ipkernel.py',\n 'IPython/zmq/log.py',\n 'IPython/zmq/parentpoller.py',\n 'IPython/zmq/pykernel.py',\n 'IPython/zmq/pylab/backend_inline.py',\n 'IPython/zmq/zmqshell.py'\n ]", "commit_timestamp": "2011-11-24T02:02:27Z", "files": ["IPython/config/__init__.py", "IPython/config/tests/test_configurable.py", "IPython/config/tests/test_loader.py", "IPython/core/alias.py", "IPython/core/autocall.py", "IPython/core/builtin_trap.py", "IPython/core/compilerop.py", "IPython/core/completer.py", "IPython/core/completerlib.py", "IPython/core/crashhandler.py", "IPython/core/display.py", "IPython/core/display_trap.py", "IPython/core/displayhook.py", "IPython/core/displaypub.py", "IPython/core/error.py", "IPython/core/extensions.py", "IPython/core/formatters.py", "IPython/core/history.py", "IPython/core/inputsplitter.py", "IPython/core/ipapi.py", "IPython/core/magic.py", "IPython/core/magic_arguments.py", "IPython/core/page.py", "IPython/core/payload.py", "IPython/core/payloadpage.py", "IPython/core/plugin.py", "IPython/core/prefilter.py", "IPython/core/prompts.py", "IPython/core/splitinput.py", "IPython/core/tests/test_compilerop.py", "IPython/core/tests/test_inputsplitter.py", "IPython/core/tests/test_magic_arguments.py", "IPython/core/tests/test_oinspect.py", "IPython/core/tests/test_page.py", "IPython/core/usage.py", "IPython/deathrow/PhysicalQInput.py", "IPython/deathrow/PhysicalQInteractive.py", "IPython/deathrow/Shell.py", "IPython/deathrow/iplib.py", "IPython/deathrow/oldfrontend/asyncfrontendbase.py", "IPython/deathrow/oldfrontend/cocoa/cocoa_frontend.py", "IPython/deathrow/oldfrontend/cocoa/plugin/IPythonCocoaFrontendLoader.py", "IPython/deathrow/oldfrontend/cocoa/plugin/setup.py", "IPython/deathrow/oldfrontend/cocoa/tests/test_cocoa_frontend.py", "IPython/deathrow/oldfrontend/frontendbase.py", "IPython/deathrow/oldfrontend/linefrontendbase.py", "IPython/deathrow/oldfrontend/prefilterfrontend.py", "IPython/deathrow/oldfrontend/process/pipedprocess.py", "IPython/deathrow/oldfrontend/tests/test_asyncfrontendbase.py", "IPython/deathrow/oldfrontend/tests/test_frontendbase.py", "IPython/deathrow/oldfrontend/tests/test_linefrontend.py", "IPython/deathrow/oldfrontend/tests/test_prefilterfrontend.py", "IPython/deathrow/oldfrontend/tests/test_process.py", "IPython/deathrow/oldfrontend/wx/console_widget.py", "IPython/deathrow/oldfrontend/wx/wx_frontend.py", "IPython/deathrow/oldfrontend/zopeinterface.py", "IPython/deathrow/quitter.py", "IPython/extensions/parallelmagic.py", "IPython/frontend/terminal/embed.py", "IPython/frontend/terminal/interactiveshell.py", "IPython/frontend/terminal/ipapp.py", "IPython/lib/__init__.py", "IPython/lib/guisupport.py", "IPython/lib/inputhook.py", "IPython/lib/inputhookglut.py", "IPython/lib/inputhookgtk.py", "IPython/lib/inputhookpyglet.py", "IPython/lib/inputhookwx.py", "IPython/lib/latextools.py", "IPython/lib/pylabtools.py", "IPython/parallel/controller/hub.py", "IPython/parallel/scripts/__init__.py", "IPython/testing/__init__.py", "IPython/testing/_paramtestpy2.py", "IPython/testing/_paramtestpy3.py", "IPython/testing/decorators.py", "IPython/testing/globalipapp.py", "IPython/testing/iptest.py", "IPython/testing/ipunittest.py", "IPython/testing/nosepatch.py", "IPython/testing/tests/test_ipunittest.py", "IPython/testing/tests/test_tools.py", "IPython/testing/tools.py", "IPython/utils/_process_common.py", "IPython/utils/_process_posix.py", "IPython/utils/_process_win32.py", "IPython/utils/attic.py", "IPython/utils/codeutil.py", "IPython/utils/cursesimport.py", "IPython/utils/data.py", "IPython/utils/decorators.py", "IPython/utils/dir2.py", "IPython/utils/doctestreload.py", "IPython/utils/frame.py", "IPython/utils/generics.py", "IPython/utils/growl.py", "IPython/utils/importstring.py", "IPython/utils/io.py", "IPython/utils/ipstruct.py", "IPython/utils/jsonutil.py", "IPython/utils/localinterfaces.py", "IPython/utils/newserialized.py", "IPython/utils/notification.py", "IPython/utils/path.py", "IPython/utils/pickleutil.py", "IPython/utils/process.py", "IPython/utils/sysinfo.py", "IPython/utils/syspathcontext.py", "IPython/utils/terminal.py", "IPython/utils/tests/test_io.py", "IPython/utils/tests/test_jsonutil.py", "IPython/utils/tests/test_module_paths.py", "IPython/utils/tests/test_notification.py", "IPython/utils/tests/test_path.py", "IPython/utils/tests/test_process.py", "IPython/utils/tests/test_traitlets.py", "IPython/utils/text.py", "IPython/utils/timing.py", "IPython/utils/traitlets.py", "IPython/utils/warn.py", "IPython/zmq/__init__.py", "IPython/zmq/blockingkernelmanager.py", "IPython/zmq/gui/__init__.py", "IPython/zmq/gui/gtkembed.py", "IPython/zmq/heartbeat.py", "IPython/zmq/kernelmanager.py", "IPython/zmq/tests/test_message_spec.py"]}, {"node_id": "MDY6Q29tbWl0NjU5NDQ2OjQ1NzYyZGNjZTJjOTBmYzhkOGFiMzFiYWQ5NGJiYzRlYjM4ODVmMzQ=", "commit_message": "Merge pull request #2 from jeremiahbuddha/heading_cell\n\nAdded heading cell converter.", "commit_timestamp": "2012-03-12T23:33:16Z", "files": ["nbconvert.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmQxODI4YWE3MjQ0MDE0MzE2NDViYTQ2NDE4Y2Q5MWUxMmY0ZjY4MGE=", "commit_message": "Merge pull request #3632 from ivanov/no_sys_available\n\nSet calling program to UNKNOWN, when argv not in sys (take #2)", "commit_timestamp": "2013-07-14T10:31:08Z", "files": ["IPython/config/application.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmFhODE3OGQ4YjIwZGIwOWMwY2Q2NThlNmVmZDNlYjlkNDc0ZDMzYTY=", "commit_message": "Merge pull request #2 from ivanov/pylab-no-import\n\nfix 2 failing tests and add programmatic support for backend", "commit_timestamp": "2013-07-17T03:21:53Z", "files": ["IPython/core/magics/pylab.py", "IPython/lib/tests/test_irunner_pylab_magic.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjIyYzJiZDY5NGFmMjllZGQwMjhlMjhhOTU3Mzg0YTEyN2JlNmRhZDg=", "commit_message": "Merge pull request #2 from minrk/nbconvert\n\nfix b64-handling of data in Python 3", "commit_timestamp": "2013-07-19T06:23:38Z", "files": ["IPython/nbconvert/transformers/extractfigure.py"]}, {"node_id": "MDY6Q29tbWl0NzUzNzY4OmM4OTI4ODU4MjQ0NTY5MTZiZWEwYTE5MmY5MmJhMTZjZjIzNzZlM2Y=", "commit_message": "Merge pull request #2 from takluyver/multidir-tak1\n\nTweaks to multidir", "commit_timestamp": "2013-08-13T04:52:07Z", "files": ["IPython/html/services/contents/contentmanager.py", "IPython/html/services/notebooks/filenbmanager.py", "IPython/html/services/notebooks/handlers.py", "IPython/html/services/notebooks/nbmanager.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmFkNTM3MmM2Njk1YWFkOTM1YjBlZGE4YTFlYzVkYWI0MGY4Y2RkMTA=", "commit_message": "Merge pull request #2 from Carreau/nbvalidate\n\nnbvalidate add v3.withref.json to package.", "commit_timestamp": "2014-04-20T17:06:34Z", "files": ["setupbase.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzphMzkxMzllYzE5NDA4ZDY5ZTVkNmFmM2Y3MmQ2NjRjYmU5YzQwNmZj", "commit_message": "update copyright to 2011/20xx-2011\n\nCloses #1033 (rebased to prevent recursive merge). Closes #2.\n\n\t459  *.py files in :\n\t 39  empty files\n\t176  files without copyright\n\t 36  have copyright but don't cite the dev team\n\t208  have copyright and cite the dev team\n\t-----------------------------------------\n\t  0  not up to date (cite dev team but not right year)\n\n\t  FYI, list of files that don't have copyright (and are not empty..)\n\n [\n 'IPython/config/profile/cluster/ipython_config.py',\n 'IPython/config/profile/math/ipython_config.py',\n 'IPython/config/profile/pylab/ipython_config.py',\n 'IPython/config/profile/pysh/ipython_config.py',\n 'IPython/config/profile/python3/ipython_config.py',\n 'IPython/config/profile/sympy/ipython_config.py',\n 'IPython/core/shadowns.py',\n 'IPython/core/tests/refbug.py',\n 'IPython/core/tests/simpleerr.py',\n 'IPython/core/tests/tclass.py',\n 'IPython/core/tests/test_application.py',\n 'IPython/core/tests/test_autocall.py',\n 'IPython/core/tests/test_completer.py',\n 'IPython/core/tests/test_fakemodule.py',\n 'IPython/core/tests/test_formatters.py',\n 'IPython/core/tests/test_handlers.py',\n 'IPython/core/tests/test_history.py',\n 'IPython/core/tests/test_imports.py',\n 'IPython/core/tests/test_iplib.py',\n 'IPython/core/tests/test_logger.py',\n 'IPython/core/tests/test_magic.py',\n 'IPython/core/tests/test_plugin.py',\n 'IPython/core/tests/test_prefilter.py',\n 'IPython/core/tests/test_profile.py',\n 'IPython/core/tests/test_run.py',\n 'IPython/core/tests/test_splitinput.py',\n 'IPython/deathrow/astyle.py',\n 'IPython/deathrow/dtutils.py',\n 'IPython/deathrow/Gnuplot2.py',\n 'IPython/deathrow/GnuplotInteractive.py',\n 'IPython/deathrow/GnuplotRuntime.py',\n 'IPython/deathrow/gui/wx/ipshell_nonblocking.py',\n 'IPython/deathrow/gui/wx/ipython_history.py',\n 'IPython/deathrow/gui/wx/thread_ex.py',\n 'IPython/deathrow/ibrowse.py',\n 'IPython/deathrow/igrid.py',\n 'IPython/deathrow/ipipe.py',\n 'IPython/deathrow/ipy_defaults.py',\n 'IPython/deathrow/ipy_kitcfg.py',\n 'IPython/deathrow/ipy_legacy.py',\n 'IPython/deathrow/ipy_p4.py',\n 'IPython/deathrow/ipy_profile_none.py',\n 'IPython/deathrow/ipy_profile_numpy.py',\n 'IPython/deathrow/ipy_profile_scipy.py',\n 'IPython/deathrow/ipy_profile_sh.py',\n 'IPython/deathrow/ipy_traits_completer.py',\n 'IPython/deathrow/ipy_vimserver.py',\n 'IPython/deathrow/numeric_formats.py',\n 'IPython/deathrow/oldfrontend/process/__init__.py',\n 'IPython/deathrow/oldfrontend/wx/ipythonx.py',\n 'IPython/deathrow/scitedirector.py',\n 'IPython/deathrow/tests/test_prefilter.py',\n 'IPython/deathrow/twshell.py',\n 'IPython/extensions/__init__.py',\n 'IPython/extensions/autoreload.py',\n 'IPython/extensions/storemagic.py',\n 'IPython/extensions/tests/test_autoreload.py',\n 'IPython/external/__init__.py',\n 'IPython/external/argparse/__init__.py',\n 'IPython/external/decorator/__init__.py',\n 'IPython/external/decorators/__init__.py',\n 'IPython/external/decorators/_decorators.py',\n 'IPython/external/decorators/_numpy_testing_noseclasses.py',\n 'IPython/external/decorators/_numpy_testing_utils.py',\n 'IPython/external/guid/__init__.py',\n 'IPython/external/Itpl/__init__.py',\n 'IPython/external/mglob/__init__.py',\n 'IPython/external/mglob/_mglob.py',\n 'IPython/external/path/__init__.py',\n 'IPython/external/path/_path.py',\n 'IPython/external/pexpect/__init__.py',\n 'IPython/external/pyparsing/__init__.py',\n 'IPython/external/qt.py',\n 'IPython/external/qt_for_kernel.py',\n 'IPython/external/simplegeneric/__init__.py',\n 'IPython/external/simplegeneric/_simplegeneric.py',\n 'IPython/frontend/html/notebook/__init__.py',\n 'IPython/frontend/html/notebook/tests/test_kernelsession.py',\n 'IPython/frontend/qt/base_frontend_mixin.py',\n 'IPython/frontend/qt/console/ansi_code_processor.py',\n 'IPython/frontend/qt/console/bracket_matcher.py',\n 'IPython/frontend/qt/console/call_tip_widget.py',\n 'IPython/frontend/qt/console/completion_lexer.py',\n 'IPython/frontend/qt/console/completion_widget.py',\n 'IPython/frontend/qt/console/console_widget.py',\n 'IPython/frontend/qt/console/history_console_widget.py',\n 'IPython/frontend/qt/console/ipython_widget.py',\n 'IPython/frontend/qt/console/kill_ring.py',\n 'IPython/frontend/qt/console/mainwindow.py',\n 'IPython/frontend/qt/console/pygments_highlighter.py',\n 'IPython/frontend/qt/console/qtconsoleapp.py',\n 'IPython/frontend/qt/console/rich_ipython_widget.py',\n 'IPython/frontend/qt/console/styles.py',\n 'IPython/frontend/qt/console/tests/test_ansi_code_processor.py',\n 'IPython/frontend/qt/console/tests/test_completion_lexer.py',\n 'IPython/frontend/qt/console/tests/test_kill_ring.py',\n 'IPython/frontend/qt/kernelmanager.py',\n 'IPython/frontend/qt/rich_text.py',\n 'IPython/frontend/qt/svg.py',\n 'IPython/frontend/qt/util.py',\n 'IPython/kernel/__init__.py',\n 'IPython/lib/clipboard.py',\n 'IPython/lib/display.py',\n 'IPython/lib/irunner.py',\n 'IPython/lib/security.py',\n 'IPython/lib/tests/test_imports.py',\n 'IPython/lib/tests/test_irunner.py',\n 'IPython/lib/tests/test_irunner_pylab_magic.py',\n 'IPython/lib/tests/test_security.py',\n 'IPython/nbformat/v1/tests/nbexamples.py',\n 'IPython/nbformat/v1/tests/test_json.py',\n 'IPython/nbformat/v1/tests/test_nbbase.py',\n 'IPython/nbformat/v2/tests/nbexamples.py',\n 'IPython/nbformat/v2/tests/test_json.py',\n 'IPython/nbformat/v2/tests/test_nbbase.py',\n 'IPython/nbformat/v2/tests/test_nbpy.py',\n 'IPython/quarantine/clearcmd.py',\n 'IPython/quarantine/envpersist.py',\n 'IPython/quarantine/ext_rescapture.py',\n 'IPython/quarantine/ipy_app_completers.py',\n 'IPython/quarantine/ipy_completers.py',\n 'IPython/quarantine/ipy_editors.py',\n 'IPython/quarantine/ipy_exportdb.py',\n 'IPython/quarantine/ipy_extutil.py',\n 'IPython/quarantine/ipy_fsops.py',\n 'IPython/quarantine/ipy_gnuglobal.py',\n 'IPython/quarantine/ipy_jot.py',\n 'IPython/quarantine/ipy_lookfor.py',\n 'IPython/quarantine/ipy_profile_doctest.py',\n 'IPython/quarantine/ipy_pydb.py',\n 'IPython/quarantine/ipy_rehashdir.py',\n 'IPython/quarantine/ipy_render.py',\n 'IPython/quarantine/ipy_server.py',\n 'IPython/quarantine/ipy_signals.py',\n 'IPython/quarantine/ipy_synchronize_with.py',\n 'IPython/quarantine/ipy_system_conf.py',\n 'IPython/quarantine/ipy_which.py',\n 'IPython/quarantine/ipy_winpdb.py',\n 'IPython/quarantine/ipy_workdir.py',\n 'IPython/quarantine/jobctrl.py',\n 'IPython/quarantine/ledit.py',\n 'IPython/quarantine/win32clip.py',\n 'IPython/testing/mkdoctests.py',\n 'IPython/testing/plugin/dtexample.py',\n 'IPython/testing/plugin/ipdoctest.py',\n 'IPython/testing/plugin/iptest.py',\n 'IPython/testing/plugin/setup.py',\n 'IPython/testing/plugin/show_refs.py',\n 'IPython/testing/plugin/simple.py',\n 'IPython/testing/plugin/simplevars.py',\n 'IPython/testing/plugin/test_ipdoctest.py',\n 'IPython/testing/plugin/test_refs.py',\n 'IPython/testing/skipdoctest.py',\n 'IPython/testing/tests/test_decorators.py',\n 'IPython/utils/autoattr.py',\n 'IPython/utils/nested_context.py',\n 'IPython/utils/pickleshare.py',\n 'IPython/utils/py3compat.py',\n 'IPython/utils/PyColorize.py',\n 'IPython/utils/rlineimpl.py',\n 'IPython/utils/strdispatch.py',\n 'IPython/utils/tempdir.py',\n 'IPython/utils/tests/test_imports.py',\n 'IPython/utils/tests/test_wildcard.py',\n 'IPython/utils/upgradedir.py',\n 'IPython/zmq/completer.py',\n 'IPython/zmq/displayhook.py',\n 'IPython/zmq/entry_point.py',\n 'IPython/zmq/frontend.py',\n 'IPython/zmq/iostream.py',\n 'IPython/zmq/ipkernel.py',\n 'IPython/zmq/log.py',\n 'IPython/zmq/parentpoller.py',\n 'IPython/zmq/pykernel.py',\n 'IPython/zmq/pylab/backend_inline.py',\n 'IPython/zmq/zmqshell.py'\n ]", "commit_timestamp": "2011-11-24T02:02:27Z", "files": ["IPython/config/__init__.py", "IPython/config/tests/test_configurable.py", "IPython/config/tests/test_loader.py", "IPython/core/alias.py", "IPython/core/autocall.py", "IPython/core/builtin_trap.py", "IPython/core/compilerop.py", "IPython/core/completer.py", "IPython/core/completerlib.py", "IPython/core/crashhandler.py", "IPython/core/display.py", "IPython/core/display_trap.py", "IPython/core/displayhook.py", "IPython/core/displaypub.py", "IPython/core/error.py", "IPython/core/extensions.py", "IPython/core/formatters.py", "IPython/core/history.py", "IPython/core/inputsplitter.py", "IPython/core/ipapi.py", "IPython/core/magic.py", "IPython/core/magic_arguments.py", "IPython/core/page.py", "IPython/core/payload.py", "IPython/core/payloadpage.py", "IPython/core/plugin.py", "IPython/core/prefilter.py", "IPython/core/prompts.py", "IPython/core/splitinput.py", "IPython/core/tests/test_compilerop.py", "IPython/core/tests/test_inputsplitter.py", "IPython/core/tests/test_magic_arguments.py", "IPython/core/tests/test_oinspect.py", "IPython/core/tests/test_page.py", "IPython/core/usage.py", "IPython/deathrow/PhysicalQInput.py", "IPython/deathrow/PhysicalQInteractive.py", "IPython/deathrow/Shell.py", "IPython/deathrow/iplib.py", "IPython/deathrow/oldfrontend/asyncfrontendbase.py", "IPython/deathrow/oldfrontend/cocoa/cocoa_frontend.py", "IPython/deathrow/oldfrontend/cocoa/plugin/IPythonCocoaFrontendLoader.py", "IPython/deathrow/oldfrontend/cocoa/plugin/setup.py", "IPython/deathrow/oldfrontend/cocoa/tests/test_cocoa_frontend.py", "IPython/deathrow/oldfrontend/frontendbase.py", "IPython/deathrow/oldfrontend/linefrontendbase.py", "IPython/deathrow/oldfrontend/prefilterfrontend.py", "IPython/deathrow/oldfrontend/process/pipedprocess.py", "IPython/deathrow/oldfrontend/tests/test_asyncfrontendbase.py", "IPython/deathrow/oldfrontend/tests/test_frontendbase.py", "IPython/deathrow/oldfrontend/tests/test_linefrontend.py", "IPython/deathrow/oldfrontend/tests/test_prefilterfrontend.py", "IPython/deathrow/oldfrontend/tests/test_process.py", "IPython/deathrow/oldfrontend/wx/console_widget.py", "IPython/deathrow/oldfrontend/wx/wx_frontend.py", "IPython/deathrow/oldfrontend/zopeinterface.py", "IPython/deathrow/quitter.py", "IPython/extensions/parallelmagic.py", "IPython/frontend/terminal/embed.py", "IPython/frontend/terminal/interactiveshell.py", "IPython/frontend/terminal/ipapp.py", "IPython/lib/__init__.py", "IPython/lib/guisupport.py", "IPython/lib/inputhook.py", "IPython/lib/inputhookglut.py", "IPython/lib/inputhookgtk.py", "IPython/lib/inputhookpyglet.py", "IPython/lib/inputhookwx.py", "IPython/lib/latextools.py", "IPython/lib/pylabtools.py", "IPython/parallel/controller/hub.py", "IPython/parallel/scripts/__init__.py", "IPython/testing/__init__.py", "IPython/testing/_paramtestpy2.py", "IPython/testing/_paramtestpy3.py", "IPython/testing/decorators.py", "IPython/testing/globalipapp.py", "IPython/testing/iptest.py", "IPython/testing/ipunittest.py", "IPython/testing/nosepatch.py", "IPython/testing/tests/test_ipunittest.py", "IPython/testing/tests/test_tools.py", "IPython/testing/tools.py", "IPython/utils/_process_common.py", "IPython/utils/_process_posix.py", "IPython/utils/_process_win32.py", "IPython/utils/attic.py", "IPython/utils/codeutil.py", "IPython/utils/cursesimport.py", "IPython/utils/data.py", "IPython/utils/decorators.py", "IPython/utils/dir2.py", "IPython/utils/doctestreload.py", "IPython/utils/frame.py", "IPython/utils/generics.py", "IPython/utils/growl.py", "IPython/utils/importstring.py", "IPython/utils/io.py", "IPython/utils/ipstruct.py", "IPython/utils/jsonutil.py", "IPython/utils/localinterfaces.py", "IPython/utils/newserialized.py", "IPython/utils/notification.py", "IPython/utils/path.py", "IPython/utils/pickleutil.py", "IPython/utils/process.py", "IPython/utils/sysinfo.py", "IPython/utils/syspathcontext.py", "IPython/utils/terminal.py", "IPython/utils/tests/test_io.py", "IPython/utils/tests/test_jsonutil.py", "IPython/utils/tests/test_module_paths.py", "IPython/utils/tests/test_notification.py", "IPython/utils/tests/test_path.py", "IPython/utils/tests/test_process.py", "IPython/utils/tests/test_traitlets.py", "IPython/utils/text.py", "IPython/utils/timing.py", "IPython/utils/traitlets.py", "IPython/utils/warn.py", "IPython/zmq/__init__.py", "IPython/zmq/blockingkernelmanager.py", "IPython/zmq/gui/__init__.py", "IPython/zmq/gui/gtkembed.py", "IPython/zmq/heartbeat.py", "IPython/zmq/kernelmanager.py", "IPython/zmq/tests/test_message_spec.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo2Yjk0N2FjOGIxMWFiMTA4ZmRlYzE2MTY0NTIzZjU5Mjc1OTVjOTQ5", "commit_message": "Merge pull request #3632 from ivanov/no_sys_available\n\nSet calling program to UNKNOWN, when argv not in sys (take #2)", "commit_timestamp": "2013-07-14T10:31:08Z", "files": ["IPython/config/application.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo5ODliODEzMDdhMWNkNWMwNTA1M2I5MTExN2ZhZWNkOTVkYTExYTk2", "commit_message": "Merge pull request #2 from ivanov/pylab-no-import\n\nfix 2 failing tests and add programmatic support for backend", "commit_timestamp": "2013-07-17T03:21:53Z", "files": ["IPython/core/magics/pylab.py", "IPython/lib/tests/test_irunner_pylab_magic.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo0YWFlZjg2YWUzMGYzNmRjZDgxMTgyMjU2MDRkMmIxYjMyZjhiOGM0", "commit_message": "Merge pull request #2 from minrk/nbconvert\n\nfix b64-handling of data in Python 3", "commit_timestamp": "2013-07-19T06:23:38Z", "files": ["IPython/nbconvert/transformers/extractfigure.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzpkZjIyNmU3ZjgxYTUwMzBlNGQ0NmM2YTFjZWZlNzU5OTc2YmY4NmU5", "commit_message": "Merge pull request #2 from Carreau/nbvalidate\n\nnbvalidate add v3.withref.json to package.", "commit_timestamp": "2014-04-20T17:06:34Z", "files": ["setupbase.py"]}], "labels": ["documentation"], "created_at": "2010-05-10T09:26:04Z", "closed_at": "2011-11-24T02:03:39Z", "method": ["regex"]}
{"issue_number": 1, "title": "Document winhpcjob.py and launcher.py", "body": "Original Launchpad bug 502787: https://bugs.launchpad.net/ipython/+bug/502787\nReported by: ellisonbg (Brian Granger).\n\nThese modules need documentation.\n", "commits": [{"node_id": "MDY6Q29tbWl0MTIzNjAwMzpiNGZkYzMzZDAwY2I0MjVhM2ZkOTBmOWY5MjEzOGM5NTY0NWYxZDVm", "commit_message": "Merge pull request #1 from takluyver/frontend-logging\n\nFrontend logging", "commit_timestamp": "2011-05-06T00:21:33Z", "files": ["IPython/frontend/terminal/completer.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjM3NWE2NDhjYjdiY2Q2YTE4ZWI0NTE2OTBjMWEyMjlmYmIwNjUxOGI=", "commit_message": "Merge pull request #1 from minrk/kill-bg-processes\n\nUse shutdown requests rather than hard kills in notebook", "commit_timestamp": "2012-06-19T01:16:29Z", "files": ["IPython/frontend/html/notebook/handlers.py", "IPython/frontend/html/notebook/kernelmanager.py", "IPython/frontend/html/notebook/notebookapp.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmZjOGIyZGZmZGI2YmZiMWQ4MmMyMjQ5ZmRiZjExM2FkMDlkODNmOTY=", "commit_message": "Merge pull request #1 from Carreau/fixInkscapeOSX\n\nAdd full path to inkscape on osx.", "commit_timestamp": "2012-05-01T00:11:56Z", "files": ["nbconvert.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmI0YTE1N2M4NmJiZWRkMTlkMWNiYjk0ZGY0MDc5ZWI3YmJiZDlmM2I=", "commit_message": "Merge pull request #1 from Carreau/pr52\n\nFix nbconvert Pr52", "commit_timestamp": "2012-11-17T01:06:29Z", "files": ["tests/ipynbref/IntroNumPy.orig.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjE4ZDk2NzI0ODcyY2Y5NTY3Y2JiZTE0N2VlYjc5ZjZkMThhZmYzMzM=", "commit_message": "Merge pull request #1 from Carreau/fix-9\n\nfix issues on rebase", "commit_timestamp": "2013-02-23T16:35:20Z", "files": ["converters/reveal.py", "converters/transformers.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjZiYmJkYjQ4YzhhYzc2MDgzZTA1MGVlMTg1NTI3YzA3YWY1MzFiZjU=", "commit_message": "Merge pull request #1 from minrk/nbconvert\n\nCleanup on NbConvertApp", "commit_timestamp": "2013-07-17T17:51:35Z", "files": ["IPython/nbconvert/exporters/__init__.py", "IPython/nbconvert/exporters/export.py", "IPython/nbconvert/exporters/rst.py", "IPython/nbconvert/nbconvertapp.py", "IPython/nbconvert/transformers/__init__.py", "IPython/nbconvert/transformers/base.py", "IPython/nbconvert/transformers/convertfigures.py", "IPython/nbconvert/transformers/csshtmlheader.py", "IPython/nbconvert/transformers/extractfigure.py", "IPython/nbconvert/transformers/latex.py", "IPython/nbconvert/transformers/revealhelp.py", "IPython/nbconvert/transformers/sphinx.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjFlMmM0OTVmMWJiNTI3N2MzZTNkM2RkMjgxOWUzMGE0YWM1ZGQ4MDk=", "commit_message": "Merge pull request #1 from jdfreder/rename_postprocessors\n\nAlso renamed local variables in nbconvertapp", "commit_timestamp": "2013-08-21T18:28:09Z", "files": ["IPython/nbconvert/nbconvertapp.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmVlYjM5NTZiMzU4MjY4YzRhMTQ0NTE5NWI0MjNiMDcxMTIzZDA5Yzc=", "commit_message": "Merge pull request #1 from jorisvandenbossche/patch-1\n\nSet prompt_manager.width to zero for each new document to prevent misaligned Out prompts", "commit_timestamp": "2013-12-19T02:16:53Z", "files": ["IPython/sphinxext/ipython_directive.py"]}, {"node_id": "MDY6Q29tbWl0MTU4MDg3MjA6NDNjYTM4N2NiYTI2NzdkNTczYWE0N2RkMzcwNjdhNGEyNmVlYzM5MQ==", "commit_message": "Merge pull request #1 from jdfreder/jason-immediate-widget-comm\n\nDon't register comm with comm_manager if comm_manager is undefined", "commit_timestamp": "2014-07-18T14:30:50Z", "files": ["IPython/kernel/comm/comm.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzoyMDkxYWQwYjEwNzQ1YzdlYjBiMTAwOWM5YTkzNzFiMGE2NmQ3Zjky", "commit_message": "Merge pull request #1 from minrk/kill-bg-processes\n\nUse shutdown requests rather than hard kills in notebook", "commit_timestamp": "2012-06-19T01:16:29Z", "files": ["IPython/frontend/html/notebook/handlers.py", "IPython/frontend/html/notebook/kernelmanager.py", "IPython/frontend/html/notebook/notebookapp.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzpiZDI4ZDM4M2M0ZjZiZDBhYzUwMjMyZDQ3OGMxMTA0ZTA2ZjQ3OWFi", "commit_message": "Merge pull request #1 from minrk/nbconvert\n\nCleanup on NbConvertApp", "commit_timestamp": "2013-07-17T17:51:35Z", "files": ["IPython/nbconvert/exporters/__init__.py", "IPython/nbconvert/exporters/export.py", "IPython/nbconvert/exporters/rst.py", "IPython/nbconvert/nbconvertapp.py", "IPython/nbconvert/transformers/__init__.py", "IPython/nbconvert/transformers/base.py", "IPython/nbconvert/transformers/convertfigures.py", "IPython/nbconvert/transformers/csshtmlheader.py", "IPython/nbconvert/transformers/extractfigure.py", "IPython/nbconvert/transformers/latex.py", "IPython/nbconvert/transformers/revealhelp.py", "IPython/nbconvert/transformers/sphinx.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzplN2E5NTZjMjQ5ZjI4N2Q2MmJhMGIyYzhkMTJmZGMxNTI1MThjYjZm", "commit_message": "Merge pull request #1 from jdfreder/rename_postprocessors\n\nAlso renamed local variables in nbconvertapp", "commit_timestamp": "2013-08-21T18:28:09Z", "files": ["IPython/nbconvert/nbconvertapp.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzpkNGU1MTQzZjE0YzFmOTkyOWQzZDk3NjFkNWQxNWU4YzRiZTM3ZjMz", "commit_message": "Merge pull request #1 from jorisvandenbossche/patch-1\n\nSet prompt_manager.width to zero for each new document to prevent misaligned Out prompts", "commit_timestamp": "2013-12-19T02:16:53Z", "files": ["IPython/sphinxext/ipython_directive.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmQ1ODdmNWVhNTFlYTg5MzllYmE0ODViMzg5Nzg5ZTk1YWMzNTgxMzc=", "commit_message": "Merge pull request #1 from ipython/master\n\nUpdate from ipython/ipython:master", "commit_timestamp": "2015-03-04T10:05:22Z", "files": ["IPython/core/interactiveshell.py", "IPython/core/oinspect.py", "IPython/core/shellapp.py", "IPython/core/tests/test_oinspect.py", "IPython/html/widgets/widget_bool.py", "IPython/html/widgets/widget_button.py", "IPython/html/widgets/widget_selection.py", "IPython/kernel/tests/test_message_spec.py", "IPython/kernel/zmq/tests/test_session.py", "IPython/nbconvert/exporters/exporter.py", "IPython/nbconvert/filters/markdown.py", "IPython/nbconvert/filters/markdown_mistune.py", "IPython/nbconvert/writers/files.py", "IPython/nbconvert/writers/tests/test_files.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmY4MjI1ZGFlNTU4NjUzZjRkMDRhNTUyODM0OTM3NTdlOWJjYmYyOTc=", "commit_message": "Initial patch with Jedi completion (no function header description).\n\nHandle case when Jedi is not importable.\n\nFix print statement vs function discrepancy.\n\nAdd two-column display for function and description, remove sys.path manipulation.\n\ncleanup comments, add matcher APi instead of checking every time (#1)\n\n* Improve completion a bit to take care of what was previously \"greedy\"\n\nThis is a bit hackins because of how IPython decides what is going to\nbe replaced, and because completions need to strart with `text`.\n\nAdd a few test cases.\n\n* require path.py\n\n* Add completion tests.\n\n* Fix some completion, in particular imports.\n\nAlso completion after assignments.\n\nAdd TODO about how to using Completions with Jedi.", "commit_timestamp": "2016-05-03T21:37:55Z", "files": ["IPython/core/completer.py", "IPython/core/tests/test_completer.py", "IPython/terminal/ptshell.py", "setup.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmM2MDg5MTQzNDQ3YWU1NDUyYTJiNTJkNjQ0Y2QyYmZmMjY3YWE5OTM=", "commit_message": "Merge pull request #1 from ipython/master\n\nRepulling changes from master branch", "commit_timestamp": "2016-08-16T07:36:18Z", "files": ["IPython/__init__.py", "IPython/core/magics/basic.py", "IPython/core/release.py", "setup.py", "tools/toollib.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4Ojg3NWRiMGUyMWE3MzM2YjAwODg2ZTMwNjgwYzc0NTM3ZjM1MzdiN2U=", "commit_message": "Merge pull request #1 from ipython/master\n\nMerged new changes", "commit_timestamp": "2019-12-05T17:20:33Z", "files": ["IPython/core/crashhandler.py", "IPython/core/displayhook.py", "IPython/core/displaypub.py", "IPython/core/interactiveshell.py", "IPython/core/magics/execution.py", "IPython/core/oinspect.py", "IPython/core/page.py", "IPython/core/release.py", "IPython/core/tests/test_autocall.py", "IPython/core/tests/test_handlers.py", "IPython/core/tests/test_run.py", "IPython/core/tests/test_ultratb.py", "IPython/core/ultratb.py", "IPython/lib/clipboard.py", "IPython/lib/pretty.py", "IPython/paths.py", "IPython/terminal/debugger.py", "IPython/terminal/interactiveshell.py", "IPython/terminal/prompts.py", "IPython/terminal/pt_inputhooks/__init__.py", "IPython/terminal/pt_inputhooks/asyncio.py", "IPython/terminal/shortcuts.py", "IPython/utils/path.py", "IPython/utils/tests/test_path.py", "setup.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjU4MzE1MzBmMzBhNjI1M2ZiODBjOWNjOGExZWM1MThiNDE2NTQ5Njg=", "commit_message": "Merge pull request #1 from Carreau/refactor_display\n\nDo not import from IPython.core.display and warn users.", "commit_timestamp": "2020-04-23T06:55:23Z", "files": ["IPython/core/display.py", "IPython/core/displaypub.py", "IPython/core/magics/display.py", "IPython/core/page.py", "IPython/core/pylabtools.py", "IPython/core/tests/test_display.py", "IPython/display.py", "IPython/testing/iptest.py"]}], "labels": [], "created_at": "2010-05-10T09:26:02Z", "closed_at": "2010-12-09T23:37:11Z", "method": ["regex"]}
{"issue_number": 13678, "title": "latex_to_png fails on windows", "body": "The `latex_to_png` command fails in the method `latex_to_png_dvipng`. The reason is the temporary file that is generated, contains a `~` in the path, which is not accepted by the latex command.\r\n\r\nThe temporary file generated is ` 'C:\\\\Users\\\\EENDEB~1\\\\AppData\\\\Local\\\\Temp\\\\tmpxefqozm3\\\\tmp.tex'`\r\nThe command that fails is:\r\n```\r\n            subprocess.check_call(\r\n                [\"latex\", \"-halt-on-error\", tmpfile,\r\n                cwd=workdir, stdout=devnull, stderr=devnull)\r\n```\r\nLocally I can fix this by changing the command to\r\n```\r\n            subprocess.check_call(\r\n                [\"latex\", \"-halt-on-error\",  os.path.split(tmpfile)[-1]],\r\n                cwd=workdir, stdout=devnull, stderr=devnull)\r\n```\r\n(only the last part is required, since the `cwd` is also set).\r\n\r\nTo make this work some other calls need to be modified as well \r\n\r\n\r\n<!-- This is the repository for IPython command line, if you can try to make sure this question/bug/feature belong here and not on one of the Jupyter repositories. \r\n\r\nIf it's a generic Python/Jupyter question, try other forums or discourse.jupyter.org.\r\n\r\nIf you are unsure, it's ok to post here, though, there are few maintainer so you might not get a fast response. \r\n\r\n-->\r\n", "commits": [{"node_id": "C_kwDOAAoMVtoAKDJmOTNmNTA1YzYwYTY2MmZkOTVjMTQzODFiNjNjZTJmYjE0ZTI4YTc", "commit_message": "Merge pull request #13680 from eendebakpt/latex_rendering_tempdir\n\nUse relative filename in latex and dvips commands of latex_to_png_dvipng", "commit_timestamp": "2022-08-30T09:20:19Z", "files": ["IPython/lib/latextools.py"]}], "labels": [], "created_at": "2022-05-24T19:16:24Z", "closed_at": "2022-08-30T09:20:21Z", "linked_pr_number": [13678], "method": ["regex"]}
{"issue_number": 12461, "title": "CTRL backslash sends QUIT signal but freezes the terminal", "body": "A convenient way to quit Ipython and kill the debugged process is to press CTRL \\ (backslash).\r\nOnce pressed, the two exit but the terminal freezes. I can type commands, press enter and see the result but I can't see the command I'm typing.\r\nIs there any problem with STD OUT redirection after the signal is sent?\r\nI tested on gnome-terminal and xterm with bash", "commits": [{"node_id": "C_kwDOAAoMVtoAKGI1MjYzMzRiZmMyNWM4YTYzYjQzYTVmNDc1M2FhYmRjZWU4NzI2NTg", "commit_message": "Merge pull request #13603 from kmaork/master\n\nFix ctrl-\\ behavior", "commit_timestamp": "2022-03-26T09:28:26Z", "files": ["IPython/terminal/shortcuts.py"]}], "labels": [], "created_at": "2020-07-23T12:39:20Z", "closed_at": "2022-03-26T09:28:26Z", "linked_pr_number": [12461], "method": ["regex"]}
{"issue_number": 13530, "title": "Console bug adds an extra quote on macOS Monterey", "body": "<!-- This is the repository for IPython command line, if you can try to make sure this question/bug/feature belong here and not on one of the Jupyter repositories. \r\n\r\nIf it's a generic Python/Jupyter question, try other forums or discourse.jupyter.org.\r\n\r\nIf you are unsure, it's ok to post here, though, there are few maintainer so you might not get a fast response. \r\n\r\n-->\r\n\r\nI'm experiencing what seems to be a bug which adds an additional single quote. Here's what happens when I only write `x['odor']`, it becomes `x['odor']'`:\r\n\r\n[![console][1]][1]\r\n\r\nAt first I thought I'm making a mistake but when it repeated multiple times in the same minute, by looking further I noticed an extra `'` being added. I don't know why this is happening besides, I want to change the default quote view from double to single quotes which for some reason changed in the following versions:\r\n\r\n* macOS Monterey `12.2.1`\r\n* ipython `8.0.1` installed using brew.\r\n\r\n\r\n  [1]: https://i.stack.imgur.com/7rUlx.gif\r\n", "commits": [{"node_id": "C_kwDOAAoMVtoAKGU3ZDAwMzlhY2E2ZjlhMTk4NzQyNjUzZTExOWY2OGFjODJhMGRjMWE", "commit_message": "Merge pull request #13540 from lucymcphail/master\n\nImprove auto_match for quotes", "commit_timestamp": "2022-02-25T10:10:07Z", "files": ["IPython/terminal/shortcuts.py"]}], "labels": [], "created_at": "2022-02-15T10:25:25Z", "closed_at": "2022-02-25T10:10:07Z", "linked_pr_number": [13530], "method": ["regex"]}
{"issue_number": 13495, "title": "Is tab supposed to work in the ultratb prompt ?", "body": "I really love ultratb and I probably overuse it (instead of logging and running I often raise)\r\n\r\nWhen I press tab I get a tab char inserted into the ipdb REPL.\r\n\r\nIs tab supposed to work in ultratb or does tab completion require `prompt_toolkit`? Maybe it is not working on my machine or maybe it is working as it is supposed to--not sure. \r\n\r\nIf it is not supposed to work would it make sense to supply TerminalPdb instead of debugger.Pdb ? Maybe that could be exposed as a kwargs option...\r\n\r\n```\r\nPython 3.9.10 (main, Jan 17 2022, 00:00:00) \r\nimport IPython\r\n@>>> IPython.version_info\r\n(8, 0, 1, '')\r\n\r\nkitty 0.21.2 created by Kovid Goyal\r\nfish, version 3.3.1\r\n```", "commits": [{"node_id": "C_kwDOAAoMVtoAKGI3N2ViZjUzYjBmMDdkN2Q0N2RmMTM3YzMwMmVkZjI1OWY1ZWY2Yzk", "commit_message": "Merge pull request #13498 from chapmanjacobd/patch-3\n\nfix: debugger_class in ultratb", "commit_timestamp": "2022-03-27T09:44:51Z", "files": ["IPython/core/ultratb.py"]}], "labels": [], "created_at": "2022-01-28T19:09:41Z", "closed_at": "2022-03-27T09:44:51Z", "linked_pr_number": [13495], "method": ["regex"]}
{"issue_number": 12870, "title": "Autoreload fails because of ambiguity of truth values by comparing dictionaries containing Numpy arrays as attributes of a class.", "body": "In the case a class has a dictionary as attribute containing Numpy arrays, the comparison in line 293 fails as Numpy arrays generate an array if compared. \r\n\r\nTraceback:\r\n\r\n```Python\r\n[autoreload of FOOBAR failed: Traceback (most recent call last):\r\n  File \"/Users/USER/.pyenv/versions/3.9.2/lib/python3.9/site-packages/IPython/extensions/autoreload.py\", line 245, in check\r\n    superreload(m, reload, self.old_objects)\r\n  File \"/Users/USER/.pyenv/versions/3.9.2/lib/python3.9/site-packages/IPython/extensions/autoreload.py\", line 413, in superreload\r\n    update_generic(old_obj, new_obj)\r\n  File \"/Users/USER/.pyenv/versions/3.9.2/lib/python3.9/site-packages/IPython/extensions/autoreload.py\", line 350, in update_generic\r\n    update(a, b)\r\n  File \"/Users/USER/.pyenv/versions/3.9.2/lib/python3.9/site-packages/IPython/extensions/autoreload.py\", line 304, in update_class\r\n    raise e\r\n  File \"/Users/USER/.pyenv/versions/3.9.2/lib/python3.9/site-packages/IPython/extensions/autoreload.py\", line 293, in update_class\r\n    if (old_obj == new_obj) is True:\r\nValueError: The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()\r\n]\r\n```\r\n\r\nexample classes which generates this error are:\r\n\r\n```Python\r\nimport numpy\r\n\r\nclass foo:\r\n    array = {1:numpy.array([1,1]),2:numpy.array([2,2])}\r\n\r\nclass bar:\r\n    def __init__(self):\r\n        self.array = {1:numpy.array([1,1]),2:numpy.array([2,2])}\r\n```\r\n\r\nOne can break down this to the comparison of the two dict which fails:\r\n\r\n```Python\r\nimport numpy\r\n{1: numpy.array([1, 1]), 2: numpy.array([1, 2])} == {1: numpy.array([1, 1]), 2: numpy.array([1, 2])}\r\n```\r\n\r\nIt might be that defining Numpy arrays within a code is bad coding practise and should be avoided generally, but its not clear if this comparison could fail in other iterables and if one should paste a more general and robust comparison here. ", "commits": [{"node_id": "C_kwDOAAoMVtoAKDM1NWM1ZjM3NzRjZGZkODMyMDUwNTA0Njk3M2FhNTAzMmM5M2RmMzU", "commit_message": "Merge pull request #13400 from sleeping-h/fix-autoreload-issue-12870\n\nFix autoreload issue 12870", "commit_timestamp": "2021-12-16T10:46:55Z", "files": ["IPython/extensions/autoreload.py", "IPython/extensions/tests/test_autoreload.py"]}], "labels": [], "created_at": "2021-03-25T16:16:17Z", "closed_at": "2021-12-16T10:46:55Z", "linked_pr_number": [12870], "method": ["regex"]}
{"issue_number": 12948, "title": "%rerun doesn't handle integer parsing errors", "body": "## Steps to reproduce\r\n\r\n* Execute `%rerun -l one`\r\n\r\n## Expected result\r\nAn error message is printed, explaining the usage of the `-l` option.\r\n\r\n## Actual result\r\nAn uncaught `ValueError` with the traceback that's exposing the internals of the implementation and not being too helpful.\r\n\r\n## System info\r\nManjaro Linux, Python 3.9.4, IPython 7.22.0 (reproduces on IPython 8.0.0.dev)", "commits": [{"node_id": "C_kwDOAAoMVtoAKDNhYmMxYTNmY2FmYWUxZmQyYmJjNjQ5NGJhNWFhYTM0MWMyYmEzOGE", "commit_message": "Merge pull request #13377 from nicolaslazo/master\n\nFix uncaught ValueError in rerun magic int conversion", "commit_timestamp": "2021-12-08T17:13:53Z", "files": ["IPython/core/magics/history.py"]}], "labels": ["8.0 what's new"], "created_at": "2021-05-05T18:01:18Z", "closed_at": "2021-12-08T17:13:53Z", "linked_pr_number": [12948], "method": ["regex"]}
{"issue_number": 13196, "title": "`%save` magic does not work, just warns that `'' was not found in history`", "body": "<!-- This is the repository for IPython command line, if you can try to make sure this question/bug/feature belong here and not on one of the Jupyter repositories. \r\n\r\nIf it's a generic Python/Jupyter question, try other forums or discourse.jupyter.org.\r\n\r\nIf you are unsure, it's ok to post here, though, there are few maintainer so you might not get a fast response. \r\n\r\n-->\r\n\r\n```pycon\r\nIn [1]: %save file.py\r\n'' was not found in history, as a file, url, nor in the user namespace.\r\n```", "commits": [{"node_id": "C_kwDOAAoMVtoAKDI2MjA0ODJhMzlhZTRhMjNlNzI5YzJhM2UwMTgwNzc4NGNhOWQ0Zjg", "commit_message": "Merge pull request #13211 from paw-lu/save-docstring\n\nAdhere to usage style when documenting save args", "commit_timestamp": "2021-10-25T18:18:11Z", "files": ["IPython/core/magics/code.py"]}], "labels": ["8.0 what's new"], "created_at": "2021-10-18T00:05:37Z", "closed_at": "2021-10-23T02:08:54Z", "linked_pr_number": [13196], "method": ["regex"]}
{"issue_number": 11547, "title": "Can the IPython directive use warnings for errors?", "body": "Pandas would like to have a workflow where\r\n\r\n1. the documentation build always completes to the end, even if there are warnings\r\n2. the CI fails if there are any warnings.\r\n\r\nFor regular sphinx things, this works with a combination of `-W error --keep-going`, which fails the job at the end of the build if there were any warnings.\r\n\r\nThis doesn't work with exceptions in IPython blocks. Here's a small example\r\n\r\n```\r\nWelcome to test's documentation!\r\n================================\r\n\r\n.. ipython:: python\r\n\r\n   2 + 'a'\r\n\r\nThe rest of the biuld\r\n\r\n.. ipython:: python\r\n\r\n   2 + 2\r\n```\r\n\r\nAnd the relevant IPytyhon conf setting is `ipython_warning_is_error = False`.\r\n\r\nWhen I run\r\n\r\n```\r\nsphinx-build -W --keep-going \".\" _build/\r\n```\r\n\r\nThe entire document is built, but the exit code is `0`, when I'd like it to be `1`.\r\n\r\nI *hope* this is just because exceptions in IPython blocks are printed to stdout. On some basic testing, it looks like using `sphinx.util.logging` and `logger.warning` rather than `sys.stdout.write` will satisfy my needs.\r\n\r\nAre the IPython devs open to changing from `sys.stdout.write` to `logger.warning` for this?\r\n\r\ncc @tacaswell, and idea if this change would break matplotlib at all?", "commits": [{"node_id": "MDY6Q29tbWl0NjU4NTE4OjZjMDFlOWJkMGMxYTA2N2I0MTNjMDkzYzI5MDQyODcxY2M0MjZhY2U=", "commit_message": "Merge pull request #13030 from rhshadrach/ipython_warning\n\nUse Sphinx logging in IPython directive", "commit_timestamp": "2021-07-07T10:28:54Z", "files": ["IPython/sphinxext/ipython_directive.py"]}, {"node_id": "MDY6Q29tbWl0MTM0MzM1NDA0OjE3YThmZTE4MjRjMzI0MjJlMGIxNjc0ODZkN2U4ZTMxNjZjZjIzYjY=", "commit_message": "Backport PR #13030: Use Sphinx logging in IPython directive", "commit_timestamp": "2021-07-07T10:29:03Z", "files": ["IPython/sphinxext/ipython_directive.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjljMzRiNjEwOGFlODE1NThhMDBlNzc1MGYyM2E5MTVlZWI1NDEyMWM=", "commit_message": "Merge pull request #13047 from meeseeksmachine/auto-backport-of-pr-13030-on-7.x\n\nBackport PR #13030 on branch 7.x (Use Sphinx logging in IPython directive)", "commit_timestamp": "2021-07-08T12:32:44Z", "files": ["IPython/sphinxext/ipython_directive.py"]}], "labels": [], "created_at": "2019-01-07T14:08:46Z", "closed_at": "2021-07-07T10:28:54Z", "linked_pr_number": [11547], "method": ["regex"]}
{"issue_number": 12947, "title": "%rerun prints a misleading error when 0 lines are requested", "body": "## Steps to reproduce\r\n\r\n* Execute `%rerun -l 0`\r\n\r\n## Expected result\r\nNothing rerun, nothing printed \r\n\r\n## Actual result\r\nNothing rerun, but the following is printed\r\n```\r\nNo lines in history match specification\r\n```\r\n\r\n## Comment\r\nThis error message is relevant to another part of `%rerun`'s functionality, namely, rerunning based on search with `-g <query>`, but is confusing here.\r\n\r\n## System info\r\nManjaro Linux, Python 3.9.4, IPython 7.22.0 (reproduces on IPython 8.0.0.dev)", "commits": [{"node_id": "MDY6Q29tbWl0NjU4NTE4OjgxNjA5ZGI0NTRhZTZjMWQ0N2FkZjVlNWJkMjg5NDBmNTYzYjU2MjE=", "commit_message": "Merge pull request #12980 from MrMino/rerun_0_lines_msg\n\nNicer output for erroneous args to %rerun -l", "commit_timestamp": "2021-05-28T15:28:38Z", "files": ["IPython/core/magics/history.py"]}], "labels": ["8.0 what's new"], "created_at": "2021-05-05T17:57:47Z", "closed_at": "2021-05-28T15:28:38Z", "linked_pr_number": [12947], "method": ["regex"]}
{"issue_number": 12946, "title": "%recall mistakenly prints \"Couldn't evaluate or find in history\"", "body": "## Steps to reproduce\r\n\r\n* Execute `a = 1`\r\n* Execute `%recall a`\r\n\r\n## Expected result\r\n\"1\" written in the input prompt, no errors\r\n\r\n## Actual result\r\n\"1\" written in the input prompt, but the following message is printed:\r\n```\r\nCouldn't evaluate or find in history: a\r\n```\r\n\r\n## System info\r\nManjaro Linux, Python 3.9.4, IPython 7.22.0 (reproduces on IPython 8.0.0.dev)", "commits": [{"node_id": "MDY6Q29tbWl0NjU4NTE4OjllMDAzZWJmYzA2YmM1Nzk5MTYxYTA5ZWYwZDgxNmZlNGU2MWMzOWU=", "commit_message": "Merge pull request #12952 from MrMino/quiet_recall\n\nEnsure %recall does not show error after argument eval", "commit_timestamp": "2021-05-11T21:13:55Z", "files": ["IPython/core/magics/history.py"]}, {"node_id": "MDY6Q29tbWl0MTM0MzM1NDA0OmQ0MjQyMTFlZDU4NjgxYWM2ZjlkNmRjZTY3OGE3NzkxNGQ4OWM2ZDM=", "commit_message": "Backport PR #12952: Ensure %recall does not show error after argument eval", "commit_timestamp": "2021-05-11T21:14:05Z", "files": ["IPython/core/magics/history.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjVhNDUzOTE1N2M0Yjc2MDkyODZiYjg1MGJhMzAxYzI4YTQ0MGQwMGY=", "commit_message": "Merge pull request #12974 from meeseeksmachine/auto-backport-of-pr-12952-on-7.x\n\nBackport PR #12952 on branch 7.x (Ensure %recall does not show error after argument eval)", "commit_timestamp": "2021-05-11T21:29:15Z", "files": ["IPython/core/magics/history.py"]}], "labels": [], "created_at": "2021-05-05T17:52:46Z", "closed_at": "2021-05-11T21:13:55Z", "linked_pr_number": [12946], "method": ["regex"]}
{"issue_number": 12841, "title": "paste into ipython stop working with vi mode", "body": "this works well:\r\n\r\n```\r\n[ins] In [46]: In [41]: s = 'Abc Def Ghi'\r\n[ins] In [47]:\r\n```\r\n\r\nthis does not work.\r\n```\r\n[ins] In [44]: [ins] In [41]: s = 'Abc Def Ghi'                       \r\n          ...:                 \r\n          ...:                                                        \r\n  File \"<ipython-input-44-0af6a6a3f6c4>\", line 1\r\n    [ins] In [41]: s = 'Abc Def Ghi'\r\n          ^\r\nSyntaxError: invalid syntax\r\n```\r\n\r\nis it possible to configure ipython to also accept transcript under vi mode?", "commits": [{"node_id": "MDY6Q29tbWl0NjU4NTE4OjljYmIzYmE2YWViYTg4YTc2ZGE5ZGM3M2MxZDE5MzRiMDljYzJhNjM=", "commit_message": "Merge pull request #12884 from MrMino/vi_mode_prompt_strip\n\nStrip vi-mode style prompts from the input", "commit_timestamp": "2021-04-18T16:30:43Z", "files": ["IPython/core/inputtransformer2.py", "IPython/core/tests/test_inputtransformer2_line.py"]}], "labels": ["8.0 what's new"], "created_at": "2021-03-02T21:10:48Z", "closed_at": "2021-04-18T16:30:43Z", "linked_pr_number": [12841], "method": ["regex"]}
{"issue_number": 12859, "title": "Bug: extra closing ) does not trigger SyntaxError", "body": "Consider the following:\r\n```\r\n> ipython\r\nIPython 7.21.0 -- An enhanced Interactive Python. Type '?' for help.\r\n\r\nIn [1]: print('hello'))\r\n   ...:\r\n   ...:\r\n```\r\nThe extra `)` should have resulted in a `SyntaxError`; instead, more input is apparently expected. This problem is present in earlier versions of IPython as well. \r\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU4NTE4OmU4YzM1NTQyMmFlYmZlMTg5MjUwMTI2MjIyYmNlMTU0MzI4MjA0YzI=", "commit_message": "Merge pull request #12860 from MrMino/bail_sunken_parentheses\n\nBail on sunken brackets", "commit_timestamp": "2021-03-25T03:39:15Z", "files": ["IPython/core/inputtransformer2.py", "IPython/core/tests/test_inputtransformer2.py"]}], "labels": ["8.0 what's new"], "created_at": "2021-03-13T17:27:00Z", "closed_at": "2021-03-25T03:39:15Z", "linked_pr_number": [12859], "method": ["regex"]}
{"issue_number": 12658, "title": "Recursive debugger doesn't restore trace function properly", "body": "```\r\nPython 3.7.6 (default, Jan  8 2020, 20:23:39) [MSC v.1916 64 bit (AMD64)]\r\nType 'copyright', 'credits' or 'license' for more information\r\nIPython 7.18.1 -- An enhanced Interactive Python. Type '?' for help.\r\n\r\nIn [1]: 1/0\r\n---------------------------------------------------------------------------\r\nZeroDivisionError                         Traceback (most recent call last)\r\n<ipython-input-1-9e1622b385b6> in <module>\r\n----> 1 1/0\r\n\r\nZeroDivisionError: division by zero\r\n\r\nIn [2]: %debug\r\n> <ipython-input-1-9e1622b385b6>(1)<module>()\r\n----> 1 1/0\r\n\r\nipdb> debug print()\r\nENTERING RECURSIVE DEBUGGER\r\n> <string>(1)<module>()\r\n\r\n(ipdb>) q\r\nLEAVING RECURSIVE DEBUGGER\r\n--Call--\r\n> c:\\users\\quentin.peter\\appdata\\local\\continuum\\anaconda3\\lib\\cmd.py(157)postcmd()\r\n    155         return line\r\n    156\r\n--> 157     def postcmd(self, stop, line):\r\n    158         \"\"\"Hook method executed just after a command dispatch is finished.\"\"\"\r\n    159         return stop\r\n\r\nipdb>\r\n```\r\n\r\nIt should go back at\r\n```\r\n> <ipython-input-1-9e1622b385b6>(1)<module>()\r\n----> 1 1/0\r\n```\r\nNot `postcmd`", "commits": [{"node_id": "MDY6Q29tbWl0NjU4NTE4OjE1YWFhN2YwOWRlNjkxMDYxNjRlYjdkYmMzMmUxOWNlNDI0YzEyYTQ=", "commit_message": "Merge pull request #12659 from impact27/patch-9\n\nFix settrace for recursive debugger", "commit_timestamp": "2020-10-23T00:26:07Z", "files": ["IPython/core/debugger.py"]}, {"node_id": "MDY6Q29tbWl0MTM0MzM1NDA0OjhiMGM2OTlhMzg0ZWU3OGU3Yzc2MWY0YzU3Yzk4ODA3ZjFmNTgzZGU=", "commit_message": "Backport PR #12659: Fix settrace for recursive debugger", "commit_timestamp": "2020-10-23T00:26:20Z", "files": ["IPython/core/debugger.py"]}], "labels": [], "created_at": "2020-10-21T14:27:47Z", "closed_at": "2020-10-23T00:26:08Z", "linked_pr_number": [12658], "method": ["regex"]}
{"issue_number": 11736, "title": "%run does not work with import hooks", "body": "Hi,\r\n\r\nI ran into an issue where the use of `imp` vs `__import__` matters. `imp` is bypassing some things that import statements do, such as calling custom [import hooks](https://docs.python.org/3/reference/import.html#import-hooks). Is there are reason `imp` is being used? If not, can this be updated to use `__import__`?\r\n\r\nAs a note, this comes up when using `%run -m foo`.\r\n\r\nThanks!", "commits": [{"node_id": "MDY6Q29tbWl0NjU4NTE4OjAzOTVhYTVjMmY4OTc4ZTFkNGViYjU4ZTJlZmU2MWNkZjZhMzNkNDk=", "commit_message": "Merge pull request #12171 from ngoldbaum/run-module-import-hook\n\nsupport using '%run -m' for modules importable via an import hook", "commit_timestamp": "2020-03-14T01:18:21Z", "files": ["IPython/core/magics/execution.py", "IPython/core/tests/test_magic.py", "IPython/utils/module_paths.py"]}], "labels": [], "created_at": "2019-05-17T19:49:12Z", "closed_at": "2020-03-14T01:18:22Z", "linked_pr_number": [11736], "method": ["regex"]}
{"issue_number": 10736, "title": "Failed magic import appears not to throw error", "body": "I'm trying to test that an ipython magic works inside of jupyter by doing this: `jupyter nbconvert --execute --to html tests/bigquery.ipynb`, where the `biquery.ipynb` notebook imports a magic called `%bigquery`. Currently, the `%bigquery` magic, which allows you to query Google's BigQuery service, is not importing due to a config problem.\r\n\r\nUnexpectedly, even though the output html says `ERROR:root:Line magic function %bigquery not found.`, the jupyter nbconvert command itself does not crash, even though it's supposed to if any exceptions arise. \r\n\r\nIf it doesn't crash when it's supposed to, I can't reliably test whether the magic is in fact working. This appears to be the default ipython behavior. As @minrk put it in gitter: \"The error handling in magics is probably an IPython thing. For a long time, the only thing that mattered for IPython was what it looked like. But then Jupyter came around, and it now makes a difference whether an error was raised, or just 'reported' to output. This is the kind of thing that affects nbconvert's \"this failed\". But there are still a number of 'errors' that are caught and displayed as nicer errors than tracebacks, but now Jupyter frontends don't know that the cell failed.\"\r\n\r\nTo reproduce the issue in ipython:\r\n```python\r\nIn [2]: import IPython\r\nIn [3]: shell = IPython.core.interactiveshell.InteractiveShell.instance()\r\nIn [4]: shell.run_cell('%bigquery')\r\nERROR:root:Line magic function `%bigquery` not found.\r\nOut[4]: <ExecutionResult object at 7f27b7605e50, execution_count=None error_before_exec=None error_in_exec=None result=None>\r\n```\r\n\r\nJust wanted to flag this bug!", "commits": [{"node_id": "MDY6Q29tbWl0NjU4NTE4Ojc5OTIxZjZmZTM4MGY1N2NmMzUzZDc2NjE1ZTRmZDg0NzJjODMxMTg=", "commit_message": "Merge pull request #10737 from minrk/magic-not-found\n\nRaise UsageError on magic not found", "commit_timestamp": "2017-08-08T16:46:22Z", "files": ["IPython/core/interactiveshell.py", "IPython/core/tests/test_magic.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmQ5NzhlMzdhNDI2ODRhOTQ1NGJjNWRjNTYxZWRkODFkZDA0ZThkYzI=", "commit_message": "Backport PR #10737: Raise UsageError on magic not found\n\navoids reporting missing magics as succesful execution.\n\ncloses  10736", "commit_timestamp": "2017-08-08T16:46:43Z", "files": ["IPython/core/interactiveshell.py", "IPython/core/tests/test_magic.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4Ojg2MmJmZDc3Njk4MjMwMmFkOWU0YTc3ZDgzNDFlMWU0OGZlNDFiMjY=", "commit_message": "Merge pull request #10738 from ipython/auto-backport-of-pr-10737\n\nBackport PR #10737 on branch 5.x", "commit_timestamp": "2017-08-09T11:11:52Z", "files": ["IPython/core/interactiveshell.py", "IPython/core/tests/test_magic.py"]}], "labels": ["backported"], "created_at": "2017-08-07T14:46:37Z", "closed_at": "2017-08-08T16:46:23Z", "linked_pr_number": [10736], "method": ["regex"]}
{"issue_number": 10565, "title": "IPython 5.3.0 debug mode breakpoint issue", "body": "Hi IPython Team,\r\n\r\nI recently upgraded Python to version 2.7.8 (from 2.6.6) and IPython to version 5.3.0.  I noticed that when using the magic command (%run -d) in IPython, subsequent runs of a program seem to fail with a \"KeyError\", apparently due to the debugger's failure to clear breakpoints from previous runs of the program.\r\n\r\nI attached a sample of output from one such failed run (see below), where a breakpoint that had been set at line 56 in a previous call caused the program to crash, though in the current call, only one breakpoint at line 70 is requested.\r\n\r\nFor the time being, I've downgraded to IPython version 4.2.0, which seems to work as expected.\r\n\r\nCheers,\r\nTaylor\r\n\r\n[ipython_error.txt](https://github.com/ipython/ipython/files/1004089/ipython_error.txt)", "commits": [{"node_id": "MDY6Q29tbWl0NjU4NTE4OmYyZDI5MTNjOTc3ZTQxMmJlZmNmMWE4MmRhMmY4MmI2YWQzZDhhMjc=", "commit_message": "Merge pull request #10699 from kgritesh/fix_clear_breakpoints\n\nfix: Clear breakpoints before running any script with debugger.", "commit_timestamp": "2017-07-13T14:31:33Z", "files": ["IPython/core/magics/execution.py", "IPython/core/tests/test_run.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmRiMTU5NzZmZGZlNWU1YTI5YjRmY2U4ZGZhODNkYTczNTJmNDgyMGU=", "commit_message": "Backport PR #10699: fix: Clear breakpoints before running any script with debugger.\n\nFixes  10565", "commit_timestamp": "2017-07-13T14:31:59Z", "files": ["IPython/core/magics/execution.py", "IPython/core/tests/test_run.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjVjZmE2N2EyMWU0M2QzMTM4OGE0YzIwZDY0MGU4MDg0ZTYxNmMzMTI=", "commit_message": "Merge pull request #10700 from ipython/auto-backport-of-pr-10699\n\nBackport PR #10699 on branch 5.x", "commit_timestamp": "2017-07-13T15:29:08Z", "files": ["IPython/core/magics/execution.py", "IPython/core/tests/test_run.py"]}], "labels": ["backported"], "created_at": "2017-05-16T11:02:16Z", "closed_at": "2017-07-13T14:31:34Z", "linked_pr_number": [10565], "method": ["regex"]}
{"issue_number": 9616, "title": "Init signature gone for builtins", "body": "#9335 seem to have broken some things in inspect, `Init signature` is sometime gone:\n\n```\n(rootenv)~/dev/ipython master$ ipython -c 'list?'\nDocstring:\nlist() -> new empty list\nlist(iterable) -> new list initialized from iterable's items\nType:      type\n\n(rootenv)~/dev/ipython master$ git checkout 4.2.0\n...\n\n(rootenv)~/dev/ipython (4.2.0)$ ipython -c 'list?'\nInit signature: list(self, /, *args, **kwargs)\nDocstring:\nlist() -> new empty list\nlist(iterable) -> new list initialized from iterable's items\nType:           type\n```\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU4NTE4OjViNjY4ZjI0OThjNjQwMzY0ZDFkOWI3NDU5OWYzOWE1NTE3YmQ4MjE=", "commit_message": "Merge pull request #9617 from minrk/list-signature\n\nget signature from init if top-level signature fails", "commit_timestamp": "2016-06-15T11:55:44Z", "files": ["IPython/core/oinspect.py", "IPython/core/tests/test_oinspect.py"]}], "labels": [], "created_at": "2016-06-14T23:26:29Z", "closed_at": "2016-06-15T11:55:44Z", "linked_pr_number": [9616], "method": ["regex"]}
{"issue_number": 9413, "title": "Possible crash reporting 'French' OS error message", "body": "Hi, FYI possible crash with this error:\n`UnicodeDecodeError: 'ascii' codec can't decode byte 0xe9 in position 39: ordinal not in range(128)`\n\n**Context**: I am running and external program through ipython; my external program crashed for some reason. As normal ipython caught this error, but while trying to report it, ipython crashed as well. It seems to be due to the tentative to create a string (str) from a unicode one, ie including 'French' accents as reported by windows (see the string s below). \n\nI am runing python2.7, ipython 4.2, windows7.\n\nThanks\n\n```\nFile \"C:\\Program Files (x86)\\python27\\lib\\site-packages\\IPython\\core\\interactiveshell.py\", line 2902, in run_code\n    self.showtraceback()\n\n  File \"C:\\Program Files (x86)\\python27\\lib\\site-packages\\IPython\\core\\interactiveshell.py\", line 1830, in showtraceback\n    value, tb, tb_offset=tb_offset)\n\n  File \"C:\\Program Files (x86)\\python27\\lib\\site-packages\\IPython\\core\\ultratb.py\", line 1392, in structured_traceback\n    self.tb = tb\n\n  File \"C:\\Program Files (x86)\\python27\\lib\\site-packages\\IPython\\core\\ultratb.py\", line 1309, in structured_traceback\n    elist = self._extract_tb(tb)\n\n  File \"C:\\Program Files (x86)\\python27\\lib\\site-packages\\IPython\\core\\ultratb.py\", line 640, in structured_traceback\n    # The exception info should be a single entry in the list.\n\n  File \"C:\\Program Files (x86)\\python27\\lib\\site-packages\\IPython\\core\\ultratb.py\", line 752, in _format_exception_only\n    list.append('%s%s:%s %s\\n' % (str(stype), Colors.excName,\n\nUnicodeDecodeError: 'ascii' codec can't decode byte 0xe9 in position 39: ordinal not in range(128)\n\nIn [166]: %debug\n> c:\\program files (x86)\\python27\\lib\\site-packages\\ipython\\core\\ultratb.py(752)_format_exception_only()\n    750                 s = self._some_str(value)\n    751             if s:\n--> 752                 list.append('%s%s:%s %s\\n' % (str(stype), Colors.excName,\n    753                                               Colors.Normal, s))\n    754             else:\n\nipdb> stype\n '\\x1b[1;31mWindowsError\\x1b[0m'\n\nipdb> Colors\n{'em': '\\x1b[1;36m', 'filenameEm': '\\x1b[1;32m', 'excName': '\\x1b[1;31m', 'valEm': '\\x1b[1;34m', 'nameEm': '\\x1b[1;35m', 'line': '\\x1b[1;33m', 'topline': '\\x1b[1;31m', 'name': '\\x1b[0;35m', 'caret': '\\x1b[1;37m', 'val': '\\x1b[0;32m', 'vName': '\\x1b[0;36m', 'Normal': '\\x1b[0m', 'filename': '\\x1b[0;32m', 'linenoEm': '\\x1b[1;32m', 'lineno': '\\x1b[0;32m', 'normalEm': '\\x1b[1;36m'}\n\nipdb> print s\n[Error 32] Le processus ne peut pas acc\ufffdder au fichier car ce fichier est utilis\ufffd par un autre processus\n```\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU4NTE4OmNjYzhhMGU5YWFjN2FiMDg3MWRkNDIxMDhmOGY0NDRmNjRiNDUxN2M=", "commit_message": "Merge pull request #9419 from minrk/str-exc-py2\n\nhandle unicode exception messages in xmode plain", "commit_timestamp": "2016-04-27T10:50:36Z", "files": ["IPython/core/tests/test_ultratb.py", "IPython/core/ultratb.py"]}], "labels": [], "created_at": "2016-04-21T08:03:12Z", "closed_at": "2016-04-27T10:50:36Z", "linked_pr_number": [9413], "method": ["regex"]}
{"issue_number": 9087, "title": "User defined context in print_stack_entry", "body": "When using `ipdb`'s `set_trace()`, `print_stack_entry` sets the [default context to 3 lines](https://github.com/ipython/ipython/blob/master/IPython/core/debugger.py#L335). While this does preserve space, it can be very helpful to have a user defined context size, rather than continuously hitting `l` (list) to display more lines.\n\nIt would be great to add a keyword to `ipdb's`'s `set_trace` (such as `context` or even `c`) that passes a context value to [Pdb](https://github.com/ipython/ipython/blob/master/IPython/core/debugger.py#L201). The change to ipython would be minimal: Adding a `context` keyword to `Pdb` and `print_stack_entry`.\n\nNot sure if there is a cleaner way to integrate this (perhaps into [Tracer's set_trace](https://github.com/ipython/ipython/blob/master/IPython/core/debugger.py#L170)?)\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU4NTE4Ojc0ODYwYjg2OTUwZjNlMzIxYTZlMTM3ZGVjYTQ0OWMzYjFjNzhiMWE=", "commit_message": "Merge pull request #9097 from JamshedVesuna/master\n\nAdded user defined context for Pdb", "commit_timestamp": "2016-01-05T14:18:43Z", "files": ["IPython/core/debugger.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4Ojc0ODYwYjg2OTUwZjNlMzIxYTZlMTM3ZGVjYTQ0OWMzYjFjNzhiMWE=", "commit_message": "Merge pull request #9097 from JamshedVesuna/master\n\nAdded user defined context for Pdb", "commit_timestamp": "2016-01-05T14:18:43Z", "files": ["IPython/core/debugger.py"]}], "labels": [], "created_at": "2015-12-20T22:26:32Z", "closed_at": "2016-01-05T14:18:43Z", "linked_pr_number": [9087], "method": ["regex"]}
{"issue_number": 8905, "title": "For backwards compatibility shouldn't ipywidgets be a dependency of the ipython notebook?", "body": "I filed this bug with anaconda:\n\nhttps://github.com/ContinuumIO/anaconda-issues/issues/470#issuecomment-147775813\n\nRight now, `conda install ipython-notebook` provides a broken install for a widget backwards compatible IPython 4. You must seperately install `ipywidgets` for things to work fully in a IPython 3 backward compatible way.\n\nMy suggestion to Continuum was to include `ipywidgets` as a hard dependency of `ipython-notebook` 4. They said this was an upstream issue. It may also affect `pip install ipython[notebook]` but I haven't checked.\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU4NTE4OmRkNjEzNDYxOGRkYzdlMmI0MDRmZTJiYTM2ODMyYWNhNDQ4ZjRmNjk=", "commit_message": "Merge pull request #8907 from minrk/notebook-widgets\n\nipython[notebook] should depend on ipywidgets", "commit_timestamp": "2015-10-14T21:08:34Z", "files": ["setup.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmRkNjEzNDYxOGRkYzdlMmI0MDRmZTJiYTM2ODMyYWNhNDQ4ZjRmNjk=", "commit_message": "Merge pull request #8907 from minrk/notebook-widgets\n\nipython[notebook] should depend on ipywidgets", "commit_timestamp": "2015-10-14T21:08:34Z", "files": ["setup.py"]}], "labels": [], "created_at": "2015-10-13T17:52:48Z", "closed_at": "2015-10-14T21:08:34Z", "linked_pr_number": [8905], "method": ["regex"]}
{"issue_number": 7845, "title": "Objects with unicode-encoded repr failed to get formatter for printing in list with floats in it.", "body": "How to reproduce:\n\n```\nclass UTest(object):                                                                                                                                                                                                                \n    def __repr__(self):\n        return unicode(self).encode('utf8')   # returns str object as it should\n    def __unicode__(self):\n        return u'\u0442\u0435\u0441\u0442'\n\n\nIn [61]: u = UTest()\n\nIn [62]: [u, 123]\nOut[62]: [\u0442\u0435\u0441\u0442, 123]\n\nIn [63]: [u, 123.0]\nOut[63]: ---------------------------------------------------------------------------\nKeyError                                  Traceback (most recent call last)\n<ipython-input-63-d76b6d0c9bea> in <module>()\n----> 1 [u, 123.0]\n\n/usr/lib64/python2.7/site-packages/IPython/core/displayhook.pyc in __call__(self, result)\n    251             self.write_output_prompt()\n    252             format_dict, md_dict = self.compute_format_data(result)\n--> 253             self.write_format_data(format_dict, md_dict)\n    254             self.update_user_ns(result)\n    255             self.log_output(format_dict)\n\n/usr/lib64/python2.7/site-packages/IPython/core/displayhook.pyc in write_format_data(self, format_dict, md_dict)\n    172         # newline, even if all the prompt separators are ''. This is the\n    173         # standard IPython behavior.\n--> 174         result_repr = format_dict['text/plain']\n    175         if '\\n' in result_repr:\n    176             # So that multi-line strings line up with the left column of\n\nKeyError: 'text/plain'\n\n\n## looks like we don't have 'text/plain' in format_dict, lets check it\nIn [64]: from IPython.core.formatters import DisplayFormatter\n\nIn [65]: d = DisplayFormatter()\n\nIn [66]: d.format([u, 123.0])\nOut[66]: ({}, {})\n\nIn [67]: d.format([u, 123])\nOut[67]: ({u'text/plain': '[\\xd1\\x82\\xd0\\xb5\\xd1\\x81\\xd1\\x82, 123]'}, {})\n\nIn [68]: d.format({123.0: u})                                                                                                                                                                                                          \nOut[68]: ({}, {})\n\nIn [69]: d.format({123: u})\nOut[69]: ({u'text/plain': '{123: \\xd1\\x82\\xd0\\xb5\\xd1\\x81\\xd1\\x82}'}, {})\n\n```\n\nWell, that's it, formatter returns empty format_dict specifically for object with unicode-encoded repr and float number in lists and dicts.\nI tested this on 2.2.0, 2.3.0, 2.4.0, they all affected.\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU4NTE4OmMzOTY1MTUyZDBmOTYxNzNlZDg0ZjhkZjg5NTY1YzdlMTgwZDU3MzQ=", "commit_message": "Merge pull request #7853 from minrk/unicode-repr-bytes\n\nhandle unicode/str in pretty, str formatter", "commit_timestamp": "2015-03-12T22:09:10Z", "files": ["IPython/core/formatters.py", "IPython/lib/pretty.py", "IPython/lib/tests/test_pretty.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmMzOTY1MTUyZDBmOTYxNzNlZDg0ZjhkZjg5NTY1YzdlMTgwZDU3MzQ=", "commit_message": "Merge pull request #7853 from minrk/unicode-repr-bytes\n\nhandle unicode/str in pretty, str formatter", "commit_timestamp": "2015-03-12T22:09:10Z", "files": ["IPython/core/formatters.py", "IPython/lib/pretty.py", "IPython/lib/tests/test_pretty.py"]}], "labels": [], "created_at": "2015-02-24T10:56:30Z", "closed_at": "2015-03-12T22:09:10Z", "linked_pr_number": [7845], "method": ["regex"]}
{"issue_number": 7829, "title": "nbconvert --to slides --post server reveal.js redirection not working", "body": "I am using ipython nbconvert to serve my notebooks as slides locally.\n\nWhen I run ipython nbconvert --to slides --post serve my-notebook.ipynb the slides are not rendered correctly.\n\nI have noticed in the log that a redirection is added to serve reveal.js:\n\n`[NbConvertApp] Redirecting reveal.js requests to https://cdn.jsdelivr.net/reveal.js/2.5.0`\n\nbut https://cdn.jsdelivr.net/reveal.js/2.5.0 returns a 403 error. \n\nI have noticed that in the most recent version the file ipython/IPython/nbconvert/postprocessors/serve.py has the url updated to point to https://cdn.jsdelivr.net/reveal.js/2.6.2 -- this new url also returns a 403 error. \n\n---\n\nEnvironment details:\n\npython -c \"import IPython; print(IPython.sys_info())\"\n{'commit_hash': '1c0eb68',\n 'commit_source': 'installation',\n 'default_encoding': 'UTF-8',\n 'ipython_path': '/Users/lm/anaconda/lib/python3.4/site-packages/IPython',\n 'ipython_version': '2.3.1',\n 'os_name': 'posix',\n 'platform': 'Darwin-14.1.0-x86_64-i386-64bit',\n 'sys_executable': '/Users/lm/anaconda/bin/python',\n 'sys_platform': 'darwin',\n 'sys_version': '3.4.2 |Anaconda 2.1.0 (x86_64)| (default, Oct 21 2014, '\n                '17:42:20) \\n'\n                '[GCC 4.2.1 (Apple Inc. build 5577)]'}\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU4NTE4OmVjZThmYmEyMzI1NjdjMjY1ZjdjYWM4MjI5MDYzZTM0ZTc5ZGQ5YWI=", "commit_message": "Merge pull request #7850 from minrk/postprocess-serve\n\nrethrow upstream HTTP errors", "commit_timestamp": "2015-02-25T00:03:28Z", "files": ["IPython/nbconvert/postprocessors/serve.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmVjZThmYmEyMzI1NjdjMjY1ZjdjYWM4MjI5MDYzZTM0ZTc5ZGQ5YWI=", "commit_message": "Merge pull request #7850 from minrk/postprocess-serve\n\nrethrow upstream HTTP errors", "commit_timestamp": "2015-02-25T00:03:28Z", "files": ["IPython/nbconvert/postprocessors/serve.py"]}], "labels": [], "created_at": "2015-02-21T17:45:00Z", "closed_at": "2015-02-25T00:03:28Z", "linked_pr_number": [7829], "method": ["regex"]}
{"issue_number": 7835, "title": "ipython exits with traceback when run in non-existing directory", "body": "Description of problem:  \nI tried to run ipython3 in a directory, which was already deleted. ipython  \nended with Traceback.                                                                                 \n\nVersion-Release number of selected component (if applicable):  \npython3-ipython-2.3.0-1.fc21.noarch                                                                   \n\nHow reproducible:  \nalways                                                                                                \n\nSteps to Reproduce:  \n1. run ipython3 in non-existing directory                                                             \n\nActual results:\n\n```\n$ ipython3\n[TerminalIPythonApp] ERROR | Current working directory doesn't exist.\nTraceback (most recent call last):                                                                    \n  File \"/usr/bin/ipython3\", line 5, in <module>                                                       \n    start_ipython()                                                                                   \n  File \"/usr/lib/python3.4/site-packages/IPython/__init__.py\", line 120, in                           \nstart_ipython                                                                                         \n    return launch_new_instance(argv=argv, **kwargs)                                                   \n  File \"/usr/lib/python3.4/site-packages/IPython/config/application.py\", line                         \n562, in launch_instance                                                                               \n    app = cls.instance(**kwargs)                                                                      \n  File \"/usr/lib/python3.4/site-packages/IPython/config/configurable.py\", line                        \n354, in instance                                                                                      \n    inst = cls(*args, **kwargs)                                                                       \n  File \"<string>\", line 2, in __init__                                                                \n  File \"/usr/lib/python3.4/site-packages/IPython/config/application.py\", line                         \n92, in catch_config_error                                                                             \n    return method(app, *args, **kwargs)                                                               \n  File \"/usr/lib/python3.4/site-packages/IPython/core/application.py\", line                           \n183, in __init__                                                                                      \n    directory = py3compat.getcwd()                                                                    \nFileNotFoundError: [Errno 2] No such file or directory                                                \n```\n\nExpected results:  \nError message, but no Traceback                                                                       \n\nForwarded from https://bugzilla.redhat.com/show_bug.cgi?id=1195181.\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU4NTE4OmJjOTk1ZjgwY2VlMjRmYjgwYTUxMDM3OTdhNTkwNDdiNjc2MGU3OWQ=", "commit_message": "Merge pull request #7836 from minrk/die-no-cwd\n\nexit if cwd doesn't exist", "commit_timestamp": "2015-02-28T18:14:08Z", "files": ["IPython/core/application.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmJjOTk1ZjgwY2VlMjRmYjgwYTUxMDM3OTdhNTkwNDdiNjc2MGU3OWQ=", "commit_message": "Merge pull request #7836 from minrk/die-no-cwd\n\nexit if cwd doesn't exist", "commit_timestamp": "2015-02-28T18:14:08Z", "files": ["IPython/core/application.py"]}], "labels": [], "created_at": "2015-02-23T14:09:50Z", "closed_at": "2015-02-28T18:14:08Z", "linked_pr_number": [7835], "method": ["regex"]}
{"issue_number": 7698, "title": "Output widget issues. ", "body": "Widget outputs not stored in notebook format anymore. \n\nExample of beating frequency does not work the same for 2 reasons : \n\n1 - `<audio controls=\\\"controls\\\" >` not in ipynb anymore. \n2 - `f1, f2 = v.children`raise as `v` has 3 childrens: `f1`, `f2` and `out`.\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU4NTE4OjliOGZiODhhMmZmNmYwNWMyM2YwOTg5MDI1YzY2NmE5YzA5YmQ3MGI=", "commit_message": "Merge pull request #7703 from ipython/revert-7554-interact-fix\n\nRevert \"Use Output widget with Interact\"", "commit_timestamp": "2015-02-07T22:49:59Z", "files": ["IPython/html/widgets/interaction.py", "IPython/html/widgets/tests/test_interaction.py", "IPython/html/widgets/widget_output.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjliOGZiODhhMmZmNmYwNWMyM2YwOTg5MDI1YzY2NmE5YzA5YmQ3MGI=", "commit_message": "Merge pull request #7703 from ipython/revert-7554-interact-fix\n\nRevert \"Use Output widget with Interact\"", "commit_timestamp": "2015-02-07T22:49:59Z", "files": ["IPython/html/widgets/interaction.py", "IPython/html/widgets/tests/test_interaction.py", "IPython/html/widgets/widget_output.py"]}], "labels": ["widgets"], "created_at": "2015-02-05T22:54:36Z", "closed_at": "2015-02-07T22:49:59Z", "linked_pr_number": [7698], "method": ["regex"]}
{"issue_number": 7490, "title": "nbformat v2 notebook with missing 'stream' key in stream outputs", "body": "@stefanv just sent me an nbformat 2 notebook which was missing the 'stream' keys in stream outputs, and failed to open in current master because of this.\n\n@minrk , can you remember if that was ever a valid option in the notebook format? If so, we should support it. If not, we can write it off as having been saved by some broken development version of IPython. \n", "commits": [{"node_id": "MDY6Q29tbWl0NjU4NTE4OmVkZDE2M2ZjNGFkMzI5MjE2ZWE2MjdhNjkxNmIyMzg2NGI4NTQ2NmE=", "commit_message": "Merge pull request #7492 from minrk/missing-stream\n\nhandle missing stream name in nbformat conversion", "commit_timestamp": "2015-01-17T01:48:07Z", "files": ["IPython/nbformat/v4/convert.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmVkZDE2M2ZjNGFkMzI5MjE2ZWE2MjdhNjkxNmIyMzg2NGI4NTQ2NmE=", "commit_message": "Merge pull request #7492 from minrk/missing-stream\n\nhandle missing stream name in nbformat conversion", "commit_timestamp": "2015-01-17T01:48:07Z", "files": ["IPython/nbformat/v4/convert.py"]}], "labels": [], "created_at": "2015-01-16T23:03:56Z", "closed_at": "2015-01-17T01:48:07Z", "linked_pr_number": [7490], "method": ["regex"]}
{"issue_number": 6278, "title": "interact doesn't work with instance methods", "body": "This code:\n\n``` python\nfrom IPython.html.widgets import interact\n\nclass Foo(object):\n    def show(self, x):\n        print x\n\nf = Foo()\n\ninteract(f.show, x=(1,10))\n```\n\nproduces this exception:\n\n```\n---------------------------------------------------------------------------\nAttributeError                            Traceback (most recent call last)\n<ipython-input-58-b03b8685dfc0> in <module>()\n      7 f = Foo()\n      8 \n----> 9 interact(f.show, x=(1,10))\n\n/home/fperez/usr/lib/python2.7/site-packages/IPython/html/widgets/interaction.pyc in interact(__interact_f, **kwargs)\n    235         f = __interact_f\n    236         w = interactive(f, **kwargs)\n--> 237         f.widget = w\n    238         display(w)\n    239         return f\n\nAttributeError: 'instancemethod' object has no attribute 'widget'\n```\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU4NTE4OjI1ZDY0MzNiOGM0OGFlN2MzMDgyODcwNjQ4YmVjN2UyMjg2NjYxNmQ=", "commit_message": "Merge pull request #7466 from minrk/interact-method\n\nallow interact(instancemethod)", "commit_timestamp": "2015-01-15T18:22:27Z", "files": ["IPython/html/widgets/interaction.py", "IPython/html/widgets/tests/test_interaction.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjI1ZDY0MzNiOGM0OGFlN2MzMDgyODcwNjQ4YmVjN2UyMjg2NjYxNmQ=", "commit_message": "Merge pull request #7466 from minrk/interact-method\n\nallow interact(instancemethod)", "commit_timestamp": "2015-01-15T18:22:27Z", "files": ["IPython/html/widgets/interaction.py", "IPython/html/widgets/tests/test_interaction.py"]}], "labels": [], "created_at": "2014-08-06T18:52:54Z", "closed_at": "2015-01-15T18:22:27Z", "linked_pr_number": [6278], "method": ["regex"]}
{"issue_number": 7072, "title": "warn_format_error no longer makes it clear that there was a problem formatting the output", "body": "The recent changes to `warn_format_error` seem to have made it useless: one can no longer see the difference between a failed command and the failure to print the output.\n\nCurrently, if formatting fails, `warn_format_error` shows the exception with traceback which looks indistinguishable to a normal traceback when a command failed.\n\nAt the very least, the name `warn_format_error` no longer fits what it does.\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU4NTE4OmQ5NWMzNWMzZmE4OTMzODg3MGJmZmEwMTJiNjU0Mzg5ZTA1NDY4MzY=", "commit_message": "Merge pull request #7465 from minrk/warn-no-warn\n\nupdate name, docstring for warn_format_error", "commit_timestamp": "2015-01-15T18:12:29Z", "files": ["IPython/core/formatters.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmQ5NWMzNWMzZmE4OTMzODg3MGJmZmEwMTJiNjU0Mzg5ZTA1NDY4MzY=", "commit_message": "Merge pull request #7465 from minrk/warn-no-warn\n\nupdate name, docstring for warn_format_error", "commit_timestamp": "2015-01-15T18:12:29Z", "files": ["IPython/core/formatters.py"]}], "labels": [], "created_at": "2014-12-01T10:15:34Z", "closed_at": "2015-01-15T18:12:29Z", "linked_pr_number": [7072], "method": ["regex"]}
{"issue_number": 5530, "title": "Notebooks with filenames with accented characters (\"\u00e3\", \"\u00ed\", etc.) don't open in 2.0", "body": "I'm using Python 2.7, Conda 3.4.0 and IPython 2.0 (on windows, with chrome).\n\nTo reproduce the problem, create a notebook, change the name to include an accented character, close the notebook and try to reopen it. This worked before 2.0.\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU4NTE4Ojg4YTgxZjQyZWMxNjQ4NTcyNzI4YWQ1ZjdhMjJlOTFjNzMyNmY4NmE=", "commit_message": "Merge pull request #7461 from minrk/utf8-urls\n\nescaped URLs are always utf-8", "commit_timestamp": "2015-01-15T00:43:57Z", "files": ["IPython/html/utils.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4Ojg4YTgxZjQyZWMxNjQ4NTcyNzI4YWQ1ZjdhMjJlOTFjNzMyNmY4NmE=", "commit_message": "Merge pull request #7461 from minrk/utf8-urls\n\nescaped URLs are always utf-8", "commit_timestamp": "2015-01-15T00:43:57Z", "files": ["IPython/html/utils.py"]}], "labels": [], "created_at": "2014-04-05T15:19:49Z", "closed_at": "2015-01-15T00:43:57Z", "linked_pr_number": [5530], "method": ["regex"]}
{"issue_number": 7275, "title": "Allow arbitrary notebook filename extensions", "body": "(... or allow custom handlers)\n\nI first described my use case in #7222, it has slightly changed since then. [GitHub repo here](https://github.com/rossant/ipymd).\n\nBasically I want to write technical documents/books in Markdown, and use the notebook UI to write/execute code. This brings the benefits of Markdown with the benefits of the notebook UI for interactive computing. When writing a book, I don't want to save/version-control the code outputs. I can always build a full document with the outputs eventually.\n\nTechnically, I can achieve this by writing a custom `FileContentsManager`, and implementing my own serialization/deserialization process for notebooks (basically `nbcontents (dict) <==> markdown` converters).\n\nThe only thing that doesn't work nicely for now is the file extension. Using `.ipynb` works, but it's probably not a good idea to use the same extension for two different file formats. When using `.md`, it looks like I cannot use the notebook UI because of the way handlers are implemented. AFAIU there's a `.ipynb` regex that redirects those paths to the notebook UI. For now, I could patch IPython myself, and ask users to clone my own fork/branch.\n\nI can see at least two solutions:\n- create a parameter with a list of file extensions that redirect to the notebook UI (basically changing the regex)\n- create a parameter with a list of extra handlers for the Web server\n\nWhat do you think?\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU4NTE4OjNjMGJiZGU0NWJjYTliM2NmZjQ2M2QxYjIzZmQ1YjBkZGFiZjE0NWE=", "commit_message": "Merge pull request #7278 from minrk/nb-file-ext\n\ndon't enforce .ipynb extension in URLs", "commit_timestamp": "2015-01-06T11:42:54Z", "files": ["IPython/html/base/handlers.py", "IPython/html/nbconvert/handlers.py", "IPython/html/notebook/handlers.py", "IPython/html/tests/test_paths.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjNjMGJiZGU0NWJjYTliM2NmZjQ2M2QxYjIzZmQ1YjBkZGFiZjE0NWE=", "commit_message": "Merge pull request #7278 from minrk/nb-file-ext\n\ndon't enforce .ipynb extension in URLs", "commit_timestamp": "2015-01-06T11:42:54Z", "files": ["IPython/html/base/handlers.py", "IPython/html/nbconvert/handlers.py", "IPython/html/notebook/handlers.py", "IPython/html/tests/test_paths.py"]}], "labels": [], "created_at": "2014-12-19T15:11:29Z", "closed_at": "2015-01-06T11:42:55Z", "linked_pr_number": [7275], "method": ["regex"]}
{"issue_number": 7209, "title": "lsmagic causes invalid Notebook JSON", "body": "This is happening in master. Steps to reproduce:\n- create a new notebook\n- type `lsmagic`\n- save the notebook\n\nA message pops up \"Notebook validation failed\" and the a console output shows:\n\n```\n[E 11:34:22.498 NotebookApp] Notebook JSON is invalid: '{\"line\": {\"xmode\": \"Basi\ncMagics\", \"load_ext\": \"ExtensionMagics\", \"alias\": \"OSMagics\", \"logon\": \"LoggingM\nagics\", \"notebook\": \"BasicMagics\", \"killbgscripts\": \"ScriptMagics\", \"rehashx\": \"\nOSMagics\", \"pinfo\": \"NamespaceMagics\", \"pinfo2\": \"NamespaceMagics\", \"macro\": \"Ex\necutionMagics\", ...\n```\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU4NTE4OjRiMmVjYmU0ZDBjYWExMDMxNGFiMzU5ZjM4Njk5MTk4YTM5NjJkNWQ=", "commit_message": "Merge pull request #7210 from minrk/json-display\n\nJSON formatter expects JSONable dict/list", "commit_timestamp": "2014-12-16T10:38:27Z", "files": ["IPython/core/display.py", "IPython/core/formatters.py", "IPython/core/magics/basic.py", "IPython/core/tests/test_display.py", "IPython/core/tests/test_formatters.py", "IPython/core/tests/test_magic.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjRiMmVjYmU0ZDBjYWExMDMxNGFiMzU5ZjM4Njk5MTk4YTM5NjJkNWQ=", "commit_message": "Merge pull request #7210 from minrk/json-display\n\nJSON formatter expects JSONable dict/list", "commit_timestamp": "2014-12-16T10:38:27Z", "files": ["IPython/core/display.py", "IPython/core/formatters.py", "IPython/core/magics/basic.py", "IPython/core/tests/test_display.py", "IPython/core/tests/test_formatters.py", "IPython/core/tests/test_magic.py"]}], "labels": [], "created_at": "2014-12-13T10:36:51Z", "closed_at": "2014-12-16T10:38:27Z", "linked_pr_number": [7209], "method": ["regex"]}
{"issue_number": 7165, "title": "`pinfo` broken on latest master", "body": "Trying to use `?` in latest master results in this traceback:\n\n```\nIn [1]: int?\n---------------------------------------------------------------------------\nTypeError                                 Traceback (most recent call last)\n<ipython-input-1-bd0a4f8c5f8e> in <module>()\n----> 1 get_ipython().magic(u'pinfo int')\n\n/home/ssanderson/quantopian/ipython/IPython/core/interactiveshell.pyc in magic(self, arg_s)\n   2300         magic_name, _, magic_arg_s = arg_s.partition(' ')\n   2301         magic_name = magic_name.lstrip(prefilter.ESC_MAGIC)\n-> 2302         return self.run_line_magic(magic_name, magic_arg_s)\n   2303\n   2304     #-------------------------------------------------------------------------\n\n/home/ssanderson/quantopian/ipython/IPython/core/interactiveshell.pyc in run_line_magic(self, magic_name, line)\n   2221                 kwargs['local_ns'] = sys._getframe(stack_depth).f_locals\n   2222             with self.builtin_trap:\n-> 2223                 result = fn(*args,**kwargs)\n   2224             return result\n   2225\n\n/home/ssanderson/quantopian/ipython/IPython/core/magics/namespace.pyc in pinfo(self, parameter_s, namespaces)\n\n/home/ssanderson/quantopian/ipython/IPython/core/magic.pyc in <lambda>(f, *a, **k)\n    191     # but it's overkill for just that one bit of state.\n    192     def magic_deco(arg):\n--> 193         call = lambda f, *a, **k: f(*a, **k)\n    194\n    195         if callable(arg):\n\n/home/ssanderson/quantopian/ipython/IPython/core/magics/namespace.pyc in pinfo(self, parameter_s, namespaces)\n     59         else:\n     60             self.shell._inspect('pinfo', oname, detail_level=detail_level,\n---> 61                                 namespaces=namespaces)\n     62\n     63     @line_magic\n\n/home/ssanderson/quantopian/ipython/IPython/core/interactiveshell.pyc in _inspect(self, meth, oname, namespaces, **kw)\n   1565                 pmethod(info.obj, oname, formatter)\n   1566             elif meth == 'pinfo':\n-> 1567                 pmethod(info.obj, oname, formatter, info, **kw)\n   1568             else:\n   1569                 pmethod(info.obj, oname)\n\n/home/ssanderson/quantopian/ipython/IPython/core/oinspect.pyc in pinfo(self, obj, oname, formatter, info, detail_level)\n    640         text = self._format_info(obj, oname, formatter, info, detail_level)\n    641         if text:\n--> 642             page.page(text)\n    643\n    644     def info(self, obj, oname='', formatter=None, info=None, detail_level=0):\n\n/home/ssanderson/quantopian/ipython/IPython/core/page.pyc in page(data, start, screen_lines, pager_cmd)\n    261     if ip:\n    262         try:\n--> 263             ip.hooks.show_in_pager(data, start=start, screen_lines=screen_lines)\n    264             return\n    265         except TryNext:\n\n/home/ssanderson/quantopian/ipython/IPython/core/hooks.pyc in __call__(self, *args, **kw)\n    135             #print \"prio\",prio,\"cmd\",cmd #dbg\n    136             try:\n--> 137                 return cmd(*args, **kw)\n    138             except TryNext as exc:\n    139                 last_exc = exc\n\nTypeError: show_in_pager() got an unexpected keyword argument 'start'\n```\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU4NTE4OjFkZmY1Zjk4NDljMTZjMjdlYTVkZWU0NGY3YTllYTYwY2ZhNjljMjM=", "commit_message": "Merge pull request #7166 from quantopian/fix-show-in-pager-args\n\nBUG: Fix incorrect argument signature for show_in_pager dummy hook.", "commit_timestamp": "2014-12-10T21:15:01Z", "files": ["IPython/core/hooks.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjFkZmY1Zjk4NDljMTZjMjdlYTVkZWU0NGY3YTllYTYwY2ZhNjljMjM=", "commit_message": "Merge pull request #7166 from quantopian/fix-show-in-pager-args\n\nBUG: Fix incorrect argument signature for show_in_pager dummy hook.", "commit_timestamp": "2014-12-10T21:15:01Z", "files": ["IPython/core/hooks.py"]}, {"node_id": "MDY6Q29tbWl0MTIzNjAwMzo1ZWI2ZDIzYjQ4OTc0OWU4YmI4ODRhMzE3OWY5NzE0Y2QwM2MxZGFm", "commit_message": "Replace pager_page() instead of page() for test suite\n\nSince gh-7009, pager_page is now the function that may actually launch\nexternal pagers. By replacing page(), we were hiding some bugs, as in\ngh-7166", "commit_timestamp": "2014-12-10T21:20:42Z", "files": ["IPython/testing/globalipapp.py"]}], "labels": [], "created_at": "2014-12-10T20:47:09Z", "closed_at": "2014-12-10T21:15:01Z", "linked_pr_number": [7165], "method": ["regex"]}
{"issue_number": 6080, "title": "Type check in `IPython.core.formatters` doesn't work on PyPy", "body": "The type check at https://github.com/ipython/ipython/blob/master/IPython/core/formatters.py#L67 doesn't work on PyPy since all method, both bound and unbound (including builtin ones) have the same type.\n\nI'm not sure what is the best way (and valid usecase) but this check should at least be disabled if `type(''.find) == type(str.find)`. Also, if the formatter attribute is only supposed to be a class method, it might be a better idea to do `getattr` on the class and call it with the object rather than doing it on the object itself.\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU4NTE4OmYyNTJkMmMyYTFhOWYyZTllYzlmN2E2N2E4YTQwYjZkZWVhMzZlODU=", "commit_message": "Merge pull request #7006 from minrk/valid_formatter\n\nonly check for formatters on instances", "commit_timestamp": "2014-12-05T22:16:45Z", "files": ["IPython/core/formatters.py", "IPython/core/tests/test_formatters.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmYyNTJkMmMyYTFhOWYyZTllYzlmN2E2N2E4YTQwYjZkZWVhMzZlODU=", "commit_message": "Merge pull request #7006 from minrk/valid_formatter\n\nonly check for formatters on instances", "commit_timestamp": "2014-12-05T22:16:45Z", "files": ["IPython/core/formatters.py", "IPython/core/tests/test_formatters.py"]}], "labels": [], "created_at": "2014-07-04T10:52:32Z", "closed_at": "2014-12-05T22:16:45Z", "linked_pr_number": [6080], "method": ["regex"]}
{"issue_number": 7003, "title": "Type check in `IPython.core.formatters` doesn't work on PyPy", "body": "The type check at https://github.com/ipython/ipython/blob/master/IPython/core/formatters.py#L67 doesn't work on PyPy since all method, both bound and unbound (including builtin ones) have the same type.\n\nI'm not sure what is the best way (and valid usecase) but this check should at least be disabled if `type(''.find) == type(str.find)`. Also, if the formatter attribute is only supposed to be a class method, it might be a better idea to do `getattr` on the class and call it with the object rather than doing it on the object itself.\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU4NTE4OmYyNTJkMmMyYTFhOWYyZTllYzlmN2E2N2E4YTQwYjZkZWVhMzZlODU=", "commit_message": "Merge pull request #7006 from minrk/valid_formatter\n\nonly check for formatters on instances", "commit_timestamp": "2014-12-05T22:16:45Z", "files": ["IPython/core/formatters.py", "IPython/core/tests/test_formatters.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmYyNTJkMmMyYTFhOWYyZTllYzlmN2E2N2E4YTQwYjZkZWVhMzZlODU=", "commit_message": "Merge pull request #7006 from minrk/valid_formatter\n\nonly check for formatters on instances", "commit_timestamp": "2014-12-05T22:16:45Z", "files": ["IPython/core/formatters.py", "IPython/core/tests/test_formatters.py"]}], "labels": [], "created_at": "2014-11-20T21:07:02Z", "closed_at": "2014-12-05T22:48:26Z", "linked_pr_number": [7003], "method": ["regex"]}
{"issue_number": 4249, "title": "\"?\" and expressions", "body": "[tried with ipython 0.13.2, 1.0.0 and 1.1.0]\n\nRequesting information for a object returned by an expression (in the example below the object is stored in a `list`, and the expression is extracting an element from the list).\n\nIs this intended ? (When using only `?` in ipython, the documentation printed suggests that it should be working - the example given `{}.get?` is also not working).\n\n```\nIn [1]: ?['a','b'][0]\nObject `` not found.\n```\n\nThe following is working though:\n\n```\nIn [2]: o = ['a','b'][0]\n\nIn [3]: ?o\nType:       str\nString Form:a\nLength:     1\nDocstring:\nstr(object='') -> str\nstr(bytes_or_buffer[, encoding[, errors]]) -> str\n\nCreate a new string object from the given object. If encoding or\nerrors is specified, then the object must expose a data buffer\nthat will be decoded using the given encoding and error handler.\nOtherwise, returns the result of object.__str__() (if defined)\nor repr(object).\nencoding defaults to sys.getdefaultencoding().\nerrors defaults to 'strict'.\n```\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU4NTE4OjkwNmJjNzEyYmJmNzY0NzEzN2QxMDk3YzY5MDg1YjliNmY4NDdiNTE=", "commit_message": "Merge pull request #6928 from minrk/pdoc-expr\n\nremove no-longer-true pdoc comment", "commit_timestamp": "2014-11-13T22:40:27Z", "files": ["IPython/core/usage.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjkwNmJjNzEyYmJmNzY0NzEzN2QxMDk3YzY5MDg1YjliNmY4NDdiNTE=", "commit_message": "Merge pull request #6928 from minrk/pdoc-expr\n\nremove no-longer-true pdoc comment", "commit_timestamp": "2014-11-13T22:40:27Z", "files": ["IPython/core/usage.py"]}], "labels": [], "created_at": "2013-09-22T00:25:46Z", "closed_at": "2014-11-13T22:40:27Z", "linked_pr_number": [4249], "method": ["regex"]}
{"issue_number": 4822, "title": "IPython.lib.editorhooks broken on windows", "body": "The hook that this module installs uses the `pipes` modules' `quote` function to quote the filename to open. Sadly on Windows this function still uses single quote which the shell doesn't understand, instead of double quotes, meaning the hook doesn't work.\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU4NTE4OjA1NDlkM2JkOWVkMTYyYTVjYjFlNDE2ZTE1Y2I4OGI5MmEyZmJiNDU=", "commit_message": "Merge pull request #6927 from minrk/win-editorhooks\n\nuse shlex.split on editor hooks on Windows", "commit_timestamp": "2014-11-14T19:45:10Z", "files": ["IPython/lib/editorhooks.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjA1NDlkM2JkOWVkMTYyYTVjYjFlNDE2ZTE1Y2I4OGI5MmEyZmJiNDU=", "commit_message": "Merge pull request #6927 from minrk/win-editorhooks\n\nuse shlex.split on editor hooks on Windows", "commit_timestamp": "2014-11-14T19:45:10Z", "files": ["IPython/lib/editorhooks.py"]}], "labels": [], "created_at": "2014-01-17T17:18:38Z", "closed_at": "2014-11-14T19:45:10Z", "linked_pr_number": [4822], "method": ["regex"]}
{"issue_number": 6787, "title": "QTConsole completion still broken", "body": "#6726 made things better, but there is still breakage, tested on git master c829e58f\n\n``` python\nnp.<tab> # works\nx=np.<tab> # works\n```\n\nbut\n\n``` python\nIn [3]: from collections import namedtuple\n   ...: np.<tab> # nope\n   ...: s=np.<tab> # nope\n```\n\ndoesn't trigger completion.\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU4NTE4OjhkNjA0MWJiYzVmMWUyNjhmOTk1ZjY4OTc2MDAzYzlkN2NkZWZkYmI=", "commit_message": "Merge pull request #6797 from minrk/qt-complete-request\n\nonly complete on current line", "commit_timestamp": "2014-10-25T20:58:31Z", "files": ["IPython/kernel/tests/test_kernel.py", "IPython/kernel/tests/utils.py", "IPython/kernel/zmq/ipkernel.py", "IPython/utils/tokenutil.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjhkNjA0MWJiYzVmMWUyNjhmOTk1ZjY4OTc2MDAzYzlkN2NkZWZkYmI=", "commit_message": "Merge pull request #6797 from minrk/qt-complete-request\n\nonly complete on current line", "commit_timestamp": "2014-10-25T20:58:31Z", "files": ["IPython/kernel/tests/test_kernel.py", "IPython/kernel/tests/utils.py", "IPython/kernel/zmq/ipkernel.py", "IPython/utils/tokenutil.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzpiOGRiZDAzYTdmMmU3MDRhMDZiYmIzMzVkOTA0MzRjZGYyMTZiMjE5", "commit_message": "Merge pull request #6797 from minrk/qt-complete-request\n\nonly complete on current line", "commit_timestamp": "2014-10-25T20:58:31Z", "files": ["IPython/kernel/tests/test_kernel.py", "IPython/kernel/tests/utils.py", "IPython/kernel/zmq/ipkernel.py", "IPython/utils/tokenutil.py"]}], "labels": [], "created_at": "2014-10-24T04:42:20Z", "closed_at": "2014-10-25T20:58:31Z", "linked_pr_number": [6787], "method": ["regex"]}
{"issue_number": 6095, "title": "Setting on_trait_change fails if trait name is unicode in python 2 ", "body": "The failure really occurs in `IPython.utils.traitlets.parse_notifier_name` in which none of the conditional are `True` if run in python2 and a unicode `name` is passed in.\n\nMinimal code to reproduce (run with python 2):\n\n```\npython -c \"from IPython.utils.traitlets import parse_notifier_name; assert parse_notifier_name(u'foo') is not None\"\n```\n\nThe use case where this came up was calling `.on_trait_change(some_function, 'value')` in a file that did `from __future__ import unicode_literals`.\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU4NTE4Ojk0NTI3MGVkY2EwODhhZGQxMzIxNGIzZjI1M2IzNjliZDhjYTFjMWM=", "commit_message": "Merge pull request #6616 from minrk/parse_notifier_unicode\n\nfix some string_types checks in traitlets", "commit_timestamp": "2014-10-05T09:38:47Z", "files": ["IPython/utils/traitlets.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4Ojk0NTI3MGVkY2EwODhhZGQxMzIxNGIzZjI1M2IzNjliZDhjYTFjMWM=", "commit_message": "Merge pull request #6616 from minrk/parse_notifier_unicode\n\nfix some string_types checks in traitlets", "commit_timestamp": "2014-10-05T09:38:47Z", "files": ["IPython/utils/traitlets.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo1NTg2OWE5Nzg4YzlhMTA0ODI3ZDY3YmNhMjU0MTI0NDgwODVmYzkz", "commit_message": "Merge pull request #6616 from minrk/parse_notifier_unicode\n\nfix some string_types checks in traitlets", "commit_timestamp": "2014-10-05T09:38:47Z", "files": ["IPython/utils/traitlets.py"]}], "labels": [], "created_at": "2014-07-08T03:05:13Z", "closed_at": "2014-10-05T09:38:48Z", "linked_pr_number": [6095], "method": ["regex"]}
{"issue_number": 6433, "title": "Reload button on the clusters tab is not working", "body": "I had a gazillion IPython profiles in my profile folder from a theme experiment that were all showing up on the `Clusters` tab.\nWhile the IPython server was running, I deleted all these profiles.\nWhen I now click on the reload icon, nothing happens. A web-browser reload also keeps showing the now non-existing profiles.\nVersion: 2.2\nEdit: After restarting the notebook server, the list of non-existing profiles was purged and only the existing profiles are shown.\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU4NTE4OjBkOTU5NTI1NTBiNmM2MTkyMmYxNWVhNzg0MmU1YjI5MzdhOWQ0N2M=", "commit_message": "Merge pull request #6607 from minrk/cluster-load-remove\n\nremove deleted profiles from cluster list", "commit_timestamp": "2014-10-05T09:45:58Z", "files": ["IPython/html/services/clusters/clustermanager.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjBkOTU5NTI1NTBiNmM2MTkyMmYxNWVhNzg0MmU1YjI5MzdhOWQ0N2M=", "commit_message": "Merge pull request #6607 from minrk/cluster-load-remove\n\nremove deleted profiles from cluster list", "commit_timestamp": "2014-10-05T09:45:58Z", "files": ["IPython/html/services/clusters/clustermanager.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo1YWMxMzE3MjZhNWZiNzgzYzFlMzRlMTAzMzY2YjY1MzU3MjlhOTNl", "commit_message": "Merge pull request #6607 from minrk/cluster-load-remove\n\nremove deleted profiles from cluster list", "commit_timestamp": "2014-10-05T09:45:58Z", "files": ["IPython/html/services/clusters/clustermanager.py"]}], "labels": [], "created_at": "2014-09-08T03:52:45Z", "closed_at": "2014-10-05T09:45:58Z", "linked_pr_number": [6433], "method": ["regex"]}
{"issue_number": 6057, "title": "`%matplotlib` + qt5", "body": "Support for qt5 was just merged into matplotlib master (https://github.com/matplotlib/matplotlib/pull/3072), however due to the way that `pylabtools` deals with parsing the backend the `%matplotlib` magic does not work correctly with the `Qt5Agg` backend.\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU4NTE4OjliZWRmMWRkMDExOGMxNzc3ZmJlYmI3NGIxZWY3NWIyNDJhZTI5YTM=", "commit_message": "Merge pull request #6587 from minrk/mpl-qt5\n\nsupport `%matplotlib qt5` and `%matplotlib nbagg`", "commit_timestamp": "2014-10-01T22:51:27Z", "files": ["IPython/core/pylabtools.py", "IPython/kernel/zmq/eventloops.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjliZWRmMWRkMDExOGMxNzc3ZmJlYmI3NGIxZWY3NWIyNDJhZTI5YTM=", "commit_message": "Merge pull request #6587 from minrk/mpl-qt5\n\nsupport `%matplotlib qt5` and `%matplotlib nbagg`", "commit_timestamp": "2014-10-01T22:51:27Z", "files": ["IPython/core/pylabtools.py", "IPython/kernel/zmq/eventloops.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmExY2UwMzRmZTlkZWIyYTJkNTcwMGM1MWZhNWYyYmMzZjZjMjNmYTQ=", "commit_message": "Backport PR #6587 : Support %matplotlib qt5 and %matplotlib nbagg", "commit_timestamp": "2014-10-01T22:55:00Z", "files": ["IPython/core/pylabtools.py", "IPython/kernel/zmq/eventloops.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzpmODkzMmRiZDZjYTU0YmFkN2MwMzllNWZhMDQ4ZDc4NjljOTU4YWU0", "commit_message": "Merge pull request #6587 from minrk/mpl-qt5\n\nsupport `%matplotlib qt5` and `%matplotlib nbagg`", "commit_timestamp": "2014-10-01T22:51:27Z", "files": ["IPython/core/pylabtools.py", "IPython/kernel/zmq/eventloops.py"]}], "labels": [], "created_at": "2014-06-27T00:44:24Z", "closed_at": "2014-10-01T22:51:27Z", "linked_pr_number": [6057], "method": ["regex"]}
{"issue_number": 3195, "title": "Use WebSocket.ping to keep connections alive across proxies", "body": "I am accessing a remote IPython Notebook and need to use a proxy (Squid/SOCKS) for internet access.\nAs long as I am running cells everything works fine, but after one minute of inactivity the proxy seems to close the connection, resulting in the following Firefox console log:\n\n```\nThe connection to wss://example.org/kernels/$uuid/shell was interrupted while the page \nwas loading. @ https://example.org/static/js/kernel.js\n```\n\nThe websocket connection is reestablished immediately (and interrupted again after one minute), but running cells does not work anymore until I manually restart the kernel.\n\n```\nipython --version\n0.13.1.rc2\n```\n\nSending any message via each websocket (shell+iopub) will avoid interruption. This is a quick and _dirty_ client side workaround:\n\n```\nfrom IPython.core.display import HTML\nHTML('''<script>\nvar keepalive_timer;\nfunction keep_connection_alive() {\n    IPython.notebook.kernel.execute();\n    keepalive_timer = setTimeout('keep_connection_alive()', 55000);\n}\nkeep_connection_alive();\n</script>''')\n```\n\nWebSocket has ping and pong frames for keep-alive, tornado has a ping() function to send such a frame. Could the ping function be called somewhere in the kernel code to keep alive connections even via proxy?\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU4NTE4OjI3MmRmMmExOGMyNzBmOWZiOTE0OTA4YmMyMDZiNDE2YTAyMTZjODE=", "commit_message": "Merge pull request #6139 from minrk/wsping\n\nsend ping every 30 seconds to keep websockets alive", "commit_timestamp": "2014-07-25T01:55:18Z", "files": ["IPython/html/base/zmqhandlers.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjI3MmRmMmExOGMyNzBmOWZiOTE0OTA4YmMyMDZiNDE2YTAyMTZjODE=", "commit_message": "Merge pull request #6139 from minrk/wsping\n\nsend ping every 30 seconds to keep websockets alive", "commit_timestamp": "2014-07-25T01:55:18Z", "files": ["IPython/html/base/zmqhandlers.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzphOTQyNWYzM2YyODNhMDQ3YjY5Nzg0NzAwMGY3ZTE5NGU0ZmRmNzE3", "commit_message": "Merge pull request #6139 from minrk/wsping\n\nsend ping every 30 seconds to keep websockets alive", "commit_timestamp": "2014-07-25T01:55:18Z", "files": ["IPython/html/base/zmqhandlers.py"]}], "labels": [], "created_at": "2013-04-18T11:28:50Z", "closed_at": "2014-07-25T01:55:18Z", "linked_pr_number": [3195], "method": ["regex"]}
{"issue_number": 6091, "title": "Command line \"ipython trust\" option does not work", "body": "I'm working with a slideshow template I found on Fernando's github account: https://github.com/fperez/nb-slideshow-template\n\nWhen I open the notebook, IPython complains that it isn't trusted.  When I close the notebook, kill the server, run `ipython trust my_notebook.ipynb`, and then restart the notebook, I get the same warning about the notebook not being trusted.\n\nI was able to work around this issue using the \"Trust this notebook\" option in the File dropdown menu on the notebook web interface.\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU4NTE4OmNhNzlmZDQ2ODhlYmE4YjkwYjdkNWQwYmU4OTlkYzdmYzZmOTEyMjA=", "commit_message": "Merge pull request #6094 from minrk/sign-profile\n\nadd some documentation notes about trust being per-profile", "commit_timestamp": "2014-07-07T20:22:23Z", "files": ["IPython/nbformat/sign.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmNhNzlmZDQ2ODhlYmE4YjkwYjdkNWQwYmU4OTlkYzdmYzZmOTEyMjA=", "commit_message": "Merge pull request #6094 from minrk/sign-profile\n\nadd some documentation notes about trust being per-profile", "commit_timestamp": "2014-07-07T20:22:23Z", "files": ["IPython/nbformat/sign.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo3MzI5ODUzZWVkZDM0NTNhMjE3ODdlOWM2YjZhZGNlMDFhZjVhODJi", "commit_message": "Merge pull request #6094 from minrk/sign-profile\n\nadd some documentation notes about trust being per-profile", "commit_timestamp": "2014-07-07T20:22:23Z", "files": ["IPython/nbformat/sign.py"]}], "labels": [], "created_at": "2014-07-07T14:49:23Z", "closed_at": "2014-07-07T20:22:23Z", "linked_pr_number": [6091], "method": ["regex"]}
{"issue_number": 5998, "title": "use_dill does not work in Python 3.4", "body": "When executing a command like:\n\n```\nclient[:].use_dill()\n```\n\nEvery parallel operation outputs a long obscure pickle error:\n\n```\ndef g(a,b):\n    return a*b\nparallel_client.client[:].apply_sync(g,2,4)\n```\n\n```\nUnpicklingError                           Traceback (most recent call last)/home/zah/sourcecode/ipython/IPython/kernel/zmq/serialize.py in unpack_apply_message(bufs, g, copy)\n    178         for i in range(2):\n    179             bufs[i] = bufs[i].bytes\n--> 180     f = uncan(pickle.loads(bufs.pop(0)), g)\n    181     info = pickle.loads(bufs.pop(0))\n    182     arg_bufs, kwarg_bufs = bufs[:info['narg_bufs']], bufs[info['narg_bufs']:]\n/home/zah/anaconda3/lib/python3.4/site-packages/dill/dill.py in loads(str)\n    158     \"\"\"unpickle an object from a string\"\"\"\n    159     file = StringIO(str)\n--> 160     return load(file)\n    161 \n    162 # def dumpzs(obj, protocol=None):\n/home/zah/anaconda3/lib/python3.4/site-packages/dill/dill.py in load(file)\n    148     pik = Unpickler(file)\n    149     pik._main_module = _main_module\n--> 150     obj = pik.load()\n    151     if type(obj).__module__ == _main_module.__name__: # point obj class to main\n    152         try: obj.__class__ == getattr(pik._main_module, type(obj).__name__)\n/home/zah/anaconda3/lib/python3.4/pickle.py in load(self)\n   1034                     raise EOFError\n   1035                 assert isinstance(key, bytes_types)\n-> 1036                 dispatch[key[0]](self)\n   1037         except _Stop as stopinst:\n   1038             return stopinst.value\n/home/zah/anaconda3/lib/python3.4/pickle.py in load_global(self)\n   1319 \n   1320     def load_global(self):\n-> 1321         module = self.readline()[:-1].decode(\"utf-8\")\n   1322         name = self.readline()[:-1].decode(\"utf-8\")\n   1323         klass = self.find_class(module, name)\n/home/zah/anaconda3/lib/python3.4/pickle.py in readline(self)\n    245             if data[-1] != b'\\n':\n    246                 raise UnpicklingError(\n--> 247                     \"pickle exhausted before end of frame\")\n    248             return data\n    249         else:\nUnpicklingError: pickle exhausted before end of frame\n```\n\nThe same works in 3.3.5\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU4NTE4OjRhOTQ0NTZjZjljY2Q0NzBmNTAwOWJjNWI1ODJlMmY2MmMzMWE2YWY=", "commit_message": "Merge pull request #6029 from minrk/dumps-protocol\n\nadd pickleutil.PICKLE_PROTOCOL", "commit_timestamp": "2014-06-26T01:13:40Z", "files": ["IPython/kernel/zmq/serialize.py", "IPython/kernel/zmq/session.py", "IPython/utils/pickleutil.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjRhOTQ0NTZjZjljY2Q0NzBmNTAwOWJjNWI1ODJlMmY2MmMzMWE2YWY=", "commit_message": "Merge pull request #6029 from minrk/dumps-protocol\n\nadd pickleutil.PICKLE_PROTOCOL", "commit_timestamp": "2014-06-26T01:13:40Z", "files": ["IPython/kernel/zmq/serialize.py", "IPython/kernel/zmq/session.py", "IPython/utils/pickleutil.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjNkNmNjMjlhYTBjN2ZlZmJkMDU5MDBkY2U3ZDEyMDVmMTI4ODk4YzM=", "commit_message": "Backport PR #6029: add pickleutil.PICKLE_PROTOCOL\n\ninstead of hardcoding `-1`.\n\ndefault to DEFAULT_PROTOCOL if defined (Python 3.4), and HIGHEST_PROTOCOL\notherwise.\n\n...", "commit_timestamp": "2014-07-07T04:47:08Z", "files": ["IPython/kernel/zmq/serialize.py", "IPython/kernel/zmq/session.py", "IPython/utils/pickleutil.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzoyYTMzN2QyNjFmZDFkMmFiNjZiZmUwOThjNGI2NWJjNDZiYmNmNDYx", "commit_message": "Merge pull request #6029 from minrk/dumps-protocol\n\nadd pickleutil.PICKLE_PROTOCOL", "commit_timestamp": "2014-06-26T01:13:40Z", "files": ["IPython/kernel/zmq/serialize.py", "IPython/kernel/zmq/session.py", "IPython/utils/pickleutil.py"]}], "labels": [], "created_at": "2014-06-16T23:16:41Z", "closed_at": "2014-06-26T01:13:40Z", "linked_pr_number": [5998], "method": ["regex"]}
{"issue_number": 5964, "title": "Traceback on Qt console exit", "body": "Start the Qt console, and then type `exit` to exit it (closing it from the frontend doesn't exhibit the bug). I see this message, repeated twice:\n\n```\nTraceback (most recent call last):\n  File \"/home/takluyver/.local/lib/python3.4/site-packages/IPython/qt/console/frontend_widget.py\", line 812, in _document_contents_change\n    self._call_tip()\n  File \"/home/takluyver/.local/lib/python3.4/site-packages/IPython/qt/console/frontend_widget.py\", line 724, in _call_tip\n    msg_id = self.kernel_client.inspect(code, cursor_pos)\n  File \"/home/takluyver/.local/lib/python3.4/site-packages/IPython/kernel/channels.py\", line 326, in inspect\n    self._queue_send(msg)\n  File \"/home/takluyver/.local/lib/python3.4/site-packages/IPython/kernel/channels.py\", line 171, in _queue_send\n    self.ioloop.add_callback(thread_send)\n  File \"/usr/lib/python3/dist-packages/tornado/ioloop.py\", line 732, in add_callback\n    raise RuntimeError(\"IOLoop is closing\")\nRuntimeError: IOLoop is closing\n\nIf you suspect this is an IPython bug, please report it at:\n    https://github.com/ipython/ipython/issues\nor send an email to the mailing list at ipython-dev@scipy.org\n\nYou can print a more detailed traceback right now with \"%tb\", or use \"%debug\"\nto interactively debug it.\n\nExtra-detailed tracebacks for bug-reporting purposes can be enabled via:\n    c.Application.verbose_crash=True\n```\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU4NTE4OjA2YjM2MjRmM2NmMGM5MDUxMTc3NWE2YWJiY2QyMTZhNTNjNGNjODY=", "commit_message": "Merge pull request #5965 from minrk/qt-shutdown\n\ndon\u2019t trigger call tips with no shell channel", "commit_timestamp": "2014-06-10T16:24:17Z", "files": ["IPython/qt/console/frontend_widget.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjA2YjM2MjRmM2NmMGM5MDUxMTc3NWE2YWJiY2QyMTZhNTNjNGNjODY=", "commit_message": "Merge pull request #5965 from minrk/qt-shutdown\n\ndon\u2019t trigger call tips with no shell channel", "commit_timestamp": "2014-06-10T16:24:17Z", "files": ["IPython/qt/console/frontend_widget.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo4MjIwZGZlYjMyZDIwOTM1YWJhYTdmYzE0NTQ4NGVhOTg4NTQwY2Rk", "commit_message": "Merge pull request #5965 from minrk/qt-shutdown\n\ndon\u2019t trigger call tips with no shell channel", "commit_timestamp": "2014-06-10T16:24:17Z", "files": ["IPython/qt/console/frontend_widget.py"]}], "labels": [], "created_at": "2014-06-09T21:22:57Z", "closed_at": "2014-06-10T16:24:17Z", "linked_pr_number": [5964], "method": ["regex"]}
{"issue_number": 5950, "title": "qtconsole truncates help", "body": "The Ipython shell opened with `qtconsole` option (i.e `ipython qtconsole`) truncates the help message obtained by the `??` magic. i.e\n\n```\nIn [1]: import string\nIn [2]: string??\n```\n\nGives:\n\n```\n\n            lineno = len(lines)\n        raise ValueError('Invalid placeholder in string: line %d, col %d' %\n                         (lineno, colno))\n\n    def substitute(self, *args, **kws):\n        if len(args) > 1:\n            raise TypeError('Too many positional arguments')\n        if not args:\n            mapping = kws\n        elif kws:\n            mapping = _multimap(kws, args[0])\n        else:\n            mapping = args[0]\n        # Helper function for .sub()\n        def convert(mo):\n            # Check the most common path first.\n            named = mo.group('named') or mo.group('braced')\n            if named is not None:\n                val = mapping[named]\n                # We use this idiom instead of str() because the latter will\n                # fail if val is a Unicode containing non-ASCII characters.\n...\n```\n\nThis bug is observed on Win32 and OSX. IPython itself (without `qtconsole`) does not exhibit this problem.\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU4NTE4OjZiN2NiMmViYzFmMjJlN2NhYjA4Y2E2ZmY4ZWY1NGIxMTEzODA5NDA=", "commit_message": "Merge pull request #5961 from minrk/qt-no-truncate-page\n\ndo not truncate pager buffer in qtconsole", "commit_timestamp": "2014-06-09T21:25:02Z", "files": ["IPython/qt/console/console_widget.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjZiN2NiMmViYzFmMjJlN2NhYjA4Y2E2ZmY4ZWY1NGIxMTEzODA5NDA=", "commit_message": "Merge pull request #5961 from minrk/qt-no-truncate-page\n\ndo not truncate pager buffer in qtconsole", "commit_timestamp": "2014-06-09T21:25:02Z", "files": ["IPython/qt/console/console_widget.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo3YjRmMzRmNTVkOWNlZDAzMTQ1ZmUxODMzMGQ2NjA5YThjNDE4ZWFl", "commit_message": "Merge pull request #5961 from minrk/qt-no-truncate-page\n\ndo not truncate pager buffer in qtconsole", "commit_timestamp": "2014-06-09T21:25:02Z", "files": ["IPython/qt/console/console_widget.py"]}], "labels": [], "created_at": "2014-06-05T19:17:03Z", "closed_at": "2014-06-09T21:25:02Z", "linked_pr_number": [5950], "method": ["regex"]}
{"issue_number": 5821, "title": "Widget set_css doesn't always work (front-end order of ops.)", "body": "Scenario:\nCreate a couple of ContainerWidgets, set the CSS such that `margin` = `0px`.  Later in the notebook try changing just the `margin-left` to something like `10px`, this works sometimes and fails others.  This is because the CSS dict it re-applied in the front-end and the ordering is the order of the dict keys (which has no predictable notion of order since they are hashed) and sometimes during the reapplication of the dict, `margin` will be set after `margin-left` etc...\n\nWorkaround:\nUse path independent CSS traits.  i.e. first set margin-left, right, top, bottom to 0px.  Later set margin-left to 10px.\n\nPossible solution:\nUse a list to store CSS traits so order is preserved between the back-end and front-end.\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU4NTE4OjlmYzM4MmRjNWUxYmViZDU1MjliYjVkMWNmZGMxYjg3MzA4YWEyYmE=", "commit_message": "Merge pull request #5936 from jdfreder/i5821\n\nChange widget css dict to a list,", "commit_timestamp": "2014-06-04T19:21:43Z", "files": ["IPython/html/widgets/widget.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjlmYzM4MmRjNWUxYmViZDU1MjliYjVkMWNmZGMxYjg3MzA4YWEyYmE=", "commit_message": "Merge pull request #5936 from jdfreder/i5821\n\nChange widget css dict to a list,", "commit_timestamp": "2014-06-04T19:21:43Z", "files": ["IPython/html/widgets/widget.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzoxYzAxMjlhZTE2OWFhYjExYzhjM2I1YWQ0NDMwOGQwOTIzY2YzYzQ2", "commit_message": "Merge pull request #5936 from jdfreder/i5821\n\nChange widget css dict to a list,", "commit_timestamp": "2014-06-04T19:21:43Z", "files": ["IPython/html/widgets/widget.py"]}], "labels": [], "created_at": "2014-05-08T16:54:24Z", "closed_at": "2014-06-04T19:21:43Z", "linked_pr_number": [5821], "method": ["regex"]}
{"issue_number": 5915, "title": "mapping ctrl-L to something else other then clear-screen doesn't work in readline file ~/.inputrc", "body": "environtment:\nOS: ubuntu14.04\npython: 2.7.6 and 3.4.1\nipython: 2.1.0\n\ni put these settings to the readline file ~/.inputrc, what i want to do is to use `ctrl-L/H` to move forward/backward a char when i am editing command line in `ipython` interpreter.\n\n``` bash\n$if python\n    \"\\C-l\": forward-char\n    \"\\C-h\": backward-char\n$endif\n```\n\n`ctrl-H` do works fine and it is able to move backward a char, whereas `ctrl-L` doesn't work, it clear screen as its default action.\n\nthis issue only occurs on `ipython` interpreter. if i am runing `python` on terminal, it works fine. `ctrl-H/L` are able to move backward/forward a  char in `python` interpreter..\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU4NTE4OjI4YjNlZDA0M2ZjMDU0M2E3NDBhOGI1YzUyNmQwNGRjMWQzMGQ5NWE=", "commit_message": "Merge pull request #5924 from minrk/inputrc-last\n\nload inputrc after IPython readline config", "commit_timestamp": "2014-06-09T19:16:24Z", "files": ["IPython/core/interactiveshell.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjI4YjNlZDA0M2ZjMDU0M2E3NDBhOGI1YzUyNmQwNGRjMWQzMGQ5NWE=", "commit_message": "Merge pull request #5924 from minrk/inputrc-last\n\nload inputrc after IPython readline config", "commit_timestamp": "2014-06-09T19:16:24Z", "files": ["IPython/core/interactiveshell.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzplYTk1ZWQxZmY4MjdjNTA1MGMwMDQ4MWY4YjVmOWI0NWUwYzcxZWM1", "commit_message": "Merge pull request #5924 from minrk/inputrc-last\n\nload inputrc after IPython readline config", "commit_timestamp": "2014-06-09T19:16:24Z", "files": ["IPython/core/interactiveshell.py"]}], "labels": [], "created_at": "2014-05-28T14:11:22Z", "closed_at": "2014-05-28T17:55:33Z", "linked_pr_number": [5915], "method": ["regex"]}
{"issue_number": 5779, "title": "print in multiprocess does not work until a newline is sent, even after a flush", "body": "In the notebook:\n\n`print('blah',end='')` (print without a newline) in a process created with the `multiprocess` module does not appear in the output cell even after `sys.stdout.flush()` is called. If a new line is printed it works fine and it appears immediately.\n\nThis makes writing progress bars for parallel code quite inconvenient.\n\nIt works fine in the terminal.\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU4NTE4OmFlMWM4ZTAwMjQwNGZjZDI1ZGFiYTZjNzg4MDFhNDAzYzY0ZjcwNWM=", "commit_message": "Merge pull request #5820 from minrk/subprocess-flush\n\nallow subprocess output to trigger flush", "commit_timestamp": "2014-05-30T18:55:26Z", "files": ["IPython/kernel/zmq/iostream.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmFlMWM4ZTAwMjQwNGZjZDI1ZGFiYTZjNzg4MDFhNDAzYzY0ZjcwNWM=", "commit_message": "Merge pull request #5820 from minrk/subprocess-flush\n\nallow subprocess output to trigger flush", "commit_timestamp": "2014-05-30T18:55:26Z", "files": ["IPython/kernel/zmq/iostream.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzpmMWI3OWM2Njc3NzQwNzQyY2E0YzZiMWE3YzFjMDk2YWY2YWU1YTZm", "commit_message": "Merge pull request #5820 from minrk/subprocess-flush\n\nallow subprocess output to trigger flush", "commit_timestamp": "2014-05-30T18:55:26Z", "files": ["IPython/kernel/zmq/iostream.py"]}], "labels": [], "created_at": "2014-05-03T05:08:46Z", "closed_at": "2014-05-30T18:55:26Z", "linked_pr_number": [5779], "method": ["regex"]}
{"issue_number": 5417, "title": "scp checking for existence of directories: directory names are incorrect", "body": "Commit d02d22204f9445ad3634b150ac5dc8a360b05c95 is supposed to ensure that SSHlaunchers check that destination directories exist when copying files between hosts (see issue #3411). However there is a bug where the hostname (or ip address) of the destination machine is included in the directory name by mistake.\n\nThe offending code is:\n\n``` python\ncheck_output(self.ssh_cmd + self.ssh_args + \\\n    [self.location, 'mkdir', '-p', '--', remote_dir]\n)\n```\n\nThe problem is that `remote_dir` includes the hostname (or ip) of the destination machine, so for example a directory that should be created on the destination machine at:\n\n```\n~/.ipython/profile_ssh/security\n```\n\nwill instead be created at:\n\n```\n~/<DESTINATION HOSTNAME>/.ipython/profile_ssh/security\n```\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU4NTE4OjFhZWNlNjE4MmY2MWIxNTBiOGRhZWEwMGRiYjQ0YzBmMTA3ZGQzZjE=", "commit_message": "Merge pull request #5418 from minrk/scp-fix\n\nfix typo in ssh launcher send_file", "commit_timestamp": "2014-03-24T17:47:24Z", "files": ["IPython/parallel/apps/launcher.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjFhZWNlNjE4MmY2MWIxNTBiOGRhZWEwMGRiYjQ0YzBmMTA3ZGQzZjE=", "commit_message": "Merge pull request #5418 from minrk/scp-fix\n\nfix typo in ssh launcher send_file", "commit_timestamp": "2014-03-24T17:47:24Z", "files": ["IPython/parallel/apps/launcher.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzozMzJiMjM4YzJmZGRiMjE4N2M2YmE2NDc1YTMyMTQzY2I0OTBkMmY4", "commit_message": "Merge pull request #5418 from minrk/scp-fix\n\nfix typo in ssh launcher send_file", "commit_timestamp": "2014-03-24T17:47:24Z", "files": ["IPython/parallel/apps/launcher.py"]}], "labels": [], "created_at": "2014-03-24T16:06:20Z", "closed_at": "2014-03-24T17:47:24Z", "linked_pr_number": [5417], "method": ["regex"]}
{"issue_number": 5347, "title": "pretty print list too slow", "body": "It seems ipython's behaviour is very different if I say:\n\n```\nprint range(10**6)       # case 1, fraction of a second, output in ONE line\n\nrange(10**6)             # case 2, ten seconds, 10^6 lines\n```\n\nand the difference is not due to the actual output, but presumably the formatting of the one-value-per-line output.\n\nAs this is a factor of about 10x (not counting the actual output), and growing with list size, there appears to be a problem because this is unexpected by the user. It was only through debugging, then web search, and a stackoverflow comment that I found the %pprint magic which is nowhere documented. So even if you dismiss this as bug or enhancement, this ticket should add helpful documentation.\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU4NTE4OjExNTc1ZWQyMDM2ZjY2YzgyOGQ4MzUwZWYzMGU5ZmI5NTJjOWFjYmM=", "commit_message": "Merge pull request #5376 from minrk/pretty-cap\n\nelide long containers in pretty", "commit_timestamp": "2014-03-19T19:31:27Z", "files": ["IPython/lib/pretty.py", "IPython/lib/tests/test_pretty.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjExNTc1ZWQyMDM2ZjY2YzgyOGQ4MzUwZWYzMGU5ZmI5NTJjOWFjYmM=", "commit_message": "Merge pull request #5376 from minrk/pretty-cap\n\nelide long containers in pretty", "commit_timestamp": "2014-03-19T19:31:27Z", "files": ["IPython/lib/pretty.py", "IPython/lib/tests/test_pretty.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzpmY2NhYmVkMTBjYjdkNmEwNjQ3MDBhMjc5NTMyMzljNzUzMWQxZGY3", "commit_message": "Merge pull request #5376 from minrk/pretty-cap\n\nelide long containers in pretty", "commit_timestamp": "2014-03-19T19:31:27Z", "files": ["IPython/lib/pretty.py", "IPython/lib/tests/test_pretty.py"]}], "labels": [], "created_at": "2014-03-13T09:26:21Z", "closed_at": "2014-03-19T19:31:27Z", "linked_pr_number": [5347], "method": ["regex"]}
{"issue_number": 5351, "title": "Notebook saving fails on smb share", "body": "I'm trying to use the ipython notebook on a mounted smb share, but I can\u2019t use it since ipython uses `shutil.copy2` which fails (due to the use of  `os.chmod`). A solution would probably be to use `shutil.copyfile` as a fallback, but I haven't tested it.\n## Traceback\n\n`Traceback (most recent call last):\n  File \"/home/me/Enthought/Canopy_64bit/User/lib/python2.7/site-packages/tornado/web.py\", line 1141, in _when_complete\n    callback()\n  File \"/home/me/Enthought/Canopy_64bit/User/lib/python2.7/site-packages/tornado/web.py\", line 1162, in _execute_method\n    self._when_complete(method(*self.path_args, **self.path_kwargs),\n  File \"/home/me/Enthought/Canopy_64bit/User/lib/python2.7/site-packages/tornado/web.py\", line 2297, in wrapper\n    return method(self, *args, **kwargs)\n  File \"/home/me/Enthought/Canopy_64bit/User/lib/python2.7/site-packages/IPython/html/services/notebooks/handlers.py\", line 107, in post\n    checkpoint = nbm.create_checkpoint(notebook_id)\n  File \"/home/me/Enthought/Canopy_64bit/User/lib/python2.7/site-packages/IPython/html/services/notebooks/filenbmanager.py\", line 315, in create_checkpoint\n    shutil.copy2(nb_path, cp_path)\n  File \"/home/me/Canopy/appdata/canopy-1.3.0.1715.rh5-x86_64/lib/python2.7/shutil.py\", line 131, in copy2\n    copystat(src, dst)\n  File \"/home/me/Canopy/appdata/canopy-1.3.0.1715.rh5-x86_64/lib/python2.7/shutil.py\", line 100, in copystat\n    os.chmod(dst, mode)\nOSError: [Errno 95] Operation not supported: '/run/user/1000/gvfs/smb-share/calculations/dipoleTrap/.ipynb_checkpoints/dipole-checkpoint.ipynb'`\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU4NTE4OjJhOWVkMGU5ODY1YjZjMTlkNGY1NDUyNGM5MzE1Zjc5ZGU5YWM5Nzk=", "commit_message": "Merge pull request #5357 from minrk/smb-fails\n\ncatch exception in copystat", "commit_timestamp": "2014-03-19T22:13:14Z", "files": ["IPython/html/services/notebooks/filenbmanager.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjJhOWVkMGU5ODY1YjZjMTlkNGY1NDUyNGM5MzE1Zjc5ZGU5YWM5Nzk=", "commit_message": "Merge pull request #5357 from minrk/smb-fails\n\ncatch exception in copystat", "commit_timestamp": "2014-03-19T22:13:14Z", "files": ["IPython/html/services/notebooks/filenbmanager.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzozZGEzMThjZjAzMmUwZWUzMWZiNzMxOWEwNjk0OWNiOGFhYjc5OTFl", "commit_message": "Merge pull request #5357 from minrk/smb-fails\n\ncatch exception in copystat", "commit_timestamp": "2014-03-19T22:13:14Z", "files": ["IPython/html/services/notebooks/filenbmanager.py"]}], "labels": [], "created_at": "2014-03-14T09:33:40Z", "closed_at": "2014-03-19T22:13:14Z", "linked_pr_number": [5351], "method": ["regex"]}
{"issue_number": 5227, "title": "display_method of objects with custom __getattr__", "body": "Some objects such as pymongo collections implement a custom  `__getattr__` method that always  retursn an object.\n\nThen for the IPython display there is https://github.com/ipython/ipython/blob/master/IPython/core/displayhook.py#L245 which will call the `_ipython_display_` attribute returned by `__getattr__` and produce unpredictable behaviour; best case just an error, like:\n\n```\nTypeError: 'Collection' object is not callable. If you meant to call the '_ipython_display_'\n method on a 'Collection' object it is failing because no such method exists.\n```\n\nProbably can be considered a bug of pymongo, but may be worth considering to check for existence in `__dict__` rather than getattr.\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU4NTE4OmYyODYyODljMTQ2OWNhMTJhMTAwMjI2NTA3NDIzMzZmNTdmODA0NDY=", "commit_message": "Merge pull request #5229 from minrk/safe-get-ipdisplay\n\nget _ipython_display_ method safely", "commit_timestamp": "2014-02-27T22:59:47Z", "files": ["IPython/core/display.py", "IPython/core/displayhook.py", "IPython/core/formatters.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmYyODYyODljMTQ2OWNhMTJhMTAwMjI2NTA3NDIzMzZmNTdmODA0NDY=", "commit_message": "Merge pull request #5229 from minrk/safe-get-ipdisplay\n\nget _ipython_display_ method safely", "commit_timestamp": "2014-02-27T22:59:47Z", "files": ["IPython/core/display.py", "IPython/core/displayhook.py", "IPython/core/formatters.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzozNDFlNWNiMzFmOTFmNWRlNWU3YjJiZjc5MjUzZDI1Nzc2NmUyMDli", "commit_message": "Merge pull request #5229 from minrk/safe-get-ipdisplay\n\nget _ipython_display_ method safely", "commit_timestamp": "2014-02-27T22:59:47Z", "files": ["IPython/core/display.py", "IPython/core/displayhook.py", "IPython/core/formatters.py"]}], "labels": [], "created_at": "2014-02-26T16:19:33Z", "closed_at": "2014-02-27T22:59:47Z", "linked_pr_number": [5227], "method": ["regex"]}
{"issue_number": 4961, "title": "Bug when constructing a selection widget with both values and labels", "body": "Length validation causes selection widgets constructed with both values and labels to fail.\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU4NTE4OmE0Yzk1MDA1NTgzODk3MmUwNWI5OGE5OWQwMzFlNzVlMmFmZjQzY2Y=", "commit_message": "Merge pull request #5012 from minrk/selection-dict\n\nMake `SelectionWidget.values` a dict", "commit_timestamp": "2014-02-04T23:27:23Z", "files": ["IPython/html/widgets/widget_selection.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmE0Yzk1MDA1NTgzODk3MmUwNWI5OGE5OWQwMzFlNzVlMmFmZjQzY2Y=", "commit_message": "Merge pull request #5012 from minrk/selection-dict\n\nMake `SelectionWidget.values` a dict", "commit_timestamp": "2014-02-04T23:27:23Z", "files": ["IPython/html/widgets/widget_selection.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo2NjgyOTQwMTdjNDRlZmU0MmY1ZDZlMWI3OWFjZTIwYjIwZjMwZDcw", "commit_message": "Merge pull request #5012 from minrk/selection-dict\n\nMake `SelectionWidget.values` a dict", "commit_timestamp": "2014-02-04T23:27:23Z", "files": ["IPython/html/widgets/widget_selection.py"]}], "labels": ["widgets"], "created_at": "2014-01-30T18:27:25Z", "closed_at": "2014-02-04T23:27:23Z", "linked_pr_number": [4961], "method": ["regex"]}
{"issue_number": 4905, "title": "test_oinspect fails with python3.4", "body": "test_oinspect fails with python3.4 in current git head and 1.x branch, e.g.\n\n```\n$ python3.4 /local/bin/iptest3 IPython.core.tests.test_oinspect\n...\n======================================================================\nFAIL: IPython.core.tests.test_oinspect.test_calltip_method\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib/python3/dist-packages/nose/case.py\", line 198, in runTest\n    self.test(*self.arg)\n  File \"/local/lib/python3.4/site-packages/IPython/core/tests/test_oinspect.py\", line 188, in test_calltip_method\n    check_calltip(c.method, 'c.method', 'c.method(x, z=2)', c.method.__doc__)\n  File \"/local/lib/python3.4/site-packages/IPython/core/tests/test_oinspect.py\", line 171, in check_calltip\n    nt.assert_equal(ds, docstring)\nnose.proxy.AssertionError: 'Calls self as a function.' != \"Some method's docstring\"\n- Calls self as a function.\n+ Some method's docstring\n\n    \"\"\"Fail immediately, with the given message.\"\"\"\n>>  raise self.failureException('\\'Calls self as a function.\\' != \"Some method\\'s docstring\"\\n- Calls self as a function.\\n+ Some method\\'s docstring\\n')\n```\n\n8 of these fail.\nthey succeed with 3.3\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU4NTE4OjM2NWIxMTk4N2JmMTRiNjcyMGEzOTJkMmUzNTBiMGFhOWM1ZTQzMDM=", "commit_message": "Merge pull request #4908 from minrk/oinspect-builtin-docstrings\n\ndetect builtin docstrings in oinspect", "commit_timestamp": "2014-01-29T00:18:37Z", "files": ["IPython/core/oinspect.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjM2NWIxMTk4N2JmMTRiNjcyMGEzOTJkMmUzNTBiMGFhOWM1ZTQzMDM=", "commit_message": "Merge pull request #4908 from minrk/oinspect-builtin-docstrings\n\ndetect builtin docstrings in oinspect", "commit_timestamp": "2014-01-29T00:18:37Z", "files": ["IPython/core/oinspect.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmM4ZDA4OTNmOGJkZWM1NmJlZjIwY2ZhYWQyMGVlODZiNDc1ZTMxODA=", "commit_message": "Backport PR #4908: lookup builtin docstrings rather than hardcoding", "commit_timestamp": "2014-01-29T00:28:45Z", "files": ["IPython/core/oinspect.py"]}, {"node_id": "MDY6Q29tbWl0NDAwNDYyNjo3ZmViZDNkNjQ5NGNmYmQ4ZjI2NTZkMjQ3YTI3YTcwMDJlZmY4YzU3", "commit_message": "Backport PR #4908: lookup builtin docstrings rather than hardcoding", "commit_timestamp": "2014-02-18T13:42:38Z", "files": ["IPython/core/oinspect.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzowNGUzODk3NjJmZmQ2Y2Y5ZjRmNDAxZWYzMDhlNjczMTVhMjI0YWVk", "commit_message": "Merge pull request #4908 from minrk/oinspect-builtin-docstrings\n\ndetect builtin docstrings in oinspect", "commit_timestamp": "2014-01-29T00:18:37Z", "files": ["IPython/core/oinspect.py"]}], "labels": [], "created_at": "2014-01-28T20:02:57Z", "closed_at": "2014-01-29T00:18:37Z", "linked_pr_number": [4905], "method": ["regex"]}
{"issue_number": 4339, "title": "local mathjax install doesn't work", "body": "Hi,\n\nthe command line provided in the popup when using mathjax offline doesn't work:\nfrom IPython.external import mathjax; mathjax.install_mathjax()\n\nthe url is out of date:\nHTTPError: HTTP Error 500: Internal Server Error\nDownloading mathjax source from https://github.com/mathjax/MathJax/tarball/v2.2\n\nx.\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU4NTE4OmRhODgwM2Y2NTgxN2Y1NTVmMWQ1YmU0ZjUxZjE1Yjg2MGE0MGNlY2M=", "commit_message": "Merge pull request #4340 from ahmadia/patch-1\n\nfix mathjax download url to new GitHub format", "commit_timestamp": "2013-10-03T15:50:26Z", "files": ["IPython/external/mathjax.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OmRhODgwM2Y2NTgxN2Y1NTVmMWQ1YmU0ZjUxZjE1Yjg2MGE0MGNlY2M=", "commit_message": "Merge pull request #4340 from ahmadia/patch-1\n\nfix mathjax download url to new GitHub format", "commit_timestamp": "2013-10-03T15:50:26Z", "files": ["IPython/external/mathjax.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzpmOTUxYmZlYmVkMmEzN2Y1YmI4M2Q2NWFmOTkxOGEwMzdjZjc5ZGI1", "commit_message": "Merge pull request #4340 from ahmadia/patch-1\n\nfix mathjax download url to new GitHub format", "commit_timestamp": "2013-10-03T15:50:26Z", "files": ["IPython/external/mathjax.py"]}], "labels": [], "created_at": "2013-10-03T10:16:00Z", "closed_at": "2013-10-03T15:50:26Z", "linked_pr_number": [4339], "method": ["regex"]}
{"issue_number": 3077, "title": "Multiprocessing semantics in parallel.view.map", "body": "I have a script that is executed using either\n- the builtin map\n- using multiprocessing map\n- IPython view.map.\n\nThis is very convenient because I can easily debug and test scripts, as well as run the same script unchanged in different installations. \n\nHowever, the semantics of map is different. While in multiprocessing a generator is accepted, in IPython is not (fails when it tries to take the length of the generator). Insider multiprocessing, the following code converts a generator to a list:\n\n```\nif not hasattr(iterable, '__len__'):\n    iterable = list(iterable)\n```\n\nI do not really like this behavior (`Explicit is better than implicit`), but having the same semantics is convenient. \n\nSo, my questions are:\n1.- Is it possible to have a `map` that does not require to know in advance the number of tasks?\n2.- If not, what do you think about using the same semantics that `multiprocessing`?\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU4NTE4OjlmMzEzYjRhMGI0OGFmN2Y0OWQzMmU4MjI5ZGU2YjZkYTY1NmNkZjI=", "commit_message": "Merge pull request #3282 from minrk/mapgenerator\n\nallow view.map to work with a few more things", "commit_timestamp": "2013-05-10T06:41:32Z", "files": ["IPython/parallel/client/map.py", "IPython/parallel/client/remotefunction.py", "IPython/parallel/tests/test_lbview.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjlmMzEzYjRhMGI0OGFmN2Y0OWQzMmU4MjI5ZGU2YjZkYTY1NmNkZjI=", "commit_message": "Merge pull request #3282 from minrk/mapgenerator\n\nallow view.map to work with a few more things", "commit_timestamp": "2013-05-10T06:41:32Z", "files": ["IPython/parallel/client/map.py", "IPython/parallel/client/remotefunction.py", "IPython/parallel/tests/test_lbview.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo4YWUxZGQyNTEwZTliZGRmZGE4YjZlYWI3NmIzOTE5ZDFjMGQ3ZjJj", "commit_message": "Merge pull request #3282 from minrk/mapgenerator\n\nallow view.map to work with a few more things", "commit_timestamp": "2013-05-10T06:41:32Z", "files": ["IPython/parallel/client/map.py", "IPython/parallel/client/remotefunction.py", "IPython/parallel/tests/test_lbview.py"]}], "labels": [], "created_at": "2013-03-25T22:10:29Z", "closed_at": "2013-06-19T14:38:49Z", "linked_pr_number": [3077], "method": ["regex"]}
{"issue_number": 3227, "title": "Improve documentation of ipcontroller and possible BUG", "body": "I tried to follow the documentation to setup a simple cluster with one host acting as controller (Ubuntu) and a second host running several ipengine (Windows7).\n\nThere is a misleading command in the doc. To launch the controller the doc says in \"General consideration\":\n\n```\nipcontroller --ip=*\n```\n\nand in \"Using the ipcontroller and ipengine commands\"\n\n```\nipcontroller --ip=192.168.1.16\n```\n\n(and BTW there is no mention anymore to the \\* syntax). However the command that worked for me is:\n\n```\nipcontroller --ip='*' --location=192.168.1.64\n```\n\nwhere location is the ip address of the host running the controller. Without location, the ipengine JSON file doesn't have the proper ip address (it has 127.0.0.1 instead).\n\nOn a related note, the doc also states to use the following command to retrieve the local ip address in ipcontroller_config.py:\n\n```\nimport socket\nex_ip = socket.gethostbyname_ex(socket.gethostname())[-1][0]\n```\n\nbut running this command on Ubuntu 12.04 returns 127.0.0.1, which is wrong. This maybe the reason why the ipcontroller command fails without the --location flag.\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU4NTE4OjdmYzc3NDk3ZTdjODYwODY1NWZkZGI2NDQ0YTkyOWE2OTdhZGYwOTI=", "commit_message": "Merge pull request #3231 from minrk/localipsagain\n\nimprove discovery of public IPs", "commit_timestamp": "2013-04-29T21:18:30Z", "files": ["IPython/utils/localinterfaces.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4OjdmYzc3NDk3ZTdjODYwODY1NWZkZGI2NDQ0YTkyOWE2OTdhZGYwOTI=", "commit_message": "Merge pull request #3231 from minrk/localipsagain\n\nimprove discovery of public IPs", "commit_timestamp": "2013-04-29T21:18:30Z", "files": ["IPython/utils/localinterfaces.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzoyN2M4ZThkZDNiNDQxZGU4YmY3YmNhOTU0NjM2YjY0NzBmMDhkYTc0", "commit_message": "Merge pull request #3231 from minrk/localipsagain\n\nimprove discovery of public IPs", "commit_timestamp": "2013-04-29T21:18:30Z", "files": ["IPython/utils/localinterfaces.py"]}], "labels": [], "created_at": "2013-04-27T22:25:48Z", "closed_at": "2013-07-03T23:23:19Z", "linked_pr_number": [3227], "method": ["regex"]}
{"issue_number": 2669, "title": "cython magic failing to work with openmp.", "body": "Specifically I'm referring to the notebook. Apparently if any python function calls an openmp function, it fails. This example works fine in normal cython use, with the args put into setup.py and the extension imported into IPython manually.\n\nCell 1:\n\n```\n%load_ext cythonmagic\nimport Cython.Compiler.Options as CO\nCO.extra_compile_args = ['-fopenmp']\nCO.extra_link_args = ['-fopenmp']\n```\n\nCell 2:\n\n```\n%%cython\ncimport openmp\nimport cython.parallel as cp\n\ndef ompfunc():\n    openmp.omp_set_dynamic(1)\n    with nogil, cp.parallel():\n        with gil:\n            print cp.threadid()\n```\n\nIt will build if you change `ompfunc` to a `cdef`, but of course the kernel then gives the following error:\n\n```\n/home/john/.ipython/cython/_cython_magic_1fbf0dc97ef57476220c1cdf9c600a49.c:1252:18:\n    warning: \u2018__pyx_f_46_cython_magic_1fbf0dc97ef57476220c1cdf9c600a49_ompfunc\u2019\n    defined but not used [-Wunused-function]\n```\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU4NTE4Ojg5NDQ0ZWJjOTNmZDMyNzhkZjMzNzNlYTk5NzdlZmQwZWM3ZWM2YWY=", "commit_message": "Merge pull request #2691 from bfroehle/cython_openmp\n\nDocument OpenMP in %%cython magic", "commit_timestamp": "2012-12-19T18:44:19Z", "files": ["IPython/extensions/cythonmagic.py"]}, {"node_id": "MDY6Q29tbWl0NjU4NTE4Ojg5NDQ0ZWJjOTNmZDMyNzhkZjMzNzNlYTk5NzdlZmQwZWM3ZWM2YWY=", "commit_message": "Merge pull request #2691 from bfroehle/cython_openmp\n\nDocument OpenMP in %%cython magic", "commit_timestamp": "2012-12-19T18:44:19Z", "files": ["IPython/extensions/cythonmagic.py"]}, {"node_id": "MDY6Q29tbWl0OTAwNzAzMzo4ZWZmZDBjYjY0Yzg4OGZjNThkYmQwOGQ4ZjBjODFjODRlYWM3MGFj", "commit_message": "Merge pull request #2691 from bfroehle/cython_openmp\n\nDocument OpenMP in %%cython magic", "commit_timestamp": "2012-12-19T18:44:19Z", "files": ["IPython/extensions/cythonmagic.py"]}], "labels": [], "created_at": "2012-12-08T01:39:56Z", "closed_at": "2013-07-06T20:34:12Z", "linked_pr_number": [2669], "method": ["regex"]}
{"issue_number": 1518, "title": "Pretty printing exceptions is broken", "body": "```\nPython 3.2.2 (default, Oct 31 2011, 16:56:14) \nType \"copyright\", \"credits\" or \"license\" for more information.\n\nIPython 0.12 -- An enhanced Interactive Python.\n?         -> Introduction and overview of IPython's features.\n%quickref -> Quick reference.\nhelp      -> Python's own help system.\nobject?   -> Details about 'object', use 'object??' for extra details.\nIn [1]: ValueError('foo')\nOut[1]: ('foo')\n```\n\nI would have expected\n\n```\nOut[1]: ValueError('foo')\n```\n", "commits": [{"node_id": "MDY6Q29tbWl0NjU4NTE4OjU3ODA3OWQ5OTUxNjNmODg1NzVkOTEwMWZmZjI2YjJlYjIyZWUwMzU=", "commit_message": "BUG: Include the name of the exception type in its pretty format.\n\nThanks to @doerwalter for noticing this.", "commit_timestamp": "2012-03-23T16:10:51Z", "files": ["IPython/lib/pretty.py"]}], "labels": [], "created_at": "2012-03-23T15:58:13Z", "closed_at": "2012-03-26T20:47:31Z", "linked_pr_number": [1518], "method": ["regex"]}
